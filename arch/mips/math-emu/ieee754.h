multiline_comment|/* single and double precision fp ops&n; * missing extended precision.&n;*/
multiline_comment|/*&n; * MIPS floating point support&n; * Copyright (C) 1994-2000 Algorithmics Ltd.&n; * http://www.algor.co.uk&n; *&n; * ########################################################################&n; *&n; *  This program is free software; you can distribute it and/or modify it&n; *  under the terms of the GNU General Public License (Version 2) as&n; *  published by the Free Software Foundation.&n; *&n; *  This program is distributed in the hope it will be useful, but WITHOUT&n; *  ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or&n; *  FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License&n; *  for more details.&n; *&n; *  You should have received a copy of the GNU General Public License along&n; *  with this program; if not, write to the Free Software Foundation, Inc.,&n; *  59 Temple Place - Suite 330, Boston MA 02111-1307, USA.&n; *&n; * ########################################################################&n; */
multiline_comment|/**************************************************************************&n; *  Nov 7, 2000&n; *  Modification to allow integration with Linux kernel&n; *&n; *  Kevin D. Kissell, kevink@mips.com and Carsten Langgard, carstenl@mips.com&n; *  Copyright (C) 2000 MIPS Technologies, Inc. All rights reserved.&n; *************************************************************************/
macro_line|#ifdef __KERNEL__
multiline_comment|/* Going from Algorithmics to Linux native environment, add this */
macro_line|#include &lt;linux/types.h&gt;
multiline_comment|/*&n; * Not very pretty, but the Linux kernel&squot;s normal va_list definition&n; * does not allow it to be used as a structure element, as it is here.&n; */
macro_line|#ifndef _STDARG_H
macro_line|#include &lt;stdarg.h&gt;
macro_line|#endif
macro_line|#else
multiline_comment|/* Note that __KERNEL__ is taken to mean Linux kernel */
macro_line|#if #system(OpenBSD)
macro_line|#include &lt;machine/types.h&gt;
macro_line|#endif
macro_line|#include &lt;machine/endian.h&gt;
macro_line|#endif&t;&t;&t;&t;/* __KERNEL__ */
macro_line|#if (defined(BYTE_ORDER) &amp;&amp; BYTE_ORDER == LITTLE_ENDIAN) || defined(__MIPSEL__)
DECL|struct|ieee754dp_konst
r_struct
id|ieee754dp_konst
(brace
DECL|member|mantlo
r_int
id|mantlo
suffix:colon
l_int|32
suffix:semicolon
DECL|member|manthi
r_int
id|manthi
suffix:colon
l_int|20
suffix:semicolon
DECL|member|bexp
r_int
id|bexp
suffix:colon
l_int|11
suffix:semicolon
DECL|member|sign
r_int
id|sign
suffix:colon
l_int|1
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|ieee754sp_konst
r_struct
id|ieee754sp_konst
(brace
DECL|member|mant
r_int
id|mant
suffix:colon
l_int|23
suffix:semicolon
DECL|member|bexp
r_int
id|bexp
suffix:colon
l_int|8
suffix:semicolon
DECL|member|sign
r_int
id|sign
suffix:colon
l_int|1
suffix:semicolon
)brace
suffix:semicolon
DECL|union|_ieee754dp
r_typedef
r_union
id|_ieee754dp
(brace
DECL|member|oparts
r_struct
id|ieee754dp_konst
id|oparts
suffix:semicolon
r_struct
(brace
DECL|member|mant
id|u64
id|mant
suffix:colon
l_int|52
suffix:semicolon
DECL|member|bexp
r_int
r_int
id|bexp
suffix:colon
l_int|11
suffix:semicolon
DECL|member|sign
r_int
r_int
id|sign
suffix:colon
l_int|1
suffix:semicolon
DECL|member|parts
)brace
id|parts
suffix:semicolon
DECL|member|bits
id|u64
id|bits
suffix:semicolon
DECL|member|d
r_float
id|d
suffix:semicolon
DECL|typedef|ieee754dp
)brace
id|ieee754dp
suffix:semicolon
DECL|union|_ieee754sp
r_typedef
r_union
id|_ieee754sp
(brace
DECL|member|parts
r_struct
id|ieee754sp_konst
id|parts
suffix:semicolon
DECL|member|f
r_float
id|f
suffix:semicolon
DECL|member|bits
id|u32
id|bits
suffix:semicolon
DECL|typedef|ieee754sp
)brace
id|ieee754sp
suffix:semicolon
macro_line|#endif
macro_line|#if (defined(BYTE_ORDER) &amp;&amp; BYTE_ORDER == BIG_ENDIAN) || defined(__MIPSEB__)
DECL|struct|ieee754dp_konst
r_struct
id|ieee754dp_konst
(brace
DECL|member|sign
r_int
id|sign
suffix:colon
l_int|1
suffix:semicolon
DECL|member|bexp
r_int
id|bexp
suffix:colon
l_int|11
suffix:semicolon
DECL|member|manthi
r_int
id|manthi
suffix:colon
l_int|20
suffix:semicolon
DECL|member|mantlo
r_int
id|mantlo
suffix:colon
l_int|32
suffix:semicolon
)brace
suffix:semicolon
DECL|union|_ieee754dp
r_typedef
r_union
id|_ieee754dp
(brace
DECL|member|oparts
r_struct
id|ieee754dp_konst
id|oparts
suffix:semicolon
r_struct
(brace
DECL|member|sign
r_int
r_int
id|sign
suffix:colon
l_int|1
suffix:semicolon
DECL|member|bexp
r_int
r_int
id|bexp
suffix:colon
l_int|11
suffix:semicolon
DECL|member|mant
id|u64
id|mant
suffix:colon
l_int|52
suffix:semicolon
DECL|member|parts
)brace
id|parts
suffix:semicolon
DECL|member|d
r_float
id|d
suffix:semicolon
DECL|member|bits
id|u64
id|bits
suffix:semicolon
DECL|typedef|ieee754dp
)brace
id|ieee754dp
suffix:semicolon
DECL|struct|ieee754sp_konst
r_struct
id|ieee754sp_konst
(brace
DECL|member|sign
r_int
id|sign
suffix:colon
l_int|1
suffix:semicolon
DECL|member|bexp
r_int
id|bexp
suffix:colon
l_int|8
suffix:semicolon
DECL|member|mant
r_int
id|mant
suffix:colon
l_int|23
suffix:semicolon
)brace
suffix:semicolon
DECL|union|_ieee754sp
r_typedef
r_union
id|_ieee754sp
(brace
DECL|member|parts
r_struct
id|ieee754sp_konst
id|parts
suffix:semicolon
DECL|member|f
r_float
id|f
suffix:semicolon
DECL|member|bits
id|u32
id|bits
suffix:semicolon
DECL|typedef|ieee754sp
)brace
id|ieee754sp
suffix:semicolon
macro_line|#endif
multiline_comment|/*&n; * single precision (often aka float)&n;*/
r_int
id|ieee754sp_finite
c_func
(paren
id|ieee754sp
id|x
)paren
suffix:semicolon
r_int
id|ieee754sp_class
c_func
(paren
id|ieee754sp
id|x
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_abs
c_func
(paren
id|ieee754sp
id|x
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_neg
c_func
(paren
id|ieee754sp
id|x
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_scalb
c_func
(paren
id|ieee754sp
id|x
comma
r_int
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_logb
c_func
(paren
id|ieee754sp
id|x
)paren
suffix:semicolon
multiline_comment|/* x with sign of y */
id|ieee754sp
id|ieee754sp_copysign
c_func
(paren
id|ieee754sp
id|x
comma
id|ieee754sp
id|y
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_add
c_func
(paren
id|ieee754sp
id|x
comma
id|ieee754sp
id|y
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_sub
c_func
(paren
id|ieee754sp
id|x
comma
id|ieee754sp
id|y
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_mul
c_func
(paren
id|ieee754sp
id|x
comma
id|ieee754sp
id|y
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_div
c_func
(paren
id|ieee754sp
id|x
comma
id|ieee754sp
id|y
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_fint
c_func
(paren
r_int
id|x
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_funs
c_func
(paren
r_int
id|x
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_flong
c_func
(paren
id|s64
id|x
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_fulong
c_func
(paren
id|u64
id|x
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_fdp
c_func
(paren
id|ieee754dp
id|x
)paren
suffix:semicolon
r_int
id|ieee754sp_tint
c_func
(paren
id|ieee754sp
id|x
)paren
suffix:semicolon
r_int
r_int
id|ieee754sp_tuns
c_func
(paren
id|ieee754sp
id|x
)paren
suffix:semicolon
id|s64
id|ieee754sp_tlong
c_func
(paren
id|ieee754sp
id|x
)paren
suffix:semicolon
id|u64
id|ieee754sp_tulong
c_func
(paren
id|ieee754sp
id|x
)paren
suffix:semicolon
r_int
id|ieee754sp_cmp
c_func
(paren
id|ieee754sp
id|x
comma
id|ieee754sp
id|y
comma
r_int
id|cop
comma
r_int
id|sig
)paren
suffix:semicolon
multiline_comment|/*&n; * basic sp math&n; */
id|ieee754sp
id|ieee754sp_modf
c_func
(paren
id|ieee754sp
id|x
comma
id|ieee754sp
op_star
id|ip
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_frexp
c_func
(paren
id|ieee754sp
id|x
comma
r_int
op_star
id|exp
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_ldexp
c_func
(paren
id|ieee754sp
id|x
comma
r_int
id|exp
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_ceil
c_func
(paren
id|ieee754sp
id|x
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_floor
c_func
(paren
id|ieee754sp
id|x
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_trunc
c_func
(paren
id|ieee754sp
id|x
)paren
suffix:semicolon
id|ieee754sp
id|ieee754sp_sqrt
c_func
(paren
id|ieee754sp
id|x
)paren
suffix:semicolon
multiline_comment|/*&n; * double precision (often aka double)&n;*/
r_int
id|ieee754dp_finite
c_func
(paren
id|ieee754dp
id|x
)paren
suffix:semicolon
r_int
id|ieee754dp_class
c_func
(paren
id|ieee754dp
id|x
)paren
suffix:semicolon
multiline_comment|/* x with sign of y */
id|ieee754dp
id|ieee754dp_copysign
c_func
(paren
id|ieee754dp
id|x
comma
id|ieee754dp
id|y
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_add
c_func
(paren
id|ieee754dp
id|x
comma
id|ieee754dp
id|y
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_sub
c_func
(paren
id|ieee754dp
id|x
comma
id|ieee754dp
id|y
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_mul
c_func
(paren
id|ieee754dp
id|x
comma
id|ieee754dp
id|y
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_div
c_func
(paren
id|ieee754dp
id|x
comma
id|ieee754dp
id|y
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_abs
c_func
(paren
id|ieee754dp
id|x
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_neg
c_func
(paren
id|ieee754dp
id|x
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_scalb
c_func
(paren
id|ieee754dp
id|x
comma
r_int
)paren
suffix:semicolon
multiline_comment|/* return exponent as integer in floating point format&n; */
id|ieee754dp
id|ieee754dp_logb
c_func
(paren
id|ieee754dp
id|x
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_fint
c_func
(paren
r_int
id|x
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_funs
c_func
(paren
r_int
id|x
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_flong
c_func
(paren
id|s64
id|x
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_fulong
c_func
(paren
id|u64
id|x
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_fsp
c_func
(paren
id|ieee754sp
id|x
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_ceil
c_func
(paren
id|ieee754dp
id|x
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_floor
c_func
(paren
id|ieee754dp
id|x
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_trunc
c_func
(paren
id|ieee754dp
id|x
)paren
suffix:semicolon
r_int
id|ieee754dp_tint
c_func
(paren
id|ieee754dp
id|x
)paren
suffix:semicolon
r_int
r_int
id|ieee754dp_tuns
c_func
(paren
id|ieee754dp
id|x
)paren
suffix:semicolon
id|s64
id|ieee754dp_tlong
c_func
(paren
id|ieee754dp
id|x
)paren
suffix:semicolon
id|u64
id|ieee754dp_tulong
c_func
(paren
id|ieee754dp
id|x
)paren
suffix:semicolon
r_int
id|ieee754dp_cmp
c_func
(paren
id|ieee754dp
id|x
comma
id|ieee754dp
id|y
comma
r_int
id|cop
comma
r_int
id|sig
)paren
suffix:semicolon
multiline_comment|/*&n; * basic sp math&n; */
id|ieee754dp
id|ieee754dp_modf
c_func
(paren
id|ieee754dp
id|x
comma
id|ieee754dp
op_star
id|ip
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_frexp
c_func
(paren
id|ieee754dp
id|x
comma
r_int
op_star
id|exp
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_ldexp
c_func
(paren
id|ieee754dp
id|x
comma
r_int
id|exp
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_ceil
c_func
(paren
id|ieee754dp
id|x
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_floor
c_func
(paren
id|ieee754dp
id|x
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_trunc
c_func
(paren
id|ieee754dp
id|x
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_sqrt
c_func
(paren
id|ieee754dp
id|x
)paren
suffix:semicolon
multiline_comment|/* 5 types of floating point number&n;*/
DECL|macro|IEEE754_CLASS_NORM
mdefine_line|#define IEEE754_CLASS_NORM&t;0x00
DECL|macro|IEEE754_CLASS_ZERO
mdefine_line|#define IEEE754_CLASS_ZERO&t;0x01
DECL|macro|IEEE754_CLASS_DNORM
mdefine_line|#define IEEE754_CLASS_DNORM&t;0x02
DECL|macro|IEEE754_CLASS_INF
mdefine_line|#define IEEE754_CLASS_INF&t;0x03
DECL|macro|IEEE754_CLASS_SNAN
mdefine_line|#define IEEE754_CLASS_SNAN&t;0x04
DECL|macro|IEEE754_CLASS_QNAN
mdefine_line|#define IEEE754_CLASS_QNAN&t;0x05
r_extern
r_const
r_char
op_star
r_const
id|ieee754_cname
(braket
)braket
suffix:semicolon
multiline_comment|/* exception numbers */
DECL|macro|IEEE754_INEXACT
mdefine_line|#define IEEE754_INEXACT&t;&t;&t;0x01
DECL|macro|IEEE754_UNDERFLOW
mdefine_line|#define IEEE754_UNDERFLOW&t;&t;0x02
DECL|macro|IEEE754_OVERFLOW
mdefine_line|#define IEEE754_OVERFLOW&t;&t;0x04
DECL|macro|IEEE754_ZERO_DIVIDE
mdefine_line|#define IEEE754_ZERO_DIVIDE&t;&t;0x08
DECL|macro|IEEE754_INVALID_OPERATION
mdefine_line|#define IEEE754_INVALID_OPERATION&t;0x10
multiline_comment|/* cmp operators&n;*/
DECL|macro|IEEE754_CLT
mdefine_line|#define IEEE754_CLT&t;0x01
DECL|macro|IEEE754_CEQ
mdefine_line|#define IEEE754_CEQ&t;0x02
DECL|macro|IEEE754_CGT
mdefine_line|#define IEEE754_CGT&t;0x04
DECL|macro|IEEE754_CUN
mdefine_line|#define IEEE754_CUN&t;0x08
multiline_comment|/* rounding mode&n;*/
DECL|macro|IEEE754_RN
mdefine_line|#define IEEE754_RN&t;0&t;/* round to nearest */
DECL|macro|IEEE754_RZ
mdefine_line|#define IEEE754_RZ&t;1&t;/* round toward zero  */
DECL|macro|IEEE754_RD
mdefine_line|#define IEEE754_RD&t;2&t;/* round toward -Infinity */
DECL|macro|IEEE754_RU
mdefine_line|#define IEEE754_RU&t;3&t;/* round toward +Infinity */
multiline_comment|/* other naming */
DECL|macro|IEEE754_RM
mdefine_line|#define IEEE754_RM&t;IEEE754_RD
DECL|macro|IEEE754_RP
mdefine_line|#define IEEE754_RP&t;IEEE754_RU
multiline_comment|/* &quot;normal&quot; comparisons&n;*/
DECL|function|ieee754sp_eq
r_static
id|__inline
r_int
id|ieee754sp_eq
c_func
(paren
id|ieee754sp
id|x
comma
id|ieee754sp
id|y
)paren
(brace
r_return
id|ieee754sp_cmp
c_func
(paren
id|x
comma
id|y
comma
id|IEEE754_CEQ
comma
l_int|0
)paren
suffix:semicolon
)brace
DECL|function|ieee754sp_ne
r_static
id|__inline
r_int
id|ieee754sp_ne
c_func
(paren
id|ieee754sp
id|x
comma
id|ieee754sp
id|y
)paren
(brace
r_return
id|ieee754sp_cmp
c_func
(paren
id|x
comma
id|y
comma
id|IEEE754_CLT
op_or
id|IEEE754_CGT
op_or
id|IEEE754_CUN
comma
l_int|0
)paren
suffix:semicolon
)brace
DECL|function|ieee754sp_lt
r_static
id|__inline
r_int
id|ieee754sp_lt
c_func
(paren
id|ieee754sp
id|x
comma
id|ieee754sp
id|y
)paren
(brace
r_return
id|ieee754sp_cmp
c_func
(paren
id|x
comma
id|y
comma
id|IEEE754_CLT
comma
l_int|0
)paren
suffix:semicolon
)brace
DECL|function|ieee754sp_le
r_static
id|__inline
r_int
id|ieee754sp_le
c_func
(paren
id|ieee754sp
id|x
comma
id|ieee754sp
id|y
)paren
(brace
r_return
id|ieee754sp_cmp
c_func
(paren
id|x
comma
id|y
comma
id|IEEE754_CLT
op_or
id|IEEE754_CEQ
comma
l_int|0
)paren
suffix:semicolon
)brace
DECL|function|ieee754sp_gt
r_static
id|__inline
r_int
id|ieee754sp_gt
c_func
(paren
id|ieee754sp
id|x
comma
id|ieee754sp
id|y
)paren
(brace
r_return
id|ieee754sp_cmp
c_func
(paren
id|x
comma
id|y
comma
id|IEEE754_CGT
comma
l_int|0
)paren
suffix:semicolon
)brace
DECL|function|ieee754sp_ge
r_static
id|__inline
r_int
id|ieee754sp_ge
c_func
(paren
id|ieee754sp
id|x
comma
id|ieee754sp
id|y
)paren
(brace
r_return
id|ieee754sp_cmp
c_func
(paren
id|x
comma
id|y
comma
id|IEEE754_CGT
op_or
id|IEEE754_CEQ
comma
l_int|0
)paren
suffix:semicolon
)brace
DECL|function|ieee754dp_eq
r_static
id|__inline
r_int
id|ieee754dp_eq
c_func
(paren
id|ieee754dp
id|x
comma
id|ieee754dp
id|y
)paren
(brace
r_return
id|ieee754dp_cmp
c_func
(paren
id|x
comma
id|y
comma
id|IEEE754_CEQ
comma
l_int|0
)paren
suffix:semicolon
)brace
DECL|function|ieee754dp_ne
r_static
id|__inline
r_int
id|ieee754dp_ne
c_func
(paren
id|ieee754dp
id|x
comma
id|ieee754dp
id|y
)paren
(brace
r_return
id|ieee754dp_cmp
c_func
(paren
id|x
comma
id|y
comma
id|IEEE754_CLT
op_or
id|IEEE754_CGT
op_or
id|IEEE754_CUN
comma
l_int|0
)paren
suffix:semicolon
)brace
DECL|function|ieee754dp_lt
r_static
id|__inline
r_int
id|ieee754dp_lt
c_func
(paren
id|ieee754dp
id|x
comma
id|ieee754dp
id|y
)paren
(brace
r_return
id|ieee754dp_cmp
c_func
(paren
id|x
comma
id|y
comma
id|IEEE754_CLT
comma
l_int|0
)paren
suffix:semicolon
)brace
DECL|function|ieee754dp_le
r_static
id|__inline
r_int
id|ieee754dp_le
c_func
(paren
id|ieee754dp
id|x
comma
id|ieee754dp
id|y
)paren
(brace
r_return
id|ieee754dp_cmp
c_func
(paren
id|x
comma
id|y
comma
id|IEEE754_CLT
op_or
id|IEEE754_CEQ
comma
l_int|0
)paren
suffix:semicolon
)brace
DECL|function|ieee754dp_gt
r_static
id|__inline
r_int
id|ieee754dp_gt
c_func
(paren
id|ieee754dp
id|x
comma
id|ieee754dp
id|y
)paren
(brace
r_return
id|ieee754dp_cmp
c_func
(paren
id|x
comma
id|y
comma
id|IEEE754_CGT
comma
l_int|0
)paren
suffix:semicolon
)brace
DECL|function|ieee754dp_ge
r_static
id|__inline
r_int
id|ieee754dp_ge
c_func
(paren
id|ieee754dp
id|x
comma
id|ieee754dp
id|y
)paren
(brace
r_return
id|ieee754dp_cmp
c_func
(paren
id|x
comma
id|y
comma
id|IEEE754_CGT
op_or
id|IEEE754_CEQ
comma
l_int|0
)paren
suffix:semicolon
)brace
multiline_comment|/* like strtod&n;*/
id|ieee754dp
id|ieee754dp_fstr
c_func
(paren
r_const
r_char
op_star
id|s
comma
r_char
op_star
op_star
id|endp
)paren
suffix:semicolon
r_char
op_star
id|ieee754dp_tstr
c_func
(paren
id|ieee754dp
id|x
comma
r_int
id|prec
comma
r_int
id|fmt
comma
r_int
id|af
)paren
suffix:semicolon
multiline_comment|/* the control status register&n;*/
DECL|struct|ieee754_csr
r_struct
id|ieee754_csr
(brace
DECL|member|pad
r_int
id|pad
suffix:colon
l_int|13
suffix:semicolon
DECL|member|nod
r_int
id|nod
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* set 1 for no denormalised numbers */
DECL|member|cx
r_int
id|cx
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* exceptions this operation */
DECL|member|mx
r_int
id|mx
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* exception enable  mask */
DECL|member|sx
r_int
id|sx
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* exceptions total */
DECL|member|rm
r_int
id|rm
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* current rounding mode */
)brace
suffix:semicolon
r_extern
r_struct
id|ieee754_csr
id|ieee754_csr
suffix:semicolon
DECL|function|ieee754_getrm
r_static
id|__inline
r_int
id|ieee754_getrm
c_func
(paren
r_void
)paren
(brace
r_return
(paren
id|ieee754_csr.rm
)paren
suffix:semicolon
)brace
DECL|function|ieee754_setrm
r_static
id|__inline
r_int
id|ieee754_setrm
c_func
(paren
r_int
id|rm
)paren
(brace
r_return
(paren
id|ieee754_csr.rm
op_assign
id|rm
)paren
suffix:semicolon
)brace
multiline_comment|/*&n; * get current exceptions&n; */
DECL|function|ieee754_getcx
r_static
id|__inline
r_int
id|ieee754_getcx
c_func
(paren
r_void
)paren
(brace
r_return
(paren
id|ieee754_csr.cx
)paren
suffix:semicolon
)brace
multiline_comment|/* test for current exception condition&n; */
DECL|function|ieee754_cxtest
r_static
id|__inline
r_int
id|ieee754_cxtest
c_func
(paren
r_int
id|n
)paren
(brace
r_return
(paren
id|ieee754_csr.cx
op_amp
id|n
)paren
suffix:semicolon
)brace
multiline_comment|/*&n; * get sticky exceptions&n; */
DECL|function|ieee754_getsx
r_static
id|__inline
r_int
id|ieee754_getsx
c_func
(paren
r_void
)paren
(brace
r_return
(paren
id|ieee754_csr.sx
)paren
suffix:semicolon
)brace
multiline_comment|/* clear sticky conditions&n;*/
DECL|function|ieee754_clrsx
r_static
id|__inline
r_int
id|ieee754_clrsx
c_func
(paren
r_void
)paren
(brace
r_return
(paren
id|ieee754_csr.sx
op_assign
l_int|0
)paren
suffix:semicolon
)brace
multiline_comment|/* test for sticky exception condition&n; */
DECL|function|ieee754_sxtest
r_static
id|__inline
r_int
id|ieee754_sxtest
c_func
(paren
r_int
id|n
)paren
(brace
r_return
(paren
id|ieee754_csr.sx
op_amp
id|n
)paren
suffix:semicolon
)brace
multiline_comment|/* debugging */
id|ieee754sp
id|ieee754sp_dump
c_func
(paren
r_char
op_star
id|s
comma
id|ieee754sp
id|x
)paren
suffix:semicolon
id|ieee754dp
id|ieee754dp_dump
c_func
(paren
r_char
op_star
id|s
comma
id|ieee754dp
id|x
)paren
suffix:semicolon
DECL|macro|IEEE754_SPCVAL_PZERO
mdefine_line|#define IEEE754_SPCVAL_PZERO&t;0
DECL|macro|IEEE754_SPCVAL_NZERO
mdefine_line|#define IEEE754_SPCVAL_NZERO&t;1
DECL|macro|IEEE754_SPCVAL_PONE
mdefine_line|#define IEEE754_SPCVAL_PONE&t;2
DECL|macro|IEEE754_SPCVAL_NONE
mdefine_line|#define IEEE754_SPCVAL_NONE&t;3
DECL|macro|IEEE754_SPCVAL_PTEN
mdefine_line|#define IEEE754_SPCVAL_PTEN&t;4
DECL|macro|IEEE754_SPCVAL_NTEN
mdefine_line|#define IEEE754_SPCVAL_NTEN&t;5
DECL|macro|IEEE754_SPCVAL_PINFINITY
mdefine_line|#define IEEE754_SPCVAL_PINFINITY&t;6
DECL|macro|IEEE754_SPCVAL_NINFINITY
mdefine_line|#define IEEE754_SPCVAL_NINFINITY&t;7
DECL|macro|IEEE754_SPCVAL_INDEF
mdefine_line|#define IEEE754_SPCVAL_INDEF&t;8
DECL|macro|IEEE754_SPCVAL_PMAX
mdefine_line|#define IEEE754_SPCVAL_PMAX&t;9&t;/* +max norm */
DECL|macro|IEEE754_SPCVAL_NMAX
mdefine_line|#define IEEE754_SPCVAL_NMAX&t;10&t;/* -max norm */
DECL|macro|IEEE754_SPCVAL_PMIN
mdefine_line|#define IEEE754_SPCVAL_PMIN&t;11&t;/* +min norm */
DECL|macro|IEEE754_SPCVAL_NMIN
mdefine_line|#define IEEE754_SPCVAL_NMIN&t;12&t;/* +min norm */
DECL|macro|IEEE754_SPCVAL_PMIND
mdefine_line|#define IEEE754_SPCVAL_PMIND&t;13&t;/* +min denorm */
DECL|macro|IEEE754_SPCVAL_NMIND
mdefine_line|#define IEEE754_SPCVAL_NMIND&t;14&t;/* +min denorm */
DECL|macro|IEEE754_SPCVAL_P1E31
mdefine_line|#define IEEE754_SPCVAL_P1E31&t;15&t;/* + 1.0e31 */
DECL|macro|IEEE754_SPCVAL_P1E63
mdefine_line|#define IEEE754_SPCVAL_P1E63&t;16&t;/* + 1.0e63 */
r_extern
r_const
r_struct
id|ieee754dp_konst
id|__ieee754dp_spcvals
(braket
)braket
suffix:semicolon
r_extern
r_const
r_struct
id|ieee754sp_konst
id|__ieee754sp_spcvals
(braket
)braket
suffix:semicolon
DECL|macro|ieee754dp_spcvals
mdefine_line|#define ieee754dp_spcvals ((const ieee754dp *)__ieee754dp_spcvals)
DECL|macro|ieee754sp_spcvals
mdefine_line|#define ieee754sp_spcvals ((const ieee754sp *)__ieee754sp_spcvals)
multiline_comment|/* return infinity with given sign&n;*/
DECL|macro|ieee754dp_inf
mdefine_line|#define ieee754dp_inf(sn)&t;&bslash;&n;  (ieee754dp_spcvals[IEEE754_SPCVAL_PINFINITY+(sn)])
DECL|macro|ieee754dp_zero
mdefine_line|#define ieee754dp_zero(sn) &bslash;&n;  (ieee754dp_spcvals[IEEE754_SPCVAL_PZERO+(sn)])
DECL|macro|ieee754dp_one
mdefine_line|#define ieee754dp_one(sn) &bslash;&n;  (ieee754dp_spcvals[IEEE754_SPCVAL_PONE+(sn)])
DECL|macro|ieee754dp_ten
mdefine_line|#define ieee754dp_ten(sn) &bslash;&n;  (ieee754dp_spcvals[IEEE754_SPCVAL_PTEN+(sn)])
DECL|macro|ieee754dp_indef
mdefine_line|#define ieee754dp_indef() &bslash;&n;  (ieee754dp_spcvals[IEEE754_SPCVAL_INDEF])
DECL|macro|ieee754dp_max
mdefine_line|#define ieee754dp_max(sn) &bslash;&n;  (ieee754dp_spcvals[IEEE754_SPCVAL_PMAX+(sn)])
DECL|macro|ieee754dp_min
mdefine_line|#define ieee754dp_min(sn) &bslash;&n;  (ieee754dp_spcvals[IEEE754_SPCVAL_PMIN+(sn)])
DECL|macro|ieee754dp_mind
mdefine_line|#define ieee754dp_mind(sn) &bslash;&n;  (ieee754dp_spcvals[IEEE754_SPCVAL_PMIND+(sn)])
DECL|macro|ieee754dp_1e31
mdefine_line|#define ieee754dp_1e31() &bslash;&n;  (ieee754dp_spcvals[IEEE754_SPCVAL_P1E31])
DECL|macro|ieee754dp_1e63
mdefine_line|#define ieee754dp_1e63() &bslash;&n;  (ieee754dp_spcvals[IEEE754_SPCVAL_P1E63])
DECL|macro|ieee754sp_inf
mdefine_line|#define ieee754sp_inf(sn) &bslash;&n;  (ieee754sp_spcvals[IEEE754_SPCVAL_PINFINITY+(sn)])
DECL|macro|ieee754sp_zero
mdefine_line|#define ieee754sp_zero(sn) &bslash;&n;  (ieee754sp_spcvals[IEEE754_SPCVAL_PZERO+(sn)])
DECL|macro|ieee754sp_one
mdefine_line|#define ieee754sp_one(sn) &bslash;&n;  (ieee754sp_spcvals[IEEE754_SPCVAL_PONE+(sn)])
DECL|macro|ieee754sp_ten
mdefine_line|#define ieee754sp_ten(sn) &bslash;&n;  (ieee754sp_spcvals[IEEE754_SPCVAL_PTEN+(sn)])
DECL|macro|ieee754sp_indef
mdefine_line|#define ieee754sp_indef() &bslash;&n;  (ieee754sp_spcvals[IEEE754_SPCVAL_INDEF])
DECL|macro|ieee754sp_max
mdefine_line|#define ieee754sp_max(sn) &bslash;&n;  (ieee754sp_spcvals[IEEE754_SPCVAL_PMAX+(sn)])
DECL|macro|ieee754sp_min
mdefine_line|#define ieee754sp_min(sn) &bslash;&n;  (ieee754sp_spcvals[IEEE754_SPCVAL_PMIN+(sn)])
DECL|macro|ieee754sp_mind
mdefine_line|#define ieee754sp_mind(sn) &bslash;&n;  (ieee754sp_spcvals[IEEE754_SPCVAL_PMIND+(sn)])
DECL|macro|ieee754sp_1e31
mdefine_line|#define ieee754sp_1e31() &bslash;&n;  (ieee754sp_spcvals[IEEE754_SPCVAL_P1E31])
DECL|macro|ieee754sp_1e63
mdefine_line|#define ieee754sp_1e63() &bslash;&n;  (ieee754sp_spcvals[IEEE754_SPCVAL_P1E63])
multiline_comment|/* indefinite integer value&n;*/
DECL|macro|ieee754si_indef
mdefine_line|#define ieee754si_indef()&t;INT_MAX
macro_line|#ifdef LONG_LONG_MAX
DECL|macro|ieee754di_indef
mdefine_line|#define ieee754di_indef()&t;LONG_LONG_MAX
macro_line|#else
DECL|macro|ieee754di_indef
mdefine_line|#define ieee754di_indef()&t;((s64)(~0ULL&gt;&gt;1))
macro_line|#endif
multiline_comment|/* IEEE exception context, passed to handler */
DECL|struct|ieee754xctx
r_struct
id|ieee754xctx
(brace
DECL|member|op
r_const
r_char
op_star
id|op
suffix:semicolon
multiline_comment|/* operation name */
DECL|member|rt
r_int
id|rt
suffix:semicolon
multiline_comment|/* result type */
r_union
(brace
DECL|member|sp
id|ieee754sp
id|sp
suffix:semicolon
multiline_comment|/* single precision */
DECL|member|dp
id|ieee754dp
id|dp
suffix:semicolon
multiline_comment|/* double precision */
macro_line|#ifdef IEEE854_XP
DECL|member|xp
id|ieee754xp
id|xp
suffix:semicolon
multiline_comment|/* extended precision */
macro_line|#endif
DECL|member|si
r_int
id|si
suffix:semicolon
multiline_comment|/* standard signed integer (32bits) */
DECL|member|di
id|s64
id|di
suffix:semicolon
multiline_comment|/* extended signed integer (64bits) */
DECL|member|rv
)brace
id|rv
suffix:semicolon
multiline_comment|/* default result format implied by op */
DECL|member|ap
id|va_list
id|ap
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* result types for xctx.rt */
DECL|macro|IEEE754_RT_SP
mdefine_line|#define IEEE754_RT_SP&t;0
DECL|macro|IEEE754_RT_DP
mdefine_line|#define IEEE754_RT_DP&t;1
DECL|macro|IEEE754_RT_XP
mdefine_line|#define IEEE754_RT_XP&t;2
DECL|macro|IEEE754_RT_SI
mdefine_line|#define IEEE754_RT_SI&t;3
DECL|macro|IEEE754_RT_DI
mdefine_line|#define IEEE754_RT_DI&t;4
r_extern
r_void
id|ieee754_xcpt
c_func
(paren
r_struct
id|ieee754xctx
op_star
id|xcp
)paren
suffix:semicolon
multiline_comment|/* compat */
DECL|macro|ieee754dp_fix
mdefine_line|#define ieee754dp_fix(x)&t;ieee754dp_tint(x)
DECL|macro|ieee754sp_fix
mdefine_line|#define ieee754sp_fix(x)&t;ieee754sp_tint(x)
eof
