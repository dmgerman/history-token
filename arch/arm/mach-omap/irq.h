multiline_comment|/*&n; * linux/arch/arm/mach-omap/irq.h&n; *&n; * OMAP specific interrupt bank definitions&n; *&n; * Copyright (C) 2004 Nokia Corporation&n; * Written by Tony Lindgren &lt;tony@atomide.com&gt;&n; *&n; * This program is free software; you can redistribute it and/or modify it&n; * under the terms of the GNU General Public License as published by the&n; * Free Software Foundation; either version 2 of the License, or (at your&n; * option) any later version.&n; *&n; * THIS SOFTWARE IS PROVIDED ``AS IS&squot;&squot; AND ANY EXPRESS OR IMPLIED&n; * WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF&n; * MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN&n; * NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY DIRECT, INDIRECT,&n; * INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT&n; * NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF&n; * USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON&n; * ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT&n; * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF&n; * THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&n; *&n; * You should have received a copy of the  GNU General Public License along&n; * with this program; if not, write  to the Free Software Foundation, Inc.,&n; * 675 Mass Ave, Cambridge, MA 02139, USA.&n; */
DECL|macro|OMAP_IRQ_TYPE710
mdefine_line|#define OMAP_IRQ_TYPE710&t;1
DECL|macro|OMAP_IRQ_TYPE730
mdefine_line|#define OMAP_IRQ_TYPE730&t;2
DECL|macro|OMAP_IRQ_TYPE1510
mdefine_line|#define OMAP_IRQ_TYPE1510&t;3
DECL|macro|OMAP_IRQ_TYPE1610
mdefine_line|#define OMAP_IRQ_TYPE1610&t;4
DECL|macro|OMAP_IRQ_TYPE1710
mdefine_line|#define OMAP_IRQ_TYPE1710&t;5
DECL|macro|MAX_NR_IRQ_BANKS
mdefine_line|#define MAX_NR_IRQ_BANKS&t;4
DECL|macro|BANK_NR_IRQS
mdefine_line|#define BANK_NR_IRQS&t;&t;32
DECL|struct|omap_irq_desc
r_struct
id|omap_irq_desc
(brace
DECL|member|cpu_type
r_int
r_int
id|cpu_type
suffix:semicolon
DECL|member|start_irq
r_int
r_int
id|start_irq
suffix:semicolon
DECL|member|level_map
r_int
r_int
id|level_map
suffix:semicolon
DECL|member|base_reg
r_int
r_int
id|base_reg
suffix:semicolon
DECL|member|mask_reg
r_int
r_int
id|mask_reg
suffix:semicolon
DECL|member|ack_reg
r_int
r_int
id|ack_reg
suffix:semicolon
DECL|member|handler
r_struct
id|irqchip
op_star
id|handler
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|omap_irq_bank
r_struct
id|omap_irq_bank
(brace
DECL|member|start_irq
r_int
r_int
id|start_irq
suffix:semicolon
DECL|member|level_map
r_int
r_int
id|level_map
suffix:semicolon
DECL|member|base_reg
r_int
r_int
id|base_reg
suffix:semicolon
DECL|member|mask_reg
r_int
r_int
id|mask_reg
suffix:semicolon
DECL|member|ack_reg
r_int
r_int
id|ack_reg
suffix:semicolon
DECL|member|handler
r_struct
id|irqchip
op_star
id|handler
suffix:semicolon
)brace
suffix:semicolon
r_static
r_void
id|omap_offset_ack_irq
c_func
(paren
r_int
r_int
id|irq
)paren
suffix:semicolon
r_static
r_void
id|omap_offset_mask_irq
c_func
(paren
r_int
r_int
id|irq
)paren
suffix:semicolon
r_static
r_void
id|omap_offset_unmask_irq
c_func
(paren
r_int
r_int
id|irq
)paren
suffix:semicolon
r_static
r_void
id|omap_offset_mask_ack_irq
c_func
(paren
r_int
r_int
id|irq
)paren
suffix:semicolon
multiline_comment|/* NOTE: These will not work if irq bank offset != 0x100 */
DECL|macro|IRQ_TO_BANK
mdefine_line|#define IRQ_TO_BANK(irq)&t;(irq &gt;&gt; 5)
DECL|macro|IRQ_BIT
mdefine_line|#define IRQ_BIT(irq)&t;&t;(irq &amp; 0x1f)
DECL|macro|BANK_OFFSET
mdefine_line|#define BANK_OFFSET(bank)&t;((bank - 1) * 0x100)
DECL|variable|omap_offset_irq
r_static
r_struct
id|irqchip
id|omap_offset_irq
op_assign
(brace
dot
id|ack
op_assign
id|omap_offset_mask_ack_irq
comma
dot
id|mask
op_assign
id|omap_offset_mask_irq
comma
dot
id|unmask
op_assign
id|omap_offset_unmask_irq
comma
)brace
suffix:semicolon
multiline_comment|/*&n; * OMAP-730 interrupt banks&n; */
DECL|variable|__initdata
r_static
r_struct
id|omap_irq_desc
id|omap730_bank0_irqs
id|__initdata
op_assign
(brace
dot
id|cpu_type
op_assign
id|OMAP_IRQ_TYPE730
comma
dot
id|start_irq
op_assign
l_int|0
comma
dot
id|level_map
op_assign
l_int|0xb3f8e22f
comma
dot
id|base_reg
op_assign
id|OMAP_IH1_BASE
comma
dot
id|mask_reg
op_assign
id|OMAP_IH1_BASE
op_plus
id|IRQ_MIR
comma
dot
id|ack_reg
op_assign
id|OMAP_IH1_BASE
op_plus
id|IRQ_CONTROL_REG
comma
dot
id|handler
op_assign
op_amp
id|omap_offset_irq
comma
multiline_comment|/* IH2 regs at 0x100 offsets */
)brace
suffix:semicolon
DECL|variable|__initdata
r_static
r_struct
id|omap_irq_desc
id|omap730_bank1_irqs
id|__initdata
op_assign
(brace
dot
id|cpu_type
op_assign
id|OMAP_IRQ_TYPE730
comma
dot
id|start_irq
op_assign
l_int|32
comma
dot
id|level_map
op_assign
l_int|0xfdb9c1f2
comma
dot
id|base_reg
op_assign
id|OMAP_IH2_BASE
comma
dot
id|mask_reg
op_assign
id|OMAP_IH2_BASE
op_plus
id|IRQ_MIR
comma
dot
id|ack_reg
op_assign
id|OMAP_IH2_BASE
op_plus
id|IRQ_CONTROL_REG
comma
dot
id|handler
op_assign
op_amp
id|omap_offset_irq
comma
multiline_comment|/* IH2 regs at 0x100 offsets */
)brace
suffix:semicolon
DECL|variable|__initdata
r_static
r_struct
id|omap_irq_desc
id|omap730_bank2_irqs
id|__initdata
op_assign
(brace
dot
id|cpu_type
op_assign
id|OMAP_IRQ_TYPE730
comma
dot
id|start_irq
op_assign
l_int|64
comma
dot
id|level_map
op_assign
l_int|0x800040f3
comma
dot
id|base_reg
op_assign
id|OMAP_IH2_BASE
op_plus
l_int|0x100
comma
dot
id|mask_reg
op_assign
id|OMAP_IH2_BASE
op_plus
l_int|0x100
op_plus
id|IRQ_MIR
comma
dot
id|ack_reg
op_assign
id|OMAP_IH2_BASE
op_plus
id|IRQ_CONTROL_REG
comma
multiline_comment|/* Not replicated */
dot
id|handler
op_assign
op_amp
id|omap_offset_irq
comma
multiline_comment|/* IH2 regs at 0x100 offsets */
)brace
suffix:semicolon
multiline_comment|/*&n; * OMAP-1510 interrupt banks&n; */
DECL|variable|__initdata
r_static
r_struct
id|omap_irq_desc
id|omap1510_bank0_irqs
id|__initdata
op_assign
(brace
dot
id|cpu_type
op_assign
id|OMAP_IRQ_TYPE1510
comma
dot
id|start_irq
op_assign
l_int|0
comma
dot
id|level_map
op_assign
l_int|0xb3febfff
comma
dot
id|base_reg
op_assign
id|OMAP_IH1_BASE
comma
dot
id|mask_reg
op_assign
id|OMAP_IH1_BASE
op_plus
id|IRQ_MIR
comma
dot
id|ack_reg
op_assign
id|OMAP_IH1_BASE
op_plus
id|IRQ_CONTROL_REG
comma
dot
id|handler
op_assign
op_amp
id|omap_offset_irq
comma
multiline_comment|/* IH2 regs at 0x100 offsets */
)brace
suffix:semicolon
DECL|variable|__initdata
r_static
r_struct
id|omap_irq_desc
id|omap1510_bank1_irqs
id|__initdata
op_assign
(brace
dot
id|cpu_type
op_assign
id|OMAP_IRQ_TYPE1510
comma
dot
id|start_irq
op_assign
l_int|32
comma
dot
id|level_map
op_assign
l_int|0xffbfffed
comma
dot
id|base_reg
op_assign
id|OMAP_IH2_BASE
comma
dot
id|mask_reg
op_assign
id|OMAP_IH2_BASE
op_plus
id|IRQ_MIR
comma
dot
id|ack_reg
op_assign
id|OMAP_IH2_BASE
op_plus
id|IRQ_CONTROL_REG
comma
dot
id|handler
op_assign
op_amp
id|omap_offset_irq
comma
multiline_comment|/* IH2 regs at 0x100 offsets */
)brace
suffix:semicolon
multiline_comment|/*&n; * OMAP-1610 interrupt banks&n; */
DECL|variable|__initdata
r_static
r_struct
id|omap_irq_desc
id|omap1610_bank0_irqs
id|__initdata
op_assign
(brace
dot
id|cpu_type
op_assign
id|OMAP_IRQ_TYPE1610
comma
dot
id|start_irq
op_assign
l_int|0
comma
dot
id|level_map
op_assign
l_int|0xb3fefe8f
comma
dot
id|base_reg
op_assign
id|OMAP_IH1_BASE
comma
dot
id|mask_reg
op_assign
id|OMAP_IH1_BASE
op_plus
id|IRQ_MIR
comma
dot
id|ack_reg
op_assign
id|OMAP_IH1_BASE
op_plus
id|IRQ_CONTROL_REG
comma
dot
id|handler
op_assign
op_amp
id|omap_offset_irq
comma
multiline_comment|/* IH2 regs at 0x100 offsets */
)brace
suffix:semicolon
DECL|variable|__initdata
r_static
r_struct
id|omap_irq_desc
id|omap1610_bank1_irqs
id|__initdata
op_assign
(brace
dot
id|cpu_type
op_assign
id|OMAP_IRQ_TYPE1610
comma
dot
id|start_irq
op_assign
l_int|32
comma
dot
id|level_map
op_assign
l_int|0xfffff7ff
comma
dot
id|base_reg
op_assign
id|OMAP_IH2_BASE
comma
dot
id|mask_reg
op_assign
id|OMAP_IH2_BASE
op_plus
id|IRQ_MIR
comma
dot
id|ack_reg
op_assign
id|OMAP_IH2_BASE
op_plus
id|IRQ_CONTROL_REG
comma
dot
id|handler
op_assign
op_amp
id|omap_offset_irq
comma
multiline_comment|/* IH2 regs at 0x100 offsets */
)brace
suffix:semicolon
DECL|variable|__initdata
r_static
r_struct
id|omap_irq_desc
id|omap1610_bank2_irqs
id|__initdata
op_assign
(brace
dot
id|cpu_type
op_assign
id|OMAP_IRQ_TYPE1610
comma
dot
id|start_irq
op_assign
l_int|64
comma
dot
id|level_map
op_assign
l_int|0xffffffff
comma
dot
id|base_reg
op_assign
id|OMAP_IH2_BASE
op_plus
l_int|0x100
comma
dot
id|mask_reg
op_assign
id|OMAP_IH2_BASE
op_plus
l_int|0x100
op_plus
id|IRQ_MIR
comma
dot
id|ack_reg
op_assign
id|OMAP_IH2_BASE
op_plus
id|IRQ_CONTROL_REG
comma
multiline_comment|/* Not replicated */
dot
id|handler
op_assign
op_amp
id|omap_offset_irq
comma
multiline_comment|/* IH2 regs at 0x100 offsets */
)brace
suffix:semicolon
DECL|variable|__initdata
r_static
r_struct
id|omap_irq_desc
id|omap1610_bank3_irqs
id|__initdata
op_assign
(brace
dot
id|cpu_type
op_assign
id|OMAP_IRQ_TYPE1610
comma
dot
id|start_irq
op_assign
l_int|96
comma
dot
id|level_map
op_assign
l_int|0xffffffff
comma
dot
id|base_reg
op_assign
id|OMAP_IH2_BASE
op_plus
l_int|0x200
comma
dot
id|mask_reg
op_assign
id|OMAP_IH2_BASE
op_plus
l_int|0x200
op_plus
id|IRQ_MIR
comma
dot
id|ack_reg
op_assign
id|OMAP_IH2_BASE
op_plus
id|IRQ_CONTROL_REG
comma
multiline_comment|/* Not replicated */
dot
id|handler
op_assign
op_amp
id|omap_offset_irq
comma
multiline_comment|/* IH2 regs at 0x100 offsets */
)brace
suffix:semicolon
eof
