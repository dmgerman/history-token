multiline_comment|/* &n; * Copyright (C) 2000 Jeff Dike (jdike@karaya.com)&n; * Copyright (C) 2001 RidgeRun, Inc (glonnon@ridgerun.com)&n; * Licensed under the GPL&n; */
macro_line|#ifndef __UM_UBD_USER_H
DECL|macro|__UM_UBD_USER_H
mdefine_line|#define __UM_UBD_USER_H
macro_line|#include &quot;os.h&quot;
DECL|enum|ubd_req
DECL|enumerator|UBD_READ
DECL|enumerator|UBD_WRITE
r_enum
id|ubd_req
(brace
id|UBD_READ
comma
id|UBD_WRITE
)brace
suffix:semicolon
DECL|struct|io_thread_req
r_struct
id|io_thread_req
(brace
DECL|member|op
r_enum
id|ubd_req
id|op
suffix:semicolon
DECL|member|fds
r_int
id|fds
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|offsets
r_int
r_int
id|offsets
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|offset
r_int
r_int
r_int
id|offset
suffix:semicolon
DECL|member|length
r_int
r_int
id|length
suffix:semicolon
DECL|member|buffer
r_char
op_star
id|buffer
suffix:semicolon
DECL|member|sectorsize
r_int
id|sectorsize
suffix:semicolon
DECL|member|sector_mask
r_int
r_int
id|sector_mask
suffix:semicolon
DECL|member|cow_offset
r_int
r_int
id|cow_offset
suffix:semicolon
DECL|member|bitmap_words
r_int
r_int
id|bitmap_words
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|error
r_int
id|error
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_int
id|open_ubd_file
c_func
(paren
r_char
op_star
id|file
comma
r_struct
id|openflags
op_star
id|openflags
comma
r_char
op_star
op_star
id|backing_file_out
comma
r_int
op_star
id|bitmap_offset_out
comma
r_int
r_int
op_star
id|bitmap_len_out
comma
r_int
op_star
id|data_offset_out
comma
r_int
op_star
id|create_cow_out
)paren
suffix:semicolon
r_extern
r_int
id|create_cow_file
c_func
(paren
r_char
op_star
id|cow_file
comma
r_char
op_star
id|backing_file
comma
r_struct
id|openflags
id|flags
comma
r_int
id|sectorsize
comma
r_int
op_star
id|bitmap_offset_out
comma
r_int
r_int
op_star
id|bitmap_len_out
comma
r_int
op_star
id|data_offset_out
)paren
suffix:semicolon
r_extern
r_int
id|read_cow_bitmap
c_func
(paren
r_int
id|fd
comma
r_void
op_star
id|buf
comma
r_int
id|offset
comma
r_int
id|len
)paren
suffix:semicolon
r_extern
r_int
id|read_ubd_fs
c_func
(paren
r_int
id|fd
comma
r_void
op_star
id|buffer
comma
r_int
id|len
)paren
suffix:semicolon
r_extern
r_int
id|write_ubd_fs
c_func
(paren
r_int
id|fd
comma
r_char
op_star
id|buffer
comma
r_int
id|len
)paren
suffix:semicolon
r_extern
r_int
id|start_io_thread
c_func
(paren
r_int
r_int
id|sp
comma
r_int
op_star
id|fds_out
)paren
suffix:semicolon
r_extern
r_void
id|do_io
c_func
(paren
r_struct
id|io_thread_req
op_star
id|req
)paren
suffix:semicolon
r_extern
r_int
id|ubd_is_dir
c_func
(paren
r_char
op_star
id|file
)paren
suffix:semicolon
DECL|function|ubd_test_bit
r_static
r_inline
r_int
id|ubd_test_bit
c_func
(paren
id|__u64
id|bit
comma
r_int
r_char
op_star
id|data
)paren
(brace
id|__u64
id|n
suffix:semicolon
r_int
id|bits
comma
id|off
suffix:semicolon
id|bits
op_assign
r_sizeof
(paren
id|data
(braket
l_int|0
)braket
)paren
op_star
l_int|8
suffix:semicolon
id|n
op_assign
id|bit
op_div
id|bits
suffix:semicolon
id|off
op_assign
id|bit
op_mod
id|bits
suffix:semicolon
r_return
(paren
id|data
(braket
id|n
)braket
op_amp
(paren
l_int|1
op_lshift
id|off
)paren
)paren
op_ne
l_int|0
suffix:semicolon
)brace
DECL|function|ubd_set_bit
r_static
r_inline
r_void
id|ubd_set_bit
c_func
(paren
id|__u64
id|bit
comma
r_int
r_char
op_star
id|data
)paren
(brace
id|__u64
id|n
suffix:semicolon
r_int
id|bits
comma
id|off
suffix:semicolon
id|bits
op_assign
r_sizeof
(paren
id|data
(braket
l_int|0
)braket
)paren
op_star
l_int|8
suffix:semicolon
id|n
op_assign
id|bit
op_div
id|bits
suffix:semicolon
id|off
op_assign
id|bit
op_mod
id|bits
suffix:semicolon
id|data
(braket
id|n
)braket
op_or_assign
(paren
l_int|1
op_lshift
id|off
)paren
suffix:semicolon
)brace
macro_line|#endif
multiline_comment|/*&n; * Overrides for Emacs so that we follow Linus&squot;s tabbing style.&n; * Emacs will notice this stuff at the end of the file and automatically&n; * adjust the settings for this buffer only.  This must remain at the end&n; * of the file.&n; * ---------------------------------------------------------------------------&n; * Local variables:&n; * c-file-style: &quot;linux&quot;&n; * End:&n; */
eof
