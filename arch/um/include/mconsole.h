multiline_comment|/*&n; * Copyright (C) 2001 Lennert Buytenhek (buytenh@gnu.org)&n; * Copyright (C) 2001, 2002 Jeff Dike (jdike@karaya.com)&n; * Licensed under the GPL&n; */
macro_line|#ifndef __MCONSOLE_H__
DECL|macro|__MCONSOLE_H__
mdefine_line|#define __MCONSOLE_H__
macro_line|#ifndef __KERNEL__
macro_line|#include &lt;stdint.h&gt;
DECL|macro|u32
mdefine_line|#define u32 uint32_t
macro_line|#endif
DECL|macro|MCONSOLE_MAGIC
mdefine_line|#define MCONSOLE_MAGIC (0xcafebabe)
DECL|macro|MCONSOLE_MAX_DATA
mdefine_line|#define MCONSOLE_MAX_DATA (512)
DECL|macro|MCONSOLE_VERSION
mdefine_line|#define MCONSOLE_VERSION 2
DECL|struct|mconsole_request
r_struct
id|mconsole_request
(brace
DECL|member|magic
id|u32
id|magic
suffix:semicolon
DECL|member|version
id|u32
id|version
suffix:semicolon
DECL|member|len
id|u32
id|len
suffix:semicolon
DECL|member|data
r_char
id|data
(braket
id|MCONSOLE_MAX_DATA
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|mconsole_reply
r_struct
id|mconsole_reply
(brace
DECL|member|err
id|u32
id|err
suffix:semicolon
DECL|member|more
id|u32
id|more
suffix:semicolon
DECL|member|len
id|u32
id|len
suffix:semicolon
DECL|member|data
r_char
id|data
(braket
id|MCONSOLE_MAX_DATA
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|mconsole_notify
r_struct
id|mconsole_notify
(brace
DECL|member|magic
id|u32
id|magic
suffix:semicolon
DECL|member|version
id|u32
id|version
suffix:semicolon
DECL|enumerator|MCONSOLE_SOCKET
DECL|enumerator|MCONSOLE_PANIC
DECL|enumerator|MCONSOLE_HANG
r_enum
(brace
id|MCONSOLE_SOCKET
comma
id|MCONSOLE_PANIC
comma
id|MCONSOLE_HANG
comma
DECL|enumerator|MCONSOLE_USER_NOTIFY
DECL|member|type
id|MCONSOLE_USER_NOTIFY
)brace
id|type
suffix:semicolon
DECL|member|len
id|u32
id|len
suffix:semicolon
DECL|member|data
r_char
id|data
(braket
id|MCONSOLE_MAX_DATA
)braket
suffix:semicolon
)brace
suffix:semicolon
r_struct
id|mc_request
suffix:semicolon
DECL|enum|mc_context
DECL|enumerator|MCONSOLE_INTR
DECL|enumerator|MCONSOLE_PROC
r_enum
id|mc_context
(brace
id|MCONSOLE_INTR
comma
id|MCONSOLE_PROC
)brace
suffix:semicolon
DECL|struct|mconsole_command
r_struct
id|mconsole_command
(brace
DECL|member|command
r_char
op_star
id|command
suffix:semicolon
DECL|member|handler
r_void
(paren
op_star
id|handler
)paren
(paren
r_struct
id|mc_request
op_star
id|req
)paren
suffix:semicolon
DECL|member|context
r_enum
id|mc_context
id|context
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|mc_request
r_struct
id|mc_request
(brace
DECL|member|len
r_int
id|len
suffix:semicolon
DECL|member|as_interrupt
r_int
id|as_interrupt
suffix:semicolon
DECL|member|originating_fd
r_int
id|originating_fd
suffix:semicolon
DECL|member|originlen
r_int
id|originlen
suffix:semicolon
DECL|member|origin
r_int
r_char
id|origin
(braket
l_int|128
)braket
suffix:semicolon
multiline_comment|/* sockaddr_un */
DECL|member|request
r_struct
id|mconsole_request
id|request
suffix:semicolon
DECL|member|cmd
r_struct
id|mconsole_command
op_star
id|cmd
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_char
id|mconsole_socket_name
(braket
)braket
suffix:semicolon
r_extern
r_int
id|mconsole_unlink_socket
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|mconsole_reply
c_func
(paren
r_struct
id|mc_request
op_star
id|req
comma
r_char
op_star
id|reply
comma
r_int
id|err
comma
r_int
id|more
)paren
suffix:semicolon
r_extern
r_void
id|mconsole_version
c_func
(paren
r_struct
id|mc_request
op_star
id|req
)paren
suffix:semicolon
r_extern
r_void
id|mconsole_help
c_func
(paren
r_struct
id|mc_request
op_star
id|req
)paren
suffix:semicolon
r_extern
r_void
id|mconsole_halt
c_func
(paren
r_struct
id|mc_request
op_star
id|req
)paren
suffix:semicolon
r_extern
r_void
id|mconsole_reboot
c_func
(paren
r_struct
id|mc_request
op_star
id|req
)paren
suffix:semicolon
r_extern
r_void
id|mconsole_config
c_func
(paren
r_struct
id|mc_request
op_star
id|req
)paren
suffix:semicolon
r_extern
r_void
id|mconsole_remove
c_func
(paren
r_struct
id|mc_request
op_star
id|req
)paren
suffix:semicolon
r_extern
r_void
id|mconsole_sysrq
c_func
(paren
r_struct
id|mc_request
op_star
id|req
)paren
suffix:semicolon
r_extern
r_void
id|mconsole_cad
c_func
(paren
r_struct
id|mc_request
op_star
id|req
)paren
suffix:semicolon
r_extern
r_void
id|mconsole_stop
c_func
(paren
r_struct
id|mc_request
op_star
id|req
)paren
suffix:semicolon
r_extern
r_void
id|mconsole_go
c_func
(paren
r_struct
id|mc_request
op_star
id|req
)paren
suffix:semicolon
r_extern
r_void
id|mconsole_log
c_func
(paren
r_struct
id|mc_request
op_star
id|req
)paren
suffix:semicolon
r_extern
r_void
id|mconsole_proc
c_func
(paren
r_struct
id|mc_request
op_star
id|req
)paren
suffix:semicolon
r_extern
r_int
id|mconsole_get_request
c_func
(paren
r_int
id|fd
comma
r_struct
id|mc_request
op_star
id|req
)paren
suffix:semicolon
r_extern
r_int
id|mconsole_notify
c_func
(paren
r_char
op_star
id|sock_name
comma
r_int
id|type
comma
r_const
r_void
op_star
id|data
comma
r_int
id|len
)paren
suffix:semicolon
r_extern
r_char
op_star
id|mconsole_notify_socket
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|lock_notify
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|unlock_notify
c_func
(paren
r_void
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/*&n; * Overrides for Emacs so that we follow Linus&squot;s tabbing style.&n; * Emacs will notice this stuff at the end of the file and automatically&n; * adjust the settings for this buffer only.  This must remain at the end&n; * of the file.&n; * ---------------------------------------------------------------------------&n; * Local variables:&n; * c-file-style: &quot;linux&quot;&n; * End:&n; */
eof
