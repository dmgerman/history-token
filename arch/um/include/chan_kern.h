multiline_comment|/* &n; * Copyright (C) 2000, 2001 Jeff Dike (jdike@karaya.com)&n; * Licensed under the GPL&n; */
macro_line|#ifndef __CHAN_KERN_H__
DECL|macro|__CHAN_KERN_H__
mdefine_line|#define __CHAN_KERN_H__
macro_line|#include &quot;linux/tty.h&quot;
macro_line|#include &quot;linux/list.h&quot;
macro_line|#include &quot;chan_user.h&quot;
DECL|struct|chan
r_struct
id|chan
(brace
DECL|member|list
r_struct
id|list_head
id|list
suffix:semicolon
DECL|member|primary
r_int
r_int
id|primary
suffix:colon
l_int|1
suffix:semicolon
DECL|member|input
r_int
r_int
id|input
suffix:colon
l_int|1
suffix:semicolon
DECL|member|output
r_int
r_int
id|output
suffix:colon
l_int|1
suffix:semicolon
DECL|member|opened
r_int
r_int
id|opened
suffix:colon
l_int|1
suffix:semicolon
DECL|member|fd
r_int
id|fd
suffix:semicolon
DECL|member|pri
r_enum
id|chan_init_pri
id|pri
suffix:semicolon
DECL|member|ops
r_struct
id|chan_ops
op_star
id|ops
suffix:semicolon
DECL|member|data
r_void
op_star
id|data
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_void
id|chan_interrupt
c_func
(paren
r_struct
id|list_head
op_star
id|chans
comma
r_struct
id|work_struct
op_star
id|task
comma
r_struct
id|tty_struct
op_star
id|tty
comma
r_int
id|irq
comma
r_void
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|parse_chan_pair
c_func
(paren
r_char
op_star
id|str
comma
r_struct
id|list_head
op_star
id|chans
comma
r_int
id|pri
comma
r_int
id|device
comma
r_struct
id|chan_opts
op_star
id|opts
)paren
suffix:semicolon
r_extern
r_int
id|open_chan
c_func
(paren
r_struct
id|list_head
op_star
id|chans
)paren
suffix:semicolon
r_extern
r_int
id|write_chan
c_func
(paren
r_struct
id|list_head
op_star
id|chans
comma
r_const
r_char
op_star
id|buf
comma
r_int
id|len
comma
r_int
id|write_irq
)paren
suffix:semicolon
r_extern
r_int
id|console_write_chan
c_func
(paren
r_struct
id|list_head
op_star
id|chans
comma
r_const
r_char
op_star
id|buf
comma
r_int
id|len
)paren
suffix:semicolon
r_extern
r_void
id|close_chan
c_func
(paren
r_struct
id|list_head
op_star
id|chans
)paren
suffix:semicolon
r_extern
r_void
id|chan_enable_winch
c_func
(paren
r_struct
id|list_head
op_star
id|chans
comma
r_void
op_star
id|line
)paren
suffix:semicolon
r_extern
r_void
id|enable_chan
c_func
(paren
r_struct
id|list_head
op_star
id|chans
comma
r_void
op_star
id|data
)paren
suffix:semicolon
r_extern
r_int
id|chan_window_size
c_func
(paren
r_struct
id|list_head
op_star
id|chans
comma
r_int
r_int
op_star
id|rows_out
comma
r_int
r_int
op_star
id|cols_out
)paren
suffix:semicolon
r_extern
r_int
id|chan_out_fd
c_func
(paren
r_struct
id|list_head
op_star
id|chans
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/*&n; * Overrides for Emacs so that we follow Linus&squot;s tabbing style.&n; * Emacs will notice this stuff at the end of the file and automatically&n; * adjust the settings for this buffer only.  This must remain at the end&n; * of the file.&n; * ---------------------------------------------------------------------------&n; * Local variables:&n; * c-file-style: &quot;linux&quot;&n; * End:&n; */
eof
