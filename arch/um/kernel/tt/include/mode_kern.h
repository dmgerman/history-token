multiline_comment|/* &n; * Copyright (C) 2002 Jeff Dike (jdike@karaya.com)&n; * Licensed under the GPL&n; */
macro_line|#ifndef __TT_MODE_KERN_H__
DECL|macro|__TT_MODE_KERN_H__
mdefine_line|#define __TT_MODE_KERN_H__
macro_line|#include &quot;linux/sched.h&quot;
macro_line|#include &quot;asm/page.h&quot;
macro_line|#include &quot;asm/ptrace.h&quot;
macro_line|#include &quot;asm/uaccess.h&quot;
r_extern
r_void
op_star
id|switch_to_tt
c_func
(paren
r_void
op_star
id|prev
comma
r_void
op_star
id|next
)paren
suffix:semicolon
r_extern
r_void
id|flush_thread_tt
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|start_thread_tt
c_func
(paren
r_struct
id|pt_regs
op_star
id|regs
comma
r_int
r_int
id|eip
comma
r_int
r_int
id|esp
)paren
suffix:semicolon
r_extern
r_int
id|copy_thread_tt
c_func
(paren
r_int
id|nr
comma
r_int
r_int
id|clone_flags
comma
r_int
r_int
id|sp
comma
r_int
r_int
id|stack_top
comma
r_struct
id|task_struct
op_star
id|p
comma
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_extern
r_void
id|release_thread_tt
c_func
(paren
r_struct
id|task_struct
op_star
id|task
)paren
suffix:semicolon
r_extern
r_void
id|exit_thread_tt
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|initial_thread_cb_tt
c_func
(paren
r_void
(paren
op_star
id|proc
)paren
(paren
r_void
op_star
)paren
comma
r_void
op_star
id|arg
)paren
suffix:semicolon
r_extern
r_void
id|init_idle_tt
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|flush_tlb_kernel_vm_tt
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|__flush_tlb_one_tt
c_func
(paren
r_int
r_int
id|addr
)paren
suffix:semicolon
r_extern
r_void
id|flush_tlb_range_tt
c_func
(paren
r_struct
id|vm_area_struct
op_star
id|vma
comma
r_int
r_int
id|start
comma
r_int
r_int
id|end
)paren
suffix:semicolon
r_extern
r_void
id|flush_tlb_mm_tt
c_func
(paren
r_struct
id|mm_struct
op_star
id|mm
)paren
suffix:semicolon
r_extern
r_void
id|force_flush_all_tt
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|execute_syscall_tt
c_func
(paren
r_void
op_star
id|r
)paren
suffix:semicolon
r_extern
r_void
id|before_mem_tt
c_func
(paren
r_int
r_int
id|brk_start
)paren
suffix:semicolon
r_extern
r_int
r_int
id|set_task_sizes_tt
c_func
(paren
r_int
id|arg
comma
r_int
r_int
op_star
id|host_size_out
comma
r_int
r_int
op_star
id|task_size_out
)paren
suffix:semicolon
r_extern
r_int
id|start_uml_tt
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_struct
id|page
op_star
id|arch_validate_tt
c_func
(paren
r_struct
id|page
op_star
id|page
comma
r_int
id|mask
comma
r_int
id|order
)paren
suffix:semicolon
r_extern
r_int
id|external_pid_tt
c_func
(paren
r_struct
id|task_struct
op_star
id|task
)paren
suffix:semicolon
r_extern
r_int
id|thread_pid_tt
c_func
(paren
r_struct
id|task_struct
op_star
id|task
)paren
suffix:semicolon
DECL|macro|kmem_end_tt
mdefine_line|#define kmem_end_tt (host_task_size - ABOVE_KMEM)
macro_line|#endif
multiline_comment|/*&n; * Overrides for Emacs so that we follow Linus&squot;s tabbing style.&n; * Emacs will notice this stuff at the end of the file and automatically&n; * adjust the settings for this buffer only.  This must remain at the end&n; * of the file.&n; * ---------------------------------------------------------------------------&n; * Local variables:&n; * c-file-style: &quot;linux&quot;&n; * End:&n; */
eof
