multiline_comment|/*&n; * Copyright (C) 2002 Jeff Dike (jdike@karaya.com)&n; * Licensed under the GPL&n; */
macro_line|#ifndef __SKAS_UACCESS_H
DECL|macro|__SKAS_UACCESS_H
mdefine_line|#define __SKAS_UACCESS_H
macro_line|#include &quot;asm/errno.h&quot;
macro_line|#include &quot;asm/fixmap.h&quot;
DECL|macro|access_ok_skas
mdefine_line|#define access_ok_skas(type, addr, size) &bslash;&n;&t;((segment_eq(get_fs(), KERNEL_DS)) || &bslash;&n;&t; (((unsigned long) (addr) &lt; TASK_SIZE) &amp;&amp; &bslash;&n;&t;  ((unsigned long) (addr) + (size) &lt;= TASK_SIZE)) || &bslash;&n;&t; ((type == VERIFY_READ ) &amp;&amp; &bslash;&n;&t;  ((unsigned long) (addr) &gt;= FIXADDR_USER_START) &amp;&amp; &bslash;&n;&t;  ((unsigned long) (addr) + (size) &lt;= FIXADDR_USER_END) &amp;&amp; &bslash;&n;&t;  ((unsigned long) (addr) + (size) &gt;= (unsigned long)(addr))))
DECL|function|verify_area_skas
r_static
r_inline
r_int
id|verify_area_skas
c_func
(paren
r_int
id|type
comma
r_const
r_void
op_star
id|addr
comma
r_int
r_int
id|size
)paren
(brace
r_return
id|access_ok_skas
c_func
(paren
id|type
comma
id|addr
comma
id|size
)paren
ques
c_cond
l_int|0
suffix:colon
op_minus
id|EFAULT
suffix:semicolon
)brace
r_extern
r_int
id|copy_from_user_skas
c_func
(paren
r_void
op_star
id|to
comma
r_const
r_void
op_star
id|from
comma
r_int
id|n
)paren
suffix:semicolon
r_extern
r_int
id|copy_to_user_skas
c_func
(paren
r_void
op_star
id|to
comma
r_const
r_void
op_star
id|from
comma
r_int
id|n
)paren
suffix:semicolon
r_extern
r_int
id|strncpy_from_user_skas
c_func
(paren
r_char
op_star
id|dst
comma
r_const
r_char
op_star
id|src
comma
r_int
id|count
)paren
suffix:semicolon
r_extern
r_int
id|__clear_user_skas
c_func
(paren
r_void
op_star
id|mem
comma
r_int
id|len
)paren
suffix:semicolon
r_extern
r_int
id|clear_user_skas
c_func
(paren
r_void
op_star
id|mem
comma
r_int
id|len
)paren
suffix:semicolon
r_extern
r_int
id|strnlen_user_skas
c_func
(paren
r_const
r_void
op_star
id|str
comma
r_int
id|len
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/*&n; * Overrides for Emacs so that we follow Linus&squot;s tabbing style.&n; * Emacs will notice this stuff at the end of the file and automatically&n; * adjust the settings for this buffer only.  This must remain at the end&n; * of the file.&n; * ---------------------------------------------------------------------------&n; * Local variables:&n; * c-file-style: &quot;linux&quot;&n; * End:&n; */
eof
