multiline_comment|/*&n; * Copyright (C) 2002 Jeff Dike (jdike@karaya.com)&n; * Licensed under the GPL&n; */
macro_line|#ifndef __MODE_SKAS_H__
DECL|macro|__MODE_SKAS_H__
mdefine_line|#define __MODE_SKAS_H__
r_extern
r_int
r_int
id|exec_regs
(braket
)braket
suffix:semicolon
r_extern
r_int
r_int
id|exec_fp_regs
(braket
)braket
suffix:semicolon
r_extern
r_int
r_int
id|exec_fpx_regs
(braket
)braket
suffix:semicolon
r_extern
r_int
id|have_fpx_regs
suffix:semicolon
r_extern
r_void
id|user_time_init_skas
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|copy_sc_from_user_skas
c_func
(paren
r_int
id|pid
comma
r_union
id|uml_pt_regs
op_star
id|regs
comma
r_void
op_star
id|from_ptr
)paren
suffix:semicolon
r_extern
r_int
id|copy_sc_to_user_skas
c_func
(paren
r_int
id|pid
comma
r_void
op_star
id|to_ptr
comma
r_void
op_star
id|fp
comma
r_union
id|uml_pt_regs
op_star
id|regs
comma
r_int
r_int
id|fault_addr
comma
r_int
id|fault_type
)paren
suffix:semicolon
r_extern
r_void
id|sig_handler_common_skas
c_func
(paren
r_int
id|sig
comma
r_void
op_star
id|sc_ptr
)paren
suffix:semicolon
r_extern
r_void
id|halt_skas
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|reboot_skas
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|kill_off_processes_skas
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|is_skas_winch
c_func
(paren
r_int
id|pid
comma
r_int
id|fd
comma
r_void
op_star
id|data
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/*&n; * Overrides for Emacs so that we follow Linus&squot;s tabbing style.&n; * Emacs will notice this stuff at the end of the file and automatically&n; * adjust the settings for this buffer only.  This must remain at the end&n; * of the file.&n; * ---------------------------------------------------------------------------&n; * Local variables:&n; * c-file-style: &quot;linux&quot;&n; * End:&n; */
eof
