multiline_comment|/* &n;   CMTP implementation for Linux Bluetooth stack (BlueZ).&n;   Copyright (C) 2002-2003 Marcel Holtmann &lt;marcel@holtmann.org&gt;&n;&n;   This program is free software; you can redistribute it and/or modify&n;   it under the terms of the GNU General Public License version 2 as&n;   published by the Free Software Foundation;&n;&n;   THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS&n;   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&n;   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF THIRD PARTY RIGHTS.&n;   IN NO EVENT SHALL THE COPYRIGHT HOLDER(S) AND AUTHOR(S) BE LIABLE FOR ANY&n;   CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES &n;   WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN &n;   ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF &n;   OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.&n;&n;   ALL LIABILITY, INCLUDING LIABILITY FOR INFRINGEMENT OF ANY PATENTS, &n;   COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS, RELATING TO USE OF THIS &n;   SOFTWARE IS DISCLAIMED.&n;*/
macro_line|#ifndef __CMTP_H
DECL|macro|__CMTP_H
mdefine_line|#define __CMTP_H
macro_line|#include &lt;linux/types.h&gt;
macro_line|#include &lt;net/bluetooth/bluetooth.h&gt;
DECL|macro|BTNAMSIZ
mdefine_line|#define BTNAMSIZ 18
multiline_comment|/* CMTP ioctl defines */
DECL|macro|CMTPCONNADD
mdefine_line|#define CMTPCONNADD&t;_IOW(&squot;C&squot;, 200, int)
DECL|macro|CMTPCONNDEL
mdefine_line|#define CMTPCONNDEL&t;_IOW(&squot;C&squot;, 201, int)
DECL|macro|CMTPGETCONNLIST
mdefine_line|#define CMTPGETCONNLIST&t;_IOR(&squot;C&squot;, 210, int)
DECL|macro|CMTPGETCONNINFO
mdefine_line|#define CMTPGETCONNINFO&t;_IOR(&squot;C&squot;, 211, int)
DECL|macro|CMTP_LOOPBACK
mdefine_line|#define CMTP_LOOPBACK&t;0
DECL|struct|cmtp_connadd_req
r_struct
id|cmtp_connadd_req
(brace
DECL|member|sock
r_int
id|sock
suffix:semicolon
singleline_comment|// Connected socket
DECL|member|flags
id|__u32
id|flags
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|cmtp_conndel_req
r_struct
id|cmtp_conndel_req
(brace
DECL|member|bdaddr
id|bdaddr_t
id|bdaddr
suffix:semicolon
DECL|member|flags
id|__u32
id|flags
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|cmtp_conninfo
r_struct
id|cmtp_conninfo
(brace
DECL|member|bdaddr
id|bdaddr_t
id|bdaddr
suffix:semicolon
DECL|member|flags
id|__u32
id|flags
suffix:semicolon
DECL|member|state
id|__u16
id|state
suffix:semicolon
DECL|member|num
r_int
id|num
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|cmtp_connlist_req
r_struct
id|cmtp_connlist_req
(brace
DECL|member|cnum
id|__u32
id|cnum
suffix:semicolon
DECL|member|ci
r_struct
id|cmtp_conninfo
id|__user
op_star
id|ci
suffix:semicolon
)brace
suffix:semicolon
r_int
id|cmtp_add_connection
c_func
(paren
r_struct
id|cmtp_connadd_req
op_star
id|req
comma
r_struct
id|socket
op_star
id|sock
)paren
suffix:semicolon
r_int
id|cmtp_del_connection
c_func
(paren
r_struct
id|cmtp_conndel_req
op_star
id|req
)paren
suffix:semicolon
r_int
id|cmtp_get_connlist
c_func
(paren
r_struct
id|cmtp_connlist_req
op_star
id|req
)paren
suffix:semicolon
r_int
id|cmtp_get_conninfo
c_func
(paren
r_struct
id|cmtp_conninfo
op_star
id|ci
)paren
suffix:semicolon
multiline_comment|/* CMTP session defines */
DECL|macro|CMTP_INTEROP_TIMEOUT
mdefine_line|#define CMTP_INTEROP_TIMEOUT&t;(HZ * 5)
DECL|macro|CMTP_INITIAL_MSGNUM
mdefine_line|#define CMTP_INITIAL_MSGNUM&t;0xff00
DECL|struct|cmtp_session
r_struct
id|cmtp_session
(brace
DECL|member|list
r_struct
id|list_head
id|list
suffix:semicolon
DECL|member|sock
r_struct
id|socket
op_star
id|sock
suffix:semicolon
DECL|member|bdaddr
id|bdaddr_t
id|bdaddr
suffix:semicolon
DECL|member|state
r_int
r_int
id|state
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
DECL|member|mtu
id|uint
id|mtu
suffix:semicolon
DECL|member|name
r_char
id|name
(braket
id|BTNAMSIZ
)braket
suffix:semicolon
DECL|member|terminate
id|atomic_t
id|terminate
suffix:semicolon
DECL|member|wait
id|wait_queue_head_t
id|wait
suffix:semicolon
DECL|member|ncontroller
r_int
id|ncontroller
suffix:semicolon
DECL|member|num
r_int
id|num
suffix:semicolon
DECL|member|ctrl
r_struct
id|capi_ctr
id|ctrl
suffix:semicolon
DECL|member|applications
r_struct
id|list_head
id|applications
suffix:semicolon
DECL|member|blockids
r_int
r_int
id|blockids
suffix:semicolon
DECL|member|msgnum
r_int
id|msgnum
suffix:semicolon
DECL|member|transmit
r_struct
id|sk_buff_head
id|transmit
suffix:semicolon
DECL|member|reassembly
r_struct
id|sk_buff
op_star
id|reassembly
(braket
l_int|16
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|cmtp_application
r_struct
id|cmtp_application
(brace
DECL|member|list
r_struct
id|list_head
id|list
suffix:semicolon
DECL|member|state
r_int
r_int
id|state
suffix:semicolon
DECL|member|err
r_int
id|err
suffix:semicolon
DECL|member|appl
id|__u16
id|appl
suffix:semicolon
DECL|member|mapping
id|__u16
id|mapping
suffix:semicolon
DECL|member|msgnum
id|__u16
id|msgnum
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|cmtp_scb
r_struct
id|cmtp_scb
(brace
DECL|member|id
r_int
id|id
suffix:semicolon
DECL|member|data
r_int
id|data
suffix:semicolon
)brace
suffix:semicolon
r_int
id|cmtp_attach_device
c_func
(paren
r_struct
id|cmtp_session
op_star
id|session
)paren
suffix:semicolon
r_void
id|cmtp_detach_device
c_func
(paren
r_struct
id|cmtp_session
op_star
id|session
)paren
suffix:semicolon
r_void
id|cmtp_recv_capimsg
c_func
(paren
r_struct
id|cmtp_session
op_star
id|session
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
DECL|function|cmtp_schedule
r_static
r_inline
r_void
id|cmtp_schedule
c_func
(paren
r_struct
id|cmtp_session
op_star
id|session
)paren
(brace
r_struct
id|sock
op_star
id|sk
op_assign
id|session-&gt;sock-&gt;sk
suffix:semicolon
id|wake_up_interruptible
c_func
(paren
id|sk-&gt;sk_sleep
)paren
suffix:semicolon
)brace
multiline_comment|/* CMTP init defines */
r_int
id|cmtp_init_sockets
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|cmtp_cleanup_sockets
c_func
(paren
r_void
)paren
suffix:semicolon
macro_line|#endif /* __CMTP_H */
eof
