multiline_comment|/*********************************************************************&n; *&n; *&t;sir.h:&t;include file for irda-sir device abstraction layer&n; *&n; *&t;Copyright (c) 2002 Martin Diehl&n; *&n; *&t;This program is free software; you can redistribute it and/or &n; *&t;modify it under the terms of the GNU General Public License as &n; *&t;published by the Free Software Foundation; either version 2 of &n; *&t;the License, or (at your option) any later version.&n; *&n; ********************************************************************/
macro_line|#ifndef IRDA_SIR_H
DECL|macro|IRDA_SIR_H
mdefine_line|#define IRDA_SIR_H
macro_line|#include &lt;linux/netdevice.h&gt;
macro_line|#include &lt;net/irda/irda.h&gt;
macro_line|#include &lt;net/irda/irda_device.h&gt;&t;&t;
singleline_comment|// iobuff_t
multiline_comment|/* FIXME: unify irda_request with sir_fsm! */
DECL|struct|irda_request
r_struct
id|irda_request
(brace
DECL|member|lh_request
r_struct
id|list_head
id|lh_request
suffix:semicolon
DECL|member|pending
r_int
r_int
id|pending
suffix:semicolon
DECL|member|func
r_void
(paren
op_star
id|func
)paren
(paren
r_void
op_star
)paren
suffix:semicolon
DECL|member|data
r_void
op_star
id|data
suffix:semicolon
DECL|member|timer
r_struct
id|timer_list
id|timer
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|sir_fsm
r_struct
id|sir_fsm
(brace
DECL|member|sem
r_struct
id|semaphore
id|sem
suffix:semicolon
DECL|member|rq
r_struct
id|irda_request
id|rq
suffix:semicolon
DECL|member|state
DECL|member|substate
r_int
id|state
comma
id|substate
suffix:semicolon
DECL|member|param
r_int
id|param
suffix:semicolon
DECL|member|result
r_int
id|result
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|SIRDEV_STATE_WAIT_TX_COMPLETE
mdefine_line|#define SIRDEV_STATE_WAIT_TX_COMPLETE&t;0x0100
multiline_comment|/* substates for wait_tx_complete */
DECL|macro|SIRDEV_STATE_WAIT_XMIT
mdefine_line|#define SIRDEV_STATE_WAIT_XMIT&t;&t;0x0101
DECL|macro|SIRDEV_STATE_WAIT_UNTIL_SENT
mdefine_line|#define SIRDEV_STATE_WAIT_UNTIL_SENT&t;0x0102
DECL|macro|SIRDEV_STATE_TX_DONE
mdefine_line|#define SIRDEV_STATE_TX_DONE&t;&t;0x0103
DECL|macro|SIRDEV_STATE_DONGLE_OPEN
mdefine_line|#define SIRDEV_STATE_DONGLE_OPEN&t;&t;0x0300
multiline_comment|/* 0x0301-0x03ff reserved for individual dongle substates */
DECL|macro|SIRDEV_STATE_DONGLE_CLOSE
mdefine_line|#define SIRDEV_STATE_DONGLE_CLOSE&t;0x0400
multiline_comment|/* 0x0401-0x04ff reserved for individual dongle substates */
DECL|macro|SIRDEV_STATE_SET_DTR_RTS
mdefine_line|#define SIRDEV_STATE_SET_DTR_RTS&t;&t;0x0500
DECL|macro|SIRDEV_STATE_SET_SPEED
mdefine_line|#define SIRDEV_STATE_SET_SPEED&t;&t;0x0700
DECL|macro|SIRDEV_STATE_DONGLE_CHECK
mdefine_line|#define SIRDEV_STATE_DONGLE_CHECK&t;0x0800
DECL|macro|SIRDEV_STATE_DONGLE_RESET
mdefine_line|#define SIRDEV_STATE_DONGLE_RESET&t;0x0900
multiline_comment|/* 0x0901-0x09ff reserved for individual dongle substates */
DECL|macro|SIRDEV_STATE_DONGLE_SPEED
mdefine_line|#define SIRDEV_STATE_DONGLE_SPEED&t;0x0a00
multiline_comment|/* 0x0a01-0x0aff reserved for individual dongle substates */
DECL|macro|SIRDEV_STATE_PORT_SPEED
mdefine_line|#define SIRDEV_STATE_PORT_SPEED&t;&t;0x0b00
DECL|macro|SIRDEV_STATE_DONE
mdefine_line|#define SIRDEV_STATE_DONE&t;&t;0x0c00
DECL|macro|SIRDEV_STATE_ERROR
mdefine_line|#define SIRDEV_STATE_ERROR&t;&t;0x0d00
DECL|macro|SIRDEV_STATE_COMPLETE
mdefine_line|#define SIRDEV_STATE_COMPLETE&t;&t;0x0e00
DECL|macro|SIRDEV_STATE_DEAD
mdefine_line|#define SIRDEV_STATE_DEAD&t;&t;0xffff
r_struct
id|sir_dev
suffix:semicolon
DECL|struct|dongle_driver
r_struct
id|dongle_driver
(brace
DECL|member|owner
r_struct
id|module
op_star
id|owner
suffix:semicolon
DECL|member|driver_name
r_const
r_char
op_star
id|driver_name
suffix:semicolon
DECL|member|type
id|IRDA_DONGLE
id|type
suffix:semicolon
DECL|member|open
r_int
(paren
op_star
id|open
)paren
(paren
r_struct
id|sir_dev
op_star
id|dev
)paren
suffix:semicolon
DECL|member|close
r_int
(paren
op_star
id|close
)paren
(paren
r_struct
id|sir_dev
op_star
id|dev
)paren
suffix:semicolon
DECL|member|reset
r_int
(paren
op_star
id|reset
)paren
(paren
r_struct
id|sir_dev
op_star
id|dev
)paren
suffix:semicolon
DECL|member|set_speed
r_int
(paren
op_star
id|set_speed
)paren
(paren
r_struct
id|sir_dev
op_star
id|dev
comma
r_int
id|speed
)paren
suffix:semicolon
DECL|member|dongle_list
r_struct
id|list_head
id|dongle_list
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|sir_driver
r_struct
id|sir_driver
(brace
DECL|member|owner
r_struct
id|module
op_star
id|owner
suffix:semicolon
DECL|member|driver_name
r_const
r_char
op_star
id|driver_name
suffix:semicolon
DECL|member|qos_mtt_bits
r_int
id|qos_mtt_bits
suffix:semicolon
DECL|member|chars_in_buffer
r_int
(paren
op_star
id|chars_in_buffer
)paren
(paren
r_struct
id|sir_dev
op_star
id|dev
)paren
suffix:semicolon
DECL|member|wait_until_sent
r_void
(paren
op_star
id|wait_until_sent
)paren
(paren
r_struct
id|sir_dev
op_star
id|dev
)paren
suffix:semicolon
DECL|member|set_speed
r_int
(paren
op_star
id|set_speed
)paren
(paren
r_struct
id|sir_dev
op_star
id|dev
comma
r_int
id|speed
)paren
suffix:semicolon
DECL|member|set_dtr_rts
r_int
(paren
op_star
id|set_dtr_rts
)paren
(paren
r_struct
id|sir_dev
op_star
id|dev
comma
r_int
id|dtr
comma
r_int
id|rts
)paren
suffix:semicolon
DECL|member|do_write
r_int
(paren
op_star
id|do_write
)paren
(paren
r_struct
id|sir_dev
op_star
id|dev
comma
r_const
r_int
r_char
op_star
id|ptr
comma
r_int
id|len
)paren
suffix:semicolon
DECL|member|start_dev
r_int
(paren
op_star
id|start_dev
)paren
(paren
r_struct
id|sir_dev
op_star
id|dev
)paren
suffix:semicolon
DECL|member|stop_dev
r_int
(paren
op_star
id|stop_dev
)paren
(paren
r_struct
id|sir_dev
op_star
id|dev
)paren
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* exported */
r_extern
r_int
id|irda_register_dongle
c_func
(paren
r_struct
id|dongle_driver
op_star
r_new
)paren
suffix:semicolon
r_extern
r_int
id|irda_unregister_dongle
c_func
(paren
r_struct
id|dongle_driver
op_star
id|drv
)paren
suffix:semicolon
r_extern
r_struct
id|sir_dev
op_star
id|sirdev_get_instance
c_func
(paren
r_const
r_struct
id|sir_driver
op_star
id|drv
comma
r_const
r_char
op_star
id|name
)paren
suffix:semicolon
r_extern
r_int
id|sirdev_put_instance
c_func
(paren
r_struct
id|sir_dev
op_star
id|self
)paren
suffix:semicolon
r_extern
r_int
id|sirdev_set_dongle
c_func
(paren
r_struct
id|sir_dev
op_star
id|dev
comma
id|IRDA_DONGLE
id|type
)paren
suffix:semicolon
r_extern
r_void
id|sirdev_write_complete
c_func
(paren
r_struct
id|sir_dev
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|sirdev_receive
c_func
(paren
r_struct
id|sir_dev
op_star
id|dev
comma
r_const
r_int
r_char
op_star
id|cp
comma
r_int
id|count
)paren
suffix:semicolon
multiline_comment|/* not exported */
r_extern
r_int
id|sirdev_get_dongle
c_func
(paren
r_struct
id|sir_dev
op_star
id|self
comma
id|IRDA_DONGLE
id|type
)paren
suffix:semicolon
r_extern
r_int
id|sirdev_put_dongle
c_func
(paren
r_struct
id|sir_dev
op_star
id|self
)paren
suffix:semicolon
r_extern
r_int
id|sirdev_raw_write
c_func
(paren
r_struct
id|sir_dev
op_star
id|dev
comma
r_const
r_char
op_star
id|buf
comma
r_int
id|len
)paren
suffix:semicolon
r_extern
r_int
id|sirdev_raw_read
c_func
(paren
r_struct
id|sir_dev
op_star
id|dev
comma
r_char
op_star
id|buf
comma
r_int
id|len
)paren
suffix:semicolon
r_extern
r_void
id|sirdev_enable_rx
c_func
(paren
r_struct
id|sir_dev
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|sirdev_schedule_request
c_func
(paren
r_struct
id|sir_dev
op_star
id|dev
comma
r_int
id|state
comma
r_int
id|param
)paren
suffix:semicolon
r_extern
r_int
id|__init
id|irda_thread_create
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|__exit
id|irda_thread_join
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* inline helpers */
DECL|function|sirdev_schedule_speed
r_static
r_inline
r_int
id|sirdev_schedule_speed
c_func
(paren
r_struct
id|sir_dev
op_star
id|dev
comma
r_int
id|speed
)paren
(brace
r_return
id|sirdev_schedule_request
c_func
(paren
id|dev
comma
id|SIRDEV_STATE_SET_SPEED
comma
id|speed
)paren
suffix:semicolon
)brace
DECL|function|sirdev_schedule_dongle_open
r_static
r_inline
r_int
id|sirdev_schedule_dongle_open
c_func
(paren
r_struct
id|sir_dev
op_star
id|dev
comma
r_int
id|dongle_id
)paren
(brace
r_return
id|sirdev_schedule_request
c_func
(paren
id|dev
comma
id|SIRDEV_STATE_DONGLE_OPEN
comma
id|dongle_id
)paren
suffix:semicolon
)brace
DECL|function|sirdev_schedule_dongle_close
r_static
r_inline
r_int
id|sirdev_schedule_dongle_close
c_func
(paren
r_struct
id|sir_dev
op_star
id|dev
)paren
(brace
r_return
id|sirdev_schedule_request
c_func
(paren
id|dev
comma
id|SIRDEV_STATE_DONGLE_CLOSE
comma
l_int|0
)paren
suffix:semicolon
)brace
DECL|function|sirdev_schedule_dtr_rts
r_static
r_inline
r_int
id|sirdev_schedule_dtr_rts
c_func
(paren
r_struct
id|sir_dev
op_star
id|dev
comma
r_int
id|dtr
comma
r_int
id|rts
)paren
(brace
r_int
id|dtrrts
suffix:semicolon
id|dtrrts
op_assign
(paren
(paren
id|dtr
)paren
ques
c_cond
l_int|0x02
suffix:colon
l_int|0x00
)paren
op_or
(paren
(paren
id|rts
)paren
ques
c_cond
l_int|0x01
suffix:colon
l_int|0x00
)paren
suffix:semicolon
r_return
id|sirdev_schedule_request
c_func
(paren
id|dev
comma
id|SIRDEV_STATE_SET_DTR_RTS
comma
id|dtrrts
)paren
suffix:semicolon
)brace
macro_line|#if 0
r_static
r_inline
r_int
id|sirdev_schedule_mode
c_func
(paren
r_struct
id|sir_dev
op_star
id|dev
comma
r_int
id|mode
)paren
(brace
r_return
id|sirdev_schedule_request
c_func
(paren
id|dev
comma
id|SIRDEV_STATE_SET_MODE
comma
id|mode
)paren
suffix:semicolon
)brace
macro_line|#endif
DECL|struct|sir_dev
r_struct
id|sir_dev
(brace
DECL|member|netdev
r_struct
id|net_device
op_star
id|netdev
suffix:semicolon
DECL|member|stats
r_struct
id|net_device_stats
id|stats
suffix:semicolon
DECL|member|irlap
r_struct
id|irlap_cb
op_star
id|irlap
suffix:semicolon
DECL|member|qos
r_struct
id|qos_info
id|qos
suffix:semicolon
DECL|member|hwname
r_char
id|hwname
(braket
l_int|32
)braket
suffix:semicolon
DECL|member|fsm
r_struct
id|sir_fsm
id|fsm
suffix:semicolon
DECL|member|enable_rx
id|atomic_t
id|enable_rx
suffix:semicolon
DECL|member|tx_lock
id|spinlock_t
id|tx_lock
suffix:semicolon
DECL|member|new_speed
id|u32
id|new_speed
suffix:semicolon
DECL|member|flags
id|u32
id|flags
suffix:semicolon
DECL|member|speed
r_int
id|speed
suffix:semicolon
DECL|member|tx_buff
id|iobuff_t
id|tx_buff
suffix:semicolon
multiline_comment|/* Transmit buffer */
DECL|member|rx_buff
id|iobuff_t
id|rx_buff
suffix:semicolon
multiline_comment|/* Receive buffer */
DECL|member|tx_skb
r_struct
id|sk_buff
op_star
id|tx_skb
suffix:semicolon
DECL|member|dongle_drv
r_const
r_struct
id|dongle_driver
op_star
id|dongle_drv
suffix:semicolon
DECL|member|drv
r_const
r_struct
id|sir_driver
op_star
id|drv
suffix:semicolon
DECL|member|priv
r_void
op_star
id|priv
suffix:semicolon
multiline_comment|/* dongle callbacks to the SIR device */
DECL|member|read
r_int
(paren
op_star
id|read
)paren
(paren
r_struct
id|sir_dev
op_star
comma
r_char
op_star
id|buf
comma
r_int
id|len
)paren
suffix:semicolon
DECL|member|write
r_int
(paren
op_star
id|write
)paren
(paren
r_struct
id|sir_dev
op_star
comma
r_const
r_char
op_star
id|buf
comma
r_int
id|len
)paren
suffix:semicolon
DECL|member|set_dtr_rts
r_int
(paren
op_star
id|set_dtr_rts
)paren
(paren
r_struct
id|sir_dev
op_star
comma
r_int
id|dtr
comma
r_int
id|rts
)paren
suffix:semicolon
)brace
suffix:semicolon
macro_line|#endif&t;/* IRDA_SIR_H */
eof
