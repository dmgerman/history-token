multiline_comment|/* hermes.h&n; *&n; * Driver core for the &quot;Hermes&quot; wireless MAC controller, as used in&n; * the Lucent Orinoco and Cabletron RoamAbout cards. It should also&n; * work on the hfa3841 and hfa3842 MAC controller chips used in the&n; * Prism I &amp; II chipsets.&n; *&n; * This is not a complete driver, just low-level access routines for&n; * the MAC controller itself.&n; *&n; * Based on the prism2 driver from Absolute Value Systems&squot; linux-wlan&n; * project, the Linux wvlan_cs driver, Lucent&squot;s HCF-Light&n; * (wvlan_hcf.c) library, and the NetBSD wireless driver.&n; *&n; * Copyright (C) 2000, David Gibson, Linuxcare Australia.&n; * (C) Copyright David Gibson, IBM Corp. 2001-2003.&n; *&n; * Portions taken from hfa384x.h, Copyright (C) 1999 AbsoluteValue Systems, Inc. All Rights Reserved.&n; *&n; * This file distributed under the GPL, version 2.&n; */
macro_line|#ifndef _HERMES_H
DECL|macro|_HERMES_H
mdefine_line|#define _HERMES_H
multiline_comment|/* Notes on locking:&n; *&n; * As a module of low level hardware access routines, there is no&n; * locking. Users of this module should ensure that they serialize&n; * access to the hermes_t structure, and to the hardware&n;*/
macro_line|#include &lt;linux/delay.h&gt;
macro_line|#include &lt;linux/if_ether.h&gt;
macro_line|#include &lt;asm/byteorder.h&gt;
multiline_comment|/*&n; * Limits and constants&n; */
DECL|macro|HERMES_ALLOC_LEN_MIN
mdefine_line|#define&t;&t;HERMES_ALLOC_LEN_MIN&t;&t;(4)
DECL|macro|HERMES_ALLOC_LEN_MAX
mdefine_line|#define&t;&t;HERMES_ALLOC_LEN_MAX&t;&t;(2400)
DECL|macro|HERMES_LTV_LEN_MAX
mdefine_line|#define&t;&t;HERMES_LTV_LEN_MAX&t;&t;(34)
DECL|macro|HERMES_BAP_DATALEN_MAX
mdefine_line|#define&t;&t;HERMES_BAP_DATALEN_MAX&t;&t;(4096)
DECL|macro|HERMES_BAP_OFFSET_MAX
mdefine_line|#define&t;&t;HERMES_BAP_OFFSET_MAX&t;&t;(4096)
DECL|macro|HERMES_PORTID_MAX
mdefine_line|#define&t;&t;HERMES_PORTID_MAX&t;&t;(7)
DECL|macro|HERMES_NUMPORTS_MAX
mdefine_line|#define&t;&t;HERMES_NUMPORTS_MAX&t;&t;(HERMES_PORTID_MAX+1)
DECL|macro|HERMES_PDR_LEN_MAX
mdefine_line|#define&t;&t;HERMES_PDR_LEN_MAX&t;&t;(260)&t;/* in bytes, from EK */
DECL|macro|HERMES_PDA_RECS_MAX
mdefine_line|#define&t;&t;HERMES_PDA_RECS_MAX&t;&t;(200)&t;/* a guess */
DECL|macro|HERMES_PDA_LEN_MAX
mdefine_line|#define&t;&t;HERMES_PDA_LEN_MAX&t;&t;(1024)&t;/* in bytes, from EK */
DECL|macro|HERMES_SCANRESULT_MAX
mdefine_line|#define&t;&t;HERMES_SCANRESULT_MAX&t;&t;(35)
DECL|macro|HERMES_CHINFORESULT_MAX
mdefine_line|#define&t;&t;HERMES_CHINFORESULT_MAX&t;&t;(8)
DECL|macro|HERMES_MAX_MULTICAST
mdefine_line|#define&t;&t;HERMES_MAX_MULTICAST&t;&t;(16)
DECL|macro|HERMES_MAGIC
mdefine_line|#define&t;&t;HERMES_MAGIC&t;&t;&t;(0x7d1f)
multiline_comment|/*&n; * Hermes register offsets&n; */
DECL|macro|HERMES_CMD
mdefine_line|#define&t;&t;HERMES_CMD&t;&t;&t;(0x00)
DECL|macro|HERMES_PARAM0
mdefine_line|#define&t;&t;HERMES_PARAM0&t;&t;&t;(0x02)
DECL|macro|HERMES_PARAM1
mdefine_line|#define&t;&t;HERMES_PARAM1&t;&t;&t;(0x04)
DECL|macro|HERMES_PARAM2
mdefine_line|#define&t;&t;HERMES_PARAM2&t;&t;&t;(0x06)
DECL|macro|HERMES_STATUS
mdefine_line|#define&t;&t;HERMES_STATUS&t;&t;&t;(0x08)
DECL|macro|HERMES_RESP0
mdefine_line|#define&t;&t;HERMES_RESP0&t;&t;&t;(0x0A)
DECL|macro|HERMES_RESP1
mdefine_line|#define&t;&t;HERMES_RESP1&t;&t;&t;(0x0C)
DECL|macro|HERMES_RESP2
mdefine_line|#define&t;&t;HERMES_RESP2&t;&t;&t;(0x0E)
DECL|macro|HERMES_INFOFID
mdefine_line|#define&t;&t;HERMES_INFOFID&t;&t;&t;(0x10)
DECL|macro|HERMES_RXFID
mdefine_line|#define&t;&t;HERMES_RXFID&t;&t;&t;(0x20)
DECL|macro|HERMES_ALLOCFID
mdefine_line|#define&t;&t;HERMES_ALLOCFID&t;&t;&t;(0x22)
DECL|macro|HERMES_TXCOMPLFID
mdefine_line|#define&t;&t;HERMES_TXCOMPLFID&t;&t;(0x24)
DECL|macro|HERMES_SELECT0
mdefine_line|#define&t;&t;HERMES_SELECT0&t;&t;&t;(0x18)
DECL|macro|HERMES_OFFSET0
mdefine_line|#define&t;&t;HERMES_OFFSET0&t;&t;&t;(0x1C)
DECL|macro|HERMES_DATA0
mdefine_line|#define&t;&t;HERMES_DATA0&t;&t;&t;(0x36)
DECL|macro|HERMES_SELECT1
mdefine_line|#define&t;&t;HERMES_SELECT1&t;&t;&t;(0x1A)
DECL|macro|HERMES_OFFSET1
mdefine_line|#define&t;&t;HERMES_OFFSET1&t;&t;&t;(0x1E)
DECL|macro|HERMES_DATA1
mdefine_line|#define&t;&t;HERMES_DATA1&t;&t;&t;(0x38)
DECL|macro|HERMES_EVSTAT
mdefine_line|#define&t;&t;HERMES_EVSTAT&t;&t;&t;(0x30)
DECL|macro|HERMES_INTEN
mdefine_line|#define&t;&t;HERMES_INTEN&t;&t;&t;(0x32)
DECL|macro|HERMES_EVACK
mdefine_line|#define&t;&t;HERMES_EVACK&t;&t;&t;(0x34)
DECL|macro|HERMES_CONTROL
mdefine_line|#define&t;&t;HERMES_CONTROL&t;&t;&t;(0x14)
DECL|macro|HERMES_SWSUPPORT0
mdefine_line|#define&t;&t;HERMES_SWSUPPORT0&t;&t;(0x28)
DECL|macro|HERMES_SWSUPPORT1
mdefine_line|#define&t;&t;HERMES_SWSUPPORT1&t;&t;(0x2A)
DECL|macro|HERMES_SWSUPPORT2
mdefine_line|#define&t;&t;HERMES_SWSUPPORT2&t;&t;(0x2C)
DECL|macro|HERMES_AUXPAGE
mdefine_line|#define&t;&t;HERMES_AUXPAGE&t;&t;&t;(0x3A)
DECL|macro|HERMES_AUXOFFSET
mdefine_line|#define&t;&t;HERMES_AUXOFFSET&t;&t;(0x3C)
DECL|macro|HERMES_AUXDATA
mdefine_line|#define&t;&t;HERMES_AUXDATA&t;&t;&t;(0x3E)
multiline_comment|/*&n; * CMD register bitmasks&n; */
DECL|macro|HERMES_CMD_BUSY
mdefine_line|#define&t;&t;HERMES_CMD_BUSY&t;&t;&t;(0x8000)
DECL|macro|HERMES_CMD_AINFO
mdefine_line|#define&t;&t;HERMES_CMD_AINFO&t;&t;(0x7f00)
DECL|macro|HERMES_CMD_MACPORT
mdefine_line|#define&t;&t;HERMES_CMD_MACPORT&t;&t;(0x0700)
DECL|macro|HERMES_CMD_RECL
mdefine_line|#define&t;&t;HERMES_CMD_RECL&t;&t;&t;(0x0100)
DECL|macro|HERMES_CMD_WRITE
mdefine_line|#define&t;&t;HERMES_CMD_WRITE&t;&t;(0x0100)
DECL|macro|HERMES_CMD_PROGMODE
mdefine_line|#define&t;&t;HERMES_CMD_PROGMODE&t;&t;(0x0300)
DECL|macro|HERMES_CMD_CMDCODE
mdefine_line|#define&t;&t;HERMES_CMD_CMDCODE&t;&t;(0x003f)
multiline_comment|/*&n; * STATUS register bitmasks&n; */
DECL|macro|HERMES_STATUS_RESULT
mdefine_line|#define&t;&t;HERMES_STATUS_RESULT&t;&t;(0x7f00)
DECL|macro|HERMES_STATUS_CMDCODE
mdefine_line|#define&t;&t;HERMES_STATUS_CMDCODE&t;&t;(0x003f)
multiline_comment|/*&n; * OFFSET register bitmasks&n; */
DECL|macro|HERMES_OFFSET_BUSY
mdefine_line|#define&t;&t;HERMES_OFFSET_BUSY&t;&t;(0x8000)
DECL|macro|HERMES_OFFSET_ERR
mdefine_line|#define&t;&t;HERMES_OFFSET_ERR&t;&t;(0x4000)
DECL|macro|HERMES_OFFSET_DATAOFF
mdefine_line|#define&t;&t;HERMES_OFFSET_DATAOFF&t;&t;(0x0ffe)
multiline_comment|/*&n; * Event register bitmasks (INTEN, EVSTAT, EVACK)&n; */
DECL|macro|HERMES_EV_TICK
mdefine_line|#define&t;&t;HERMES_EV_TICK&t;&t;&t;(0x8000)
DECL|macro|HERMES_EV_WTERR
mdefine_line|#define&t;&t;HERMES_EV_WTERR&t;&t;&t;(0x4000)
DECL|macro|HERMES_EV_INFDROP
mdefine_line|#define&t;&t;HERMES_EV_INFDROP&t;&t;(0x2000)
DECL|macro|HERMES_EV_INFO
mdefine_line|#define&t;&t;HERMES_EV_INFO&t;&t;&t;(0x0080)
DECL|macro|HERMES_EV_DTIM
mdefine_line|#define&t;&t;HERMES_EV_DTIM&t;&t;&t;(0x0020)
DECL|macro|HERMES_EV_CMD
mdefine_line|#define&t;&t;HERMES_EV_CMD&t;&t;&t;(0x0010)
DECL|macro|HERMES_EV_ALLOC
mdefine_line|#define&t;&t;HERMES_EV_ALLOC&t;&t;&t;(0x0008)
DECL|macro|HERMES_EV_TXEXC
mdefine_line|#define&t;&t;HERMES_EV_TXEXC&t;&t;&t;(0x0004)
DECL|macro|HERMES_EV_TX
mdefine_line|#define&t;&t;HERMES_EV_TX&t;&t;&t;(0x0002)
DECL|macro|HERMES_EV_RX
mdefine_line|#define&t;&t;HERMES_EV_RX&t;&t;&t;(0x0001)
multiline_comment|/*&n; * Command codes&n; */
multiline_comment|/*--- Controller Commands ----------------------------*/
DECL|macro|HERMES_CMD_INIT
mdefine_line|#define&t;&t;HERMES_CMD_INIT&t;&t;&t;(0x0000)
DECL|macro|HERMES_CMD_ENABLE
mdefine_line|#define&t;&t;HERMES_CMD_ENABLE&t;&t;(0x0001)
DECL|macro|HERMES_CMD_DISABLE
mdefine_line|#define&t;&t;HERMES_CMD_DISABLE&t;&t;(0x0002)
DECL|macro|HERMES_CMD_DIAG
mdefine_line|#define&t;&t;HERMES_CMD_DIAG&t;&t;&t;(0x0003)
multiline_comment|/*--- Buffer Mgmt Commands ---------------------------*/
DECL|macro|HERMES_CMD_ALLOC
mdefine_line|#define&t;&t;HERMES_CMD_ALLOC&t;&t;(0x000A)
DECL|macro|HERMES_CMD_TX
mdefine_line|#define&t;&t;HERMES_CMD_TX&t;&t;&t;(0x000B)
multiline_comment|/*--- Regulate Commands ------------------------------*/
DECL|macro|HERMES_CMD_NOTIFY
mdefine_line|#define&t;&t;HERMES_CMD_NOTIFY&t;&t;(0x0010)
DECL|macro|HERMES_CMD_INQUIRE
mdefine_line|#define&t;&t;HERMES_CMD_INQUIRE&t;&t;(0x0011)
multiline_comment|/*--- Configure Commands -----------------------------*/
DECL|macro|HERMES_CMD_ACCESS
mdefine_line|#define&t;&t;HERMES_CMD_ACCESS&t;&t;(0x0021)
DECL|macro|HERMES_CMD_DOWNLD
mdefine_line|#define&t;&t;HERMES_CMD_DOWNLD&t;&t;(0x0022)
multiline_comment|/*--- Serial I/O Commands ----------------------------*/
DECL|macro|HERMES_CMD_READMIF
mdefine_line|#define&t;&t;HERMES_CMD_READMIF&t;&t;(0x0030)
DECL|macro|HERMES_CMD_WRITEMIF
mdefine_line|#define&t;&t;HERMES_CMD_WRITEMIF&t;&t;(0x0031)
multiline_comment|/*--- Debugging Commands -----------------------------*/
DECL|macro|HERMES_CMD_TEST
mdefine_line|#define &t;HERMES_CMD_TEST&t;&t;&t;(0x0038)
multiline_comment|/* Test command arguments */
DECL|macro|HERMES_TEST_SET_CHANNEL
mdefine_line|#define&t;&t;HERMES_TEST_SET_CHANNEL&t;&t;0x0800
DECL|macro|HERMES_TEST_MONITOR
mdefine_line|#define&t;&t;HERMES_TEST_MONITOR&t;&t;0x0b00
DECL|macro|HERMES_TEST_STOP
mdefine_line|#define&t;&t;HERMES_TEST_STOP&t;&t;0x0f00
multiline_comment|/* Authentication algorithms */
DECL|macro|HERMES_AUTH_OPEN
mdefine_line|#define&t;&t;HERMES_AUTH_OPEN&t;&t;1
DECL|macro|HERMES_AUTH_SHARED_KEY
mdefine_line|#define&t;&t;HERMES_AUTH_SHARED_KEY&t;&t;2
multiline_comment|/* WEP settings */
DECL|macro|HERMES_WEP_PRIVACY_INVOKED
mdefine_line|#define&t;&t;HERMES_WEP_PRIVACY_INVOKED&t;0x0001
DECL|macro|HERMES_WEP_EXCL_UNENCRYPTED
mdefine_line|#define&t;&t;HERMES_WEP_EXCL_UNENCRYPTED&t;0x0002
DECL|macro|HERMES_WEP_HOST_ENCRYPT
mdefine_line|#define&t;&t;HERMES_WEP_HOST_ENCRYPT&t;&t;0x0010
DECL|macro|HERMES_WEP_HOST_DECRYPT
mdefine_line|#define&t;&t;HERMES_WEP_HOST_DECRYPT&t;&t;0x0080
multiline_comment|/* Symbol hostscan options */
DECL|macro|HERMES_HOSTSCAN_SYMBOL_5SEC
mdefine_line|#define&t;&t;HERMES_HOSTSCAN_SYMBOL_5SEC&t;0x0001
DECL|macro|HERMES_HOSTSCAN_SYMBOL_ONCE
mdefine_line|#define&t;&t;HERMES_HOSTSCAN_SYMBOL_ONCE&t;0x0002
DECL|macro|HERMES_HOSTSCAN_SYMBOL_PASSIVE
mdefine_line|#define&t;&t;HERMES_HOSTSCAN_SYMBOL_PASSIVE&t;0x0040
DECL|macro|HERMES_HOSTSCAN_SYMBOL_BCAST
mdefine_line|#define&t;&t;HERMES_HOSTSCAN_SYMBOL_BCAST&t;0x0080
multiline_comment|/*&n; * Frame structures and constants&n; */
DECL|macro|HERMES_DESCRIPTOR_OFFSET
mdefine_line|#define HERMES_DESCRIPTOR_OFFSET&t;0
DECL|macro|HERMES_802_11_OFFSET
mdefine_line|#define HERMES_802_11_OFFSET&t;&t;(14)
DECL|macro|HERMES_802_3_OFFSET
mdefine_line|#define HERMES_802_3_OFFSET&t;&t;(14+32)
DECL|macro|HERMES_802_2_OFFSET
mdefine_line|#define HERMES_802_2_OFFSET&t;&t;(14+32+14)
DECL|macro|HERMES_RXSTAT_ERR
mdefine_line|#define HERMES_RXSTAT_ERR&t;&t;(0x0003)
DECL|macro|HERMES_RXSTAT_BADCRC
mdefine_line|#define&t;HERMES_RXSTAT_BADCRC&t;&t;(0x0001)
DECL|macro|HERMES_RXSTAT_UNDECRYPTABLE
mdefine_line|#define&t;HERMES_RXSTAT_UNDECRYPTABLE&t;(0x0002)
DECL|macro|HERMES_RXSTAT_MACPORT
mdefine_line|#define&t;HERMES_RXSTAT_MACPORT&t;&t;(0x0700)
DECL|macro|HERMES_RXSTAT_PCF
mdefine_line|#define HERMES_RXSTAT_PCF&t;&t;(0x1000)&t;/* Frame was received in CF period */
DECL|macro|HERMES_RXSTAT_MSGTYPE
mdefine_line|#define&t;HERMES_RXSTAT_MSGTYPE&t;&t;(0xE000)
DECL|macro|HERMES_RXSTAT_1042
mdefine_line|#define&t;HERMES_RXSTAT_1042&t;&t;(0x2000)&t;/* RFC-1042 frame */
DECL|macro|HERMES_RXSTAT_TUNNEL
mdefine_line|#define&t;HERMES_RXSTAT_TUNNEL&t;&t;(0x4000)&t;/* bridge-tunnel encoded frame */
DECL|macro|HERMES_RXSTAT_WMP
mdefine_line|#define&t;HERMES_RXSTAT_WMP&t;&t;(0x6000)&t;/* Wavelan-II Management Protocol frame */
DECL|struct|hermes_tx_descriptor
r_struct
id|hermes_tx_descriptor
(brace
DECL|member|status
id|u16
id|status
suffix:semicolon
DECL|member|reserved1
id|u16
id|reserved1
suffix:semicolon
DECL|member|reserved2
id|u16
id|reserved2
suffix:semicolon
DECL|member|sw_support
id|u32
id|sw_support
suffix:semicolon
DECL|member|retry_count
id|u8
id|retry_count
suffix:semicolon
DECL|member|tx_rate
id|u8
id|tx_rate
suffix:semicolon
DECL|member|tx_control
id|u16
id|tx_control
suffix:semicolon
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
DECL|macro|HERMES_TXSTAT_RETRYERR
mdefine_line|#define HERMES_TXSTAT_RETRYERR&t;&t;(0x0001)
DECL|macro|HERMES_TXSTAT_AGEDERR
mdefine_line|#define HERMES_TXSTAT_AGEDERR&t;&t;(0x0002)
DECL|macro|HERMES_TXSTAT_DISCON
mdefine_line|#define HERMES_TXSTAT_DISCON&t;&t;(0x0004)
DECL|macro|HERMES_TXSTAT_FORMERR
mdefine_line|#define HERMES_TXSTAT_FORMERR&t;&t;(0x0008)
DECL|macro|HERMES_TXCTRL_TX_OK
mdefine_line|#define HERMES_TXCTRL_TX_OK&t;&t;(0x0002)&t;/* ?? interrupt on Tx complete */
DECL|macro|HERMES_TXCTRL_TX_EX
mdefine_line|#define HERMES_TXCTRL_TX_EX&t;&t;(0x0004)&t;/* ?? interrupt on Tx exception */
DECL|macro|HERMES_TXCTRL_802_11
mdefine_line|#define HERMES_TXCTRL_802_11&t;&t;(0x0008)&t;/* We supply 802.11 header */
DECL|macro|HERMES_TXCTRL_ALT_RTRY
mdefine_line|#define HERMES_TXCTRL_ALT_RTRY&t;&t;(0x0020)
multiline_comment|/* Inquiry constants and data types */
DECL|macro|HERMES_INQ_TALLIES
mdefine_line|#define HERMES_INQ_TALLIES&t;&t;(0xF100)
DECL|macro|HERMES_INQ_SCAN
mdefine_line|#define HERMES_INQ_SCAN&t;&t;&t;(0xF101)
DECL|macro|HERMES_INQ_CHANNELINFO
mdefine_line|#define HERMES_INQ_CHANNELINFO&t;&t;(0xF102)
DECL|macro|HERMES_INQ_HOSTSCAN
mdefine_line|#define HERMES_INQ_HOSTSCAN&t;&t;(0xF103)
DECL|macro|HERMES_INQ_HOSTSCAN_SYMBOL
mdefine_line|#define HERMES_INQ_HOSTSCAN_SYMBOL&t;(0xF104)
DECL|macro|HERMES_INQ_LINKSTATUS
mdefine_line|#define HERMES_INQ_LINKSTATUS&t;&t;(0xF200)
DECL|macro|HERMES_INQ_SEC_STAT_AGERE
mdefine_line|#define HERMES_INQ_SEC_STAT_AGERE&t;(0xF202)
DECL|struct|hermes_tallies_frame
r_struct
id|hermes_tallies_frame
(brace
DECL|member|TxUnicastFrames
id|u16
id|TxUnicastFrames
suffix:semicolon
DECL|member|TxMulticastFrames
id|u16
id|TxMulticastFrames
suffix:semicolon
DECL|member|TxFragments
id|u16
id|TxFragments
suffix:semicolon
DECL|member|TxUnicastOctets
id|u16
id|TxUnicastOctets
suffix:semicolon
DECL|member|TxMulticastOctets
id|u16
id|TxMulticastOctets
suffix:semicolon
DECL|member|TxDeferredTransmissions
id|u16
id|TxDeferredTransmissions
suffix:semicolon
DECL|member|TxSingleRetryFrames
id|u16
id|TxSingleRetryFrames
suffix:semicolon
DECL|member|TxMultipleRetryFrames
id|u16
id|TxMultipleRetryFrames
suffix:semicolon
DECL|member|TxRetryLimitExceeded
id|u16
id|TxRetryLimitExceeded
suffix:semicolon
DECL|member|TxDiscards
id|u16
id|TxDiscards
suffix:semicolon
DECL|member|RxUnicastFrames
id|u16
id|RxUnicastFrames
suffix:semicolon
DECL|member|RxMulticastFrames
id|u16
id|RxMulticastFrames
suffix:semicolon
DECL|member|RxFragments
id|u16
id|RxFragments
suffix:semicolon
DECL|member|RxUnicastOctets
id|u16
id|RxUnicastOctets
suffix:semicolon
DECL|member|RxMulticastOctets
id|u16
id|RxMulticastOctets
suffix:semicolon
DECL|member|RxFCSErrors
id|u16
id|RxFCSErrors
suffix:semicolon
DECL|member|RxDiscards_NoBuffer
id|u16
id|RxDiscards_NoBuffer
suffix:semicolon
DECL|member|TxDiscardsWrongSA
id|u16
id|TxDiscardsWrongSA
suffix:semicolon
DECL|member|RxWEPUndecryptable
id|u16
id|RxWEPUndecryptable
suffix:semicolon
DECL|member|RxMsgInMsgFragments
id|u16
id|RxMsgInMsgFragments
suffix:semicolon
DECL|member|RxMsgInBadMsgFragments
id|u16
id|RxMsgInBadMsgFragments
suffix:semicolon
multiline_comment|/* Those last are probably not available in very old firmwares */
DECL|member|RxDiscards_WEPICVError
id|u16
id|RxDiscards_WEPICVError
suffix:semicolon
DECL|member|RxDiscards_WEPExcluded
id|u16
id|RxDiscards_WEPExcluded
suffix:semicolon
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
multiline_comment|/* Grabbed from wlan-ng - Thanks Mark... - Jean II&n; * This is the result of a scan inquiry command */
multiline_comment|/* Structure describing info about an Access Point */
DECL|struct|prism2_scan_apinfo
r_struct
id|prism2_scan_apinfo
(brace
DECL|member|channel
id|u16
id|channel
suffix:semicolon
multiline_comment|/* Channel where the AP sits */
DECL|member|noise
id|u16
id|noise
suffix:semicolon
multiline_comment|/* Noise level */
DECL|member|level
id|u16
id|level
suffix:semicolon
multiline_comment|/* Signal level */
DECL|member|bssid
id|u8
id|bssid
(braket
id|ETH_ALEN
)braket
suffix:semicolon
multiline_comment|/* MAC address of the Access Point */
DECL|member|beacon_interv
id|u16
id|beacon_interv
suffix:semicolon
multiline_comment|/* Beacon interval */
DECL|member|capabilities
id|u16
id|capabilities
suffix:semicolon
multiline_comment|/* Capabilities */
DECL|member|essid_len
id|u16
id|essid_len
suffix:semicolon
multiline_comment|/* ESSID length */
DECL|member|essid
id|u8
id|essid
(braket
l_int|32
)braket
suffix:semicolon
multiline_comment|/* ESSID of the network */
DECL|member|rates
id|u8
id|rates
(braket
l_int|10
)braket
suffix:semicolon
multiline_comment|/* Bit rate supported */
DECL|member|proberesp_rate
id|u16
id|proberesp_rate
suffix:semicolon
multiline_comment|/* Data rate of the response frame */
DECL|member|atim
id|u16
id|atim
suffix:semicolon
multiline_comment|/* ATIM window time, Kus (hostscan only) */
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
multiline_comment|/* Same stuff for the Lucent/Agere card.&n; * Thanks to h1kari &lt;h1kari AT dachb0den.com&gt; - Jean II */
DECL|struct|agere_scan_apinfo
r_struct
id|agere_scan_apinfo
(brace
DECL|member|channel
id|u16
id|channel
suffix:semicolon
multiline_comment|/* Channel where the AP sits */
DECL|member|noise
id|u16
id|noise
suffix:semicolon
multiline_comment|/* Noise level */
DECL|member|level
id|u16
id|level
suffix:semicolon
multiline_comment|/* Signal level */
DECL|member|bssid
id|u8
id|bssid
(braket
id|ETH_ALEN
)braket
suffix:semicolon
multiline_comment|/* MAC address of the Access Point */
DECL|member|beacon_interv
id|u16
id|beacon_interv
suffix:semicolon
multiline_comment|/* Beacon interval */
DECL|member|capabilities
id|u16
id|capabilities
suffix:semicolon
multiline_comment|/* Capabilities */
multiline_comment|/* bits: 0-ess, 1-ibss, 4-privacy [wep] */
DECL|member|essid_len
id|u16
id|essid_len
suffix:semicolon
multiline_comment|/* ESSID length */
DECL|member|essid
id|u8
id|essid
(braket
l_int|32
)braket
suffix:semicolon
multiline_comment|/* ESSID of the network */
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
multiline_comment|/* Moustafa: Scan structure for Symbol cards */
DECL|struct|symbol_scan_apinfo
r_struct
id|symbol_scan_apinfo
(brace
DECL|member|channel
id|u8
id|channel
suffix:semicolon
multiline_comment|/* Channel where the AP sits */
DECL|member|unknown1
id|u8
id|unknown1
suffix:semicolon
multiline_comment|/* 8 in 2.9x and 3.9x f/w, 0 otherwise */
DECL|member|noise
id|u16
id|noise
suffix:semicolon
multiline_comment|/* Noise level */
DECL|member|level
id|u16
id|level
suffix:semicolon
multiline_comment|/* Signal level */
DECL|member|bssid
id|u8
id|bssid
(braket
id|ETH_ALEN
)braket
suffix:semicolon
multiline_comment|/* MAC address of the Access Point */
DECL|member|beacon_interv
id|u16
id|beacon_interv
suffix:semicolon
multiline_comment|/* Beacon interval */
DECL|member|capabilities
id|u16
id|capabilities
suffix:semicolon
multiline_comment|/* Capabilities */
multiline_comment|/* bits: 0-ess, 1-ibss, 4-privacy [wep] */
DECL|member|essid_len
id|u16
id|essid_len
suffix:semicolon
multiline_comment|/* ESSID length */
DECL|member|essid
id|u8
id|essid
(braket
l_int|32
)braket
suffix:semicolon
multiline_comment|/* ESSID of the network */
DECL|member|rates
id|u16
id|rates
(braket
l_int|5
)braket
suffix:semicolon
multiline_comment|/* Bit rate supported */
DECL|member|basic_rates
id|u16
id|basic_rates
suffix:semicolon
multiline_comment|/* Basic rates bitmask */
DECL|member|unknown2
id|u8
id|unknown2
(braket
l_int|6
)braket
suffix:semicolon
multiline_comment|/* Always FF:FF:FF:FF:00:00 */
DECL|member|unknown3
id|u8
id|unknown3
(braket
l_int|8
)braket
suffix:semicolon
multiline_comment|/* Always 0, appeared in f/w 3.91-68 */
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
DECL|union|hermes_scan_info
r_union
id|hermes_scan_info
(brace
DECL|member|a
r_struct
id|agere_scan_apinfo
id|a
suffix:semicolon
DECL|member|p
r_struct
id|prism2_scan_apinfo
id|p
suffix:semicolon
DECL|member|s
r_struct
id|symbol_scan_apinfo
id|s
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|HERMES_LINKSTATUS_NOT_CONNECTED
mdefine_line|#define HERMES_LINKSTATUS_NOT_CONNECTED   (0x0000)  
DECL|macro|HERMES_LINKSTATUS_CONNECTED
mdefine_line|#define HERMES_LINKSTATUS_CONNECTED       (0x0001)
DECL|macro|HERMES_LINKSTATUS_DISCONNECTED
mdefine_line|#define HERMES_LINKSTATUS_DISCONNECTED    (0x0002)
DECL|macro|HERMES_LINKSTATUS_AP_CHANGE
mdefine_line|#define HERMES_LINKSTATUS_AP_CHANGE       (0x0003)
DECL|macro|HERMES_LINKSTATUS_AP_OUT_OF_RANGE
mdefine_line|#define HERMES_LINKSTATUS_AP_OUT_OF_RANGE (0x0004)
DECL|macro|HERMES_LINKSTATUS_AP_IN_RANGE
mdefine_line|#define HERMES_LINKSTATUS_AP_IN_RANGE     (0x0005)
DECL|macro|HERMES_LINKSTATUS_ASSOC_FAILED
mdefine_line|#define HERMES_LINKSTATUS_ASSOC_FAILED    (0x0006)
DECL|struct|hermes_linkstatus
r_struct
id|hermes_linkstatus
(brace
DECL|member|linkstatus
id|u16
id|linkstatus
suffix:semicolon
multiline_comment|/* Link status */
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
DECL|struct|hermes_response
r_struct
id|hermes_response
(brace
DECL|member|status
DECL|member|resp0
DECL|member|resp1
DECL|member|resp2
id|u16
id|status
comma
id|resp0
comma
id|resp1
comma
id|resp2
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* &quot;ID&quot; structure - used for ESSID and station nickname */
DECL|struct|hermes_idstring
r_struct
id|hermes_idstring
(brace
DECL|member|len
id|u16
id|len
suffix:semicolon
DECL|member|val
id|u16
id|val
(braket
l_int|16
)braket
suffix:semicolon
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
DECL|struct|hermes_multicast
r_struct
id|hermes_multicast
(brace
DECL|member|addr
id|u8
id|addr
(braket
id|HERMES_MAX_MULTICAST
)braket
(braket
id|ETH_ALEN
)braket
suffix:semicolon
)brace
id|__attribute__
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
singleline_comment|// #define HERMES_DEBUG_BUFFER 1
DECL|macro|HERMES_DEBUG_BUFSIZE
mdefine_line|#define HERMES_DEBUG_BUFSIZE 4096
DECL|struct|hermes_debug_entry
r_struct
id|hermes_debug_entry
(brace
DECL|member|bap
r_int
id|bap
suffix:semicolon
DECL|member|id
DECL|member|offset
id|u16
id|id
comma
id|offset
suffix:semicolon
DECL|member|cycles
r_int
id|cycles
suffix:semicolon
)brace
suffix:semicolon
macro_line|#ifdef __KERNEL__
multiline_comment|/* Timeouts */
DECL|macro|HERMES_BAP_BUSY_TIMEOUT
mdefine_line|#define HERMES_BAP_BUSY_TIMEOUT (500) /* In iterations of ~1us */
multiline_comment|/* Basic control structure */
DECL|struct|hermes
r_typedef
r_struct
id|hermes
(brace
DECL|member|iobase
r_int
r_int
id|iobase
suffix:semicolon
DECL|member|io_space
r_int
id|io_space
suffix:semicolon
multiline_comment|/* 1 if we IO-mapped IO, 0 for memory-mapped IO? */
DECL|macro|HERMES_IO
mdefine_line|#define HERMES_IO&t;1
DECL|macro|HERMES_MEM
mdefine_line|#define HERMES_MEM&t;0
DECL|member|reg_spacing
r_int
id|reg_spacing
suffix:semicolon
DECL|macro|HERMES_16BIT_REGSPACING
mdefine_line|#define HERMES_16BIT_REGSPACING&t;0
DECL|macro|HERMES_32BIT_REGSPACING
mdefine_line|#define HERMES_32BIT_REGSPACING&t;1
DECL|member|inten
id|u16
id|inten
suffix:semicolon
multiline_comment|/* Which interrupts should be enabled? */
macro_line|#ifdef HERMES_DEBUG_BUFFER
DECL|member|dbuf
r_struct
id|hermes_debug_entry
id|dbuf
(braket
id|HERMES_DEBUG_BUFSIZE
)braket
suffix:semicolon
DECL|member|dbufp
r_int
r_int
id|dbufp
suffix:semicolon
DECL|member|profile
r_int
r_int
id|profile
(braket
id|HERMES_BAP_BUSY_TIMEOUT
op_plus
l_int|1
)braket
suffix:semicolon
macro_line|#endif
DECL|typedef|hermes_t
)brace
id|hermes_t
suffix:semicolon
multiline_comment|/* Register access convenience macros */
DECL|macro|hermes_read_reg
mdefine_line|#define hermes_read_reg(hw, off) ((hw)-&gt;io_space ? &bslash;&n;&t;inw((hw)-&gt;iobase + ( (off) &lt;&lt; (hw)-&gt;reg_spacing )) : &bslash;&n;&t;readw((hw)-&gt;iobase + ( (off) &lt;&lt; (hw)-&gt;reg_spacing )))
DECL|macro|hermes_write_reg
mdefine_line|#define hermes_write_reg(hw, off, val) do { &bslash;&n;&t;if ((hw)-&gt;io_space) &bslash;&n;&t;&t;outw_p((val), (hw)-&gt;iobase + ((off) &lt;&lt; (hw)-&gt;reg_spacing)); &bslash;&n;&t;else &bslash;&n;&t;&t;writew((val), (hw)-&gt;iobase + ((off) &lt;&lt; (hw)-&gt;reg_spacing)); &bslash;&n;&t;} while (0)
DECL|macro|hermes_read_regn
mdefine_line|#define hermes_read_regn(hw, name) hermes_read_reg((hw), HERMES_##name)
DECL|macro|hermes_write_regn
mdefine_line|#define hermes_write_regn(hw, name, val) hermes_write_reg((hw), HERMES_##name, (val))
multiline_comment|/* Function prototypes */
r_void
id|hermes_struct_init
c_func
(paren
id|hermes_t
op_star
id|hw
comma
id|ulong
id|address
comma
r_int
id|io_space
comma
r_int
id|reg_spacing
)paren
suffix:semicolon
r_int
id|hermes_init
c_func
(paren
id|hermes_t
op_star
id|hw
)paren
suffix:semicolon
r_int
id|hermes_docmd_wait
c_func
(paren
id|hermes_t
op_star
id|hw
comma
id|u16
id|cmd
comma
id|u16
id|parm0
comma
r_struct
id|hermes_response
op_star
id|resp
)paren
suffix:semicolon
r_int
id|hermes_allocate
c_func
(paren
id|hermes_t
op_star
id|hw
comma
id|u16
id|size
comma
id|u16
op_star
id|fid
)paren
suffix:semicolon
r_int
id|hermes_bap_pread
c_func
(paren
id|hermes_t
op_star
id|hw
comma
r_int
id|bap
comma
r_void
op_star
id|buf
comma
r_int
id|len
comma
id|u16
id|id
comma
id|u16
id|offset
)paren
suffix:semicolon
r_int
id|hermes_bap_pwrite
c_func
(paren
id|hermes_t
op_star
id|hw
comma
r_int
id|bap
comma
r_const
r_void
op_star
id|buf
comma
r_int
id|len
comma
id|u16
id|id
comma
id|u16
id|offset
)paren
suffix:semicolon
r_int
id|hermes_read_ltv
c_func
(paren
id|hermes_t
op_star
id|hw
comma
r_int
id|bap
comma
id|u16
id|rid
comma
r_int
id|buflen
comma
id|u16
op_star
id|length
comma
r_void
op_star
id|buf
)paren
suffix:semicolon
r_int
id|hermes_write_ltv
c_func
(paren
id|hermes_t
op_star
id|hw
comma
r_int
id|bap
comma
id|u16
id|rid
comma
id|u16
id|length
comma
r_const
r_void
op_star
id|value
)paren
suffix:semicolon
multiline_comment|/* Inline functions */
DECL|function|hermes_present
r_static
r_inline
r_int
id|hermes_present
c_func
(paren
id|hermes_t
op_star
id|hw
)paren
(brace
r_return
id|hermes_read_regn
c_func
(paren
id|hw
comma
id|SWSUPPORT0
)paren
op_eq
id|HERMES_MAGIC
suffix:semicolon
)brace
DECL|function|hermes_set_irqmask
r_static
r_inline
r_void
id|hermes_set_irqmask
c_func
(paren
id|hermes_t
op_star
id|hw
comma
id|u16
id|events
)paren
(brace
id|hw-&gt;inten
op_assign
id|events
suffix:semicolon
id|hermes_write_regn
c_func
(paren
id|hw
comma
id|INTEN
comma
id|events
)paren
suffix:semicolon
)brace
DECL|function|hermes_enable_port
r_static
r_inline
r_int
id|hermes_enable_port
c_func
(paren
id|hermes_t
op_star
id|hw
comma
r_int
id|port
)paren
(brace
r_return
id|hermes_docmd_wait
c_func
(paren
id|hw
comma
id|HERMES_CMD_ENABLE
op_or
(paren
id|port
op_lshift
l_int|8
)paren
comma
l_int|0
comma
l_int|NULL
)paren
suffix:semicolon
)brace
DECL|function|hermes_disable_port
r_static
r_inline
r_int
id|hermes_disable_port
c_func
(paren
id|hermes_t
op_star
id|hw
comma
r_int
id|port
)paren
(brace
r_return
id|hermes_docmd_wait
c_func
(paren
id|hw
comma
id|HERMES_CMD_DISABLE
op_or
(paren
id|port
op_lshift
l_int|8
)paren
comma
l_int|0
comma
l_int|NULL
)paren
suffix:semicolon
)brace
multiline_comment|/* Initiate an INQUIRE command (tallies or scan).  The result will come as an&n; * information frame in __orinoco_ev_info() */
DECL|function|hermes_inquire
r_static
r_inline
r_int
id|hermes_inquire
c_func
(paren
id|hermes_t
op_star
id|hw
comma
id|u16
id|rid
)paren
(brace
r_return
id|hermes_docmd_wait
c_func
(paren
id|hw
comma
id|HERMES_CMD_INQUIRE
comma
id|rid
comma
l_int|NULL
)paren
suffix:semicolon
)brace
DECL|macro|HERMES_BYTES_TO_RECLEN
mdefine_line|#define HERMES_BYTES_TO_RECLEN(n) ( (((n)+1)/2) + 1 )
DECL|macro|HERMES_RECLEN_TO_BYTES
mdefine_line|#define HERMES_RECLEN_TO_BYTES(n) ( ((n)-1) * 2 )
multiline_comment|/* Note that for the next two, the count is in 16-bit words, not bytes */
DECL|function|hermes_read_words
r_static
r_inline
r_void
id|hermes_read_words
c_func
(paren
r_struct
id|hermes
op_star
id|hw
comma
r_int
id|off
comma
r_void
op_star
id|buf
comma
r_int
id|count
)paren
(brace
id|off
op_assign
id|off
op_lshift
id|hw-&gt;reg_spacing
suffix:semicolon
r_if
c_cond
(paren
id|hw-&gt;io_space
)paren
(brace
id|insw
c_func
(paren
id|hw-&gt;iobase
op_plus
id|off
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
r_else
(brace
r_int
id|i
suffix:semicolon
id|u16
op_star
id|p
suffix:semicolon
multiline_comment|/* This needs to *not* byteswap (like insw()) but&n;&t;&t; * readw() does byteswap hence the conversion.  I hope&n;&t;&t; * gcc is smart enough to fold away the two swaps on&n;&t;&t; * big-endian platforms. */
r_for
c_loop
(paren
id|i
op_assign
l_int|0
comma
id|p
op_assign
id|buf
suffix:semicolon
id|i
OL
id|count
suffix:semicolon
id|i
op_increment
)paren
(brace
op_star
id|p
op_increment
op_assign
id|cpu_to_le16
c_func
(paren
id|readw
c_func
(paren
id|hw-&gt;iobase
op_plus
id|off
)paren
)paren
suffix:semicolon
)brace
)brace
)brace
DECL|function|hermes_write_words
r_static
r_inline
r_void
id|hermes_write_words
c_func
(paren
r_struct
id|hermes
op_star
id|hw
comma
r_int
id|off
comma
r_const
r_void
op_star
id|buf
comma
r_int
id|count
)paren
(brace
id|off
op_assign
id|off
op_lshift
id|hw-&gt;reg_spacing
suffix:semicolon
r_if
c_cond
(paren
id|hw-&gt;io_space
)paren
(brace
id|outsw
c_func
(paren
id|hw-&gt;iobase
op_plus
id|off
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
r_else
(brace
r_int
id|i
suffix:semicolon
r_const
id|u16
op_star
id|p
suffix:semicolon
multiline_comment|/* This needs to *not* byteswap (like outsw()) but&n;&t;&t; * writew() does byteswap hence the conversion.  I&n;&t;&t; * hope gcc is smart enough to fold away the two swaps&n;&t;&t; * on big-endian platforms. */
r_for
c_loop
(paren
id|i
op_assign
l_int|0
comma
id|p
op_assign
id|buf
suffix:semicolon
id|i
OL
id|count
suffix:semicolon
id|i
op_increment
)paren
(brace
id|writew
c_func
(paren
id|le16_to_cpu
c_func
(paren
op_star
id|p
op_increment
)paren
comma
id|hw-&gt;iobase
op_plus
id|off
)paren
suffix:semicolon
)brace
)brace
)brace
DECL|function|hermes_clear_words
r_static
r_inline
r_void
id|hermes_clear_words
c_func
(paren
r_struct
id|hermes
op_star
id|hw
comma
r_int
id|off
comma
r_int
id|count
)paren
(brace
r_int
id|i
suffix:semicolon
id|off
op_assign
id|off
op_lshift
id|hw-&gt;reg_spacing
suffix:semicolon
r_if
c_cond
(paren
id|hw-&gt;io_space
)paren
(brace
r_for
c_loop
(paren
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|count
suffix:semicolon
id|i
op_increment
)paren
id|outw
c_func
(paren
l_int|0
comma
id|hw-&gt;iobase
op_plus
id|off
)paren
suffix:semicolon
)brace
r_else
(brace
r_for
c_loop
(paren
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|count
suffix:semicolon
id|i
op_increment
)paren
id|writew
c_func
(paren
l_int|0
comma
id|hw-&gt;iobase
op_plus
id|off
)paren
suffix:semicolon
)brace
)brace
DECL|macro|HERMES_READ_RECORD
mdefine_line|#define HERMES_READ_RECORD(hw, bap, rid, buf) &bslash;&n;&t;(hermes_read_ltv((hw),(bap),(rid), sizeof(*buf), NULL, (buf)))
DECL|macro|HERMES_WRITE_RECORD
mdefine_line|#define HERMES_WRITE_RECORD(hw, bap, rid, buf) &bslash;&n;&t;(hermes_write_ltv((hw),(bap),(rid),HERMES_BYTES_TO_RECLEN(sizeof(*buf)),(buf)))
DECL|function|hermes_read_wordrec
r_static
r_inline
r_int
id|hermes_read_wordrec
c_func
(paren
id|hermes_t
op_star
id|hw
comma
r_int
id|bap
comma
id|u16
id|rid
comma
id|u16
op_star
id|word
)paren
(brace
id|u16
id|rec
suffix:semicolon
r_int
id|err
suffix:semicolon
id|err
op_assign
id|HERMES_READ_RECORD
c_func
(paren
id|hw
comma
id|bap
comma
id|rid
comma
op_amp
id|rec
)paren
suffix:semicolon
op_star
id|word
op_assign
id|le16_to_cpu
c_func
(paren
id|rec
)paren
suffix:semicolon
r_return
id|err
suffix:semicolon
)brace
DECL|function|hermes_write_wordrec
r_static
r_inline
r_int
id|hermes_write_wordrec
c_func
(paren
id|hermes_t
op_star
id|hw
comma
r_int
id|bap
comma
id|u16
id|rid
comma
id|u16
id|word
)paren
(brace
id|u16
id|rec
op_assign
id|cpu_to_le16
c_func
(paren
id|word
)paren
suffix:semicolon
r_return
id|HERMES_WRITE_RECORD
c_func
(paren
id|hw
comma
id|bap
comma
id|rid
comma
op_amp
id|rec
)paren
suffix:semicolon
)brace
macro_line|#else /* ! __KERNEL__ */
multiline_comment|/* These are provided for the benefit of userspace drivers and testing programs&n;   which use ioperm() or iopl() */
DECL|macro|hermes_read_reg
mdefine_line|#define hermes_read_reg(base, off) (inw((base) + (off)))
DECL|macro|hermes_write_reg
mdefine_line|#define hermes_write_reg(base, off, val) (outw((val), (base) + (off)))
DECL|macro|hermes_read_regn
mdefine_line|#define hermes_read_regn(base, name) (hermes_read_reg((base), HERMES_##name))
DECL|macro|hermes_write_regn
mdefine_line|#define hermes_write_regn(base, name, val) (hermes_write_reg((base), HERMES_##name, (val)))
multiline_comment|/* Note that for the next two, the count is in 16-bit words, not bytes */
DECL|macro|hermes_read_data
mdefine_line|#define hermes_read_data(base, off, buf, count) (insw((base) + (off), (buf), (count)))
DECL|macro|hermes_write_data
mdefine_line|#define hermes_write_data(base, off, buf, count) (outsw((base) + (off), (buf), (count)))
macro_line|#endif /* ! __KERNEL__ */
macro_line|#endif  /* _HERMES_H */
eof
