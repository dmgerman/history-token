multiline_comment|/*  D-Link DL2000-based Gigabit Ethernet Adapter Linux driver */
multiline_comment|/*  &n;    Copyright (c) 2001, 2002 by D-Link Corporation&n;    Written by Edward Peng.&lt;edward_peng@dlink.com.tw&gt;&n;    Created 03-May-2001, base on Linux&squot; sundance.c.&n;&n;    This program is free software; you can redistribute it and/or modify&n;    it under the terms of the GNU General Public License as published by&n;    the Free Software Foundation; either version 2 of the License, or&n;    (at your option) any later version.&n;*/
macro_line|#ifndef __DL2K_H__
DECL|macro|__DL2K_H__
mdefine_line|#define __DL2K_H__
macro_line|#include &lt;linux/module.h&gt;
macro_line|#include &lt;linux/kernel.h&gt;
macro_line|#include &lt;linux/string.h&gt;
macro_line|#include &lt;linux/timer.h&gt;
macro_line|#include &lt;linux/errno.h&gt;
macro_line|#include &lt;linux/ioport.h&gt;
macro_line|#include &lt;linux/slab.h&gt;
macro_line|#include &lt;linux/interrupt.h&gt;
macro_line|#include &lt;linux/pci.h&gt;
macro_line|#include &lt;linux/netdevice.h&gt;
macro_line|#include &lt;linux/etherdevice.h&gt;
macro_line|#include &lt;linux/skbuff.h&gt;
macro_line|#include &lt;linux/init.h&gt;
macro_line|#include &lt;linux/crc32.h&gt;
macro_line|#include &lt;linux/ethtool.h&gt;
macro_line|#include &lt;asm/processor.h&gt;&t;/* Processor type for cache alignment. */
macro_line|#include &lt;asm/bitops.h&gt;
macro_line|#include &lt;asm/io.h&gt;
macro_line|#include &lt;asm/uaccess.h&gt;
macro_line|#include &lt;linux/delay.h&gt;
macro_line|#include &lt;linux/spinlock.h&gt;
macro_line|#include &lt;linux/time.h&gt;
DECL|macro|TX_RING_SIZE
mdefine_line|#define TX_RING_SIZE&t;256
DECL|macro|TX_QUEUE_LEN
mdefine_line|#define TX_QUEUE_LEN&t;(TX_RING_SIZE - 1) /* Limit ring entries actually used.*/
DECL|macro|RX_RING_SIZE
mdefine_line|#define RX_RING_SIZE &t;256
DECL|macro|TX_TOTAL_SIZE
mdefine_line|#define TX_TOTAL_SIZE&t;TX_RING_SIZE*sizeof(struct netdev_desc)
DECL|macro|RX_TOTAL_SIZE
mdefine_line|#define RX_TOTAL_SIZE&t;RX_RING_SIZE*sizeof(struct netdev_desc)
multiline_comment|/* This driver was written to use PCI memory space, however x86-oriented&n;   hardware often uses I/O space accesses. */
macro_line|#ifndef MEM_MAPPING
DECL|macro|readb
macro_line|#undef readb
DECL|macro|readw
macro_line|#undef readw
DECL|macro|readl
macro_line|#undef readl
DECL|macro|writeb
macro_line|#undef writeb
DECL|macro|writew
macro_line|#undef writew
DECL|macro|writel
macro_line|#undef writel
DECL|macro|readb
mdefine_line|#define readb inb
DECL|macro|readw
mdefine_line|#define readw inw
DECL|macro|readl
mdefine_line|#define readl inl
DECL|macro|writeb
mdefine_line|#define writeb outb
DECL|macro|writew
mdefine_line|#define writew outw
DECL|macro|writel
mdefine_line|#define writel outl
macro_line|#endif
multiline_comment|/* Offsets to the device registers.&n;   Unlike software-only systems, device drivers interact with complex hardware.&n;   It&squot;s not useful to define symbolic names for every register bit in the&n;   device.  The name can only partially document the semantics and make&n;   the driver longer and more difficult to read.&n;   In general, only the important configuration values or bits changed&n;   multiple times should be defined symbolically.&n;*/
DECL|enum|dl2x_offsets
r_enum
id|dl2x_offsets
(brace
multiline_comment|/* I/O register offsets */
DECL|enumerator|DMACtrl
id|DMACtrl
op_assign
l_int|0x00
comma
DECL|enumerator|RxDMAStatus
id|RxDMAStatus
op_assign
l_int|0x08
comma
DECL|enumerator|TFDListPtr0
id|TFDListPtr0
op_assign
l_int|0x10
comma
DECL|enumerator|TFDListPtr1
id|TFDListPtr1
op_assign
l_int|0x14
comma
DECL|enumerator|TxDMABurstThresh
id|TxDMABurstThresh
op_assign
l_int|0x18
comma
DECL|enumerator|TxDMAUrgentThresh
id|TxDMAUrgentThresh
op_assign
l_int|0x19
comma
DECL|enumerator|TxDMAPollPeriod
id|TxDMAPollPeriod
op_assign
l_int|0x1a
comma
DECL|enumerator|RFDListPtr0
id|RFDListPtr0
op_assign
l_int|0x1c
comma
DECL|enumerator|RFDListPtr1
id|RFDListPtr1
op_assign
l_int|0x20
comma
DECL|enumerator|RxDMABurstThresh
id|RxDMABurstThresh
op_assign
l_int|0x24
comma
DECL|enumerator|RxDMAUrgentThresh
id|RxDMAUrgentThresh
op_assign
l_int|0x25
comma
DECL|enumerator|RxDMAPollPeriod
id|RxDMAPollPeriod
op_assign
l_int|0x26
comma
DECL|enumerator|RxDMAIntCtrl
id|RxDMAIntCtrl
op_assign
l_int|0x28
comma
DECL|enumerator|DebugCtrl
id|DebugCtrl
op_assign
l_int|0x2c
comma
DECL|enumerator|ASICCtrl
id|ASICCtrl
op_assign
l_int|0x30
comma
DECL|enumerator|FifoCtrl
id|FifoCtrl
op_assign
l_int|0x38
comma
DECL|enumerator|RxEarlyThresh
id|RxEarlyThresh
op_assign
l_int|0x3a
comma
DECL|enumerator|FlowOffThresh
id|FlowOffThresh
op_assign
l_int|0x3c
comma
DECL|enumerator|FlowOnThresh
id|FlowOnThresh
op_assign
l_int|0x3e
comma
DECL|enumerator|TxStartThresh
id|TxStartThresh
op_assign
l_int|0x44
comma
DECL|enumerator|EepromData
id|EepromData
op_assign
l_int|0x48
comma
DECL|enumerator|EepromCtrl
id|EepromCtrl
op_assign
l_int|0x4a
comma
DECL|enumerator|ExpromAddr
id|ExpromAddr
op_assign
l_int|0x4c
comma
DECL|enumerator|Exprodata
id|Exprodata
op_assign
l_int|0x50
comma
DECL|enumerator|WakeEvent
id|WakeEvent
op_assign
l_int|0x51
comma
DECL|enumerator|CountDown
id|CountDown
op_assign
l_int|0x54
comma
DECL|enumerator|IntStatusAck
id|IntStatusAck
op_assign
l_int|0x5a
comma
DECL|enumerator|IntEnable
id|IntEnable
op_assign
l_int|0x5c
comma
DECL|enumerator|IntStatus
id|IntStatus
op_assign
l_int|0x5e
comma
DECL|enumerator|TxStatus
id|TxStatus
op_assign
l_int|0x60
comma
DECL|enumerator|MACCtrl
id|MACCtrl
op_assign
l_int|0x6c
comma
DECL|enumerator|VLANTag
id|VLANTag
op_assign
l_int|0x70
comma
DECL|enumerator|PhyCtrl
id|PhyCtrl
op_assign
l_int|0x76
comma
DECL|enumerator|StationAddr0
id|StationAddr0
op_assign
l_int|0x78
comma
DECL|enumerator|StationAddr1
id|StationAddr1
op_assign
l_int|0x7a
comma
DECL|enumerator|StationAddr2
id|StationAddr2
op_assign
l_int|0x7c
comma
DECL|enumerator|VLANId
id|VLANId
op_assign
l_int|0x80
comma
DECL|enumerator|MaxFrameSize
id|MaxFrameSize
op_assign
l_int|0x86
comma
DECL|enumerator|ReceiveMode
id|ReceiveMode
op_assign
l_int|0x88
comma
DECL|enumerator|HashTable0
id|HashTable0
op_assign
l_int|0x8c
comma
DECL|enumerator|HashTable1
id|HashTable1
op_assign
l_int|0x90
comma
DECL|enumerator|RmonStatMask
id|RmonStatMask
op_assign
l_int|0x98
comma
DECL|enumerator|StatMask
id|StatMask
op_assign
l_int|0x9c
comma
DECL|enumerator|RxJumboFrames
id|RxJumboFrames
op_assign
l_int|0xbc
comma
DECL|enumerator|TCPCheckSumErrors
id|TCPCheckSumErrors
op_assign
l_int|0xc0
comma
DECL|enumerator|IPCheckSumErrors
id|IPCheckSumErrors
op_assign
l_int|0xc2
comma
DECL|enumerator|UDPCheckSumErrors
id|UDPCheckSumErrors
op_assign
l_int|0xc4
comma
DECL|enumerator|TxJumboFrames
id|TxJumboFrames
op_assign
l_int|0xf4
comma
multiline_comment|/* Ethernet MIB statistic register offsets */
DECL|enumerator|OctetRcvOk
id|OctetRcvOk
op_assign
l_int|0xa8
comma
DECL|enumerator|McstOctetRcvOk
id|McstOctetRcvOk
op_assign
l_int|0xac
comma
DECL|enumerator|BcstOctetRcvOk
id|BcstOctetRcvOk
op_assign
l_int|0xb0
comma
DECL|enumerator|FramesRcvOk
id|FramesRcvOk
op_assign
l_int|0xb4
comma
DECL|enumerator|McstFramesRcvdOk
id|McstFramesRcvdOk
op_assign
l_int|0xb8
comma
DECL|enumerator|BcstFramesRcvdOk
id|BcstFramesRcvdOk
op_assign
l_int|0xbe
comma
DECL|enumerator|MacControlFramesRcvd
id|MacControlFramesRcvd
op_assign
l_int|0xc6
comma
DECL|enumerator|FrameTooLongErrors
id|FrameTooLongErrors
op_assign
l_int|0xc8
comma
DECL|enumerator|InRangeLengthErrors
id|InRangeLengthErrors
op_assign
l_int|0xca
comma
DECL|enumerator|FramesCheckSeqErrors
id|FramesCheckSeqErrors
op_assign
l_int|0xcc
comma
DECL|enumerator|FramesLostRxErrors
id|FramesLostRxErrors
op_assign
l_int|0xce
comma
DECL|enumerator|OctetXmtOk
id|OctetXmtOk
op_assign
l_int|0xd0
comma
DECL|enumerator|McstOctetXmtOk
id|McstOctetXmtOk
op_assign
l_int|0xd4
comma
DECL|enumerator|BcstOctetXmtOk
id|BcstOctetXmtOk
op_assign
l_int|0xd8
comma
DECL|enumerator|FramesXmtOk
id|FramesXmtOk
op_assign
l_int|0xdc
comma
DECL|enumerator|McstFramesXmtdOk
id|McstFramesXmtdOk
op_assign
l_int|0xe0
comma
DECL|enumerator|FramesWDeferredXmt
id|FramesWDeferredXmt
op_assign
l_int|0xe4
comma
DECL|enumerator|LateCollisions
id|LateCollisions
op_assign
l_int|0xe8
comma
DECL|enumerator|MultiColFrames
id|MultiColFrames
op_assign
l_int|0xec
comma
DECL|enumerator|SingleColFrames
id|SingleColFrames
op_assign
l_int|0xf0
comma
DECL|enumerator|BcstFramesXmtdOk
id|BcstFramesXmtdOk
op_assign
l_int|0xf6
comma
DECL|enumerator|CarrierSenseErrors
id|CarrierSenseErrors
op_assign
l_int|0xf8
comma
DECL|enumerator|MacControlFramesXmtd
id|MacControlFramesXmtd
op_assign
l_int|0xfa
comma
DECL|enumerator|FramesAbortXSColls
id|FramesAbortXSColls
op_assign
l_int|0xfc
comma
DECL|enumerator|FramesWEXDeferal
id|FramesWEXDeferal
op_assign
l_int|0xfe
comma
multiline_comment|/* RMON statistic register offsets */
DECL|enumerator|EtherStatsCollisions
id|EtherStatsCollisions
op_assign
l_int|0x100
comma
DECL|enumerator|EtherStatsOctetsTransmit
id|EtherStatsOctetsTransmit
op_assign
l_int|0x104
comma
DECL|enumerator|EtherStatsPktsTransmit
id|EtherStatsPktsTransmit
op_assign
l_int|0x108
comma
DECL|enumerator|EtherStatsPkts64OctetTransmit
id|EtherStatsPkts64OctetTransmit
op_assign
l_int|0x10c
comma
DECL|enumerator|EtherStats65to127OctetsTransmit
id|EtherStats65to127OctetsTransmit
op_assign
l_int|0x110
comma
DECL|enumerator|EtherStatsPkts128to255OctetsTransmit
id|EtherStatsPkts128to255OctetsTransmit
op_assign
l_int|0x114
comma
DECL|enumerator|EtherStatsPkts256to511OctetsTransmit
id|EtherStatsPkts256to511OctetsTransmit
op_assign
l_int|0x118
comma
DECL|enumerator|EtherStatsPkts512to1023OctetsTransmit
id|EtherStatsPkts512to1023OctetsTransmit
op_assign
l_int|0x11c
comma
DECL|enumerator|EtherStatsPkts1024to1518OctetsTransmit
id|EtherStatsPkts1024to1518OctetsTransmit
op_assign
l_int|0x120
comma
DECL|enumerator|EtherStatsCRCAlignErrors
id|EtherStatsCRCAlignErrors
op_assign
l_int|0x124
comma
DECL|enumerator|EtherStatsUndersizePkts
id|EtherStatsUndersizePkts
op_assign
l_int|0x128
comma
DECL|enumerator|EtherStatsFragments
id|EtherStatsFragments
op_assign
l_int|0x12c
comma
DECL|enumerator|EtherStatsJabbers
id|EtherStatsJabbers
op_assign
l_int|0x130
comma
DECL|enumerator|EtherStatsOctets
id|EtherStatsOctets
op_assign
l_int|0x134
comma
DECL|enumerator|EtherStatsPkts
id|EtherStatsPkts
op_assign
l_int|0x138
comma
DECL|enumerator|EtherStats64Octets
id|EtherStats64Octets
op_assign
l_int|0x13c
comma
DECL|enumerator|EtherStatsPkts65to127Octets
id|EtherStatsPkts65to127Octets
op_assign
l_int|0x140
comma
DECL|enumerator|EtherStatsPkts128to255Octets
id|EtherStatsPkts128to255Octets
op_assign
l_int|0x144
comma
DECL|enumerator|EtherStatsPkts256to511Octets
id|EtherStatsPkts256to511Octets
op_assign
l_int|0x148
comma
DECL|enumerator|EtherStatsPkts512to1023Octets
id|EtherStatsPkts512to1023Octets
op_assign
l_int|0x14c
comma
DECL|enumerator|EtherStatsPkts1024to1518Octets
id|EtherStatsPkts1024to1518Octets
op_assign
l_int|0x150
comma
)brace
suffix:semicolon
multiline_comment|/* Bits in the interrupt status/mask registers. */
DECL|enum|IntStatus_bits
r_enum
id|IntStatus_bits
(brace
DECL|enumerator|InterruptStatus
id|InterruptStatus
op_assign
l_int|0x0001
comma
DECL|enumerator|HostError
id|HostError
op_assign
l_int|0x0002
comma
DECL|enumerator|MACCtrlFrame
id|MACCtrlFrame
op_assign
l_int|0x0008
comma
DECL|enumerator|TxComplete
id|TxComplete
op_assign
l_int|0x0004
comma
DECL|enumerator|RxComplete
id|RxComplete
op_assign
l_int|0x0010
comma
DECL|enumerator|RxEarly
id|RxEarly
op_assign
l_int|0x0020
comma
DECL|enumerator|IntRequested
id|IntRequested
op_assign
l_int|0x0040
comma
DECL|enumerator|UpdateStats
id|UpdateStats
op_assign
l_int|0x0080
comma
DECL|enumerator|LinkEvent
id|LinkEvent
op_assign
l_int|0x0100
comma
DECL|enumerator|TxDMAComplete
id|TxDMAComplete
op_assign
l_int|0x0200
comma
DECL|enumerator|RxDMAComplete
id|RxDMAComplete
op_assign
l_int|0x0400
comma
DECL|enumerator|RFDListEnd
id|RFDListEnd
op_assign
l_int|0x0800
comma
DECL|enumerator|RxDMAPriority
id|RxDMAPriority
op_assign
l_int|0x1000
comma
)brace
suffix:semicolon
multiline_comment|/* Bits in the ReceiveMode register. */
DECL|enum|ReceiveMode_bits
r_enum
id|ReceiveMode_bits
(brace
DECL|enumerator|ReceiveUnicast
id|ReceiveUnicast
op_assign
l_int|0x0001
comma
DECL|enumerator|ReceiveMulticast
id|ReceiveMulticast
op_assign
l_int|0x0002
comma
DECL|enumerator|ReceiveBroadcast
id|ReceiveBroadcast
op_assign
l_int|0x0004
comma
DECL|enumerator|ReceiveAllFrames
id|ReceiveAllFrames
op_assign
l_int|0x0008
comma
DECL|enumerator|ReceiveMulticastHash
id|ReceiveMulticastHash
op_assign
l_int|0x0010
comma
DECL|enumerator|ReceiveIPMulticast
id|ReceiveIPMulticast
op_assign
l_int|0x0020
comma
DECL|enumerator|ReceiveVLANMatch
id|ReceiveVLANMatch
op_assign
l_int|0x0100
comma
DECL|enumerator|ReceiveVLANHash
id|ReceiveVLANHash
op_assign
l_int|0x0200
comma
)brace
suffix:semicolon
multiline_comment|/* Bits in MACCtrl. */
DECL|enum|MACCtrl_bits
r_enum
id|MACCtrl_bits
(brace
DECL|enumerator|DuplexSelect
id|DuplexSelect
op_assign
l_int|0x20
comma
DECL|enumerator|TxFlowControlEnable
id|TxFlowControlEnable
op_assign
l_int|0x80
comma
DECL|enumerator|RxFlowControlEnable
id|RxFlowControlEnable
op_assign
l_int|0x0100
comma
DECL|enumerator|RcvFCS
id|RcvFCS
op_assign
l_int|0x200
comma
DECL|enumerator|AutoVLANtagging
id|AutoVLANtagging
op_assign
l_int|0x1000
comma
DECL|enumerator|AutoVLANuntagging
id|AutoVLANuntagging
op_assign
l_int|0x2000
comma
DECL|enumerator|StatsEnable
id|StatsEnable
op_assign
l_int|0x00200000
comma
DECL|enumerator|StatsDisable
id|StatsDisable
op_assign
l_int|0x00400000
comma
DECL|enumerator|StatsEnabled
id|StatsEnabled
op_assign
l_int|0x00800000
comma
DECL|enumerator|TxEnable
id|TxEnable
op_assign
l_int|0x01000000
comma
DECL|enumerator|TxDisable
id|TxDisable
op_assign
l_int|0x02000000
comma
DECL|enumerator|TxEnabled
id|TxEnabled
op_assign
l_int|0x04000000
comma
DECL|enumerator|RxEnable
id|RxEnable
op_assign
l_int|0x08000000
comma
DECL|enumerator|RxDisable
id|RxDisable
op_assign
l_int|0x10000000
comma
DECL|enumerator|RxEnabled
id|RxEnabled
op_assign
l_int|0x20000000
comma
)brace
suffix:semicolon
DECL|enum|ASICCtrl_LoWord_bits
r_enum
id|ASICCtrl_LoWord_bits
(brace
DECL|enumerator|PhyMedia
id|PhyMedia
op_assign
l_int|0x0080
comma
)brace
suffix:semicolon
DECL|enum|ASICCtrl_HiWord_bits
r_enum
id|ASICCtrl_HiWord_bits
(brace
DECL|enumerator|GlobalReset
id|GlobalReset
op_assign
l_int|0x0001
comma
DECL|enumerator|RxReset
id|RxReset
op_assign
l_int|0x0002
comma
DECL|enumerator|TxReset
id|TxReset
op_assign
l_int|0x0004
comma
DECL|enumerator|DMAReset
id|DMAReset
op_assign
l_int|0x0008
comma
DECL|enumerator|FIFOReset
id|FIFOReset
op_assign
l_int|0x0010
comma
DECL|enumerator|NetworkReset
id|NetworkReset
op_assign
l_int|0x0020
comma
DECL|enumerator|HostReset
id|HostReset
op_assign
l_int|0x0040
comma
DECL|enumerator|ResetBusy
id|ResetBusy
op_assign
l_int|0x0400
comma
)brace
suffix:semicolon
multiline_comment|/* Transmit Frame Control bits */
DECL|enum|TFC_bits
r_enum
id|TFC_bits
(brace
DECL|enumerator|DwordAlign
id|DwordAlign
op_assign
l_int|0x00000000
comma
DECL|enumerator|WordAlignDisable
id|WordAlignDisable
op_assign
l_int|0x00030000
comma
DECL|enumerator|WordAlign
id|WordAlign
op_assign
l_int|0x00020000
comma
DECL|enumerator|TCPChecksumEnable
id|TCPChecksumEnable
op_assign
l_int|0x00040000
comma
DECL|enumerator|UDPChecksumEnable
id|UDPChecksumEnable
op_assign
l_int|0x00080000
comma
DECL|enumerator|IPChecksumEnable
id|IPChecksumEnable
op_assign
l_int|0x00100000
comma
DECL|enumerator|FCSAppendDisable
id|FCSAppendDisable
op_assign
l_int|0x00200000
comma
DECL|enumerator|TxIndicate
id|TxIndicate
op_assign
l_int|0x00400000
comma
DECL|enumerator|TxDMAIndicate
id|TxDMAIndicate
op_assign
l_int|0x00800000
comma
DECL|enumerator|FragCountShift
id|FragCountShift
op_assign
l_int|24
comma
DECL|enumerator|VLANTagInsert
id|VLANTagInsert
op_assign
l_int|0x0000000010000000
comma
DECL|enumerator|TFDDone
id|TFDDone
op_assign
l_int|0x80000000
comma
DECL|enumerator|VIDShift
id|VIDShift
op_assign
l_int|32
comma
DECL|enumerator|UsePriorityShift
id|UsePriorityShift
op_assign
l_int|48
comma
)brace
suffix:semicolon
multiline_comment|/* Receive Frames Status bits */
DECL|enum|RFS_bits
r_enum
id|RFS_bits
(brace
DECL|enumerator|RxFIFOOverrun
id|RxFIFOOverrun
op_assign
l_int|0x00010000
comma
DECL|enumerator|RxRuntFrame
id|RxRuntFrame
op_assign
l_int|0x00020000
comma
DECL|enumerator|RxAlignmentError
id|RxAlignmentError
op_assign
l_int|0x00040000
comma
DECL|enumerator|RxFCSError
id|RxFCSError
op_assign
l_int|0x00080000
comma
DECL|enumerator|RxOverSizedFrame
id|RxOverSizedFrame
op_assign
l_int|0x00100000
comma
DECL|enumerator|RxLengthError
id|RxLengthError
op_assign
l_int|0x00200000
comma
DECL|enumerator|VLANDetected
id|VLANDetected
op_assign
l_int|0x00400000
comma
DECL|enumerator|TCPDetected
id|TCPDetected
op_assign
l_int|0x00800000
comma
DECL|enumerator|TCPError
id|TCPError
op_assign
l_int|0x01000000
comma
DECL|enumerator|UDPDetected
id|UDPDetected
op_assign
l_int|0x02000000
comma
DECL|enumerator|UDPError
id|UDPError
op_assign
l_int|0x04000000
comma
DECL|enumerator|IPDetected
id|IPDetected
op_assign
l_int|0x08000000
comma
DECL|enumerator|IPError
id|IPError
op_assign
l_int|0x10000000
comma
DECL|enumerator|FrameStart
id|FrameStart
op_assign
l_int|0x20000000
comma
DECL|enumerator|FrameEnd
id|FrameEnd
op_assign
l_int|0x40000000
comma
DECL|enumerator|RFDDone
id|RFDDone
op_assign
l_int|0x80000000
comma
DECL|enumerator|TCIShift
id|TCIShift
op_assign
l_int|32
comma
DECL|enumerator|RFS_Errors
id|RFS_Errors
op_assign
l_int|0x003f0000
comma
)brace
suffix:semicolon
DECL|macro|MII_RESET_TIME_OUT
mdefine_line|#define MII_RESET_TIME_OUT&t;&t;10000
multiline_comment|/* MII register */
DECL|enum|_mii_reg
r_enum
id|_mii_reg
(brace
DECL|enumerator|MII_BMCR
id|MII_BMCR
op_assign
l_int|0
comma
DECL|enumerator|MII_BMSR
id|MII_BMSR
op_assign
l_int|1
comma
DECL|enumerator|MII_PHY_ID1
id|MII_PHY_ID1
op_assign
l_int|2
comma
DECL|enumerator|MII_PHY_ID2
id|MII_PHY_ID2
op_assign
l_int|3
comma
DECL|enumerator|MII_ANAR
id|MII_ANAR
op_assign
l_int|4
comma
DECL|enumerator|MII_ANLPAR
id|MII_ANLPAR
op_assign
l_int|5
comma
DECL|enumerator|MII_ANER
id|MII_ANER
op_assign
l_int|6
comma
DECL|enumerator|MII_ANNPT
id|MII_ANNPT
op_assign
l_int|7
comma
DECL|enumerator|MII_ANLPRNP
id|MII_ANLPRNP
op_assign
l_int|8
comma
DECL|enumerator|MII_MSCR
id|MII_MSCR
op_assign
l_int|9
comma
DECL|enumerator|MII_MSSR
id|MII_MSSR
op_assign
l_int|10
comma
DECL|enumerator|MII_ESR
id|MII_ESR
op_assign
l_int|15
comma
DECL|enumerator|MII_PHY_SCR
id|MII_PHY_SCR
op_assign
l_int|16
comma
)brace
suffix:semicolon
multiline_comment|/* PCS register */
DECL|enum|_pcs_reg
r_enum
id|_pcs_reg
(brace
DECL|enumerator|PCS_BMCR
id|PCS_BMCR
op_assign
l_int|0
comma
DECL|enumerator|PCS_BMSR
id|PCS_BMSR
op_assign
l_int|1
comma
DECL|enumerator|PCS_ANAR
id|PCS_ANAR
op_assign
l_int|4
comma
DECL|enumerator|PCS_ANLPAR
id|PCS_ANLPAR
op_assign
l_int|5
comma
DECL|enumerator|PCS_ANER
id|PCS_ANER
op_assign
l_int|6
comma
DECL|enumerator|PCS_ANNPT
id|PCS_ANNPT
op_assign
l_int|7
comma
DECL|enumerator|PCS_ANLPRNP
id|PCS_ANLPRNP
op_assign
l_int|8
comma
DECL|enumerator|PCS_ESR
id|PCS_ESR
op_assign
l_int|15
comma
)brace
suffix:semicolon
multiline_comment|/* Basic Mode Control Register */
DECL|union|t_MII_BMCR
r_typedef
r_union
id|t_MII_BMCR
(brace
DECL|member|image
id|u16
id|image
suffix:semicolon
r_struct
(brace
DECL|member|_bit_5_0
id|u16
id|_bit_5_0
suffix:colon
l_int|6
suffix:semicolon
singleline_comment|// bit 5:0
DECL|member|speed1000
id|u16
id|speed1000
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 6
DECL|member|col_test_enable
id|u16
id|col_test_enable
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 7
DECL|member|duplex_mode
id|u16
id|duplex_mode
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 8
DECL|member|restart_an
id|u16
id|restart_an
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 9
DECL|member|isolate
id|u16
id|isolate
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 10
DECL|member|power_down
id|u16
id|power_down
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 11
DECL|member|an_enable
id|u16
id|an_enable
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 12
DECL|member|speed100
id|u16
id|speed100
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 13
DECL|member|loopback
id|u16
id|loopback
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 14
DECL|member|reset
id|u16
id|reset
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 15
DECL|member|bits
)brace
id|bits
suffix:semicolon
DECL|typedef|BMCR_t
DECL|typedef|PBMCR_t
)brace
id|BMCR_t
comma
op_star
id|PBMCR_t
suffix:semicolon
DECL|enum|_mii_bmcr
r_enum
id|_mii_bmcr
(brace
DECL|enumerator|MII_BMCR_RESET
id|MII_BMCR_RESET
op_assign
l_int|0x8000
comma
DECL|enumerator|MII_BMCR_LOOP_BACK
id|MII_BMCR_LOOP_BACK
op_assign
l_int|0x4000
comma
DECL|enumerator|MII_BMCR_SPEED_LSB
id|MII_BMCR_SPEED_LSB
op_assign
l_int|0x2000
comma
DECL|enumerator|MII_BMCR_AN_ENABLE
id|MII_BMCR_AN_ENABLE
op_assign
l_int|0x1000
comma
DECL|enumerator|MII_BMCR_POWER_DOWN
id|MII_BMCR_POWER_DOWN
op_assign
l_int|0x0800
comma
DECL|enumerator|MII_BMCR_ISOLATE
id|MII_BMCR_ISOLATE
op_assign
l_int|0x0400
comma
DECL|enumerator|MII_BMCR_RESTART_AN
id|MII_BMCR_RESTART_AN
op_assign
l_int|0x0200
comma
DECL|enumerator|MII_BMCR_DUPLEX_MODE
id|MII_BMCR_DUPLEX_MODE
op_assign
l_int|0x0100
comma
DECL|enumerator|MII_BMCR_COL_TEST
id|MII_BMCR_COL_TEST
op_assign
l_int|0x0080
comma
DECL|enumerator|MII_BMCR_SPEED_MSB
id|MII_BMCR_SPEED_MSB
op_assign
l_int|0x0040
comma
DECL|enumerator|MII_BMCR_SPEED_RESERVED
id|MII_BMCR_SPEED_RESERVED
op_assign
l_int|0x003f
comma
DECL|enumerator|MII_BMCR_SPEED_10
id|MII_BMCR_SPEED_10
op_assign
l_int|0
comma
DECL|enumerator|MII_BMCR_SPEED_100
id|MII_BMCR_SPEED_100
op_assign
id|MII_BMCR_SPEED_LSB
comma
DECL|enumerator|MII_BMCR_SPEED_1000
id|MII_BMCR_SPEED_1000
op_assign
id|MII_BMCR_SPEED_MSB
comma
)brace
suffix:semicolon
multiline_comment|/* Basic Mode Status Register */
DECL|union|t_MII_BMSR
r_typedef
r_union
id|t_MII_BMSR
(brace
DECL|member|image
id|u16
id|image
suffix:semicolon
r_struct
(brace
DECL|member|ext_capability
id|u16
id|ext_capability
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 0
DECL|member|japper_detect
id|u16
id|japper_detect
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 1
DECL|member|link_status
id|u16
id|link_status
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 2
DECL|member|an_ability
id|u16
id|an_ability
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 3
DECL|member|remote_fault
id|u16
id|remote_fault
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 4
DECL|member|an_complete
id|u16
id|an_complete
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 5
DECL|member|preamble_supp
id|u16
id|preamble_supp
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 6
DECL|member|_bit_7
id|u16
id|_bit_7
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 7
DECL|member|ext_status
id|u16
id|ext_status
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 8
DECL|member|media_100BT2_HD
id|u16
id|media_100BT2_HD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 9
DECL|member|media_100BT2_FD
id|u16
id|media_100BT2_FD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 10
DECL|member|media_10BT_HD
id|u16
id|media_10BT_HD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 11
DECL|member|media_10BT_FD
id|u16
id|media_10BT_FD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 12
DECL|member|media_100BX_HD
id|u16
id|media_100BX_HD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 13
DECL|member|media_100BX_FD
id|u16
id|media_100BX_FD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 14
DECL|member|media_100BT4
id|u16
id|media_100BT4
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 15
DECL|member|bits
)brace
id|bits
suffix:semicolon
DECL|typedef|BMSR_t
DECL|typedef|PBMSR_t
)brace
id|BMSR_t
comma
op_star
id|PBMSR_t
suffix:semicolon
DECL|enum|_mii_bmsr
r_enum
id|_mii_bmsr
(brace
DECL|enumerator|MII_BMSR_100BT4
id|MII_BMSR_100BT4
op_assign
l_int|0x8000
comma
DECL|enumerator|MII_BMSR_100BX_FD
id|MII_BMSR_100BX_FD
op_assign
l_int|0x4000
comma
DECL|enumerator|MII_BMSR_100BX_HD
id|MII_BMSR_100BX_HD
op_assign
l_int|0x2000
comma
DECL|enumerator|MII_BMSR_10BT_FD
id|MII_BMSR_10BT_FD
op_assign
l_int|0x1000
comma
DECL|enumerator|MII_BMSR_10BT_HD
id|MII_BMSR_10BT_HD
op_assign
l_int|0x0800
comma
DECL|enumerator|MII_BMSR_100BT2_FD
id|MII_BMSR_100BT2_FD
op_assign
l_int|0x0400
comma
DECL|enumerator|MII_BMSR_100BT2_HD
id|MII_BMSR_100BT2_HD
op_assign
l_int|0x0200
comma
DECL|enumerator|MII_BMSR_EXT_STATUS
id|MII_BMSR_EXT_STATUS
op_assign
l_int|0x0100
comma
DECL|enumerator|MII_BMSR_PREAMBLE_SUPP
id|MII_BMSR_PREAMBLE_SUPP
op_assign
l_int|0x0040
comma
DECL|enumerator|MII_BMSR_AN_COMPLETE
id|MII_BMSR_AN_COMPLETE
op_assign
l_int|0x0020
comma
DECL|enumerator|MII_BMSR_REMOTE_FAULT
id|MII_BMSR_REMOTE_FAULT
op_assign
l_int|0x0010
comma
DECL|enumerator|MII_BMSR_AN_ABILITY
id|MII_BMSR_AN_ABILITY
op_assign
l_int|0x0008
comma
DECL|enumerator|MII_BMSR_LINK_STATUS
id|MII_BMSR_LINK_STATUS
op_assign
l_int|0x0004
comma
DECL|enumerator|MII_BMSR_JABBER_DETECT
id|MII_BMSR_JABBER_DETECT
op_assign
l_int|0x0002
comma
DECL|enumerator|MII_BMSR_EXT_CAP
id|MII_BMSR_EXT_CAP
op_assign
l_int|0x0001
comma
)brace
suffix:semicolon
multiline_comment|/* ANAR */
DECL|union|t_MII_ANAR
r_typedef
r_union
id|t_MII_ANAR
(brace
DECL|member|image
id|u16
id|image
suffix:semicolon
r_struct
(brace
DECL|member|selector
id|u16
id|selector
suffix:colon
l_int|5
suffix:semicolon
singleline_comment|// bit 4:0
DECL|member|media_10BT_HD
id|u16
id|media_10BT_HD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 5
DECL|member|media_10BT_FD
id|u16
id|media_10BT_FD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 6
DECL|member|media_100BX_HD
id|u16
id|media_100BX_HD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 7
DECL|member|media_100BX_FD
id|u16
id|media_100BX_FD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 8
DECL|member|media_100BT4
id|u16
id|media_100BT4
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 9
DECL|member|pause
id|u16
id|pause
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 10
DECL|member|asymmetric
id|u16
id|asymmetric
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 11
DECL|member|_bit12
id|u16
id|_bit12
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 12
DECL|member|remote_fault
id|u16
id|remote_fault
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 13
DECL|member|_bit14
id|u16
id|_bit14
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 14
DECL|member|next_page
id|u16
id|next_page
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 15
DECL|member|bits
)brace
id|bits
suffix:semicolon
DECL|typedef|ANAR_t
DECL|typedef|PANAR_t
)brace
id|ANAR_t
comma
op_star
id|PANAR_t
suffix:semicolon
DECL|enum|_mii_anar
r_enum
id|_mii_anar
(brace
DECL|enumerator|MII_ANAR_NEXT_PAGE
id|MII_ANAR_NEXT_PAGE
op_assign
l_int|0x8000
comma
DECL|enumerator|MII_ANAR_REMOTE_FAULT
id|MII_ANAR_REMOTE_FAULT
op_assign
l_int|0x4000
comma
DECL|enumerator|MII_ANAR_ASYMMETRIC
id|MII_ANAR_ASYMMETRIC
op_assign
l_int|0x0800
comma
DECL|enumerator|MII_ANAR_PAUSE
id|MII_ANAR_PAUSE
op_assign
l_int|0x0400
comma
DECL|enumerator|MII_ANAR_100BT4
id|MII_ANAR_100BT4
op_assign
l_int|0x0200
comma
DECL|enumerator|MII_ANAR_100BX_FD
id|MII_ANAR_100BX_FD
op_assign
l_int|0x0100
comma
DECL|enumerator|MII_ANAR_100BX_HD
id|MII_ANAR_100BX_HD
op_assign
l_int|0x0080
comma
DECL|enumerator|MII_ANAR_10BT_FD
id|MII_ANAR_10BT_FD
op_assign
l_int|0x0020
comma
DECL|enumerator|MII_ANAR_10BT_HD
id|MII_ANAR_10BT_HD
op_assign
l_int|0x0010
comma
DECL|enumerator|MII_ANAR_SELECTOR
id|MII_ANAR_SELECTOR
op_assign
l_int|0x001f
comma
DECL|enumerator|MII_IEEE8023_CSMACD
id|MII_IEEE8023_CSMACD
op_assign
l_int|0x0001
comma
)brace
suffix:semicolon
multiline_comment|/* ANLPAR */
DECL|union|t_MII_ANLPAR
r_typedef
r_union
id|t_MII_ANLPAR
(brace
DECL|member|image
id|u16
id|image
suffix:semicolon
r_struct
(brace
DECL|member|selector
id|u16
id|selector
suffix:colon
l_int|5
suffix:semicolon
singleline_comment|// bit 4:0
DECL|member|media_10BT_HD
id|u16
id|media_10BT_HD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 5
DECL|member|media_10BT_FD
id|u16
id|media_10BT_FD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 6
DECL|member|media_100BX_HD
id|u16
id|media_100BX_HD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 7
DECL|member|media_100BX_FD
id|u16
id|media_100BX_FD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 8
DECL|member|media_100BT4
id|u16
id|media_100BT4
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 9
DECL|member|pause
id|u16
id|pause
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 10
DECL|member|asymmetric
id|u16
id|asymmetric
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 11
DECL|member|_bit12
id|u16
id|_bit12
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 12
DECL|member|remote_fault
id|u16
id|remote_fault
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 13
DECL|member|_bit14
id|u16
id|_bit14
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 14
DECL|member|next_page
id|u16
id|next_page
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 15
DECL|member|bits
)brace
id|bits
suffix:semicolon
DECL|typedef|ANLPAR_t
DECL|typedef|PANLPAR_t
)brace
id|ANLPAR_t
comma
op_star
id|PANLPAR_t
suffix:semicolon
DECL|enum|_mii_anlpar
r_enum
id|_mii_anlpar
(brace
DECL|enumerator|MII_ANLPAR_NEXT_PAGE
id|MII_ANLPAR_NEXT_PAGE
op_assign
id|MII_ANAR_NEXT_PAGE
comma
DECL|enumerator|MII_ANLPAR_REMOTE_FAULT
id|MII_ANLPAR_REMOTE_FAULT
op_assign
id|MII_ANAR_REMOTE_FAULT
comma
DECL|enumerator|MII_ANLPAR_ASYMMETRIC
id|MII_ANLPAR_ASYMMETRIC
op_assign
id|MII_ANAR_ASYMMETRIC
comma
DECL|enumerator|MII_ANLPAR_PAUSE
id|MII_ANLPAR_PAUSE
op_assign
id|MII_ANAR_PAUSE
comma
DECL|enumerator|MII_ANLPAR_100BT4
id|MII_ANLPAR_100BT4
op_assign
id|MII_ANAR_100BT4
comma
DECL|enumerator|MII_ANLPAR_100BX_FD
id|MII_ANLPAR_100BX_FD
op_assign
id|MII_ANAR_100BX_FD
comma
DECL|enumerator|MII_ANLPAR_100BX_HD
id|MII_ANLPAR_100BX_HD
op_assign
id|MII_ANAR_100BX_HD
comma
DECL|enumerator|MII_ANLPAR_10BT_FD
id|MII_ANLPAR_10BT_FD
op_assign
id|MII_ANAR_10BT_FD
comma
DECL|enumerator|MII_ANLPAR_10BT_HD
id|MII_ANLPAR_10BT_HD
op_assign
id|MII_ANAR_10BT_HD
comma
DECL|enumerator|MII_ANLPAR_SELECTOR
id|MII_ANLPAR_SELECTOR
op_assign
id|MII_ANAR_SELECTOR
comma
)brace
suffix:semicolon
multiline_comment|/* Auto-Negotiation Expansion Register */
DECL|union|t_MII_ANER
r_typedef
r_union
id|t_MII_ANER
(brace
DECL|member|image
id|u16
id|image
suffix:semicolon
r_struct
(brace
DECL|member|lp_negotiable
id|u16
id|lp_negotiable
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 0
DECL|member|page_received
id|u16
id|page_received
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 1
DECL|member|nextpagable
id|u16
id|nextpagable
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 2
DECL|member|lp_nextpagable
id|u16
id|lp_nextpagable
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 3
DECL|member|pdetect_fault
id|u16
id|pdetect_fault
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 4
DECL|member|_bit15_5
id|u16
id|_bit15_5
suffix:colon
l_int|11
suffix:semicolon
singleline_comment|// bit 15:5
DECL|member|bits
)brace
id|bits
suffix:semicolon
DECL|typedef|ANER_t
DECL|typedef|PANER_t
)brace
id|ANER_t
comma
op_star
id|PANER_t
suffix:semicolon
DECL|enum|_mii_aner
r_enum
id|_mii_aner
(brace
DECL|enumerator|MII_ANER_PAR_DETECT_FAULT
id|MII_ANER_PAR_DETECT_FAULT
op_assign
l_int|0x0010
comma
DECL|enumerator|MII_ANER_LP_NEXTPAGABLE
id|MII_ANER_LP_NEXTPAGABLE
op_assign
l_int|0x0008
comma
DECL|enumerator|MII_ANER_NETXTPAGABLE
id|MII_ANER_NETXTPAGABLE
op_assign
l_int|0x0004
comma
DECL|enumerator|MII_ANER_PAGE_RECEIVED
id|MII_ANER_PAGE_RECEIVED
op_assign
l_int|0x0002
comma
DECL|enumerator|MII_ANER_LP_NEGOTIABLE
id|MII_ANER_LP_NEGOTIABLE
op_assign
l_int|0x0001
comma
)brace
suffix:semicolon
multiline_comment|/* MASTER-SLAVE Control Register */
DECL|union|t_MII_MSCR
r_typedef
r_union
id|t_MII_MSCR
(brace
DECL|member|image
id|u16
id|image
suffix:semicolon
r_struct
(brace
DECL|member|_bit_7_0
id|u16
id|_bit_7_0
suffix:colon
l_int|8
suffix:semicolon
singleline_comment|// bit 7:0
DECL|member|media_1000BT_HD
id|u16
id|media_1000BT_HD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 8
DECL|member|media_1000BT_FD
id|u16
id|media_1000BT_FD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 9
DECL|member|port_type
id|u16
id|port_type
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 10
DECL|member|cfg_value
id|u16
id|cfg_value
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 11
DECL|member|cfg_enable
id|u16
id|cfg_enable
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 12
DECL|member|test_mode
id|u16
id|test_mode
suffix:colon
l_int|3
suffix:semicolon
singleline_comment|// bit 15:13
DECL|member|bits
)brace
id|bits
suffix:semicolon
DECL|typedef|MSCR_t
DECL|typedef|PMSCR_t
)brace
id|MSCR_t
comma
op_star
id|PMSCR_t
suffix:semicolon
DECL|enum|_mii_mscr
r_enum
id|_mii_mscr
(brace
DECL|enumerator|MII_MSCR_TEST_MODE
id|MII_MSCR_TEST_MODE
op_assign
l_int|0xe000
comma
DECL|enumerator|MII_MSCR_CFG_ENABLE
id|MII_MSCR_CFG_ENABLE
op_assign
l_int|0x1000
comma
DECL|enumerator|MII_MSCR_CFG_VALUE
id|MII_MSCR_CFG_VALUE
op_assign
l_int|0x0800
comma
DECL|enumerator|MII_MSCR_PORT_VALUE
id|MII_MSCR_PORT_VALUE
op_assign
l_int|0x0400
comma
DECL|enumerator|MII_MSCR_1000BT_FD
id|MII_MSCR_1000BT_FD
op_assign
l_int|0x0200
comma
DECL|enumerator|MII_MSCR_1000BT_HD
id|MII_MSCR_1000BT_HD
op_assign
l_int|0X0100
comma
)brace
suffix:semicolon
multiline_comment|/* MASTER-SLAVE Status Register */
DECL|union|t_MII_MSSR
r_typedef
r_union
id|t_MII_MSSR
(brace
DECL|member|image
id|u16
id|image
suffix:semicolon
r_struct
(brace
DECL|member|idle_err_count
id|u16
id|idle_err_count
suffix:colon
l_int|8
suffix:semicolon
singleline_comment|// bit 7:0
DECL|member|_bit_9_8
id|u16
id|_bit_9_8
suffix:colon
l_int|2
suffix:semicolon
singleline_comment|// bit 9:8
DECL|member|lp_1000BT_HD
id|u16
id|lp_1000BT_HD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 10
DECL|member|lp_1000BT_FD
id|u16
id|lp_1000BT_FD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 11
DECL|member|remote_rcv_status
id|u16
id|remote_rcv_status
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 12
DECL|member|local_rcv_status
id|u16
id|local_rcv_status
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 13
DECL|member|cfg_resolution
id|u16
id|cfg_resolution
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 14
DECL|member|cfg_fault
id|u16
id|cfg_fault
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 15
DECL|member|bits
)brace
id|bits
suffix:semicolon
DECL|typedef|MSSR_t
DECL|typedef|PMSSR_t
)brace
id|MSSR_t
comma
op_star
id|PMSSR_t
suffix:semicolon
DECL|enum|_mii_mssr
r_enum
id|_mii_mssr
(brace
DECL|enumerator|MII_MSSR_CFG_FAULT
id|MII_MSSR_CFG_FAULT
op_assign
l_int|0x8000
comma
DECL|enumerator|MII_MSSR_CFG_RES
id|MII_MSSR_CFG_RES
op_assign
l_int|0x4000
comma
DECL|enumerator|MII_MSSR_LOCAL_RCV_STATUS
id|MII_MSSR_LOCAL_RCV_STATUS
op_assign
l_int|0x2000
comma
DECL|enumerator|MII_MSSR_REMOTE_RCVR
id|MII_MSSR_REMOTE_RCVR
op_assign
l_int|0x1000
comma
DECL|enumerator|MII_MSSR_LP_1000BT_HD
id|MII_MSSR_LP_1000BT_HD
op_assign
l_int|0x0800
comma
DECL|enumerator|MII_MSSR_LP_1000BT_FD
id|MII_MSSR_LP_1000BT_FD
op_assign
l_int|0x0400
comma
DECL|enumerator|MII_MSSR_IDLE_ERR_COUNT
id|MII_MSSR_IDLE_ERR_COUNT
op_assign
l_int|0x00ff
comma
)brace
suffix:semicolon
multiline_comment|/* IEEE Extened Status Register */
DECL|union|t_MII_ESR
r_typedef
r_union
id|t_MII_ESR
(brace
DECL|member|image
id|u16
id|image
suffix:semicolon
r_struct
(brace
DECL|member|_bit_11_0
id|u16
id|_bit_11_0
suffix:colon
l_int|12
suffix:semicolon
singleline_comment|// bit 11:0
DECL|member|media_1000BT_HD
id|u16
id|media_1000BT_HD
suffix:colon
l_int|2
suffix:semicolon
singleline_comment|// bit 12
DECL|member|media_1000BT_FD
id|u16
id|media_1000BT_FD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 13
DECL|member|media_1000BX_HD
id|u16
id|media_1000BX_HD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 14
DECL|member|media_1000BX_FD
id|u16
id|media_1000BX_FD
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 15
DECL|member|bits
)brace
id|bits
suffix:semicolon
DECL|typedef|ESR_t
DECL|typedef|PESR_t
)brace
id|ESR_t
comma
op_star
id|PESR_t
suffix:semicolon
DECL|enum|_mii_esr
r_enum
id|_mii_esr
(brace
DECL|enumerator|MII_ESR_1000BX_FD
id|MII_ESR_1000BX_FD
op_assign
l_int|0x8000
comma
DECL|enumerator|MII_ESR_1000BX_HD
id|MII_ESR_1000BX_HD
op_assign
l_int|0x4000
comma
DECL|enumerator|MII_ESR_1000BT_FD
id|MII_ESR_1000BT_FD
op_assign
l_int|0x2000
comma
DECL|enumerator|MII_ESR_1000BT_HD
id|MII_ESR_1000BT_HD
op_assign
l_int|0x1000
comma
)brace
suffix:semicolon
multiline_comment|/* PHY Specific Control Register */
DECL|union|t_MII_PHY_SCR
r_typedef
r_union
id|t_MII_PHY_SCR
(brace
DECL|member|image
id|u16
id|image
suffix:semicolon
r_struct
(brace
DECL|member|disable_jabber
id|u16
id|disable_jabber
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 0
DECL|member|polarity_reversal
id|u16
id|polarity_reversal
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 1
DECL|member|SEQ_test
id|u16
id|SEQ_test
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 2
DECL|member|_bit_3
id|u16
id|_bit_3
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 3
DECL|member|disable_CLK125
id|u16
id|disable_CLK125
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 4
DECL|member|mdi_crossover_mode
id|u16
id|mdi_crossover_mode
suffix:colon
l_int|2
suffix:semicolon
singleline_comment|// bit 6:5
DECL|member|enable_ext_dist
id|u16
id|enable_ext_dist
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 7
DECL|member|_bit_8_9
id|u16
id|_bit_8_9
suffix:colon
l_int|2
suffix:semicolon
singleline_comment|// bit 9:8
DECL|member|force_link
id|u16
id|force_link
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 10
DECL|member|assert_CRS
id|u16
id|assert_CRS
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 11
DECL|member|rcv_fifo_depth
id|u16
id|rcv_fifo_depth
suffix:colon
l_int|2
suffix:semicolon
singleline_comment|// bit 13:12
DECL|member|xmit_fifo_depth
id|u16
id|xmit_fifo_depth
suffix:colon
l_int|2
suffix:semicolon
singleline_comment|// bit 15:14
DECL|member|bits
)brace
id|bits
suffix:semicolon
DECL|typedef|PHY_SCR_t
DECL|typedef|PPHY_SCR_t
)brace
id|PHY_SCR_t
comma
op_star
id|PPHY_SCR_t
suffix:semicolon
DECL|enum|t_MII_ADMIN_STATUS
r_typedef
r_enum
id|t_MII_ADMIN_STATUS
(brace
DECL|enumerator|adm_reset
id|adm_reset
comma
DECL|enumerator|adm_operational
id|adm_operational
comma
DECL|enumerator|adm_loopback
id|adm_loopback
comma
DECL|enumerator|adm_power_down
id|adm_power_down
comma
DECL|enumerator|adm_isolate
id|adm_isolate
DECL|typedef|MII_ADMIN_t
DECL|typedef|PMII_ADMIN_t
)brace
id|MII_ADMIN_t
comma
op_star
id|PMII_ADMIN_t
suffix:semicolon
multiline_comment|/* Physical Coding Sublayer Management (PCS) */
multiline_comment|/* PCS control and status registers bitmap as the same as MII */
multiline_comment|/* PCS Extended Status register bitmap as the same as MII */
multiline_comment|/* PCS ANAR */
DECL|union|t_PCS_ANAR
r_typedef
r_union
id|t_PCS_ANAR
(brace
DECL|member|image
id|u16
id|image
suffix:semicolon
r_struct
(brace
DECL|member|_bit_4_0
id|u16
id|_bit_4_0
suffix:colon
l_int|5
suffix:semicolon
singleline_comment|// bit 4:0
DECL|member|full_duplex
id|u16
id|full_duplex
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 5
DECL|member|half_duplex
id|u16
id|half_duplex
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 6
DECL|member|asymmetric
id|u16
id|asymmetric
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 7
DECL|member|pause
id|u16
id|pause
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 8
DECL|member|_bit_11_9
id|u16
id|_bit_11_9
suffix:colon
l_int|3
suffix:semicolon
singleline_comment|// bit 11:9
DECL|member|remote_fault
id|u16
id|remote_fault
suffix:colon
l_int|2
suffix:semicolon
singleline_comment|// bit 13:12
DECL|member|_bit_14
id|u16
id|_bit_14
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 14
DECL|member|next_page
id|u16
id|next_page
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 15
DECL|member|bits
)brace
id|bits
suffix:semicolon
DECL|typedef|ANAR_PCS_t
DECL|typedef|PANAR_PCS_t
)brace
id|ANAR_PCS_t
comma
op_star
id|PANAR_PCS_t
suffix:semicolon
DECL|enum|_pcs_anar
r_enum
id|_pcs_anar
(brace
DECL|enumerator|PCS_ANAR_NEXT_PAGE
id|PCS_ANAR_NEXT_PAGE
op_assign
l_int|0x8000
comma
DECL|enumerator|PCS_ANAR_REMOTE_FAULT
id|PCS_ANAR_REMOTE_FAULT
op_assign
l_int|0x3000
comma
DECL|enumerator|PCS_ANAR_ASYMMETRIC
id|PCS_ANAR_ASYMMETRIC
op_assign
l_int|0x0100
comma
DECL|enumerator|PCS_ANAR_PAUSE
id|PCS_ANAR_PAUSE
op_assign
l_int|0x0080
comma
DECL|enumerator|PCS_ANAR_HALF_DUPLEX
id|PCS_ANAR_HALF_DUPLEX
op_assign
l_int|0x0040
comma
DECL|enumerator|PCS_ANAR_FULL_DUPLEX
id|PCS_ANAR_FULL_DUPLEX
op_assign
l_int|0x0020
comma
)brace
suffix:semicolon
multiline_comment|/* PCS ANLPAR */
DECL|union|t_PCS_ANLPAR
r_typedef
r_union
id|t_PCS_ANLPAR
(brace
DECL|member|image
id|u16
id|image
suffix:semicolon
r_struct
(brace
DECL|member|_bit_4_0
id|u16
id|_bit_4_0
suffix:colon
l_int|5
suffix:semicolon
singleline_comment|// bit 4:0
DECL|member|full_duplex
id|u16
id|full_duplex
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 5
DECL|member|half_duplex
id|u16
id|half_duplex
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 6
DECL|member|asymmetric
id|u16
id|asymmetric
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 7
DECL|member|pause
id|u16
id|pause
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 8
DECL|member|_bit_11_9
id|u16
id|_bit_11_9
suffix:colon
l_int|3
suffix:semicolon
singleline_comment|// bit 11:9
DECL|member|remote_fault
id|u16
id|remote_fault
suffix:colon
l_int|2
suffix:semicolon
singleline_comment|// bit 13:12
DECL|member|_bit_14
id|u16
id|_bit_14
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 14
DECL|member|next_page
id|u16
id|next_page
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// bit 15
DECL|member|bits
)brace
id|bits
suffix:semicolon
DECL|typedef|ANLPAR_PCS_t
DECL|typedef|PANLPAR_PCS_t
)brace
id|ANLPAR_PCS_t
comma
op_star
id|PANLPAR_PCS_t
suffix:semicolon
DECL|enum|_pcs_anlpar
r_enum
id|_pcs_anlpar
(brace
DECL|enumerator|PCS_ANLPAR_NEXT_PAGE
id|PCS_ANLPAR_NEXT_PAGE
op_assign
id|PCS_ANAR_NEXT_PAGE
comma
DECL|enumerator|PCS_ANLPAR_REMOTE_FAULT
id|PCS_ANLPAR_REMOTE_FAULT
op_assign
id|PCS_ANAR_REMOTE_FAULT
comma
DECL|enumerator|PCS_ANLPAR_ASYMMETRIC
id|PCS_ANLPAR_ASYMMETRIC
op_assign
id|PCS_ANAR_ASYMMETRIC
comma
DECL|enumerator|PCS_ANLPAR_PAUSE
id|PCS_ANLPAR_PAUSE
op_assign
id|PCS_ANAR_PAUSE
comma
DECL|enumerator|PCS_ANLPAR_HALF_DUPLEX
id|PCS_ANLPAR_HALF_DUPLEX
op_assign
id|PCS_ANAR_HALF_DUPLEX
comma
DECL|enumerator|PCS_ANLPAR_FULL_DUPLEX
id|PCS_ANLPAR_FULL_DUPLEX
op_assign
id|PCS_ANAR_FULL_DUPLEX
comma
)brace
suffix:semicolon
DECL|struct|t_SROM
r_typedef
r_struct
id|t_SROM
(brace
DECL|member|config_param
id|u16
id|config_param
suffix:semicolon
multiline_comment|/* 0x00 */
DECL|member|asic_ctrl
id|u16
id|asic_ctrl
suffix:semicolon
multiline_comment|/* 0x02 */
DECL|member|sub_vendor_id
id|u16
id|sub_vendor_id
suffix:semicolon
multiline_comment|/* 0x04 */
DECL|member|sub_system_id
id|u16
id|sub_system_id
suffix:semicolon
multiline_comment|/* 0x06 */
DECL|member|reserved1
id|u16
id|reserved1
(braket
l_int|12
)braket
suffix:semicolon
multiline_comment|/* 0x08-0x1f */
DECL|member|mac_addr
id|u8
id|mac_addr
(braket
l_int|6
)braket
suffix:semicolon
multiline_comment|/* 0x20-0x25 */
DECL|member|reserved2
id|u8
id|reserved2
(braket
l_int|10
)braket
suffix:semicolon
multiline_comment|/* 0x26-0x2f */
DECL|member|sib
id|u8
id|sib
(braket
l_int|204
)braket
suffix:semicolon
multiline_comment|/* 0x30-0xfb */
DECL|member|crc
id|u32
id|crc
suffix:semicolon
multiline_comment|/* 0xfc-0xff */
DECL|typedef|SROM_t
DECL|typedef|PSROM_t
)brace
id|SROM_t
comma
op_star
id|PSROM_t
suffix:semicolon
multiline_comment|/* Ioctl custom data */
DECL|struct|ioctl_data
r_struct
id|ioctl_data
(brace
DECL|member|signature
r_char
id|signature
(braket
l_int|10
)braket
suffix:semicolon
DECL|member|cmd
r_int
id|cmd
suffix:semicolon
DECL|member|len
r_int
id|len
suffix:semicolon
DECL|member|data
r_char
op_star
id|data
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|mii_data
r_struct
id|mii_data
(brace
DECL|member|reserved
id|__u16
id|reserved
suffix:semicolon
DECL|member|reg_num
id|__u16
id|reg_num
suffix:semicolon
DECL|member|in_value
id|__u16
id|in_value
suffix:semicolon
DECL|member|out_value
id|__u16
id|out_value
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* The Rx and Tx buffer descriptors. */
DECL|struct|netdev_desc
r_struct
id|netdev_desc
(brace
DECL|member|next_desc
id|u64
id|next_desc
suffix:semicolon
DECL|member|status
id|u64
id|status
suffix:semicolon
DECL|member|fraginfo
id|u64
id|fraginfo
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|PRIV_ALIGN
mdefine_line|#define PRIV_ALIGN&t;15&t;/* Required alignment mask */
multiline_comment|/* Use  __attribute__((aligned (L1_CACHE_BYTES)))  to maintain alignment&n;   within the structure. */
DECL|struct|netdev_private
r_struct
id|netdev_private
(brace
multiline_comment|/* Descriptor rings first for alignment. */
DECL|member|rx_ring
r_struct
id|netdev_desc
op_star
id|rx_ring
suffix:semicolon
DECL|member|tx_ring
r_struct
id|netdev_desc
op_star
id|tx_ring
suffix:semicolon
DECL|member|rx_skbuff
r_struct
id|sk_buff
op_star
id|rx_skbuff
(braket
id|RX_RING_SIZE
)braket
suffix:semicolon
DECL|member|tx_skbuff
r_struct
id|sk_buff
op_star
id|tx_skbuff
(braket
id|TX_RING_SIZE
)braket
suffix:semicolon
DECL|member|tx_ring_dma
id|dma_addr_t
id|tx_ring_dma
suffix:semicolon
DECL|member|rx_ring_dma
id|dma_addr_t
id|rx_ring_dma
suffix:semicolon
DECL|member|pdev
r_struct
id|pci_dev
op_star
id|pdev
suffix:semicolon
DECL|member|tx_lock
id|spinlock_t
id|tx_lock
suffix:semicolon
DECL|member|rx_lock
id|spinlock_t
id|rx_lock
suffix:semicolon
DECL|member|stats
r_struct
id|net_device_stats
id|stats
suffix:semicolon
DECL|member|rx_buf_sz
r_int
r_int
id|rx_buf_sz
suffix:semicolon
multiline_comment|/* Based on MTU+slack. */
DECL|member|speed
r_int
r_int
id|speed
suffix:semicolon
multiline_comment|/* Operating speed */
DECL|member|vlan
r_int
r_int
id|vlan
suffix:semicolon
multiline_comment|/* VLAN Id */
DECL|member|chip_id
r_int
r_int
id|chip_id
suffix:semicolon
multiline_comment|/* PCI table chip id */
DECL|member|rx_coalesce
r_int
r_int
id|rx_coalesce
suffix:semicolon
multiline_comment|/* Maximum frames each RxDMAComplete intr */
DECL|member|rx_timeout
r_int
r_int
id|rx_timeout
suffix:semicolon
multiline_comment|/* Wait time between RxDMAComplete intr */
DECL|member|tx_coalesce
r_int
r_int
id|tx_coalesce
suffix:semicolon
multiline_comment|/* Maximum frames each tx interrupt */
DECL|member|full_duplex
r_int
r_int
id|full_duplex
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Full-duplex operation requested. */
DECL|member|an_enable
r_int
r_int
id|an_enable
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* Auto-Negotiated Enable */
DECL|member|jumbo
r_int
r_int
id|jumbo
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Jumbo frame enable */
DECL|member|coalesce
r_int
r_int
id|coalesce
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Rx coalescing enable */
DECL|member|tx_flow
r_int
r_int
id|tx_flow
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Tx flow control enable */
DECL|member|rx_flow
r_int
r_int
id|rx_flow
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Rx flow control enable */
DECL|member|phy_media
r_int
r_int
id|phy_media
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* 1: fiber, 0: copper */
DECL|member|link_status
r_int
r_int
id|link_status
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Current link status */
DECL|member|pci_rev_id
r_int
r_char
id|pci_rev_id
suffix:semicolon
multiline_comment|/* PCI revision ID */
DECL|member|last_tx
r_struct
id|netdev_desc
op_star
id|last_tx
suffix:semicolon
multiline_comment|/* Last Tx descriptor used. */
DECL|member|cur_rx
DECL|member|old_rx
r_int
r_int
id|cur_rx
comma
id|old_rx
suffix:semicolon
multiline_comment|/* Producer/consumer ring indices */
DECL|member|cur_tx
DECL|member|old_tx
r_int
r_int
id|cur_tx
comma
id|old_tx
suffix:semicolon
DECL|member|timer
r_struct
id|timer_list
id|timer
suffix:semicolon
DECL|member|wake_polarity
r_int
id|wake_polarity
suffix:semicolon
DECL|member|name
r_char
id|name
(braket
l_int|256
)braket
suffix:semicolon
multiline_comment|/* net device description */
DECL|member|duplex_polarity
id|u8
id|duplex_polarity
suffix:semicolon
DECL|member|mcast_filter
id|u16
id|mcast_filter
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|advertising
id|u16
id|advertising
suffix:semicolon
multiline_comment|/* NWay media advertisement */
DECL|member|negotiate
id|u16
id|negotiate
suffix:semicolon
multiline_comment|/* Negotiated media */
DECL|member|phy_addr
r_int
id|phy_addr
suffix:semicolon
multiline_comment|/* PHY addresses. */
)brace
suffix:semicolon
multiline_comment|/* The station address location in the EEPROM. */
macro_line|#ifdef MEM_MAPPING
DECL|macro|PCI_IOTYPE
mdefine_line|#define PCI_IOTYPE (PCI_USES_MASTER | PCI_USES_MEM | PCI_ADDR1)
macro_line|#else
DECL|macro|PCI_IOTYPE
mdefine_line|#define PCI_IOTYPE (PCI_USES_MASTER | PCI_USES_IO  | PCI_ADDR0)
macro_line|#endif
multiline_comment|/* The struct pci_device_id consist of:&n;        vendor, device          Vendor and device ID to match (or PCI_ANY_ID)&n;        subvendor, subdevice    Subsystem vendor and device ID to match (or PCI_ANY_ID)&n;        class                   Device class to match. The class_mask tells which bits&n;        class_mask              of the class are honored during the comparison.&n;        driver_data             Data private to the driver.&n;*/
DECL|variable|rio_pci_tbl
r_static
r_struct
id|pci_device_id
id|rio_pci_tbl
(braket
)braket
op_assign
(brace
(brace
l_int|0x1186
comma
l_int|0x4000
comma
id|PCI_ANY_ID
comma
id|PCI_ANY_ID
comma
l_int|0
comma
l_int|0
comma
l_int|0
)brace
comma
(brace
l_int|0
comma
)brace
)brace
suffix:semicolon
id|MODULE_DEVICE_TABLE
(paren
id|pci
comma
id|rio_pci_tbl
)paren
suffix:semicolon
DECL|macro|TX_TIMEOUT
mdefine_line|#define TX_TIMEOUT  (4*HZ)
DECL|macro|PACKET_SIZE
mdefine_line|#define PACKET_SIZE&t;&t;1536
DECL|macro|MAX_JUMBO
mdefine_line|#define MAX_JUMBO&t;&t;8000
DECL|macro|RIO_IO_SIZE
mdefine_line|#define RIO_IO_SIZE             340
DECL|macro|DEFAULT_RXC
mdefine_line|#define DEFAULT_RXC&t;&t;5
DECL|macro|DEFAULT_RXT
mdefine_line|#define DEFAULT_RXT&t;&t;750
DECL|macro|DEFAULT_TXC
mdefine_line|#define DEFAULT_TXC&t;&t;1
DECL|macro|MAX_TXC
mdefine_line|#define MAX_TXC&t;&t;&t;8
macro_line|#endif&t;&t;&t;&t;/* __DL2K_H__ */
eof
