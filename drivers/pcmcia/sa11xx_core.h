multiline_comment|/*&n; * linux/include/asm/arch/pcmcia.h&n; *&n; * Copyright (C) 2000 John G Dorsey &lt;john+@cs.cmu.edu&gt;&n; *&n; * This file contains definitions for the low-level SA-1100 kernel PCMCIA&n; * interface. Please see linux/Documentation/arm/SA1100/PCMCIA for details.&n; */
macro_line|#ifndef _ASM_ARCH_PCMCIA
DECL|macro|_ASM_ARCH_PCMCIA
mdefine_line|#define _ASM_ARCH_PCMCIA
multiline_comment|/* include the world */
macro_line|#include &lt;pcmcia/version.h&gt;
macro_line|#include &lt;pcmcia/cs_types.h&gt;
macro_line|#include &lt;pcmcia/cs.h&gt;
macro_line|#include &lt;pcmcia/ss.h&gt;
macro_line|#include &lt;pcmcia/bulkmem.h&gt;
macro_line|#include &lt;pcmcia/cistpl.h&gt;
macro_line|#include &quot;cs_internal.h&quot;
r_struct
id|device
suffix:semicolon
multiline_comment|/* Ideally, we&squot;d support up to MAX_SOCK sockets, but the SA-1100 only&n; * has support for two. This shows up in lots of hardwired ways, such&n; * as the fact that MECR only has enough bits to configure two sockets.&n; * Since it&squot;s so entrenched in the hardware, limiting the software&n; * in this way doesn&squot;t seem too terrible.&n; */
DECL|macro|SA1100_PCMCIA_MAX_SOCK
mdefine_line|#define SA1100_PCMCIA_MAX_SOCK   (2)
DECL|struct|pcmcia_state
r_struct
id|pcmcia_state
(brace
DECL|member|detect
r_int
id|detect
suffix:colon
l_int|1
comma
DECL|member|ready
id|ready
suffix:colon
l_int|1
comma
DECL|member|bvd1
id|bvd1
suffix:colon
l_int|1
comma
DECL|member|bvd2
id|bvd2
suffix:colon
l_int|1
comma
DECL|member|wrprot
id|wrprot
suffix:colon
l_int|1
comma
DECL|member|vs_3v
id|vs_3v
suffix:colon
l_int|1
comma
DECL|member|vs_Xv
id|vs_Xv
suffix:colon
l_int|1
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * This structure encapsulates per-socket state which we might need to&n; * use when responding to a Card Services query of some kind.&n; */
DECL|struct|sa1100_pcmcia_socket
r_struct
id|sa1100_pcmcia_socket
(brace
DECL|member|socket
r_struct
id|pcmcia_socket
id|socket
suffix:semicolon
multiline_comment|/*&n;&t; * Info from low level handler&n;&t; */
DECL|member|dev
r_struct
id|device
op_star
id|dev
suffix:semicolon
DECL|member|nr
r_int
r_int
id|nr
suffix:semicolon
DECL|member|irq
r_int
r_int
id|irq
suffix:semicolon
multiline_comment|/*&n;&t; * Core PCMCIA state&n;&t; */
DECL|member|ops
r_struct
id|pcmcia_low_level
op_star
id|ops
suffix:semicolon
DECL|member|status
r_int
r_int
id|status
suffix:semicolon
DECL|member|cs_state
id|socket_state_t
id|cs_state
suffix:semicolon
DECL|member|handler
r_void
(paren
op_star
id|handler
)paren
(paren
r_void
op_star
comma
r_int
r_int
)paren
suffix:semicolon
DECL|member|handler_info
r_void
op_star
id|handler_info
suffix:semicolon
DECL|member|spd_io
r_int
r_int
id|spd_io
(braket
id|MAX_IO_WIN
)braket
suffix:semicolon
DECL|member|spd_mem
r_int
r_int
id|spd_mem
(braket
id|MAX_WIN
)braket
suffix:semicolon
DECL|member|spd_attr
r_int
r_int
id|spd_attr
(braket
id|MAX_WIN
)braket
suffix:semicolon
DECL|member|res_skt
r_struct
id|resource
id|res_skt
suffix:semicolon
DECL|member|res_io
r_struct
id|resource
id|res_io
suffix:semicolon
DECL|member|res_mem
r_struct
id|resource
id|res_mem
suffix:semicolon
DECL|member|res_attr
r_struct
id|resource
id|res_attr
suffix:semicolon
DECL|member|virt_io
r_void
op_star
id|virt_io
suffix:semicolon
DECL|member|irq_state
r_int
r_int
id|irq_state
suffix:semicolon
DECL|member|poll_timer
r_struct
id|timer_list
id|poll_timer
suffix:semicolon
DECL|member|work
r_struct
id|work_struct
id|work
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|pcmcia_low_level
r_struct
id|pcmcia_low_level
(brace
DECL|member|owner
r_struct
id|module
op_star
id|owner
suffix:semicolon
DECL|member|hw_init
r_int
(paren
op_star
id|hw_init
)paren
(paren
r_struct
id|sa1100_pcmcia_socket
op_star
)paren
suffix:semicolon
DECL|member|hw_shutdown
r_void
(paren
op_star
id|hw_shutdown
)paren
(paren
r_struct
id|sa1100_pcmcia_socket
op_star
)paren
suffix:semicolon
DECL|member|socket_state
r_void
(paren
op_star
id|socket_state
)paren
(paren
r_struct
id|sa1100_pcmcia_socket
op_star
comma
r_struct
id|pcmcia_state
op_star
)paren
suffix:semicolon
DECL|member|configure_socket
r_int
(paren
op_star
id|configure_socket
)paren
(paren
r_struct
id|sa1100_pcmcia_socket
op_star
comma
r_const
id|socket_state_t
op_star
)paren
suffix:semicolon
multiline_comment|/*&n;&t; * Enable card status IRQs on (re-)initialisation.  This can&n;&t; * be called at initialisation, power management event, or&n;&t; * pcmcia event.&n;&t; */
DECL|member|socket_init
r_void
(paren
op_star
id|socket_init
)paren
(paren
r_struct
id|sa1100_pcmcia_socket
op_star
)paren
suffix:semicolon
multiline_comment|/*&n;&t; * Disable card status IRQs and PCMCIA bus on suspend.&n;&t; */
DECL|member|socket_suspend
r_void
(paren
op_star
id|socket_suspend
)paren
(paren
r_struct
id|sa1100_pcmcia_socket
op_star
)paren
suffix:semicolon
multiline_comment|/*&n;&t; * Calculate MECR timing clock wait states&n;&t; */
DECL|member|socket_get_timing
r_int
r_int
(paren
op_star
id|socket_get_timing
)paren
(paren
r_struct
id|sa1100_pcmcia_socket
op_star
comma
r_int
r_int
id|cpu_speed
comma
r_int
r_int
id|cmd_time
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|pcmcia_irqs
r_struct
id|pcmcia_irqs
(brace
DECL|member|sock
r_int
id|sock
suffix:semicolon
DECL|member|irq
r_int
id|irq
suffix:semicolon
DECL|member|str
r_const
r_char
op_star
id|str
suffix:semicolon
)brace
suffix:semicolon
r_int
id|sa11xx_request_irqs
c_func
(paren
r_struct
id|sa1100_pcmcia_socket
op_star
id|skt
comma
r_struct
id|pcmcia_irqs
op_star
id|irqs
comma
r_int
id|nr
)paren
suffix:semicolon
r_void
id|sa11xx_free_irqs
c_func
(paren
r_struct
id|sa1100_pcmcia_socket
op_star
id|skt
comma
r_struct
id|pcmcia_irqs
op_star
id|irqs
comma
r_int
id|nr
)paren
suffix:semicolon
r_void
id|sa11xx_disable_irqs
c_func
(paren
r_struct
id|sa1100_pcmcia_socket
op_star
id|skt
comma
r_struct
id|pcmcia_irqs
op_star
id|irqs
comma
r_int
id|nr
)paren
suffix:semicolon
r_void
id|sa11xx_enable_irqs
c_func
(paren
r_struct
id|sa1100_pcmcia_socket
op_star
id|skt
comma
r_struct
id|pcmcia_irqs
op_star
id|irqs
comma
r_int
id|nr
)paren
suffix:semicolon
r_extern
r_int
id|sa11xx_drv_pcmcia_probe
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
r_struct
id|pcmcia_low_level
op_star
id|ops
comma
r_int
id|first
comma
r_int
id|nr
)paren
suffix:semicolon
r_extern
r_int
id|sa11xx_drv_pcmcia_remove
c_func
(paren
r_struct
id|device
op_star
id|dev
)paren
suffix:semicolon
macro_line|#endif
eof
