multiline_comment|/* OmniVision* camera chip driver private definitions for core code and&n; * chip-specific code&n; *&n; * Copyright (c) 1999-2004 Mark McClelland&n; *&n; * This program is free software; you can redistribute it and/or modify it&n; * under the terms of the GNU General Public License as published by the&n; * Free Software Foundation; either version 2 of the License, or (at your&n; * option) any later version. NO WARRANTY OF ANY KIND is expressed or implied.&n; *&n; * * OmniVision is a trademark of OmniVision Technologies, Inc. This driver&n; * is not sponsored or developed by them.&n; */
macro_line|#ifndef __LINUX_OVCAMCHIP_PRIV_H
DECL|macro|__LINUX_OVCAMCHIP_PRIV_H
mdefine_line|#define __LINUX_OVCAMCHIP_PRIV_H
macro_line|#include &lt;media/ovcamchip.h&gt;
macro_line|#ifdef DEBUG
r_extern
r_int
id|ovcamchip_debug
suffix:semicolon
macro_line|#endif
DECL|macro|PDEBUG
mdefine_line|#define PDEBUG(level, fmt, args...) &bslash;&n;&t;if (ovcamchip_debug &gt;= (level))&t;pr_debug(&quot;[%s:%d] &quot; fmt &quot;&bslash;n&quot;, &bslash;&n;&t;&t;__FUNCTION__, __LINE__ , ## args)
DECL|macro|DDEBUG
mdefine_line|#define DDEBUG(level, dev, fmt, args...) &bslash;&n;&t;if (ovcamchip_debug &gt;= (level))&t;dev_dbg(dev, &quot;[%s:%d] &quot; fmt &quot;&bslash;n&quot;, &bslash;&n;&t;&t;__FUNCTION__, __LINE__ , ## args)
multiline_comment|/* Number of times to retry chip detection. Increase this if you are getting&n; * &quot;Failed to init camera chip&quot; */
DECL|macro|I2C_DETECT_RETRIES
mdefine_line|#define I2C_DETECT_RETRIES&t;10
DECL|struct|ovcamchip_regvals
r_struct
id|ovcamchip_regvals
(brace
DECL|member|reg
r_int
r_char
id|reg
suffix:semicolon
DECL|member|val
r_int
r_char
id|val
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|ovcamchip_ops
r_struct
id|ovcamchip_ops
(brace
DECL|member|init
r_int
(paren
op_star
id|init
)paren
(paren
r_struct
id|i2c_client
op_star
)paren
suffix:semicolon
DECL|member|free
r_int
(paren
op_star
id|free
)paren
(paren
r_struct
id|i2c_client
op_star
)paren
suffix:semicolon
DECL|member|command
r_int
(paren
op_star
id|command
)paren
(paren
r_struct
id|i2c_client
op_star
comma
r_int
r_int
comma
r_void
op_star
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|ovcamchip
r_struct
id|ovcamchip
(brace
DECL|member|sops
r_struct
id|ovcamchip_ops
op_star
id|sops
suffix:semicolon
DECL|member|spriv
r_void
op_star
id|spriv
suffix:semicolon
multiline_comment|/* Private data for OV7x10.c etc... */
DECL|member|subtype
r_int
id|subtype
suffix:semicolon
multiline_comment|/* = SEN_OV7610 etc... */
DECL|member|mono
r_int
id|mono
suffix:semicolon
multiline_comment|/* Monochrome chip? (invalid until init) */
DECL|member|initialized
r_int
id|initialized
suffix:semicolon
multiline_comment|/* OVCAMCHIP_CMD_INITIALIZE was successful */
)brace
suffix:semicolon
multiline_comment|/* --------------------------------- */
multiline_comment|/*              I2C I/O              */
multiline_comment|/* --------------------------------- */
DECL|function|ov_read
r_static
r_inline
r_int
id|ov_read
c_func
(paren
r_struct
id|i2c_client
op_star
id|c
comma
r_int
r_char
id|reg
comma
r_int
r_char
op_star
id|value
)paren
(brace
r_int
id|rc
suffix:semicolon
id|rc
op_assign
id|i2c_smbus_read_byte_data
c_func
(paren
id|c
comma
id|reg
)paren
suffix:semicolon
op_star
id|value
op_assign
(paren
r_int
r_char
)paren
id|rc
suffix:semicolon
r_return
id|rc
suffix:semicolon
)brace
DECL|function|ov_write
r_static
r_inline
r_int
id|ov_write
c_func
(paren
r_struct
id|i2c_client
op_star
id|c
comma
r_int
r_char
id|reg
comma
r_int
r_char
id|value
)paren
(brace
r_return
id|i2c_smbus_write_byte_data
c_func
(paren
id|c
comma
id|reg
comma
id|value
)paren
suffix:semicolon
)brace
multiline_comment|/* --------------------------------- */
multiline_comment|/*        FUNCTION PROTOTYPES        */
multiline_comment|/* --------------------------------- */
multiline_comment|/* Functions in ovcamchip_core.c */
r_extern
r_int
id|ov_write_regvals
c_func
(paren
r_struct
id|i2c_client
op_star
id|c
comma
r_struct
id|ovcamchip_regvals
op_star
id|rvals
)paren
suffix:semicolon
r_extern
r_int
id|ov_write_mask
c_func
(paren
r_struct
id|i2c_client
op_star
id|c
comma
r_int
r_char
id|reg
comma
r_int
r_char
id|value
comma
r_int
r_char
id|mask
)paren
suffix:semicolon
macro_line|#endif
eof
