multiline_comment|/*&n; *  Driver for Zarlink DVB-T MT352 demodulator&n; *&n; *  Written by Holger Waechtler &lt;holger@qanu.de&gt;&n; *&t; and Daniel Mack &lt;daniel@qanu.de&gt;&n; *&n; *  Support for Samsung TDTC9251DH01C(M) tuner&n; *&n; *  Copyright (C) 2004 Antonio Mancuso &lt;antonio.mancuso@digitaltelevision.it&gt;&n; *                     Amauri  Celani  &lt;acelani@essegi.net&gt;&n; *&n; *  This program is free software; you can redistribute it and/or modify&n; *  it under the terms of the GNU General Public License as published by&n; *  the Free Software Foundation; either version 2 of the License, or&n; *  (at your option) any later version.&n; *&n; *  This program is distributed in the hope that it will be useful,&n; *  but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *&n; *  GNU General Public License for more details.&n; *&n; *  You should have received a copy of the GNU General Public License&n; *  along with this program; if not, write to the Free Software&n; *  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.=&n; */
macro_line|#ifndef _MT352_
DECL|macro|_MT352_
mdefine_line|#define _MT352_
DECL|macro|I2C_MT352_ADDR
mdefine_line|#define I2C_MT352_ADDR  0x0f
DECL|macro|I2C_TUNER_ADDR
mdefine_line|#define I2C_TUNER_ADDR  0xc2
DECL|macro|ID_MT352
mdefine_line|#define ID_MT352        0x13
DECL|macro|CARD_AVDVBT771
mdefine_line|#define CARD_AVDVBT771&t;    0x00
DECL|macro|CARD_TUA6034
mdefine_line|#define CARD_TUA6034&t;    0x01
DECL|macro|CARD_TDTC9251DH01C
mdefine_line|#define CARD_TDTC9251DH01C  0x02
DECL|macro|msb
mdefine_line|#define msb(x) (((x) &gt;&gt; 8) &amp; 0xff)
DECL|macro|lsb
mdefine_line|#define lsb(x) ((x) &amp; 0xff)
DECL|enum|mt352_reg_addr
r_enum
id|mt352_reg_addr
(brace
DECL|enumerator|STATUS_0
id|STATUS_0
op_assign
l_int|0x00
comma
DECL|enumerator|STATUS_1
id|STATUS_1
op_assign
l_int|0x01
comma
DECL|enumerator|STATUS_2
id|STATUS_2
op_assign
l_int|0x02
comma
DECL|enumerator|STATUS_3
id|STATUS_3
op_assign
l_int|0x03
comma
DECL|enumerator|STATUS_4
id|STATUS_4
op_assign
l_int|0x04
comma
DECL|enumerator|INTERRUPT_0
id|INTERRUPT_0
op_assign
l_int|0x05
comma
DECL|enumerator|INTERRUPT_1
id|INTERRUPT_1
op_assign
l_int|0x06
comma
DECL|enumerator|INTERRUPT_2
id|INTERRUPT_2
op_assign
l_int|0x07
comma
DECL|enumerator|INTERRUPT_3
id|INTERRUPT_3
op_assign
l_int|0x08
comma
DECL|enumerator|SNR
id|SNR
op_assign
l_int|0x09
comma
DECL|enumerator|VIT_ERR_CNT_2
id|VIT_ERR_CNT_2
op_assign
l_int|0x0A
comma
DECL|enumerator|VIT_ERR_CNT_1
id|VIT_ERR_CNT_1
op_assign
l_int|0x0B
comma
DECL|enumerator|VIT_ERR_CNT_0
id|VIT_ERR_CNT_0
op_assign
l_int|0x0C
comma
DECL|enumerator|RS_ERR_CNT_2
id|RS_ERR_CNT_2
op_assign
l_int|0x0D
comma
DECL|enumerator|RS_ERR_CNT_1
id|RS_ERR_CNT_1
op_assign
l_int|0x0E
comma
DECL|enumerator|RS_ERR_CNT_0
id|RS_ERR_CNT_0
op_assign
l_int|0x0F
comma
DECL|enumerator|RS_UBC_1
id|RS_UBC_1
op_assign
l_int|0x10
comma
DECL|enumerator|RS_UBC_0
id|RS_UBC_0
op_assign
l_int|0x11
comma
DECL|enumerator|AGC_GAIN_3
id|AGC_GAIN_3
op_assign
l_int|0x12
comma
DECL|enumerator|AGC_GAIN_2
id|AGC_GAIN_2
op_assign
l_int|0x13
comma
DECL|enumerator|AGC_GAIN_1
id|AGC_GAIN_1
op_assign
l_int|0x14
comma
DECL|enumerator|AGC_GAIN_0
id|AGC_GAIN_0
op_assign
l_int|0x15
comma
DECL|enumerator|FREQ_OFFSET_2
id|FREQ_OFFSET_2
op_assign
l_int|0x17
comma
DECL|enumerator|FREQ_OFFSET_1
id|FREQ_OFFSET_1
op_assign
l_int|0x18
comma
DECL|enumerator|FREQ_OFFSET_0
id|FREQ_OFFSET_0
op_assign
l_int|0x19
comma
DECL|enumerator|TIMING_OFFSET_1
id|TIMING_OFFSET_1
op_assign
l_int|0x1A
comma
DECL|enumerator|TIMING_OFFSET_0
id|TIMING_OFFSET_0
op_assign
l_int|0x1B
comma
DECL|enumerator|CHAN_FREQ_1
id|CHAN_FREQ_1
op_assign
l_int|0x1C
comma
DECL|enumerator|CHAN_FREQ_0
id|CHAN_FREQ_0
op_assign
l_int|0x1D
comma
DECL|enumerator|TPS_RECEIVED_1
id|TPS_RECEIVED_1
op_assign
l_int|0x1E
comma
DECL|enumerator|TPS_RECEIVED_0
id|TPS_RECEIVED_0
op_assign
l_int|0x1F
comma
DECL|enumerator|TPS_CURRENT_1
id|TPS_CURRENT_1
op_assign
l_int|0x20
comma
DECL|enumerator|TPS_CURRENT_0
id|TPS_CURRENT_0
op_assign
l_int|0x21
comma
DECL|enumerator|TPS_CELL_ID_1
id|TPS_CELL_ID_1
op_assign
l_int|0x22
comma
DECL|enumerator|TPS_CELL_ID_0
id|TPS_CELL_ID_0
op_assign
l_int|0x23
comma
DECL|enumerator|TPS_MISC_DATA_2
id|TPS_MISC_DATA_2
op_assign
l_int|0x24
comma
DECL|enumerator|TPS_MISC_DATA_1
id|TPS_MISC_DATA_1
op_assign
l_int|0x25
comma
DECL|enumerator|TPS_MISC_DATA_0
id|TPS_MISC_DATA_0
op_assign
l_int|0x26
comma
DECL|enumerator|RESET
id|RESET
op_assign
l_int|0x50
comma
DECL|enumerator|TPS_GIVEN_1
id|TPS_GIVEN_1
op_assign
l_int|0x51
comma
DECL|enumerator|TPS_GIVEN_0
id|TPS_GIVEN_0
op_assign
l_int|0x52
comma
DECL|enumerator|ACQ_CTL
id|ACQ_CTL
op_assign
l_int|0x53
comma
DECL|enumerator|TRL_NOMINAL_RATE_1
id|TRL_NOMINAL_RATE_1
op_assign
l_int|0x54
comma
DECL|enumerator|TRL_NOMINAL_RATE_0
id|TRL_NOMINAL_RATE_0
op_assign
l_int|0x55
comma
DECL|enumerator|INPUT_FREQ_1
id|INPUT_FREQ_1
op_assign
l_int|0x56
comma
DECL|enumerator|INPUT_FREQ_0
id|INPUT_FREQ_0
op_assign
l_int|0x57
comma
DECL|enumerator|TUNER_ADDR
id|TUNER_ADDR
op_assign
l_int|0x58
comma
DECL|enumerator|CHAN_START_1
id|CHAN_START_1
op_assign
l_int|0x59
comma
DECL|enumerator|CHAN_START_0
id|CHAN_START_0
op_assign
l_int|0x5A
comma
DECL|enumerator|CONT_1
id|CONT_1
op_assign
l_int|0x5B
comma
DECL|enumerator|CONT_0
id|CONT_0
op_assign
l_int|0x5C
comma
DECL|enumerator|TUNER_GO
id|TUNER_GO
op_assign
l_int|0x5D
comma
DECL|enumerator|STATUS_EN_0
id|STATUS_EN_0
op_assign
l_int|0x5F
comma
DECL|enumerator|STATUS_EN_1
id|STATUS_EN_1
op_assign
l_int|0x60
comma
DECL|enumerator|INTERRUPT_EN_0
id|INTERRUPT_EN_0
op_assign
l_int|0x61
comma
DECL|enumerator|INTERRUPT_EN_1
id|INTERRUPT_EN_1
op_assign
l_int|0x62
comma
DECL|enumerator|INTERRUPT_EN_2
id|INTERRUPT_EN_2
op_assign
l_int|0x63
comma
DECL|enumerator|INTERRUPT_EN_3
id|INTERRUPT_EN_3
op_assign
l_int|0x64
comma
DECL|enumerator|AGC_TARGET
id|AGC_TARGET
op_assign
l_int|0x67
comma
DECL|enumerator|AGC_CTL
id|AGC_CTL
op_assign
l_int|0x68
comma
DECL|enumerator|CAPT_RANGE
id|CAPT_RANGE
op_assign
l_int|0x75
comma
DECL|enumerator|SNR_SELECT_1
id|SNR_SELECT_1
op_assign
l_int|0x79
comma
DECL|enumerator|SNR_SELECT_0
id|SNR_SELECT_0
op_assign
l_int|0x7A
comma
DECL|enumerator|RS_ERR_PER_1
id|RS_ERR_PER_1
op_assign
l_int|0x7C
comma
DECL|enumerator|RS_ERR_PER_0
id|RS_ERR_PER_0
op_assign
l_int|0x7D
comma
DECL|enumerator|CHIP_ID
id|CHIP_ID
op_assign
l_int|0x7F
comma
DECL|enumerator|CHAN_STOP_1
id|CHAN_STOP_1
op_assign
l_int|0x80
comma
DECL|enumerator|CHAN_STOP_0
id|CHAN_STOP_0
op_assign
l_int|0x81
comma
DECL|enumerator|CHAN_STEP_1
id|CHAN_STEP_1
op_assign
l_int|0x82
comma
DECL|enumerator|CHAN_STEP_0
id|CHAN_STEP_0
op_assign
l_int|0x83
comma
DECL|enumerator|FEC_LOCK_TIME
id|FEC_LOCK_TIME
op_assign
l_int|0x85
comma
DECL|enumerator|OFDM_LOCK_TIME
id|OFDM_LOCK_TIME
op_assign
l_int|0x86
comma
DECL|enumerator|ACQ_DELAY
id|ACQ_DELAY
op_assign
l_int|0x87
comma
DECL|enumerator|SCAN_CTL
id|SCAN_CTL
op_assign
l_int|0x88
comma
DECL|enumerator|CLOCK_CTL
id|CLOCK_CTL
op_assign
l_int|0x89
comma
DECL|enumerator|CONFIG
id|CONFIG
op_assign
l_int|0x8A
comma
DECL|enumerator|MCLK_RATIO
id|MCLK_RATIO
op_assign
l_int|0x8B
comma
DECL|enumerator|GPP_CTL
id|GPP_CTL
op_assign
l_int|0x8C
comma
DECL|enumerator|ADC_CTL_1
id|ADC_CTL_1
op_assign
l_int|0x8E
comma
DECL|enumerator|ADC_CTL_0
id|ADC_CTL_0
op_assign
l_int|0x8F
)brace
suffix:semicolon
DECL|struct|_tuner_info
r_struct
id|_tuner_info
(brace
DECL|member|fe_frequency_min
id|__u32
id|fe_frequency_min
suffix:semicolon
DECL|macro|FE_FREQ_MIN
mdefine_line|#define FE_FREQ_MIN tuner_info[card_type].fe_frequency_min
DECL|member|fe_frequency_max
id|__u32
id|fe_frequency_max
suffix:semicolon
DECL|macro|FE_FREQ_MAX
mdefine_line|#define FE_FREQ_MAX tuner_info[card_type].fe_frequency_max
DECL|member|fe_frequency_stepsize
id|__u32
id|fe_frequency_stepsize
suffix:semicolon
singleline_comment|//verificare se u32 e&squot; corretto
DECL|macro|FE_FREQ_STEPSIZE
mdefine_line|#define FE_FREQ_STEPSIZE  tuner_info[card_type].fe_frequency_stepsize
DECL|member|coderate_hp_shift
id|__u32
id|coderate_hp_shift
suffix:semicolon
singleline_comment|//verificare se u32 giusto
DECL|macro|CODERATE_HP_SHIFT
mdefine_line|#define CODERATE_HP_SHIFT tuner_info[card_type].coderate_hp_shift
DECL|member|coderate_lp_shift
id|__u32
id|coderate_lp_shift
suffix:semicolon
DECL|macro|CODERATE_LP_SHIFT
mdefine_line|#define CODERATE_LP_SHIFT tuner_info[card_type].coderate_lp_shift
DECL|member|constellation_shift
r_int
id|constellation_shift
suffix:semicolon
DECL|macro|CONSTELLATION_SHIFT
mdefine_line|#define CONSTELLATION_SHIFT tuner_info[card_type].constellation_shift
DECL|member|tx_mode_shift
r_int
id|tx_mode_shift
suffix:semicolon
DECL|macro|TX_MODE_SHIFT
mdefine_line|#define TX_MODE_SHIFT tuner_info[card_type].tx_mode_shift
DECL|member|guard_interval_shift
r_int
id|guard_interval_shift
suffix:semicolon
DECL|macro|GUARD_INTERVAL_SHIFT
mdefine_line|#define GUARD_INTERVAL_SHIFT tuner_info[card_type].guard_interval_shift
DECL|member|hierarchy_shift
r_int
id|hierarchy_shift
suffix:semicolon
DECL|macro|HIERARCHY_SHIFT
mdefine_line|#define HIERARCHY_SHIFT tuner_info[card_type].hierarchy_shift
DECL|member|read_reg_flag
r_int
id|read_reg_flag
suffix:semicolon
DECL|macro|READ_REG_FLAG
mdefine_line|#define READ_REG_FLAG tuner_info[card_type].read_reg_flag
DECL|member|mt352_init
r_int
(paren
op_star
id|mt352_init
)paren
(paren
r_struct
id|i2c_adapter
op_star
id|i2c
)paren
suffix:semicolon
DECL|macro|MT352_INIT
mdefine_line|#define MT352_INIT tuner_info[card_type].mt352_init
DECL|member|mt352_charge_pump
r_int
r_char
(paren
op_star
id|mt352_charge_pump
)paren
(paren
id|u32
id|freq
)paren
suffix:semicolon
DECL|macro|MT352_CHARGE_PUMP
mdefine_line|#define MT352_CHARGE_PUMP tuner_info[card_type].mt352_charge_pump
DECL|member|mt352_band_select
r_int
r_char
(paren
op_star
id|mt352_band_select
)paren
(paren
id|u32
id|freq
)paren
suffix:semicolon
DECL|macro|MT352_BAND_SELECT
mdefine_line|#define MT352_BAND_SELECT tuner_info[card_type].mt352_band_select
)brace
suffix:semicolon
r_static
r_int
id|mt352_init_TUA6034
c_func
(paren
r_struct
id|i2c_adapter
op_star
id|i2c
)paren
suffix:semicolon
r_static
r_int
id|mt352_init_AVERMEDIA771
c_func
(paren
r_struct
id|i2c_adapter
op_star
id|i2c
)paren
suffix:semicolon
r_static
r_int
id|mt352_init_TDTC9251DH01C
c_func
(paren
r_struct
id|i2c_adapter
op_star
id|i2c
)paren
suffix:semicolon
r_static
r_int
r_char
id|mt352_cp_TUA6034
c_func
(paren
id|u32
id|freq
)paren
suffix:semicolon
r_static
r_int
r_char
id|mt352_cp_AVERMEDIA771
c_func
(paren
id|u32
id|freq
)paren
suffix:semicolon
r_static
r_int
r_char
id|mt352_cp_TDTC9251DH01C
c_func
(paren
id|u32
id|freq
)paren
suffix:semicolon
r_static
r_int
r_char
id|mt352_bs_TUA6034
c_func
(paren
id|u32
id|freq
)paren
suffix:semicolon
r_static
r_int
r_char
id|mt352_bs_AVERMEDIA771
c_func
(paren
id|u32
id|freq
)paren
suffix:semicolon
r_static
r_int
r_char
id|mt352_bs_TDTC9251DH01C
c_func
(paren
id|u32
id|freq
)paren
suffix:semicolon
r_static
r_int
id|mt352_detect_avermedia_771
c_func
(paren
r_struct
id|i2c_adapter
op_star
id|i2c
)paren
suffix:semicolon
macro_line|#endif                          /* _MT352_ */
eof
