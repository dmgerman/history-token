multiline_comment|/*&n;*&n;* 3780i.h -- declarations for 3780i.c&n;*&n;*&n;* Written By: Mike Sullivan IBM Corporation&n;*&n;* Copyright (C) 1999 IBM Corporation&n;*&n;* This program is free software; you can redistribute it and/or modify&n;* it under the terms of the GNU General Public License as published by&n;* the Free Software Foundation; either version 2 of the License, or&n;* (at your option) any later version.&n;*&n;* This program is distributed in the hope that it will be useful,&n;* but WITHOUT ANY WARRANTY; without even the implied warranty of&n;* MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n;* GNU General Public License for more details.&n;*&n;* NO WARRANTY&n;* THE PROGRAM IS PROVIDED ON AN &quot;AS IS&quot; BASIS, WITHOUT WARRANTIES OR&n;* CONDITIONS OF ANY KIND, EITHER EXPRESS OR IMPLIED INCLUDING, WITHOUT&n;* LIMITATION, ANY WARRANTIES OR CONDITIONS OF TITLE, NON-INFRINGEMENT,&n;* MERCHANTABILITY OR FITNESS FOR A PARTICULAR PURPOSE. Each Recipient is&n;* solely responsible for determining the appropriateness of using and&n;* distributing the Program and assumes all risks associated with its&n;* exercise of rights under this Agreement, including but not limited to&n;* the risks and costs of program errors, damage to or loss of data,&n;* programs or equipment, and unavailability or interruption of operations.&n;*&n;* DISCLAIMER OF LIABILITY&n;* NEITHER RECIPIENT NOR ANY CONTRIBUTORS SHALL HAVE ANY LIABILITY FOR ANY&n;* DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL&n;* DAMAGES (INCLUDING WITHOUT LIMITATION LOST PROFITS), HOWEVER CAUSED AND&n;* ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR&n;* TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE&n;* USE OR DISTRIBUTION OF THE PROGRAM OR THE EXERCISE OF ANY RIGHTS GRANTED&n;* HEREUNDER, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGES&n;*&n;* You should have received a copy of the GNU General Public License&n;* along with this program; if not, write to the Free Software&n;* Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA&n;*&n;*&n;* 10/23/2000 - Alpha Release&n;*&t;First release to the public&n;*/
macro_line|#ifndef _LINUX_3780I_H
DECL|macro|_LINUX_3780I_H
mdefine_line|#define _LINUX_3780I_H
macro_line|#include &lt;asm/io.h&gt;
multiline_comment|/* DSP I/O port offsets and definitions */
DECL|macro|DSP_IsaSlaveControl
mdefine_line|#define DSP_IsaSlaveControl        0x0000&t;/* ISA slave control register */
DECL|macro|DSP_IsaSlaveStatus
mdefine_line|#define DSP_IsaSlaveStatus         0x0001&t;/* ISA slave status register */
DECL|macro|DSP_ConfigAddress
mdefine_line|#define DSP_ConfigAddress          0x0002&t;/* General config address register */
DECL|macro|DSP_ConfigData
mdefine_line|#define DSP_ConfigData             0x0003&t;/* General config data register */
DECL|macro|DSP_HBridgeControl
mdefine_line|#define DSP_HBridgeControl         0x0002&t;/* HBridge control register */
DECL|macro|DSP_MsaAddrLow
mdefine_line|#define DSP_MsaAddrLow             0x0004&t;/* MSP System Address, low word */
DECL|macro|DSP_MsaAddrHigh
mdefine_line|#define DSP_MsaAddrHigh            0x0006&t;/* MSP System Address, high word */
DECL|macro|DSP_MsaDataDSISHigh
mdefine_line|#define DSP_MsaDataDSISHigh        0x0008&t;/* MSA data register: d-store word or high byte of i-store */
DECL|macro|DSP_MsaDataISLow
mdefine_line|#define DSP_MsaDataISLow           0x000A&t;/* MSA data register: low word of i-store */
DECL|macro|DSP_ReadAndClear
mdefine_line|#define DSP_ReadAndClear           0x000C&t;/* MSA read and clear data register */
DECL|macro|DSP_Interrupt
mdefine_line|#define DSP_Interrupt              0x000E&t;/* Interrupt register (IPC source) */
r_typedef
r_struct
(brace
DECL|member|ClockControl
r_int
r_char
id|ClockControl
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Clock control: 0=normal, 1=stop 3780i clocks */
DECL|member|SoftReset
r_int
r_char
id|SoftReset
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Soft reset 0=normal, 1=soft reset active */
DECL|member|ConfigMode
r_int
r_char
id|ConfigMode
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Configuration mode, 0=normal, 1=config mode */
DECL|member|Reserved
r_int
r_char
id|Reserved
suffix:colon
l_int|5
suffix:semicolon
multiline_comment|/* 0: Reserved */
DECL|typedef|DSP_ISA_SLAVE_CONTROL
)brace
id|DSP_ISA_SLAVE_CONTROL
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|EnableDspInt
r_int
r_int
id|EnableDspInt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Enable DSP to X86 ISA interrupt 0=mask it, 1=enable it */
DECL|member|MemAutoInc
r_int
r_int
id|MemAutoInc
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Memory address auto increment, 0=disable, 1=enable */
DECL|member|IoAutoInc
r_int
r_int
id|IoAutoInc
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: I/O address auto increment, 0=disable, 1=enable */
DECL|member|DiagnosticMode
r_int
r_int
id|DiagnosticMode
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Disgnostic mode 0=nromal, 1=diagnostic mode */
DECL|member|IsaPacingTimer
r_int
r_int
id|IsaPacingTimer
suffix:colon
l_int|12
suffix:semicolon
multiline_comment|/* R: ISA access pacing timer: count of core cycles stolen */
DECL|typedef|DSP_HBRIDGE_CONTROL
)brace
id|DSP_HBRIDGE_CONTROL
suffix:semicolon
multiline_comment|/* DSP register indexes used with the configuration register address (index) register */
DECL|macro|DSP_UartCfg1Index
mdefine_line|#define DSP_UartCfg1Index          0x0003&t;/* UART config register 1 */
DECL|macro|DSP_UartCfg2Index
mdefine_line|#define DSP_UartCfg2Index          0x0004&t;/* UART config register 2 */
DECL|macro|DSP_HBridgeCfg1Index
mdefine_line|#define DSP_HBridgeCfg1Index       0x0007&t;/* HBridge config register 1 */
DECL|macro|DSP_HBridgeCfg2Index
mdefine_line|#define DSP_HBridgeCfg2Index       0x0008&t;/* HBridge config register 2 */
DECL|macro|DSP_BusMasterCfg1Index
mdefine_line|#define DSP_BusMasterCfg1Index     0x0009&t;/* ISA bus master config register 1 */
DECL|macro|DSP_BusMasterCfg2Index
mdefine_line|#define DSP_BusMasterCfg2Index     0x000A&t;/* ISA bus master config register 2 */
DECL|macro|DSP_IsaProtCfgIndex
mdefine_line|#define DSP_IsaProtCfgIndex        0x000F&t;/* ISA protocol control register */
DECL|macro|DSP_PowerMgCfgIndex
mdefine_line|#define DSP_PowerMgCfgIndex        0x0010&t;/* Low poser suspend/resume enable */
DECL|macro|DSP_HBusTimerCfgIndex
mdefine_line|#define DSP_HBusTimerCfgIndex      0x0011&t;/* HBUS timer load value */
r_typedef
r_struct
(brace
DECL|member|IrqActiveLow
r_int
r_char
id|IrqActiveLow
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: IRQ active high or low: 0=high, 1=low */
DECL|member|IrqPulse
r_int
r_char
id|IrqPulse
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: IRQ pulse or level: 0=level, 1=pulse  */
DECL|member|Irq
r_int
r_char
id|Irq
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* RW: IRQ selection */
DECL|member|BaseIO
r_int
r_char
id|BaseIO
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* RW: Base I/O selection */
DECL|member|Reserved
r_int
r_char
id|Reserved
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* 0: Reserved */
DECL|typedef|DSP_UART_CFG_1
)brace
id|DSP_UART_CFG_1
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|Enable
r_int
r_char
id|Enable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Enable I/O and IRQ: 0=FALSE, 1=TRUE */
DECL|member|Reserved
r_int
r_char
id|Reserved
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* 0: Reserved */
DECL|typedef|DSP_UART_CFG_2
)brace
id|DSP_UART_CFG_2
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|IrqActiveLow
r_int
r_char
id|IrqActiveLow
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: IRQ active high=0 or low=1 */
DECL|member|IrqPulse
r_int
r_char
id|IrqPulse
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: IRQ pulse=1 or level=0 */
DECL|member|Irq
r_int
r_char
id|Irq
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* RW: IRQ selection */
DECL|member|AccessMode
r_int
r_char
id|AccessMode
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: 16-bit register access method 0=byte, 1=word */
DECL|member|Reserved
r_int
r_char
id|Reserved
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* 0: Reserved */
DECL|typedef|DSP_HBRIDGE_CFG_1
)brace
id|DSP_HBRIDGE_CFG_1
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|Enable
r_int
r_char
id|Enable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: enable I/O and IRQ: 0=FALSE, 1=TRUE */
DECL|member|Reserved
r_int
r_char
id|Reserved
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* 0: Reserved */
DECL|typedef|DSP_HBRIDGE_CFG_2
)brace
id|DSP_HBRIDGE_CFG_2
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|Dma
r_int
r_char
id|Dma
suffix:colon
l_int|3
suffix:semicolon
multiline_comment|/* RW: DMA channel selection */
DECL|member|NumTransfers
r_int
r_char
id|NumTransfers
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* RW: Maximum # of transfers once being granted the ISA bus */
DECL|member|ReRequest
r_int
r_char
id|ReRequest
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* RW: Minumum delay between releasing the ISA bus and requesting it again */
DECL|member|MEMCS16
r_int
r_char
id|MEMCS16
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: ISA signal MEMCS16: 0=disabled, 1=enabled */
DECL|typedef|DSP_BUSMASTER_CFG_1
)brace
id|DSP_BUSMASTER_CFG_1
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|IsaMemCmdWidth
r_int
r_char
id|IsaMemCmdWidth
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* RW: ISA memory command width */
DECL|member|Reserved
r_int
r_char
id|Reserved
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* 0: Reserved */
DECL|typedef|DSP_BUSMASTER_CFG_2
)brace
id|DSP_BUSMASTER_CFG_2
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|GateIOCHRDY
r_int
r_char
id|GateIOCHRDY
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Enable IOCHRDY gating: 0=FALSE, 1=TRUE */
DECL|member|Reserved
r_int
r_char
id|Reserved
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* 0: Reserved */
DECL|typedef|DSP_ISA_PROT_CFG
)brace
id|DSP_ISA_PROT_CFG
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|Enable
r_int
r_char
id|Enable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Enable low power suspend/resume 0=FALSE, 1=TRUE */
DECL|member|Reserved
r_int
r_char
id|Reserved
suffix:colon
l_int|7
suffix:semicolon
multiline_comment|/* 0: Reserved */
DECL|typedef|DSP_POWER_MGMT_CFG
)brace
id|DSP_POWER_MGMT_CFG
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|LoadValue
r_int
r_char
id|LoadValue
suffix:colon
l_int|8
suffix:semicolon
multiline_comment|/* RW: HBUS timer load value */
DECL|typedef|DSP_HBUS_TIMER_CFG
)brace
id|DSP_HBUS_TIMER_CFG
suffix:semicolon
multiline_comment|/* DSP registers that exist in MSA I/O space */
DECL|macro|DSP_ChipID
mdefine_line|#define DSP_ChipID                 0x80000000
DECL|macro|DSP_MspBootDomain
mdefine_line|#define DSP_MspBootDomain          0x80000580
DECL|macro|DSP_LBusTimeoutDisable
mdefine_line|#define DSP_LBusTimeoutDisable     0x80000580
DECL|macro|DSP_ClockControl_1
mdefine_line|#define DSP_ClockControl_1         0x8000058A
DECL|macro|DSP_ClockControl_2
mdefine_line|#define DSP_ClockControl_2         0x8000058C
DECL|macro|DSP_ChipReset
mdefine_line|#define DSP_ChipReset              0x80000588
DECL|macro|DSP_GpioModeControl_15_8
mdefine_line|#define DSP_GpioModeControl_15_8   0x80000082
DECL|macro|DSP_GpioDriverEnable_15_8
mdefine_line|#define DSP_GpioDriverEnable_15_8  0x80000076
DECL|macro|DSP_GpioOutputData_15_8
mdefine_line|#define DSP_GpioOutputData_15_8    0x80000072
r_typedef
r_struct
(brace
DECL|member|NMI
r_int
r_int
id|NMI
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: non maskable interrupt */
DECL|member|Halt
r_int
r_int
id|Halt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Halt MSP clock */
DECL|member|ResetCore
r_int
r_int
id|ResetCore
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Reset MSP core interface */
DECL|member|Reserved
r_int
r_int
id|Reserved
suffix:colon
l_int|13
suffix:semicolon
multiline_comment|/* 0: Reserved */
DECL|typedef|DSP_BOOT_DOMAIN
)brace
id|DSP_BOOT_DOMAIN
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|DisableTimeout
r_int
r_int
id|DisableTimeout
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Disable LBus timeout */
DECL|member|Reserved
r_int
r_int
id|Reserved
suffix:colon
l_int|15
suffix:semicolon
multiline_comment|/* 0: Reserved */
DECL|typedef|DSP_LBUS_TIMEOUT_DISABLE
)brace
id|DSP_LBUS_TIMEOUT_DISABLE
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|Memory
r_int
r_int
id|Memory
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Reset memory interface */
DECL|member|SerialPort1
r_int
r_int
id|SerialPort1
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Reset serial port 1 interface */
DECL|member|SerialPort2
r_int
r_int
id|SerialPort2
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Reset serial port 2 interface */
DECL|member|SerialPort3
r_int
r_int
id|SerialPort3
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Reset serial port 3 interface */
DECL|member|Gpio
r_int
r_int
id|Gpio
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Reset GPIO interface */
DECL|member|Dma
r_int
r_int
id|Dma
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Reset DMA interface */
DECL|member|SoundBlaster
r_int
r_int
id|SoundBlaster
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Reset soundblaster interface */
DECL|member|Uart
r_int
r_int
id|Uart
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Reset UART interface */
DECL|member|Midi
r_int
r_int
id|Midi
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Reset MIDI interface */
DECL|member|IsaMaster
r_int
r_int
id|IsaMaster
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: Reset ISA master interface */
DECL|member|Reserved
r_int
r_int
id|Reserved
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* 0: Reserved */
DECL|typedef|DSP_CHIP_RESET
)brace
id|DSP_CHIP_RESET
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|N_Divisor
r_int
r_int
id|N_Divisor
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* RW: (N) PLL output clock divisor */
DECL|member|Reserved1
r_int
r_int
id|Reserved1
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* 0: reserved */
DECL|member|M_Multiplier
r_int
r_int
id|M_Multiplier
suffix:colon
l_int|6
suffix:semicolon
multiline_comment|/* RW: (M) PLL feedback clock multiplier */
DECL|member|Reserved2
r_int
r_int
id|Reserved2
suffix:colon
l_int|2
suffix:semicolon
multiline_comment|/* 0: reserved */
DECL|typedef|DSP_CLOCK_CONTROL_1
)brace
id|DSP_CLOCK_CONTROL_1
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|PllBypass
r_int
r_int
id|PllBypass
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* RW: PLL Bypass */
DECL|member|Reserved
r_int
r_int
id|Reserved
suffix:colon
l_int|15
suffix:semicolon
multiline_comment|/* 0: Reserved */
DECL|typedef|DSP_CLOCK_CONTROL_2
)brace
id|DSP_CLOCK_CONTROL_2
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|Latch8
r_int
r_int
id|Latch8
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Latch9
r_int
r_int
id|Latch9
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Latch10
r_int
r_int
id|Latch10
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Latch11
r_int
r_int
id|Latch11
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Latch12
r_int
r_int
id|Latch12
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Latch13
r_int
r_int
id|Latch13
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Latch14
r_int
r_int
id|Latch14
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Latch15
r_int
r_int
id|Latch15
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Mask8
r_int
r_int
id|Mask8
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Mask9
r_int
r_int
id|Mask9
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Mask10
r_int
r_int
id|Mask10
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Mask11
r_int
r_int
id|Mask11
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Mask12
r_int
r_int
id|Mask12
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Mask13
r_int
r_int
id|Mask13
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Mask14
r_int
r_int
id|Mask14
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Mask15
r_int
r_int
id|Mask15
suffix:colon
l_int|1
suffix:semicolon
DECL|typedef|DSP_GPIO_OUTPUT_DATA_15_8
)brace
id|DSP_GPIO_OUTPUT_DATA_15_8
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|Enable8
r_int
r_int
id|Enable8
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Enable9
r_int
r_int
id|Enable9
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Enable10
r_int
r_int
id|Enable10
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Enable11
r_int
r_int
id|Enable11
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Enable12
r_int
r_int
id|Enable12
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Enable13
r_int
r_int
id|Enable13
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Enable14
r_int
r_int
id|Enable14
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Enable15
r_int
r_int
id|Enable15
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Mask8
r_int
r_int
id|Mask8
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Mask9
r_int
r_int
id|Mask9
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Mask10
r_int
r_int
id|Mask10
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Mask11
r_int
r_int
id|Mask11
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Mask12
r_int
r_int
id|Mask12
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Mask13
r_int
r_int
id|Mask13
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Mask14
r_int
r_int
id|Mask14
suffix:colon
l_int|1
suffix:semicolon
DECL|member|Mask15
r_int
r_int
id|Mask15
suffix:colon
l_int|1
suffix:semicolon
DECL|typedef|DSP_GPIO_DRIVER_ENABLE_15_8
)brace
id|DSP_GPIO_DRIVER_ENABLE_15_8
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|GpioMode8
r_int
r_int
id|GpioMode8
suffix:colon
l_int|2
suffix:semicolon
DECL|member|GpioMode9
r_int
r_int
id|GpioMode9
suffix:colon
l_int|2
suffix:semicolon
DECL|member|GpioMode10
r_int
r_int
id|GpioMode10
suffix:colon
l_int|2
suffix:semicolon
DECL|member|GpioMode11
r_int
r_int
id|GpioMode11
suffix:colon
l_int|2
suffix:semicolon
DECL|member|GpioMode12
r_int
r_int
id|GpioMode12
suffix:colon
l_int|2
suffix:semicolon
DECL|member|GpioMode13
r_int
r_int
id|GpioMode13
suffix:colon
l_int|2
suffix:semicolon
DECL|member|GpioMode14
r_int
r_int
id|GpioMode14
suffix:colon
l_int|2
suffix:semicolon
DECL|member|GpioMode15
r_int
r_int
id|GpioMode15
suffix:colon
l_int|2
suffix:semicolon
DECL|typedef|DSP_GPIO_MODE_15_8
)brace
id|DSP_GPIO_MODE_15_8
suffix:semicolon
multiline_comment|/* Component masks that are defined in dspmgr.h */
DECL|macro|MW_ADC_MASK
mdefine_line|#define MW_ADC_MASK    0x0001
DECL|macro|MW_AIC2_MASK
mdefine_line|#define MW_AIC2_MASK   0x0006
DECL|macro|MW_MIDI_MASK
mdefine_line|#define MW_MIDI_MASK   0x0008
DECL|macro|MW_CDDAC_MASK
mdefine_line|#define MW_CDDAC_MASK  0x8001
DECL|macro|MW_AIC1_MASK
mdefine_line|#define MW_AIC1_MASK   0xE006
DECL|macro|MW_UART_MASK
mdefine_line|#define MW_UART_MASK   0xE00A
DECL|macro|MW_ACI_MASK
mdefine_line|#define MW_ACI_MASK    0xE00B
multiline_comment|/*&n;* Definition of 3780i configuration structure.  Unless otherwise stated,&n;* these values are provided as input to the 3780i support layer.  At present,&n;* the only values maintained by the 3780i support layer are the saved UART&n;* registers.&n;*/
DECL|struct|_DSP_3780I_CONFIG_SETTINGS
r_typedef
r_struct
id|_DSP_3780I_CONFIG_SETTINGS
(brace
multiline_comment|/* Location of base configuration register */
DECL|member|usBaseConfigIO
r_int
r_int
id|usBaseConfigIO
suffix:semicolon
multiline_comment|/* Enables for various DSP components */
DECL|member|bDSPEnabled
r_int
id|bDSPEnabled
suffix:semicolon
DECL|member|bModemEnabled
r_int
id|bModemEnabled
suffix:semicolon
DECL|member|bInterruptClaimed
r_int
id|bInterruptClaimed
suffix:semicolon
multiline_comment|/* IRQ, DMA, and Base I/O addresses for various DSP components */
DECL|member|usDspIrq
r_int
r_int
id|usDspIrq
suffix:semicolon
DECL|member|usDspDma
r_int
r_int
id|usDspDma
suffix:semicolon
DECL|member|usDspBaseIO
r_int
r_int
id|usDspBaseIO
suffix:semicolon
DECL|member|usUartIrq
r_int
r_int
id|usUartIrq
suffix:semicolon
DECL|member|usUartBaseIO
r_int
r_int
id|usUartBaseIO
suffix:semicolon
multiline_comment|/* IRQ modes for various DSP components */
DECL|member|bDspIrqActiveLow
r_int
id|bDspIrqActiveLow
suffix:semicolon
DECL|member|bUartIrqActiveLow
r_int
id|bUartIrqActiveLow
suffix:semicolon
DECL|member|bDspIrqPulse
r_int
id|bDspIrqPulse
suffix:semicolon
DECL|member|bUartIrqPulse
r_int
id|bUartIrqPulse
suffix:semicolon
multiline_comment|/* Card abilities */
DECL|member|uIps
r_int
id|uIps
suffix:semicolon
DECL|member|uDStoreSize
r_int
id|uDStoreSize
suffix:semicolon
DECL|member|uIStoreSize
r_int
id|uIStoreSize
suffix:semicolon
DECL|member|uDmaBandwidth
r_int
id|uDmaBandwidth
suffix:semicolon
multiline_comment|/* Adapter specific 3780i settings */
DECL|member|usNumTransfers
r_int
r_int
id|usNumTransfers
suffix:semicolon
DECL|member|usReRequest
r_int
r_int
id|usReRequest
suffix:semicolon
DECL|member|bEnableMEMCS16
r_int
id|bEnableMEMCS16
suffix:semicolon
DECL|member|usIsaMemCmdWidth
r_int
r_int
id|usIsaMemCmdWidth
suffix:semicolon
DECL|member|bGateIOCHRDY
r_int
id|bGateIOCHRDY
suffix:semicolon
DECL|member|bEnablePwrMgmt
r_int
id|bEnablePwrMgmt
suffix:semicolon
DECL|member|usHBusTimerLoadValue
r_int
r_int
id|usHBusTimerLoadValue
suffix:semicolon
DECL|member|bDisableLBusTimeout
r_int
id|bDisableLBusTimeout
suffix:semicolon
DECL|member|usN_Divisor
r_int
r_int
id|usN_Divisor
suffix:semicolon
DECL|member|usM_Multiplier
r_int
r_int
id|usM_Multiplier
suffix:semicolon
DECL|member|bPllBypass
r_int
id|bPllBypass
suffix:semicolon
DECL|member|usChipletEnable
r_int
r_int
id|usChipletEnable
suffix:semicolon
multiline_comment|/* Used with the chip reset register to enable specific chiplets */
multiline_comment|/* Saved UART registers. These are maintained by the 3780i support layer. */
DECL|member|bUartSaved
r_int
id|bUartSaved
suffix:semicolon
multiline_comment|/* True after a successful save of the UART registers */
DECL|member|ucIER
r_int
r_char
id|ucIER
suffix:semicolon
multiline_comment|/* Interrupt enable register */
DECL|member|ucFCR
r_int
r_char
id|ucFCR
suffix:semicolon
multiline_comment|/* FIFO control register */
DECL|member|ucLCR
r_int
r_char
id|ucLCR
suffix:semicolon
multiline_comment|/* Line control register */
DECL|member|ucMCR
r_int
r_char
id|ucMCR
suffix:semicolon
multiline_comment|/* Modem control register */
DECL|member|ucSCR
r_int
r_char
id|ucSCR
suffix:semicolon
multiline_comment|/* Scratch register */
DECL|member|ucDLL
r_int
r_char
id|ucDLL
suffix:semicolon
multiline_comment|/* Divisor latch, low byte */
DECL|member|ucDLM
r_int
r_char
id|ucDLM
suffix:semicolon
multiline_comment|/* Divisor latch, high byte */
DECL|typedef|DSP_3780I_CONFIG_SETTINGS
)brace
id|DSP_3780I_CONFIG_SETTINGS
suffix:semicolon
multiline_comment|/* 3780i support functions */
r_int
id|dsp3780I_EnableDSP
c_func
(paren
id|DSP_3780I_CONFIG_SETTINGS
op_star
id|pSettings
comma
r_int
r_int
op_star
id|pIrqMap
comma
r_int
r_int
op_star
id|pDmaMap
)paren
suffix:semicolon
r_int
id|dsp3780I_DisableDSP
c_func
(paren
id|DSP_3780I_CONFIG_SETTINGS
op_star
id|pSettings
)paren
suffix:semicolon
r_int
id|dsp3780I_Reset
c_func
(paren
id|DSP_3780I_CONFIG_SETTINGS
op_star
id|pSettings
)paren
suffix:semicolon
r_int
id|dsp3780I_Run
c_func
(paren
id|DSP_3780I_CONFIG_SETTINGS
op_star
id|pSettings
)paren
suffix:semicolon
r_int
id|dsp3780I_ReadDStore
c_func
(paren
r_int
r_int
id|usDspBaseIO
comma
r_void
op_star
id|pvBuffer
comma
r_int
id|uCount
comma
r_int
r_int
id|ulDSPAddr
)paren
suffix:semicolon
r_int
id|dsp3780I_ReadAndClearDStore
c_func
(paren
r_int
r_int
id|usDspBaseIO
comma
r_void
op_star
id|pvBuffer
comma
r_int
id|uCount
comma
r_int
r_int
id|ulDSPAddr
)paren
suffix:semicolon
r_int
id|dsp3780I_WriteDStore
c_func
(paren
r_int
r_int
id|usDspBaseIO
comma
r_void
op_star
id|pvBuffer
comma
r_int
id|uCount
comma
r_int
r_int
id|ulDSPAddr
)paren
suffix:semicolon
r_int
id|dsp3780I_ReadIStore
c_func
(paren
r_int
r_int
id|usDspBaseIO
comma
r_void
op_star
id|pvBuffer
comma
r_int
id|uCount
comma
r_int
r_int
id|ulDSPAddr
)paren
suffix:semicolon
r_int
id|dsp3780I_WriteIStore
c_func
(paren
r_int
r_int
id|usDspBaseIO
comma
r_void
op_star
id|pvBuffer
comma
r_int
id|uCount
comma
r_int
r_int
id|ulDSPAddr
)paren
suffix:semicolon
r_int
r_int
id|dsp3780I_ReadMsaCfg
c_func
(paren
r_int
r_int
id|usDspBaseIO
comma
r_int
r_int
id|ulMsaAddr
)paren
suffix:semicolon
r_void
id|dsp3780I_WriteMsaCfg
c_func
(paren
r_int
r_int
id|usDspBaseIO
comma
r_int
r_int
id|ulMsaAddr
comma
r_int
r_int
id|usValue
)paren
suffix:semicolon
r_void
id|dsp3780I_WriteGenCfg
c_func
(paren
r_int
r_int
id|usDspBaseIO
comma
r_int
id|uIndex
comma
r_int
r_char
id|ucValue
)paren
suffix:semicolon
r_int
r_char
id|dsp3780I_ReadGenCfg
c_func
(paren
r_int
r_int
id|usDspBaseIO
comma
r_int
id|uIndex
)paren
suffix:semicolon
r_int
id|dsp3780I_GetIPCSource
c_func
(paren
r_int
r_int
id|usDspBaseIO
comma
r_int
r_int
op_star
id|pusIPCSource
)paren
suffix:semicolon
multiline_comment|/* I/O port access macros */
DECL|macro|MKWORD
mdefine_line|#define MKWORD(var) (*((unsigned short *)(&amp;var)))
DECL|macro|MKBYTE
mdefine_line|#define MKBYTE(var) (*((unsigned char *)(&amp;var)))
DECL|macro|WriteMsaCfg
mdefine_line|#define WriteMsaCfg(addr,value) dsp3780I_WriteMsaCfg(usDspBaseIO,addr,value)
DECL|macro|ReadMsaCfg
mdefine_line|#define ReadMsaCfg(addr) dsp3780I_ReadMsaCfg(usDspBaseIO,addr)
DECL|macro|WriteGenCfg
mdefine_line|#define WriteGenCfg(index,value) dsp3780I_WriteGenCfg(usDspBaseIO,index,value)
DECL|macro|ReadGenCfg
mdefine_line|#define ReadGenCfg(index) dsp3780I_ReadGenCfg(usDspBaseIO,index)
DECL|macro|InWordDsp
mdefine_line|#define InWordDsp(index)          inw(usDspBaseIO+index)
DECL|macro|InByteDsp
mdefine_line|#define InByteDsp(index)          inb(usDspBaseIO+index)
DECL|macro|OutWordDsp
mdefine_line|#define OutWordDsp(index,value)   outw(value,usDspBaseIO+index)
DECL|macro|OutByteDsp
mdefine_line|#define OutByteDsp(index,value)   outb(value,usDspBaseIO+index)
macro_line|#endif
eof
