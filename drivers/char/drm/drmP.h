multiline_comment|/**&n; * &bslash;file drmP.h &n; * Private header for Direct Rendering Manager&n; * &n; * &bslash;author Rickard E. (Rik) Faith &lt;faith@valinux.com&gt;&n; * &bslash;author Gareth Hughes &lt;gareth@valinux.com&gt;&n; */
multiline_comment|/*&n; * Copyright 1999 Precision Insight, Inc., Cedar Park, Texas.&n; * Copyright 2000 VA Linux Systems, Inc., Sunnyvale, California.&n; * All rights reserved.&n; *&n; * Permission is hereby granted, free of charge, to any person obtaining a&n; * copy of this software and associated documentation files (the &quot;Software&quot;),&n; * to deal in the Software without restriction, including without limitation&n; * the rights to use, copy, modify, merge, publish, distribute, sublicense,&n; * and/or sell copies of the Software, and to permit persons to whom the&n; * Software is furnished to do so, subject to the following conditions:&n; *&n; * The above copyright notice and this permission notice (including the next&n; * paragraph) shall be included in all copies or substantial portions of the&n; * Software.&n; *&n; * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR&n; * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&n; * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL&n; * VA LINUX SYSTEMS AND/OR ITS SUPPLIERS BE LIABLE FOR ANY CLAIM, DAMAGES OR&n; * OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE,&n; * ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR&n; * OTHER DEALINGS IN THE SOFTWARE.&n; */
macro_line|#ifndef _DRM_P_H_
DECL|macro|_DRM_P_H_
mdefine_line|#define _DRM_P_H_
macro_line|#ifdef __KERNEL__
macro_line|#ifdef __alpha__
multiline_comment|/* add include of current.h so that &quot;current&quot; is defined&n; * before static inline funcs in wait.h. Doing this so we&n; * can build the DRM (part of PI DRI). 4/21/2000 S + B */
macro_line|#include &lt;asm/current.h&gt;
macro_line|#endif /* __alpha__ */
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/module.h&gt;
macro_line|#include &lt;linux/kernel.h&gt;
macro_line|#include &lt;linux/miscdevice.h&gt;
macro_line|#include &lt;linux/fs.h&gt;
macro_line|#include &lt;linux/proc_fs.h&gt;
macro_line|#include &lt;linux/init.h&gt;
macro_line|#include &lt;linux/file.h&gt;
macro_line|#include &lt;linux/pci.h&gt;
macro_line|#include &lt;linux/version.h&gt;
macro_line|#include &lt;linux/jiffies.h&gt;
macro_line|#include &lt;linux/smp_lock.h&gt;&t;/* For (un)lock_kernel */
macro_line|#include &lt;linux/mm.h&gt;
macro_line|#if defined(__alpha__) || defined(__powerpc__)
macro_line|#include &lt;asm/pgtable.h&gt; /* For pte_wrprotect */
macro_line|#endif
macro_line|#include &lt;asm/io.h&gt;
macro_line|#include &lt;asm/mman.h&gt;
macro_line|#include &lt;asm/uaccess.h&gt;
macro_line|#ifdef CONFIG_MTRR
macro_line|#include &lt;asm/mtrr.h&gt;
macro_line|#endif
macro_line|#if defined(CONFIG_AGP) || defined(CONFIG_AGP_MODULE)
macro_line|#include &lt;linux/types.h&gt;
macro_line|#include &lt;linux/agp_backend.h&gt;
macro_line|#endif
macro_line|#include &lt;linux/workqueue.h&gt;
macro_line|#include &lt;linux/poll.h&gt;
macro_line|#include &lt;asm/pgalloc.h&gt;
macro_line|#include &quot;drm.h&quot;
macro_line|#include &quot;drm_os_linux.h&quot;
multiline_comment|/***********************************************************************/
multiline_comment|/** &bslash;name DRM template customization defaults */
multiline_comment|/*@{*/
macro_line|#ifndef __HAVE_AGP
DECL|macro|__HAVE_AGP
mdefine_line|#define __HAVE_AGP&t;&t;0
macro_line|#endif
macro_line|#ifndef __HAVE_MTRR
DECL|macro|__HAVE_MTRR
mdefine_line|#define __HAVE_MTRR&t;&t;0
macro_line|#endif
macro_line|#ifndef __HAVE_CTX_BITMAP
DECL|macro|__HAVE_CTX_BITMAP
mdefine_line|#define __HAVE_CTX_BITMAP&t;0
macro_line|#endif
macro_line|#ifndef __HAVE_DMA
DECL|macro|__HAVE_DMA
mdefine_line|#define __HAVE_DMA&t;&t;0
macro_line|#endif
macro_line|#ifndef __HAVE_IRQ
DECL|macro|__HAVE_IRQ
mdefine_line|#define __HAVE_IRQ&t;&t;0
macro_line|#endif
macro_line|#ifndef __HAVE_DMA_WAITLIST
DECL|macro|__HAVE_DMA_WAITLIST
mdefine_line|#define __HAVE_DMA_WAITLIST&t;0
macro_line|#endif
DECL|macro|__REALLY_HAVE_AGP
mdefine_line|#define __REALLY_HAVE_AGP&t;(__HAVE_AGP &amp;&amp; (defined(CONFIG_AGP) || &bslash;&n;&t;&t;&t;&t;&t;&t;defined(CONFIG_AGP_MODULE)))
DECL|macro|__REALLY_HAVE_MTRR
mdefine_line|#define __REALLY_HAVE_MTRR&t;(__HAVE_MTRR &amp;&amp; defined(CONFIG_MTRR))
DECL|macro|__REALLY_HAVE_SG
mdefine_line|#define __REALLY_HAVE_SG&t;(__HAVE_SG)
multiline_comment|/*@}*/
multiline_comment|/***********************************************************************/
multiline_comment|/** &bslash;name Begin the DRM... */
multiline_comment|/*@{*/
DECL|macro|DRM_DEBUG_CODE
mdefine_line|#define DRM_DEBUG_CODE 2&t;  /**&lt; Include debugging code if &gt; 1, then&n;&t;&t;&t;&t;     also include looping detection. */
DECL|macro|DRM_HASH_SIZE
mdefine_line|#define DRM_HASH_SIZE&t;      16 /**&lt; Size of key hash table. Must be power of 2. */
DECL|macro|DRM_KERNEL_CONTEXT
mdefine_line|#define DRM_KERNEL_CONTEXT    0&t; /**&lt; Change drm_resctx if changed */
DECL|macro|DRM_RESERVED_CONTEXTS
mdefine_line|#define DRM_RESERVED_CONTEXTS 1&t; /**&lt; Change drm_resctx if changed */
DECL|macro|DRM_LOOPING_LIMIT
mdefine_line|#define DRM_LOOPING_LIMIT     5000000
DECL|macro|DRM_BSZ
mdefine_line|#define DRM_BSZ&t;&t;      1024 /**&lt; Buffer size for /dev/drm? output */
DECL|macro|DRM_TIME_SLICE
mdefine_line|#define DRM_TIME_SLICE&t;      (HZ/20)  /**&lt; Time slice for GLXContexts */
DECL|macro|DRM_LOCK_SLICE
mdefine_line|#define DRM_LOCK_SLICE&t;      1&t;/**&lt; Time slice for lock, in jiffies */
DECL|macro|DRM_FLAG_DEBUG
mdefine_line|#define DRM_FLAG_DEBUG&t;  0x01
DECL|macro|DRM_MEM_DMA
mdefine_line|#define DRM_MEM_DMA&t;   0
DECL|macro|DRM_MEM_SAREA
mdefine_line|#define DRM_MEM_SAREA&t;   1
DECL|macro|DRM_MEM_DRIVER
mdefine_line|#define DRM_MEM_DRIVER&t;   2
DECL|macro|DRM_MEM_MAGIC
mdefine_line|#define DRM_MEM_MAGIC&t;   3
DECL|macro|DRM_MEM_IOCTLS
mdefine_line|#define DRM_MEM_IOCTLS&t;   4
DECL|macro|DRM_MEM_MAPS
mdefine_line|#define DRM_MEM_MAPS&t;   5
DECL|macro|DRM_MEM_VMAS
mdefine_line|#define DRM_MEM_VMAS&t;   6
DECL|macro|DRM_MEM_BUFS
mdefine_line|#define DRM_MEM_BUFS&t;   7
DECL|macro|DRM_MEM_SEGS
mdefine_line|#define DRM_MEM_SEGS&t;   8
DECL|macro|DRM_MEM_PAGES
mdefine_line|#define DRM_MEM_PAGES&t;   9
DECL|macro|DRM_MEM_FILES
mdefine_line|#define DRM_MEM_FILES&t;  10
DECL|macro|DRM_MEM_QUEUES
mdefine_line|#define DRM_MEM_QUEUES&t;  11
DECL|macro|DRM_MEM_CMDS
mdefine_line|#define DRM_MEM_CMDS&t;  12
DECL|macro|DRM_MEM_MAPPINGS
mdefine_line|#define DRM_MEM_MAPPINGS  13
DECL|macro|DRM_MEM_BUFLISTS
mdefine_line|#define DRM_MEM_BUFLISTS  14
DECL|macro|DRM_MEM_AGPLISTS
mdefine_line|#define DRM_MEM_AGPLISTS  15
DECL|macro|DRM_MEM_TOTALAGP
mdefine_line|#define DRM_MEM_TOTALAGP  16
DECL|macro|DRM_MEM_BOUNDAGP
mdefine_line|#define DRM_MEM_BOUNDAGP  17
DECL|macro|DRM_MEM_CTXBITMAP
mdefine_line|#define DRM_MEM_CTXBITMAP 18
DECL|macro|DRM_MEM_STUB
mdefine_line|#define DRM_MEM_STUB      19
DECL|macro|DRM_MEM_SGLISTS
mdefine_line|#define DRM_MEM_SGLISTS   20
DECL|macro|DRM_MEM_CTXLIST
mdefine_line|#define DRM_MEM_CTXLIST  21
DECL|macro|DRM_MAX_CTXBITMAP
mdefine_line|#define DRM_MAX_CTXBITMAP (PAGE_SIZE * 8)
multiline_comment|/*@}*/
multiline_comment|/***********************************************************************/
multiline_comment|/** &bslash;name Backward compatibility section */
multiline_comment|/*@{*/
macro_line|#ifndef MODULE_LICENSE
DECL|macro|MODULE_LICENSE
mdefine_line|#define MODULE_LICENSE(x) 
macro_line|#endif
macro_line|#ifndef preempt_disable
DECL|macro|preempt_disable
mdefine_line|#define preempt_disable()
DECL|macro|preempt_enable
mdefine_line|#define preempt_enable()
macro_line|#endif
macro_line|#ifndef pte_offset_map 
DECL|macro|pte_offset_map
mdefine_line|#define pte_offset_map pte_offset
DECL|macro|pte_unmap
mdefine_line|#define pte_unmap(pte)
macro_line|#endif
macro_line|#if LINUX_VERSION_CODE &lt; KERNEL_VERSION(2,4,19)
DECL|function|vmalloc_to_page
r_static
r_inline
r_struct
id|page
op_star
id|vmalloc_to_page
c_func
(paren
r_void
op_star
id|vmalloc_addr
)paren
(brace
r_int
r_int
id|addr
op_assign
(paren
r_int
r_int
)paren
id|vmalloc_addr
suffix:semicolon
r_struct
id|page
op_star
id|page
op_assign
l_int|NULL
suffix:semicolon
id|pgd_t
op_star
id|pgd
op_assign
id|pgd_offset_k
c_func
(paren
id|addr
)paren
suffix:semicolon
id|pmd_t
op_star
id|pmd
suffix:semicolon
id|pte_t
op_star
id|ptep
comma
id|pte
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|pgd_none
c_func
(paren
op_star
id|pgd
)paren
)paren
(brace
id|pmd
op_assign
id|pmd_offset
c_func
(paren
id|pgd
comma
id|addr
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|pmd_none
c_func
(paren
op_star
id|pmd
)paren
)paren
(brace
id|preempt_disable
c_func
(paren
)paren
suffix:semicolon
id|ptep
op_assign
id|pte_offset_map
c_func
(paren
id|pmd
comma
id|addr
)paren
suffix:semicolon
id|pte
op_assign
op_star
id|ptep
suffix:semicolon
r_if
c_cond
(paren
id|pte_present
c_func
(paren
id|pte
)paren
)paren
id|page
op_assign
id|pte_page
c_func
(paren
id|pte
)paren
suffix:semicolon
id|pte_unmap
c_func
(paren
id|ptep
)paren
suffix:semicolon
id|preempt_enable
c_func
(paren
)paren
suffix:semicolon
)brace
)brace
r_return
id|page
suffix:semicolon
)brace
macro_line|#endif
macro_line|#if LINUX_VERSION_CODE &lt; KERNEL_VERSION(2,5,0)
DECL|macro|DRM_RPR_ARG
mdefine_line|#define DRM_RPR_ARG(vma)
macro_line|#else
DECL|macro|DRM_RPR_ARG
mdefine_line|#define DRM_RPR_ARG(vma) vma,
macro_line|#endif
DECL|macro|VM_OFFSET
mdefine_line|#define VM_OFFSET(vma) ((vma)-&gt;vm_pgoff &lt;&lt; PAGE_SHIFT)
multiline_comment|/*@}*/
multiline_comment|/***********************************************************************/
multiline_comment|/** &bslash;name Macros to make printk easier */
multiline_comment|/*@{*/
multiline_comment|/**&n; * Error output.&n; *&n; * &bslash;param fmt printf() like format string.&n; * &bslash;param arg arguments&n; */
DECL|macro|DRM_ERROR
mdefine_line|#define DRM_ERROR(fmt, arg...) &bslash;&n;&t;printk(KERN_ERR &quot;[&quot; DRM_NAME &quot;:%s] *ERROR* &quot; fmt , __FUNCTION__ , ##arg)
multiline_comment|/**&n; * Memory error output.&n; *&n; * &bslash;param area memory area where the error occurred.&n; * &bslash;param fmt printf() like format string.&n; * &bslash;param arg arguments&n; */
DECL|macro|DRM_MEM_ERROR
mdefine_line|#define DRM_MEM_ERROR(area, fmt, arg...) &bslash;&n;&t;printk(KERN_ERR &quot;[&quot; DRM_NAME &quot;:%s:%s] *ERROR* &quot; fmt , __FUNCTION__, &bslash;&n;&t;       DRM(mem_stats)[area].name , ##arg)
DECL|macro|DRM_INFO
mdefine_line|#define DRM_INFO(fmt, arg...)  printk(KERN_INFO &quot;[&quot; DRM_NAME &quot;] &quot; fmt , ##arg)
multiline_comment|/**&n; * Debug output.&n; * &n; * &bslash;param fmt printf() like format string.&n; * &bslash;param arg arguments&n; */
macro_line|#if DRM_DEBUG_CODE
DECL|macro|DRM_DEBUG
mdefine_line|#define DRM_DEBUG(fmt, arg...)&t;&t;&t;&t;&t;&t;&bslash;&n;&t;do {&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;&t;if ( DRM(flags) &amp; DRM_FLAG_DEBUG )&t;&t;&t;&bslash;&n;&t;&t;&t;printk(KERN_DEBUG&t;&t;&t;&t;&bslash;&n;&t;&t;&t;       &quot;[&quot; DRM_NAME &quot;:%s] &quot; fmt ,&t;&bslash;&n;&t;&t;&t;       __FUNCTION__ , ##arg);&t;&t;&t;&bslash;&n;&t;} while (0)
macro_line|#else
DECL|macro|DRM_DEBUG
mdefine_line|#define DRM_DEBUG(fmt, arg...)&t;&t; do { } while (0)
macro_line|#endif
DECL|macro|DRM_PROC_LIMIT
mdefine_line|#define DRM_PROC_LIMIT (PAGE_SIZE-80)
DECL|macro|DRM_PROC_PRINT
mdefine_line|#define DRM_PROC_PRINT(fmt, arg...)&t;&t;&t;&t;&t;&bslash;&n;   len += sprintf(&amp;buf[len], fmt , ##arg);&t;&t;&t;&t;&bslash;&n;   if (len &gt; DRM_PROC_LIMIT) { *eof = 1; return len - offset; }
DECL|macro|DRM_PROC_PRINT_RET
mdefine_line|#define DRM_PROC_PRINT_RET(ret, fmt, arg...)&t;&t;&t;&t;&bslash;&n;   len += sprintf(&amp;buf[len], fmt , ##arg);&t;&t;&t;&t;&bslash;&n;   if (len &gt; DRM_PROC_LIMIT) { ret; *eof = 1; return len - offset; }
multiline_comment|/*@}*/
multiline_comment|/***********************************************************************/
multiline_comment|/** &bslash;name Mapping helper macros */
multiline_comment|/*@{*/
DECL|macro|DRM_IOREMAP
mdefine_line|#define DRM_IOREMAP(map, dev)&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;(map)-&gt;handle = DRM(ioremap)( (map)-&gt;offset, (map)-&gt;size, (dev) )
DECL|macro|DRM_IOREMAP_NOCACHE
mdefine_line|#define DRM_IOREMAP_NOCACHE(map, dev)&t;&t;&t;&t;&t;&t;&bslash;&n;&t;(map)-&gt;handle = DRM(ioremap_nocache)((map)-&gt;offset, (map)-&gt;size, (dev))
DECL|macro|DRM_IOREMAPFREE
mdefine_line|#define DRM_IOREMAPFREE(map, dev)&t;&t;&t;&t;&t;&t;&bslash;&n;&t;do {&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;&t;if ( (map)-&gt;handle &amp;&amp; (map)-&gt;size )&t;&t;&t;&t;&bslash;&n;&t;&t;&t;DRM(ioremapfree)( (map)-&gt;handle, (map)-&gt;size, (dev) );&t;&bslash;&n;&t;} while (0)
multiline_comment|/**&n; * Find mapping.&n; *&n; * &bslash;param _map matching mapping if found, untouched otherwise.&n; * &bslash;param _o offset.&n; *&n; * Expects the existence of a local variable named &bslash;p dev pointing to the&n; * drm_device structure.&n; */
DECL|macro|DRM_FIND_MAP
mdefine_line|#define DRM_FIND_MAP(_map, _o)&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;do {&t;&t;&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;struct list_head *_list;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;list_for_each( _list, &amp;dev-&gt;maplist-&gt;head ) {&t;&t;&t;&t;&t;&bslash;&n;&t;&t;drm_map_list_t *_entry = list_entry( _list, drm_map_list_t, head );&t;&bslash;&n;&t;&t;if ( _entry-&gt;map &amp;&amp;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;&t;     _entry-&gt;map-&gt;offset == (_o) ) {&t;&t;&t;&t;&t;&bslash;&n;&t;&t;&t;(_map) = _entry-&gt;map;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;&t;&t;break;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n; &t;&t;}&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;}&t;&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;} while(0)
multiline_comment|/**&n; * Drop mapping.&n; *&n; * &bslash;sa #DRM_FIND_MAP.&n; */
DECL|macro|DRM_DROP_MAP
mdefine_line|#define DRM_DROP_MAP(_map)
multiline_comment|/*@}*/
multiline_comment|/***********************************************************************/
multiline_comment|/** &bslash;name Internal types and structures */
multiline_comment|/*@{*/
DECL|macro|DRM_ARRAY_SIZE
mdefine_line|#define DRM_ARRAY_SIZE(x) (sizeof(x)/sizeof(x[0]))
DECL|macro|DRM_MIN
mdefine_line|#define DRM_MIN(a,b) ((a)&lt;(b)?(a):(b))
DECL|macro|DRM_MAX
mdefine_line|#define DRM_MAX(a,b) ((a)&gt;(b)?(a):(b))
DECL|macro|DRM_LEFTCOUNT
mdefine_line|#define DRM_LEFTCOUNT(x) (((x)-&gt;rp + (x)-&gt;count - (x)-&gt;wp) % ((x)-&gt;count + 1))
DECL|macro|DRM_BUFCOUNT
mdefine_line|#define DRM_BUFCOUNT(x) ((x)-&gt;count - DRM_LEFTCOUNT(x))
DECL|macro|DRM_WAITCOUNT
mdefine_line|#define DRM_WAITCOUNT(dev,idx) DRM_BUFCOUNT(&amp;dev-&gt;queuelist[idx]-&gt;waitlist)
DECL|macro|DRM_IF_VERSION
mdefine_line|#define DRM_IF_VERSION(maj, min) (maj &lt;&lt; 16 | min)
multiline_comment|/**&n; * Get the private SAREA mapping.&n; *&n; * &bslash;param _dev DRM device.&n; * &bslash;param _ctx context number.&n; * &bslash;param _map output mapping.&n; */
DECL|macro|DRM_GET_PRIV_SAREA
mdefine_line|#define DRM_GET_PRIV_SAREA(_dev, _ctx, _map) do {&t;&bslash;&n;&t;(_map) = (_dev)-&gt;context_sareas[_ctx];&t;&t;&bslash;&n;} while(0)
multiline_comment|/**&n; * Test that the hardware lock is held by the caller, returning otherwise.&n; *&n; * &bslash;param dev DRM device.&n; * &bslash;param filp file pointer of the caller.&n; */
DECL|macro|LOCK_TEST_WITH_RETURN
mdefine_line|#define LOCK_TEST_WITH_RETURN( dev, filp )&t;&t;&t;&t;&bslash;&n;do {&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;if ( !_DRM_LOCK_IS_HELD( dev-&gt;lock.hw_lock-&gt;lock ) ||&t;&t;&bslash;&n;&t;     dev-&gt;lock.filp != filp ) {&t;&t;&t;&t;&bslash;&n;&t;&t;DRM_ERROR( &quot;%s called without lock held&bslash;n&quot;,&t;&t;&bslash;&n;&t;&t;&t;   __FUNCTION__ );&t;&t;&t;&t;&bslash;&n;&t;&t;return -EINVAL;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;}&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;} while (0)
multiline_comment|/**&n; * Ioctl function type.&n; *&n; * &bslash;param inode device inode.&n; * &bslash;param filp file pointer.&n; * &bslash;param cmd command.&n; * &bslash;param arg argument.&n; */
DECL|typedef|drm_ioctl_t
r_typedef
r_int
id|drm_ioctl_t
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
DECL|struct|drm_ioctl_desc
r_typedef
r_struct
id|drm_ioctl_desc
(brace
DECL|member|func
id|drm_ioctl_t
op_star
id|func
suffix:semicolon
DECL|member|auth_needed
r_int
id|auth_needed
suffix:semicolon
DECL|member|root_only
r_int
id|root_only
suffix:semicolon
DECL|typedef|drm_ioctl_desc_t
)brace
id|drm_ioctl_desc_t
suffix:semicolon
DECL|struct|drm_devstate
r_typedef
r_struct
id|drm_devstate
(brace
DECL|member|owner
id|pid_t
id|owner
suffix:semicolon
multiline_comment|/**&lt; X server pid holding x_lock */
DECL|typedef|drm_devstate_t
)brace
id|drm_devstate_t
suffix:semicolon
DECL|struct|drm_magic_entry
r_typedef
r_struct
id|drm_magic_entry
(brace
DECL|member|magic
id|drm_magic_t
id|magic
suffix:semicolon
DECL|member|priv
r_struct
id|drm_file
op_star
id|priv
suffix:semicolon
DECL|member|next
r_struct
id|drm_magic_entry
op_star
id|next
suffix:semicolon
DECL|typedef|drm_magic_entry_t
)brace
id|drm_magic_entry_t
suffix:semicolon
DECL|struct|drm_magic_head
r_typedef
r_struct
id|drm_magic_head
(brace
DECL|member|head
r_struct
id|drm_magic_entry
op_star
id|head
suffix:semicolon
DECL|member|tail
r_struct
id|drm_magic_entry
op_star
id|tail
suffix:semicolon
DECL|typedef|drm_magic_head_t
)brace
id|drm_magic_head_t
suffix:semicolon
DECL|struct|drm_vma_entry
r_typedef
r_struct
id|drm_vma_entry
(brace
DECL|member|vma
r_struct
id|vm_area_struct
op_star
id|vma
suffix:semicolon
DECL|member|next
r_struct
id|drm_vma_entry
op_star
id|next
suffix:semicolon
DECL|member|pid
id|pid_t
id|pid
suffix:semicolon
DECL|typedef|drm_vma_entry_t
)brace
id|drm_vma_entry_t
suffix:semicolon
multiline_comment|/**&n; * DMA buffer.&n; */
DECL|struct|drm_buf
r_typedef
r_struct
id|drm_buf
(brace
DECL|member|idx
r_int
id|idx
suffix:semicolon
multiline_comment|/**&lt; Index into master buflist */
DECL|member|total
r_int
id|total
suffix:semicolon
multiline_comment|/**&lt; Buffer size */
DECL|member|order
r_int
id|order
suffix:semicolon
multiline_comment|/**&lt; log-base-2(total) */
DECL|member|used
r_int
id|used
suffix:semicolon
multiline_comment|/**&lt; Amount of buffer in use (for DMA) */
DECL|member|offset
r_int
r_int
id|offset
suffix:semicolon
multiline_comment|/**&lt; Byte offset (used internally) */
DECL|member|address
r_void
op_star
id|address
suffix:semicolon
multiline_comment|/**&lt; Address of buffer */
DECL|member|bus_address
r_int
r_int
id|bus_address
suffix:semicolon
multiline_comment|/**&lt; Bus address of buffer */
DECL|member|next
r_struct
id|drm_buf
op_star
id|next
suffix:semicolon
multiline_comment|/**&lt; Kernel-only: used for free list */
DECL|member|waiting
id|__volatile__
r_int
id|waiting
suffix:semicolon
multiline_comment|/**&lt; On kernel DMA queue */
DECL|member|pending
id|__volatile__
r_int
id|pending
suffix:semicolon
multiline_comment|/**&lt; On hardware DMA queue */
DECL|member|dma_wait
id|wait_queue_head_t
id|dma_wait
suffix:semicolon
multiline_comment|/**&lt; Processes waiting */
DECL|member|filp
r_struct
id|file
op_star
id|filp
suffix:semicolon
multiline_comment|/**&lt; Pointer to holding file descr */
DECL|member|context
r_int
id|context
suffix:semicolon
multiline_comment|/**&lt; Kernel queue for this buffer */
DECL|member|while_locked
r_int
id|while_locked
suffix:semicolon
multiline_comment|/**&lt; Dispatch this buffer while locked */
r_enum
(brace
DECL|enumerator|DRM_LIST_NONE
id|DRM_LIST_NONE
op_assign
l_int|0
comma
DECL|enumerator|DRM_LIST_FREE
id|DRM_LIST_FREE
op_assign
l_int|1
comma
DECL|enumerator|DRM_LIST_WAIT
id|DRM_LIST_WAIT
op_assign
l_int|2
comma
DECL|enumerator|DRM_LIST_PEND
id|DRM_LIST_PEND
op_assign
l_int|3
comma
DECL|enumerator|DRM_LIST_PRIO
id|DRM_LIST_PRIO
op_assign
l_int|4
comma
DECL|enumerator|DRM_LIST_RECLAIM
id|DRM_LIST_RECLAIM
op_assign
l_int|5
DECL|member|list
)brace
id|list
suffix:semicolon
multiline_comment|/**&lt; Which list we&squot;re on */
DECL|member|dev_priv_size
r_int
id|dev_priv_size
suffix:semicolon
multiline_comment|/**&lt; Size of buffer private storage */
DECL|member|dev_private
r_void
op_star
id|dev_private
suffix:semicolon
multiline_comment|/**&lt; Per-buffer private storage */
DECL|typedef|drm_buf_t
)brace
id|drm_buf_t
suffix:semicolon
multiline_comment|/** bufs is one longer than it has to be */
DECL|struct|drm_waitlist
r_typedef
r_struct
id|drm_waitlist
(brace
DECL|member|count
r_int
id|count
suffix:semicolon
multiline_comment|/**&lt; Number of possible buffers */
DECL|member|bufs
id|drm_buf_t
op_star
op_star
id|bufs
suffix:semicolon
multiline_comment|/**&lt; List of pointers to buffers */
DECL|member|rp
id|drm_buf_t
op_star
op_star
id|rp
suffix:semicolon
multiline_comment|/**&lt; Read pointer */
DECL|member|wp
id|drm_buf_t
op_star
op_star
id|wp
suffix:semicolon
multiline_comment|/**&lt; Write pointer */
DECL|member|end
id|drm_buf_t
op_star
op_star
id|end
suffix:semicolon
multiline_comment|/**&lt; End pointer */
DECL|member|read_lock
id|spinlock_t
id|read_lock
suffix:semicolon
DECL|member|write_lock
id|spinlock_t
id|write_lock
suffix:semicolon
DECL|typedef|drm_waitlist_t
)brace
id|drm_waitlist_t
suffix:semicolon
DECL|struct|drm_freelist
r_typedef
r_struct
id|drm_freelist
(brace
DECL|member|initialized
r_int
id|initialized
suffix:semicolon
multiline_comment|/**&lt; Freelist in use */
DECL|member|count
id|atomic_t
id|count
suffix:semicolon
multiline_comment|/**&lt; Number of free buffers */
DECL|member|next
id|drm_buf_t
op_star
id|next
suffix:semicolon
multiline_comment|/**&lt; End pointer */
DECL|member|waiting
id|wait_queue_head_t
id|waiting
suffix:semicolon
multiline_comment|/**&lt; Processes waiting on free bufs */
DECL|member|low_mark
r_int
id|low_mark
suffix:semicolon
multiline_comment|/**&lt; Low water mark */
DECL|member|high_mark
r_int
id|high_mark
suffix:semicolon
multiline_comment|/**&lt; High water mark */
DECL|member|wfh
id|atomic_t
id|wfh
suffix:semicolon
multiline_comment|/**&lt; If waiting for high mark */
DECL|member|lock
id|spinlock_t
id|lock
suffix:semicolon
DECL|typedef|drm_freelist_t
)brace
id|drm_freelist_t
suffix:semicolon
multiline_comment|/**&n; * Buffer entry.  There is one of this for each buffer size order.&n; */
DECL|struct|drm_buf_entry
r_typedef
r_struct
id|drm_buf_entry
(brace
DECL|member|buf_size
r_int
id|buf_size
suffix:semicolon
multiline_comment|/**&lt; size */
DECL|member|buf_count
r_int
id|buf_count
suffix:semicolon
multiline_comment|/**&lt; number of buffers */
DECL|member|buflist
id|drm_buf_t
op_star
id|buflist
suffix:semicolon
multiline_comment|/**&lt; buffer list */
DECL|member|seg_count
r_int
id|seg_count
suffix:semicolon
DECL|member|page_order
r_int
id|page_order
suffix:semicolon
DECL|member|seglist
r_int
r_int
op_star
id|seglist
suffix:semicolon
DECL|member|freelist
id|drm_freelist_t
id|freelist
suffix:semicolon
DECL|typedef|drm_buf_entry_t
)brace
id|drm_buf_entry_t
suffix:semicolon
multiline_comment|/** File private data */
DECL|struct|drm_file
r_typedef
r_struct
id|drm_file
(brace
DECL|member|authenticated
r_int
id|authenticated
suffix:semicolon
DECL|member|minor
r_int
id|minor
suffix:semicolon
DECL|member|pid
id|pid_t
id|pid
suffix:semicolon
DECL|member|uid
id|uid_t
id|uid
suffix:semicolon
DECL|member|magic
id|drm_magic_t
id|magic
suffix:semicolon
DECL|member|ioctl_count
r_int
r_int
id|ioctl_count
suffix:semicolon
DECL|member|next
r_struct
id|drm_file
op_star
id|next
suffix:semicolon
DECL|member|prev
r_struct
id|drm_file
op_star
id|prev
suffix:semicolon
DECL|member|dev
r_struct
id|drm_device
op_star
id|dev
suffix:semicolon
DECL|member|remove_auth_on_close
r_int
id|remove_auth_on_close
suffix:semicolon
DECL|member|lock_count
r_int
r_int
id|lock_count
suffix:semicolon
macro_line|#ifdef DRIVER_FILE_FIELDS
DECL|member|DRIVER_FILE_FIELDS
id|DRIVER_FILE_FIELDS
suffix:semicolon
macro_line|#endif
DECL|typedef|drm_file_t
)brace
id|drm_file_t
suffix:semicolon
multiline_comment|/** Wait queue */
DECL|struct|drm_queue
r_typedef
r_struct
id|drm_queue
(brace
DECL|member|use_count
id|atomic_t
id|use_count
suffix:semicolon
multiline_comment|/**&lt; Outstanding uses (+1) */
DECL|member|finalization
id|atomic_t
id|finalization
suffix:semicolon
multiline_comment|/**&lt; Finalization in progress */
DECL|member|block_count
id|atomic_t
id|block_count
suffix:semicolon
multiline_comment|/**&lt; Count of processes waiting */
DECL|member|block_read
id|atomic_t
id|block_read
suffix:semicolon
multiline_comment|/**&lt; Queue blocked for reads */
DECL|member|read_queue
id|wait_queue_head_t
id|read_queue
suffix:semicolon
multiline_comment|/**&lt; Processes waiting on block_read */
DECL|member|block_write
id|atomic_t
id|block_write
suffix:semicolon
multiline_comment|/**&lt; Queue blocked for writes */
DECL|member|write_queue
id|wait_queue_head_t
id|write_queue
suffix:semicolon
multiline_comment|/**&lt; Processes waiting on block_write */
macro_line|#if 1
DECL|member|total_queued
id|atomic_t
id|total_queued
suffix:semicolon
multiline_comment|/**&lt; Total queued statistic */
DECL|member|total_flushed
id|atomic_t
id|total_flushed
suffix:semicolon
multiline_comment|/**&lt; Total flushes statistic */
DECL|member|total_locks
id|atomic_t
id|total_locks
suffix:semicolon
multiline_comment|/**&lt; Total locks statistics */
macro_line|#endif
DECL|member|flags
id|drm_ctx_flags_t
id|flags
suffix:semicolon
multiline_comment|/**&lt; Context preserving and 2D-only */
DECL|member|waitlist
id|drm_waitlist_t
id|waitlist
suffix:semicolon
multiline_comment|/**&lt; Pending buffers */
DECL|member|flush_queue
id|wait_queue_head_t
id|flush_queue
suffix:semicolon
multiline_comment|/**&lt; Processes waiting until flush */
DECL|typedef|drm_queue_t
)brace
id|drm_queue_t
suffix:semicolon
multiline_comment|/**&n; * Lock data.&n; */
DECL|struct|drm_lock_data
r_typedef
r_struct
id|drm_lock_data
(brace
DECL|member|hw_lock
id|drm_hw_lock_t
op_star
id|hw_lock
suffix:semicolon
multiline_comment|/**&lt; Hardware lock */
DECL|member|filp
r_struct
id|file
op_star
id|filp
suffix:semicolon
multiline_comment|/**&lt; File descr of lock holder (0=kernel) */
DECL|member|lock_queue
id|wait_queue_head_t
id|lock_queue
suffix:semicolon
multiline_comment|/**&lt; Queue of blocked processes */
DECL|member|lock_time
r_int
r_int
id|lock_time
suffix:semicolon
multiline_comment|/**&lt; Time of last lock in jiffies */
DECL|typedef|drm_lock_data_t
)brace
id|drm_lock_data_t
suffix:semicolon
multiline_comment|/**&n; * DMA data.&n; */
DECL|struct|drm_device_dma
r_typedef
r_struct
id|drm_device_dma
(brace
DECL|member|bufs
id|drm_buf_entry_t
id|bufs
(braket
id|DRM_MAX_ORDER
op_plus
l_int|1
)braket
suffix:semicolon
multiline_comment|/**&lt; buffers, grouped by their size order */
DECL|member|buf_count
r_int
id|buf_count
suffix:semicolon
multiline_comment|/**&lt; total number of buffers */
DECL|member|buflist
id|drm_buf_t
op_star
op_star
id|buflist
suffix:semicolon
multiline_comment|/**&lt; Vector of pointers into drm_device_dma::bufs */
DECL|member|seg_count
r_int
id|seg_count
suffix:semicolon
DECL|member|page_count
r_int
id|page_count
suffix:semicolon
multiline_comment|/**&lt; number of pages */
DECL|member|pagelist
r_int
r_int
op_star
id|pagelist
suffix:semicolon
multiline_comment|/**&lt; page list */
DECL|member|byte_count
r_int
r_int
id|byte_count
suffix:semicolon
r_enum
(brace
DECL|enumerator|_DRM_DMA_USE_AGP
id|_DRM_DMA_USE_AGP
op_assign
l_int|0x01
comma
DECL|enumerator|_DRM_DMA_USE_SG
id|_DRM_DMA_USE_SG
op_assign
l_int|0x02
DECL|member|flags
)brace
id|flags
suffix:semicolon
multiline_comment|/** &bslash;name DMA support */
multiline_comment|/*@{*/
DECL|member|this_buffer
id|drm_buf_t
op_star
id|this_buffer
suffix:semicolon
multiline_comment|/**&lt; Buffer being sent */
DECL|member|next_buffer
id|drm_buf_t
op_star
id|next_buffer
suffix:semicolon
multiline_comment|/**&lt; Selected buffer to send */
DECL|member|next_queue
id|drm_queue_t
op_star
id|next_queue
suffix:semicolon
multiline_comment|/**&lt; Queue from which buffer selected*/
DECL|member|waiting
id|wait_queue_head_t
id|waiting
suffix:semicolon
multiline_comment|/**&lt; Processes waiting on free bufs */
multiline_comment|/*@}*/
DECL|typedef|drm_device_dma_t
)brace
id|drm_device_dma_t
suffix:semicolon
macro_line|#if __REALLY_HAVE_AGP
multiline_comment|/** &n; * AGP memory entry.  Stored as a doubly linked list.&n; */
DECL|struct|drm_agp_mem
r_typedef
r_struct
id|drm_agp_mem
(brace
DECL|member|handle
r_int
r_int
id|handle
suffix:semicolon
multiline_comment|/**&lt; handle */
DECL|member|memory
id|DRM_AGP_MEM
op_star
id|memory
suffix:semicolon
DECL|member|bound
r_int
r_int
id|bound
suffix:semicolon
multiline_comment|/**&lt; address */
DECL|member|pages
r_int
id|pages
suffix:semicolon
DECL|member|prev
r_struct
id|drm_agp_mem
op_star
id|prev
suffix:semicolon
multiline_comment|/**&lt; previous entry */
DECL|member|next
r_struct
id|drm_agp_mem
op_star
id|next
suffix:semicolon
multiline_comment|/**&lt; next entry */
DECL|typedef|drm_agp_mem_t
)brace
id|drm_agp_mem_t
suffix:semicolon
multiline_comment|/**&n; * AGP data.&n; *&n; * &bslash;sa DRM(agp_init)() and drm_device::agp.&n; */
DECL|struct|drm_agp_head
r_typedef
r_struct
id|drm_agp_head
(brace
DECL|member|agp_info
id|DRM_AGP_KERN
id|agp_info
suffix:semicolon
multiline_comment|/**&lt; AGP device information */
DECL|member|memory
id|drm_agp_mem_t
op_star
id|memory
suffix:semicolon
multiline_comment|/**&lt; memory entries */
DECL|member|mode
r_int
r_int
id|mode
suffix:semicolon
multiline_comment|/**&lt; AGP mode */
DECL|member|enabled
r_int
id|enabled
suffix:semicolon
multiline_comment|/**&lt; whether the AGP bus as been enabled */
DECL|member|acquired
r_int
id|acquired
suffix:semicolon
multiline_comment|/**&lt; whether the AGP device has been acquired */
DECL|member|base
r_int
r_int
id|base
suffix:semicolon
DECL|member|agp_mtrr
r_int
id|agp_mtrr
suffix:semicolon
DECL|member|cant_use_aperture
r_int
id|cant_use_aperture
suffix:semicolon
DECL|member|page_mask
r_int
r_int
id|page_mask
suffix:semicolon
DECL|typedef|drm_agp_head_t
)brace
id|drm_agp_head_t
suffix:semicolon
macro_line|#endif
multiline_comment|/**&n; * Scatter-gather memory.&n; */
DECL|struct|drm_sg_mem
r_typedef
r_struct
id|drm_sg_mem
(brace
DECL|member|handle
r_int
r_int
id|handle
suffix:semicolon
DECL|member|virtual
r_void
op_star
r_virtual
suffix:semicolon
DECL|member|pages
r_int
id|pages
suffix:semicolon
DECL|member|pagelist
r_struct
id|page
op_star
op_star
id|pagelist
suffix:semicolon
DECL|member|busaddr
id|dma_addr_t
op_star
id|busaddr
suffix:semicolon
DECL|typedef|drm_sg_mem_t
)brace
id|drm_sg_mem_t
suffix:semicolon
DECL|struct|drm_sigdata
r_typedef
r_struct
id|drm_sigdata
(brace
DECL|member|context
r_int
id|context
suffix:semicolon
DECL|member|lock
id|drm_hw_lock_t
op_star
id|lock
suffix:semicolon
DECL|typedef|drm_sigdata_t
)brace
id|drm_sigdata_t
suffix:semicolon
multiline_comment|/**&n; * Mappings list&n; */
DECL|struct|drm_map_list
r_typedef
r_struct
id|drm_map_list
(brace
DECL|member|head
r_struct
id|list_head
id|head
suffix:semicolon
multiline_comment|/**&lt; list head */
DECL|member|map
id|drm_map_t
op_star
id|map
suffix:semicolon
multiline_comment|/**&lt; mapping */
DECL|typedef|drm_map_list_t
)brace
id|drm_map_list_t
suffix:semicolon
DECL|typedef|drm_local_map_t
r_typedef
id|drm_map_t
id|drm_local_map_t
suffix:semicolon
multiline_comment|/**&n; * Context handle list&n; */
DECL|struct|drm_ctx_list
r_typedef
r_struct
id|drm_ctx_list
(brace
DECL|member|head
r_struct
id|list_head
id|head
suffix:semicolon
multiline_comment|/**&lt; list head */
DECL|member|handle
id|drm_context_t
id|handle
suffix:semicolon
multiline_comment|/**&lt; context handle */
DECL|member|tag
id|drm_file_t
op_star
id|tag
suffix:semicolon
multiline_comment|/**&lt; associated fd private data */
DECL|typedef|drm_ctx_list_t
)brace
id|drm_ctx_list_t
suffix:semicolon
macro_line|#ifdef __HAVE_VBL_IRQ
DECL|struct|drm_vbl_sig
r_typedef
r_struct
id|drm_vbl_sig
(brace
DECL|member|head
r_struct
id|list_head
id|head
suffix:semicolon
DECL|member|sequence
r_int
r_int
id|sequence
suffix:semicolon
DECL|member|info
r_struct
id|siginfo
id|info
suffix:semicolon
DECL|member|task
r_struct
id|task_struct
op_star
id|task
suffix:semicolon
DECL|typedef|drm_vbl_sig_t
)brace
id|drm_vbl_sig_t
suffix:semicolon
macro_line|#endif
multiline_comment|/** &n; * DRM device functions structure&n; */
r_struct
id|drm_device
suffix:semicolon
DECL|struct|drm_driver_fn
r_struct
id|drm_driver_fn
(brace
DECL|member|preinit
r_int
(paren
op_star
id|preinit
)paren
(paren
r_struct
id|drm_device
op_star
)paren
suffix:semicolon
DECL|member|postinit
r_int
(paren
op_star
id|postinit
)paren
(paren
r_struct
id|drm_device
op_star
)paren
suffix:semicolon
DECL|member|prerelease
r_void
(paren
op_star
id|prerelease
)paren
(paren
r_struct
id|drm_device
op_star
comma
r_struct
id|file
op_star
id|filp
)paren
suffix:semicolon
DECL|member|pretakedown
r_void
(paren
op_star
id|pretakedown
)paren
(paren
r_struct
id|drm_device
op_star
)paren
suffix:semicolon
DECL|member|postcleanup
r_int
(paren
op_star
id|postcleanup
)paren
(paren
r_struct
id|drm_device
op_star
)paren
suffix:semicolon
DECL|member|presetup
r_int
(paren
op_star
id|presetup
)paren
(paren
r_struct
id|drm_device
op_star
)paren
suffix:semicolon
DECL|member|postsetup
r_int
(paren
op_star
id|postsetup
)paren
(paren
r_struct
id|drm_device
op_star
)paren
suffix:semicolon
DECL|member|open_helper
r_void
(paren
op_star
id|open_helper
)paren
(paren
r_struct
id|drm_device
op_star
comma
id|drm_file_t
op_star
)paren
suffix:semicolon
DECL|member|release
r_void
(paren
op_star
id|release
)paren
(paren
r_struct
id|drm_device
op_star
comma
r_struct
id|file
op_star
id|filp
)paren
suffix:semicolon
DECL|member|dma_ready
r_void
(paren
op_star
id|dma_ready
)paren
(paren
r_struct
id|drm_device
op_star
)paren
suffix:semicolon
DECL|member|dma_quiescent
r_int
(paren
op_star
id|dma_quiescent
)paren
(paren
r_struct
id|drm_device
op_star
)paren
suffix:semicolon
DECL|member|context_ctor
r_int
(paren
op_star
id|context_ctor
)paren
(paren
r_struct
id|drm_device
op_star
id|dev
comma
r_int
id|context
)paren
suffix:semicolon
DECL|member|context_dtor
r_int
(paren
op_star
id|context_dtor
)paren
(paren
r_struct
id|drm_device
op_star
id|dev
comma
r_int
id|context
)paren
suffix:semicolon
DECL|member|kernel_context_switch
r_int
(paren
op_star
id|kernel_context_switch
)paren
(paren
r_struct
id|drm_device
op_star
id|dev
comma
r_int
id|old
comma
r_int
r_new
)paren
suffix:semicolon
DECL|member|kernel_context_switch_unlock
r_int
(paren
op_star
id|kernel_context_switch_unlock
)paren
(paren
r_struct
id|drm_device
op_star
id|dev
)paren
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/**&n; * DRM device structure.&n; */
DECL|struct|drm_device
r_typedef
r_struct
id|drm_device
(brace
DECL|member|name
r_const
r_char
op_star
id|name
suffix:semicolon
multiline_comment|/**&lt; Simple driver name */
DECL|member|unique
r_char
op_star
id|unique
suffix:semicolon
multiline_comment|/**&lt; Unique identifier: e.g., busid */
DECL|member|unique_len
r_int
id|unique_len
suffix:semicolon
multiline_comment|/**&lt; Length of unique field */
DECL|member|device
id|dev_t
id|device
suffix:semicolon
multiline_comment|/**&lt; Device number for mknod */
DECL|member|devname
r_char
op_star
id|devname
suffix:semicolon
multiline_comment|/**&lt; For /proc/interrupts */
DECL|member|minor
r_int
id|minor
suffix:semicolon
multiline_comment|/**&lt; Minor device number */
DECL|member|if_version
r_int
id|if_version
suffix:semicolon
multiline_comment|/**&lt; Highest interface version set */
DECL|member|blocked
r_int
id|blocked
suffix:semicolon
multiline_comment|/**&lt; Blocked due to VC switch? */
DECL|member|root
r_struct
id|proc_dir_entry
op_star
id|root
suffix:semicolon
multiline_comment|/**&lt; Root for this device&squot;s entries */
multiline_comment|/** &bslash;name Locks */
multiline_comment|/*@{*/
DECL|member|count_lock
id|spinlock_t
id|count_lock
suffix:semicolon
multiline_comment|/**&lt; For inuse, drm_device::open_count, drm_device::buf_use */
DECL|member|struct_sem
r_struct
id|semaphore
id|struct_sem
suffix:semicolon
multiline_comment|/**&lt; For others */
multiline_comment|/*@}*/
multiline_comment|/** &bslash;name Usage Counters */
multiline_comment|/*@{*/
DECL|member|open_count
r_int
id|open_count
suffix:semicolon
multiline_comment|/**&lt; Outstanding files open */
DECL|member|ioctl_count
id|atomic_t
id|ioctl_count
suffix:semicolon
multiline_comment|/**&lt; Outstanding IOCTLs pending */
DECL|member|vma_count
id|atomic_t
id|vma_count
suffix:semicolon
multiline_comment|/**&lt; Outstanding vma areas open */
DECL|member|buf_use
r_int
id|buf_use
suffix:semicolon
multiline_comment|/**&lt; Buffers in use -- cannot alloc */
DECL|member|buf_alloc
id|atomic_t
id|buf_alloc
suffix:semicolon
multiline_comment|/**&lt; Buffer allocation in progress */
multiline_comment|/*@}*/
multiline_comment|/** &bslash;name Performance counters */
multiline_comment|/*@{*/
DECL|member|counters
r_int
r_int
id|counters
suffix:semicolon
DECL|member|types
id|drm_stat_type_t
id|types
(braket
l_int|15
)braket
suffix:semicolon
DECL|member|counts
id|atomic_t
id|counts
(braket
l_int|15
)braket
suffix:semicolon
multiline_comment|/*@}*/
multiline_comment|/** &bslash;name Authentication */
multiline_comment|/*@{*/
DECL|member|file_first
id|drm_file_t
op_star
id|file_first
suffix:semicolon
multiline_comment|/**&lt; file list head */
DECL|member|file_last
id|drm_file_t
op_star
id|file_last
suffix:semicolon
multiline_comment|/**&lt; file list tail */
DECL|member|magiclist
id|drm_magic_head_t
id|magiclist
(braket
id|DRM_HASH_SIZE
)braket
suffix:semicolon
multiline_comment|/**&lt; magic hash table */
multiline_comment|/*@}*/
multiline_comment|/** &bslash;name Memory management */
multiline_comment|/*@{*/
DECL|member|maplist
id|drm_map_list_t
op_star
id|maplist
suffix:semicolon
multiline_comment|/**&lt; Linked list of regions */
DECL|member|map_count
r_int
id|map_count
suffix:semicolon
multiline_comment|/**&lt; Number of mappable regions */
multiline_comment|/** &bslash;name Context handle management */
multiline_comment|/*@{*/
DECL|member|ctxlist
id|drm_ctx_list_t
op_star
id|ctxlist
suffix:semicolon
multiline_comment|/**&lt; Linked list of context handles */
DECL|member|ctx_count
r_int
id|ctx_count
suffix:semicolon
multiline_comment|/**&lt; Number of context handles */
DECL|member|ctxlist_sem
r_struct
id|semaphore
id|ctxlist_sem
suffix:semicolon
multiline_comment|/**&lt; For ctxlist */
DECL|member|context_sareas
id|drm_map_t
op_star
op_star
id|context_sareas
suffix:semicolon
multiline_comment|/**&lt; per-context SAREA&squot;s */
DECL|member|max_context
r_int
id|max_context
suffix:semicolon
DECL|member|vmalist
id|drm_vma_entry_t
op_star
id|vmalist
suffix:semicolon
multiline_comment|/**&lt; List of vmas (for debugging) */
DECL|member|lock
id|drm_lock_data_t
id|lock
suffix:semicolon
multiline_comment|/**&lt; Information on hardware lock */
multiline_comment|/*@}*/
multiline_comment|/** &bslash;name DMA queues (contexts) */
multiline_comment|/*@{*/
DECL|member|queue_count
r_int
id|queue_count
suffix:semicolon
multiline_comment|/**&lt; Number of active DMA queues */
DECL|member|queue_reserved
r_int
id|queue_reserved
suffix:semicolon
multiline_comment|/**&lt; Number of reserved DMA queues */
DECL|member|queue_slots
r_int
id|queue_slots
suffix:semicolon
multiline_comment|/**&lt; Actual length of queuelist */
DECL|member|queuelist
id|drm_queue_t
op_star
op_star
id|queuelist
suffix:semicolon
multiline_comment|/**&lt; Vector of pointers to DMA queues */
DECL|member|dma
id|drm_device_dma_t
op_star
id|dma
suffix:semicolon
multiline_comment|/**&lt; Optional pointer for DMA support */
multiline_comment|/*@}*/
multiline_comment|/** &bslash;name Context support */
multiline_comment|/*@{*/
DECL|member|irq
r_int
id|irq
suffix:semicolon
multiline_comment|/**&lt; Interrupt used by board */
DECL|member|irq_enabled
r_int
id|irq_enabled
suffix:semicolon
multiline_comment|/**&lt; True if irq handler is enabled */
DECL|member|context_flag
id|__volatile__
r_int
id|context_flag
suffix:semicolon
multiline_comment|/**&lt; Context swapping flag */
DECL|member|interrupt_flag
id|__volatile__
r_int
id|interrupt_flag
suffix:semicolon
multiline_comment|/**&lt; Interruption handler flag */
DECL|member|dma_flag
id|__volatile__
r_int
id|dma_flag
suffix:semicolon
multiline_comment|/**&lt; DMA dispatch flag */
DECL|member|timer
r_struct
id|timer_list
id|timer
suffix:semicolon
multiline_comment|/**&lt; Timer for delaying ctx switch */
DECL|member|context_wait
id|wait_queue_head_t
id|context_wait
suffix:semicolon
multiline_comment|/**&lt; Processes waiting on ctx switch */
DECL|member|last_checked
r_int
id|last_checked
suffix:semicolon
multiline_comment|/**&lt; Last context checked for DMA */
DECL|member|last_context
r_int
id|last_context
suffix:semicolon
multiline_comment|/**&lt; Last current context */
DECL|member|last_switch
r_int
r_int
id|last_switch
suffix:semicolon
multiline_comment|/**&lt; jiffies at last context switch */
multiline_comment|/*@}*/
DECL|member|work
r_struct
id|work_struct
id|work
suffix:semicolon
multiline_comment|/** &bslash;name VBLANK IRQ support */
multiline_comment|/*@{*/
macro_line|#ifdef __HAVE_VBL_IRQ
DECL|member|vbl_queue
id|wait_queue_head_t
id|vbl_queue
suffix:semicolon
multiline_comment|/**&lt; VBLANK wait queue */
DECL|member|vbl_received
id|atomic_t
id|vbl_received
suffix:semicolon
DECL|member|vbl_lock
id|spinlock_t
id|vbl_lock
suffix:semicolon
DECL|member|vbl_sigs
id|drm_vbl_sig_t
id|vbl_sigs
suffix:semicolon
multiline_comment|/**&lt; signal list to send on VBLANK */
DECL|member|vbl_pending
r_int
r_int
id|vbl_pending
suffix:semicolon
macro_line|#endif
multiline_comment|/*@}*/
DECL|member|ctx_start
id|cycles_t
id|ctx_start
suffix:semicolon
DECL|member|lck_start
id|cycles_t
id|lck_start
suffix:semicolon
DECL|member|buf
r_char
id|buf
(braket
id|DRM_BSZ
)braket
suffix:semicolon
multiline_comment|/**&lt; Output buffer */
DECL|member|buf_rp
r_char
op_star
id|buf_rp
suffix:semicolon
multiline_comment|/**&lt; Read pointer */
DECL|member|buf_wp
r_char
op_star
id|buf_wp
suffix:semicolon
multiline_comment|/**&lt; Write pointer */
DECL|member|buf_end
r_char
op_star
id|buf_end
suffix:semicolon
multiline_comment|/**&lt; End pointer */
DECL|member|buf_async
r_struct
id|fasync_struct
op_star
id|buf_async
suffix:semicolon
multiline_comment|/**&lt; Processes waiting for SIGIO */
DECL|member|buf_readers
id|wait_queue_head_t
id|buf_readers
suffix:semicolon
multiline_comment|/**&lt; Processes waiting to read */
DECL|member|buf_writers
id|wait_queue_head_t
id|buf_writers
suffix:semicolon
multiline_comment|/**&lt; Processes waiting to ctx switch */
macro_line|#if __REALLY_HAVE_AGP
DECL|member|agp
id|drm_agp_head_t
op_star
id|agp
suffix:semicolon
multiline_comment|/**&lt; AGP data */
macro_line|#endif
DECL|member|pdev
r_struct
id|pci_dev
op_star
id|pdev
suffix:semicolon
multiline_comment|/**&lt; PCI device structure */
DECL|member|pci_domain
r_int
id|pci_domain
suffix:semicolon
multiline_comment|/**&lt; PCI bus domain number */
DECL|member|pci_bus
r_int
id|pci_bus
suffix:semicolon
multiline_comment|/**&lt; PCI bus number */
DECL|member|pci_slot
r_int
id|pci_slot
suffix:semicolon
multiline_comment|/**&lt; PCI slot number */
DECL|member|pci_func
r_int
id|pci_func
suffix:semicolon
multiline_comment|/**&lt; PCI function number */
macro_line|#ifdef __alpha__
macro_line|#if LINUX_VERSION_CODE &lt; KERNEL_VERSION(2,4,3)
DECL|member|hose
r_struct
id|pci_controler
op_star
id|hose
suffix:semicolon
macro_line|#else
DECL|member|hose
r_struct
id|pci_controller
op_star
id|hose
suffix:semicolon
macro_line|#endif
macro_line|#endif
DECL|member|sg
id|drm_sg_mem_t
op_star
id|sg
suffix:semicolon
multiline_comment|/**&lt; Scatter gather memory */
DECL|member|ctx_bitmap
r_int
r_int
op_star
id|ctx_bitmap
suffix:semicolon
multiline_comment|/**&lt; context bitmap */
DECL|member|dev_private
r_void
op_star
id|dev_private
suffix:semicolon
multiline_comment|/**&lt; device private data */
DECL|member|sigdata
id|drm_sigdata_t
id|sigdata
suffix:semicolon
multiline_comment|/**&lt; For block_all_signals */
DECL|member|sigmask
id|sigset_t
id|sigmask
suffix:semicolon
DECL|member|fn_tbl
r_struct
id|drm_driver_fn
id|fn_tbl
suffix:semicolon
DECL|member|agp_buffer_map
id|drm_local_map_t
op_star
id|agp_buffer_map
suffix:semicolon
DECL|member|dev_priv_size
r_int
id|dev_priv_size
suffix:semicolon
DECL|typedef|drm_device_t
)brace
id|drm_device_t
suffix:semicolon
r_extern
r_void
id|DRM
c_func
(paren
id|driver_register_fns
)paren
(paren
r_struct
id|drm_device
op_star
id|dev
)paren
suffix:semicolon
multiline_comment|/******************************************************************/
multiline_comment|/** &bslash;name Internal function definitions */
multiline_comment|/*@{*/
multiline_comment|/* Misc. support (drm_init.h) */
r_extern
r_int
id|DRM
c_func
(paren
id|flags
)paren
suffix:semicolon
r_extern
r_void
id|DRM
c_func
(paren
id|parse_options
)paren
(paren
r_char
op_star
id|s
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|cpu_valid
)paren
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* Driver support (drm_drv.h) */
r_extern
r_int
id|DRM
c_func
(paren
id|version
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|open
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|release
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|ioctl
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|lock
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|unlock
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
multiline_comment|/* Device support (drm_fops.h) */
r_extern
r_int
id|DRM
c_func
(paren
id|open_helper
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
id|drm_device_t
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|flush
)paren
(paren
r_struct
id|file
op_star
id|filp
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|fasync
)paren
(paren
r_int
id|fd
comma
r_struct
id|file
op_star
id|filp
comma
r_int
id|on
)paren
suffix:semicolon
multiline_comment|/* Mapping support (drm_vm.h) */
r_extern
r_void
id|DRM
c_func
(paren
id|vm_open
)paren
(paren
r_struct
id|vm_area_struct
op_star
id|vma
)paren
suffix:semicolon
r_extern
r_void
id|DRM
c_func
(paren
id|vm_close
)paren
(paren
r_struct
id|vm_area_struct
op_star
id|vma
)paren
suffix:semicolon
r_extern
r_void
id|DRM
c_func
(paren
id|vm_shm_close
)paren
(paren
r_struct
id|vm_area_struct
op_star
id|vma
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|mmap_dma
)paren
(paren
r_struct
id|file
op_star
id|filp
comma
r_struct
id|vm_area_struct
op_star
id|vma
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|mmap
)paren
(paren
r_struct
id|file
op_star
id|filp
comma
r_struct
id|vm_area_struct
op_star
id|vma
)paren
suffix:semicolon
r_extern
r_int
r_int
id|DRM
c_func
(paren
id|poll
)paren
(paren
r_struct
id|file
op_star
id|filp
comma
r_struct
id|poll_table_struct
op_star
id|wait
)paren
suffix:semicolon
r_extern
id|ssize_t
id|DRM
c_func
(paren
id|read
)paren
(paren
r_struct
id|file
op_star
id|filp
comma
r_char
id|__user
op_star
id|buf
comma
r_int
id|count
comma
id|loff_t
op_star
id|off
)paren
suffix:semicolon
multiline_comment|/* Memory management support (drm_memory.h) */
r_extern
r_void
id|DRM
c_func
(paren
id|mem_init
)paren
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|mem_info
)paren
(paren
r_char
op_star
id|buf
comma
r_char
op_star
op_star
id|start
comma
id|off_t
id|offset
comma
r_int
id|request
comma
r_int
op_star
id|eof
comma
r_void
op_star
id|data
)paren
suffix:semicolon
r_extern
r_void
op_star
id|DRM
c_func
(paren
id|alloc
)paren
(paren
r_int
id|size
comma
r_int
id|area
)paren
suffix:semicolon
r_extern
r_void
op_star
id|DRM
c_func
(paren
id|calloc
)paren
(paren
r_int
id|nmemb
comma
r_int
id|size
comma
r_int
id|area
)paren
suffix:semicolon
r_extern
r_void
op_star
id|DRM
c_func
(paren
id|realloc
)paren
(paren
r_void
op_star
id|oldpt
comma
r_int
id|oldsize
comma
r_int
id|size
comma
r_int
id|area
)paren
suffix:semicolon
r_extern
r_void
id|DRM
c_func
(paren
id|free
)paren
(paren
r_void
op_star
id|pt
comma
r_int
id|size
comma
r_int
id|area
)paren
suffix:semicolon
r_extern
r_int
r_int
id|DRM
c_func
(paren
id|alloc_pages
)paren
(paren
r_int
id|order
comma
r_int
id|area
)paren
suffix:semicolon
r_extern
r_void
id|DRM
c_func
(paren
id|free_pages
)paren
(paren
r_int
r_int
id|address
comma
r_int
id|order
comma
r_int
id|area
)paren
suffix:semicolon
r_extern
r_void
op_star
id|DRM
c_func
(paren
id|ioremap
)paren
(paren
r_int
r_int
id|offset
comma
r_int
r_int
id|size
comma
id|drm_device_t
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_void
op_star
id|DRM
c_func
(paren
id|ioremap_nocache
)paren
(paren
r_int
r_int
id|offset
comma
r_int
r_int
id|size
comma
id|drm_device_t
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_void
id|DRM
c_func
(paren
id|ioremapfree
)paren
(paren
r_void
op_star
id|pt
comma
r_int
r_int
id|size
comma
id|drm_device_t
op_star
id|dev
)paren
suffix:semicolon
macro_line|#if __REALLY_HAVE_AGP
r_extern
id|DRM_AGP_MEM
op_star
id|DRM
c_func
(paren
id|alloc_agp
)paren
(paren
r_int
id|pages
comma
id|u32
id|type
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|free_agp
)paren
(paren
id|DRM_AGP_MEM
op_star
id|handle
comma
r_int
id|pages
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|bind_agp
)paren
(paren
id|DRM_AGP_MEM
op_star
id|handle
comma
r_int
r_int
id|start
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|unbind_agp
)paren
(paren
id|DRM_AGP_MEM
op_star
id|handle
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/* Misc. IOCTL support (drm_ioctl.h) */
r_extern
r_int
id|DRM
c_func
(paren
id|irq_by_busid
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|getunique
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|setunique
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|getmap
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|getclient
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|getstats
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|setversion
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
multiline_comment|/* Context IOCTL support (drm_context.h) */
r_extern
r_int
id|DRM
c_func
(paren
id|resctx
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|addctx
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|modctx
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|getctx
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|switchctx
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|newctx
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|rmctx
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|context_switch
)paren
(paren
id|drm_device_t
op_star
id|dev
comma
r_int
id|old
comma
r_int
r_new
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|context_switch_complete
)paren
(paren
id|drm_device_t
op_star
id|dev
comma
r_int
r_new
)paren
suffix:semicolon
macro_line|#if __HAVE_CTX_BITMAP
r_extern
r_int
id|DRM
c_func
(paren
id|ctxbitmap_init
)paren
(paren
id|drm_device_t
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_void
id|DRM
c_func
(paren
id|ctxbitmap_cleanup
)paren
(paren
id|drm_device_t
op_star
id|dev
)paren
suffix:semicolon
macro_line|#endif
r_extern
r_int
id|DRM
c_func
(paren
id|setsareactx
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|getsareactx
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
multiline_comment|/* Drawable IOCTL support (drm_drawable.h) */
r_extern
r_int
id|DRM
c_func
(paren
id|adddraw
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|rmdraw
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
multiline_comment|/* Authentication IOCTL support (drm_auth.h) */
r_extern
r_int
id|DRM
c_func
(paren
id|add_magic
)paren
(paren
id|drm_device_t
op_star
id|dev
comma
id|drm_file_t
op_star
id|priv
comma
id|drm_magic_t
id|magic
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|remove_magic
)paren
(paren
id|drm_device_t
op_star
id|dev
comma
id|drm_magic_t
id|magic
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|getmagic
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|authmagic
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
multiline_comment|/* Placeholder for ioctls past */
r_extern
r_int
id|DRM
c_func
(paren
id|noop
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
multiline_comment|/* Locking IOCTL support (drm_lock.h) */
r_extern
r_int
id|DRM
c_func
(paren
id|lock_take
)paren
(paren
id|__volatile__
r_int
r_int
op_star
id|lock
comma
r_int
r_int
id|context
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|lock_transfer
)paren
(paren
id|drm_device_t
op_star
id|dev
comma
id|__volatile__
r_int
r_int
op_star
id|lock
comma
r_int
r_int
id|context
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|lock_free
)paren
(paren
id|drm_device_t
op_star
id|dev
comma
id|__volatile__
r_int
r_int
op_star
id|lock
comma
r_int
r_int
id|context
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|notifier
)paren
(paren
r_void
op_star
id|priv
)paren
suffix:semicolon
multiline_comment|/* Buffer management support (drm_bufs.h) */
r_extern
r_int
id|DRM
c_func
(paren
id|order
)paren
(paren
r_int
r_int
id|size
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|addmap
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|rmmap
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
macro_line|#if __HAVE_DMA
r_extern
r_int
id|DRM
c_func
(paren
id|addbufs
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|infobufs
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|markbufs
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|freebufs
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|mapbufs
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
multiline_comment|/* DMA support (drm_dma.h) */
r_extern
r_int
id|DRM
c_func
(paren
id|dma_setup
)paren
(paren
id|drm_device_t
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_void
id|DRM
c_func
(paren
id|dma_takedown
)paren
(paren
id|drm_device_t
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_void
id|DRM
c_func
(paren
id|free_buffer
)paren
(paren
id|drm_device_t
op_star
id|dev
comma
id|drm_buf_t
op_star
id|buf
)paren
suffix:semicolon
r_extern
r_void
id|DRM
c_func
(paren
id|reclaim_buffers
)paren
(paren
r_struct
id|file
op_star
id|filp
)paren
suffix:semicolon
macro_line|#endif /* __HAVE_DMA */
multiline_comment|/* IRQ support (drm_irq.h) */
macro_line|#if __HAVE_IRQ || __HAVE_DMA
r_extern
r_int
id|DRM
c_func
(paren
id|control
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
macro_line|#endif
macro_line|#if __HAVE_IRQ
r_extern
r_int
id|DRM
c_func
(paren
id|irq_install
)paren
(paren
id|drm_device_t
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|irq_uninstall
)paren
(paren
id|drm_device_t
op_star
id|dev
)paren
suffix:semicolon
r_extern
id|irqreturn_t
id|DRM
c_func
(paren
id|irq_handler
)paren
(paren
id|DRM_IRQ_ARGS
)paren
suffix:semicolon
r_extern
r_void
id|DRM
c_func
(paren
id|driver_irq_preinstall
)paren
(paren
id|drm_device_t
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_void
id|DRM
c_func
(paren
id|driver_irq_postinstall
)paren
(paren
id|drm_device_t
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_void
id|DRM
c_func
(paren
id|driver_irq_uninstall
)paren
(paren
id|drm_device_t
op_star
id|dev
)paren
suffix:semicolon
macro_line|#ifdef __HAVE_VBL_IRQ
r_extern
r_int
id|DRM
c_func
(paren
id|wait_vblank
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|vblank_wait
)paren
(paren
id|drm_device_t
op_star
id|dev
comma
r_int
r_int
op_star
id|vbl_seq
)paren
suffix:semicolon
r_extern
r_void
id|DRM
c_func
(paren
id|vbl_send_signals
)paren
(paren
id|drm_device_t
op_star
id|dev
)paren
suffix:semicolon
macro_line|#endif
macro_line|#ifdef __HAVE_IRQ_BH
r_extern
r_void
id|DRM
c_func
(paren
id|irq_immediate_bh
)paren
(paren
r_void
op_star
id|dev
)paren
suffix:semicolon
macro_line|#endif
macro_line|#endif
macro_line|#if __REALLY_HAVE_AGP
multiline_comment|/* AGP/GART support (drm_agpsupport.h) */
r_extern
id|drm_agp_head_t
op_star
id|DRM
c_func
(paren
id|agp_init
)paren
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|DRM
c_func
(paren
id|agp_uninit
)paren
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|agp_acquire
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_void
id|DRM
c_func
(paren
id|agp_do_release
)paren
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|agp_release
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|agp_enable
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|agp_info
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|agp_alloc
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|agp_free
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|agp_unbind
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|agp_bind
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
id|DRM_AGP_MEM
op_star
id|DRM
c_func
(paren
id|agp_allocate_memory
)paren
(paren
r_int
id|pages
comma
id|u32
id|type
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|agp_free_memory
)paren
(paren
id|DRM_AGP_MEM
op_star
id|handle
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|agp_bind_memory
)paren
(paren
id|DRM_AGP_MEM
op_star
id|handle
comma
id|off_t
id|start
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|agp_unbind_memory
)paren
(paren
id|DRM_AGP_MEM
op_star
id|handle
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/* Stub support (drm_stub.h) */
r_int
id|DRM
c_func
(paren
id|stub_register
)paren
(paren
r_const
r_char
op_star
id|name
comma
r_struct
id|file_operations
op_star
id|fops
comma
id|drm_device_t
op_star
id|dev
)paren
suffix:semicolon
r_int
id|DRM
c_func
(paren
id|stub_unregister
)paren
(paren
r_int
id|minor
)paren
suffix:semicolon
multiline_comment|/* Proc support (drm_proc.h) */
r_extern
r_struct
id|proc_dir_entry
op_star
id|DRM
c_func
(paren
id|proc_init
)paren
(paren
id|drm_device_t
op_star
id|dev
comma
r_int
id|minor
comma
r_struct
id|proc_dir_entry
op_star
id|root
comma
r_struct
id|proc_dir_entry
op_star
op_star
id|dev_root
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|proc_cleanup
)paren
(paren
r_int
id|minor
comma
r_struct
id|proc_dir_entry
op_star
id|root
comma
r_struct
id|proc_dir_entry
op_star
id|dev_root
)paren
suffix:semicolon
macro_line|#ifdef __HAVE_SG
multiline_comment|/* Scatter Gather Support (drm_scatter.h) */
r_extern
r_void
id|DRM
c_func
(paren
id|sg_cleanup
)paren
(paren
id|drm_sg_mem_t
op_star
id|entry
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|sg_alloc
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|sg_free
)paren
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/* ATI PCIGART support (ati_pcigart.h) */
r_extern
r_int
id|DRM
c_func
(paren
id|ati_pcigart_init
)paren
(paren
id|drm_device_t
op_star
id|dev
comma
r_int
r_int
op_star
id|addr
comma
id|dma_addr_t
op_star
id|bus_addr
)paren
suffix:semicolon
r_extern
r_int
id|DRM
c_func
(paren
id|ati_pcigart_cleanup
)paren
(paren
id|drm_device_t
op_star
id|dev
comma
r_int
r_int
id|addr
comma
id|dma_addr_t
id|bus_addr
)paren
suffix:semicolon
multiline_comment|/*@}*/
macro_line|#endif /* __KERNEL__ */
macro_line|#endif
eof
