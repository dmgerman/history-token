multiline_comment|/*&n; * linux/drivers/video/sa1100fb.h&n; *    -- StrongARM 1100 LCD Controller Frame Buffer Device&n; *&n; *  Copyright (C) 1999 Eric A. Thomas&n; *   Based on acornfb.c Copyright (C) Russell King.&n; *  &n; * This file is subject to the terms and conditions of the GNU General Public&n; * License.  See the file COPYING in the main directory of this archive&n; * for more details.&n; */
multiline_comment|/*&n; * These are the bitfields for each&n; * display depth that we support.&n; */
DECL|struct|sa1100fb_rgb
r_struct
id|sa1100fb_rgb
(brace
DECL|member|red
r_struct
id|fb_bitfield
id|red
suffix:semicolon
DECL|member|green
r_struct
id|fb_bitfield
id|green
suffix:semicolon
DECL|member|blue
r_struct
id|fb_bitfield
id|blue
suffix:semicolon
DECL|member|transp
r_struct
id|fb_bitfield
id|transp
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * This structure describes the machine which we are running on.&n; */
DECL|struct|sa1100fb_mach_info
r_struct
id|sa1100fb_mach_info
(brace
DECL|member|pixclock
id|u_long
id|pixclock
suffix:semicolon
DECL|member|xres
id|u_short
id|xres
suffix:semicolon
DECL|member|yres
id|u_short
id|yres
suffix:semicolon
DECL|member|bpp
id|u_char
id|bpp
suffix:semicolon
DECL|member|hsync_len
id|u_char
id|hsync_len
suffix:semicolon
DECL|member|left_margin
id|u_char
id|left_margin
suffix:semicolon
DECL|member|right_margin
id|u_char
id|right_margin
suffix:semicolon
DECL|member|vsync_len
id|u_char
id|vsync_len
suffix:semicolon
DECL|member|upper_margin
id|u_char
id|upper_margin
suffix:semicolon
DECL|member|lower_margin
id|u_char
id|lower_margin
suffix:semicolon
DECL|member|sync
id|u_char
id|sync
suffix:semicolon
DECL|member|cmap_greyscale
id|u_int
id|cmap_greyscale
suffix:colon
l_int|1
comma
DECL|member|cmap_inverse
id|cmap_inverse
suffix:colon
l_int|1
comma
DECL|member|cmap_static
id|cmap_static
suffix:colon
l_int|1
comma
DECL|member|unused
id|unused
suffix:colon
l_int|29
suffix:semicolon
DECL|member|lccr0
id|u_int
id|lccr0
suffix:semicolon
DECL|member|lccr3
id|u_int
id|lccr3
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* Shadows for LCD controller registers */
DECL|struct|sa1100fb_lcd_reg
r_struct
id|sa1100fb_lcd_reg
(brace
DECL|member|lccr0
id|Word
id|lccr0
suffix:semicolon
DECL|member|lccr1
id|Word
id|lccr1
suffix:semicolon
DECL|member|lccr2
id|Word
id|lccr2
suffix:semicolon
DECL|member|lccr3
id|Word
id|lccr3
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|RGB_8
mdefine_line|#define RGB_8&t;(0)
DECL|macro|RGB_16
mdefine_line|#define RGB_16&t;(1)
DECL|macro|NR_RGB
mdefine_line|#define NR_RGB&t;2
DECL|struct|sa1100fb_info
r_struct
id|sa1100fb_info
(brace
DECL|member|fb
r_struct
id|fb_info
id|fb
suffix:semicolon
DECL|member|currcon
r_int
r_int
id|currcon
suffix:semicolon
DECL|member|rgb
r_struct
id|sa1100fb_rgb
op_star
id|rgb
(braket
id|NR_RGB
)braket
suffix:semicolon
DECL|member|max_bpp
id|u_int
id|max_bpp
suffix:semicolon
DECL|member|max_xres
id|u_int
id|max_xres
suffix:semicolon
DECL|member|max_yres
id|u_int
id|max_yres
suffix:semicolon
multiline_comment|/*&n;&t; * These are the addresses we mapped&n;&t; * the framebuffer memory region to.&n;&t; */
DECL|member|map_dma
id|dma_addr_t
id|map_dma
suffix:semicolon
DECL|member|map_cpu
id|u_char
op_star
id|map_cpu
suffix:semicolon
DECL|member|map_size
id|u_int
id|map_size
suffix:semicolon
DECL|member|screen_cpu
id|u_char
op_star
id|screen_cpu
suffix:semicolon
DECL|member|screen_dma
id|dma_addr_t
id|screen_dma
suffix:semicolon
DECL|member|palette_cpu
id|u16
op_star
id|palette_cpu
suffix:semicolon
DECL|member|palette_dma
id|dma_addr_t
id|palette_dma
suffix:semicolon
DECL|member|palette_size
id|u_int
id|palette_size
suffix:semicolon
DECL|member|dbar1
id|dma_addr_t
id|dbar1
suffix:semicolon
DECL|member|dbar2
id|dma_addr_t
id|dbar2
suffix:semicolon
DECL|member|lccr0
id|u_int
id|lccr0
suffix:semicolon
DECL|member|lccr3
id|u_int
id|lccr3
suffix:semicolon
DECL|member|cmap_inverse
id|u_int
id|cmap_inverse
suffix:colon
l_int|1
comma
DECL|member|cmap_static
id|cmap_static
suffix:colon
l_int|1
comma
DECL|member|unused
id|unused
suffix:colon
l_int|30
suffix:semicolon
DECL|member|reg_lccr0
id|u_int
id|reg_lccr0
suffix:semicolon
DECL|member|reg_lccr1
id|u_int
id|reg_lccr1
suffix:semicolon
DECL|member|reg_lccr2
id|u_int
id|reg_lccr2
suffix:semicolon
DECL|member|reg_lccr3
id|u_int
id|reg_lccr3
suffix:semicolon
DECL|member|state
r_volatile
id|u_char
id|state
suffix:semicolon
DECL|member|task_state
r_volatile
id|u_char
id|task_state
suffix:semicolon
DECL|member|ctrlr_sem
r_struct
id|semaphore
id|ctrlr_sem
suffix:semicolon
DECL|member|ctrlr_wait
id|wait_queue_head_t
id|ctrlr_wait
suffix:semicolon
DECL|member|task
r_struct
id|tq_struct
id|task
suffix:semicolon
macro_line|#ifdef CONFIG_PM
DECL|member|pm
r_struct
id|pm_dev
op_star
id|pm
suffix:semicolon
macro_line|#endif
macro_line|#ifdef CONFIG_CPU_FREQ
DECL|member|clockchg
r_struct
id|notifier_block
id|clockchg
suffix:semicolon
macro_line|#endif
)brace
suffix:semicolon
DECL|macro|__type_entry
mdefine_line|#define __type_entry(ptr,type,member) ((type *)((char *)(ptr)-offsetof(type,member)))
DECL|macro|TO_INF
mdefine_line|#define TO_INF(ptr,member)&t;__type_entry(ptr,struct sa1100fb_info,member)
DECL|macro|SA1100_PALETTE_MODE_VAL
mdefine_line|#define SA1100_PALETTE_MODE_VAL(bpp)    (((bpp) &amp; 0x018) &lt;&lt; 9)
multiline_comment|/*&n; * These are the actions for set_ctrlr_state&n; */
DECL|macro|C_DISABLE
mdefine_line|#define C_DISABLE&t;&t;(0)
DECL|macro|C_ENABLE
mdefine_line|#define C_ENABLE&t;&t;(1)
DECL|macro|C_DISABLE_CLKCHANGE
mdefine_line|#define C_DISABLE_CLKCHANGE&t;(2)
DECL|macro|C_ENABLE_CLKCHANGE
mdefine_line|#define C_ENABLE_CLKCHANGE&t;(3)
DECL|macro|C_REENABLE
mdefine_line|#define C_REENABLE&t;&t;(4)
DECL|macro|SA1100_NAME
mdefine_line|#define SA1100_NAME&t;&quot;SA1100&quot;
multiline_comment|/*&n; *  Debug macros &n; */
macro_line|#if DEBUG
DECL|macro|DPRINTK
macro_line|#  define DPRINTK(fmt, args...)&t;printk(&quot;%s: &quot; fmt, __FUNCTION__ , ## args)
macro_line|#else
DECL|macro|DPRINTK
macro_line|#  define DPRINTK(fmt, args...)
macro_line|#endif
multiline_comment|/*&n; * Minimum X and Y resolutions&n; */
DECL|macro|MIN_XRES
mdefine_line|#define MIN_XRES&t;64
DECL|macro|MIN_YRES
mdefine_line|#define MIN_YRES&t;64
eof
