macro_line|#ifndef _GAMMA_DRM_H_
DECL|macro|_GAMMA_DRM_H_
mdefine_line|#define _GAMMA_DRM_H_
DECL|struct|_drm_gamma_tex_region
r_typedef
r_struct
id|_drm_gamma_tex_region
(brace
DECL|member|next
DECL|member|prev
r_int
r_char
id|next
comma
id|prev
suffix:semicolon
multiline_comment|/* indices to form a circular LRU  */
DECL|member|in_use
r_int
r_char
id|in_use
suffix:semicolon
multiline_comment|/* owned by a client, or free? */
DECL|member|age
r_int
id|age
suffix:semicolon
multiline_comment|/* tracked by clients to update local LRU&squot;s */
DECL|typedef|drm_gamma_tex_region_t
)brace
id|drm_gamma_tex_region_t
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|GDeltaMode
r_int
r_int
id|GDeltaMode
suffix:semicolon
DECL|member|GDepthMode
r_int
r_int
id|GDepthMode
suffix:semicolon
DECL|member|GGeometryMode
r_int
r_int
id|GGeometryMode
suffix:semicolon
DECL|member|GTransformMode
r_int
r_int
id|GTransformMode
suffix:semicolon
DECL|typedef|drm_gamma_context_regs_t
)brace
id|drm_gamma_context_regs_t
suffix:semicolon
DECL|struct|_drm_gamma_sarea
r_typedef
r_struct
id|_drm_gamma_sarea
(brace
DECL|member|context_state
id|drm_gamma_context_regs_t
id|context_state
suffix:semicolon
DECL|member|dirty
r_int
r_int
id|dirty
suffix:semicolon
multiline_comment|/* Maintain an LRU of contiguous regions of texture space.  If&n;&t; * you think you own a region of texture memory, and it has an&n;&t; * age different to the one you set, then you are mistaken and&n;&t; * it has been stolen by another client.  If global texAge&n;&t; * hasn&squot;t changed, there is no need to walk the list.&n;&t; *&n;&t; * These regions can be used as a proxy for the fine-grained&n;&t; * texture information of other clients - by maintaining them&n;&t; * in the same lru which is used to age their own textures,&n;&t; * clients have an approximate lru for the whole of global&n;&t; * texture space, and can make informed decisions as to which&n;&t; * areas to kick out.  There is no need to choose whether to&n;&t; * kick out your own texture or someone else&squot;s - simply eject&n;&t; * them all in LRU order.  &n;&t; */
DECL|macro|GAMMA_NR_TEX_REGIONS
mdefine_line|#define GAMMA_NR_TEX_REGIONS 64
DECL|member|texList
id|drm_gamma_tex_region_t
id|texList
(braket
id|GAMMA_NR_TEX_REGIONS
op_plus
l_int|1
)braket
suffix:semicolon
multiline_comment|/* Last elt is sentinal */
DECL|member|texAge
r_int
id|texAge
suffix:semicolon
multiline_comment|/* last time texture was uploaded */
DECL|member|last_enqueue
r_int
id|last_enqueue
suffix:semicolon
multiline_comment|/* last time a buffer was enqueued */
DECL|member|last_dispatch
r_int
id|last_dispatch
suffix:semicolon
multiline_comment|/* age of the most recently dispatched buffer */
DECL|member|last_quiescent
r_int
id|last_quiescent
suffix:semicolon
multiline_comment|/*  */
DECL|member|ctxOwner
r_int
id|ctxOwner
suffix:semicolon
multiline_comment|/* last context to upload state */
DECL|member|vertex_prim
r_int
id|vertex_prim
suffix:semicolon
DECL|typedef|drm_gamma_sarea_t
)brace
id|drm_gamma_sarea_t
suffix:semicolon
multiline_comment|/* WARNING: If you change any of these defines, make sure to change the&n; * defines in the Xserver file (xf86drmGamma.h)&n; */
multiline_comment|/* Gamma specific ioctls&n; * The device specific ioctl range is 0x40 to 0x79.&n; */
DECL|macro|DRM_IOCTL_GAMMA_INIT
mdefine_line|#define DRM_IOCTL_GAMMA_INIT&t;&t;DRM_IOW( 0x40, drm_gamma_init_t)
DECL|macro|DRM_IOCTL_GAMMA_COPY
mdefine_line|#define DRM_IOCTL_GAMMA_COPY&t;&t;DRM_IOW( 0x41, drm_gamma_copy_t)
DECL|struct|drm_gamma_copy
r_typedef
r_struct
id|drm_gamma_copy
(brace
DECL|member|DMAOutputAddress
r_int
r_int
id|DMAOutputAddress
suffix:semicolon
DECL|member|DMAOutputCount
r_int
r_int
id|DMAOutputCount
suffix:semicolon
DECL|member|DMAReadGLINTSource
r_int
r_int
id|DMAReadGLINTSource
suffix:semicolon
DECL|member|DMARectangleWriteAddress
r_int
r_int
id|DMARectangleWriteAddress
suffix:semicolon
DECL|member|DMARectangleWriteLinePitch
r_int
r_int
id|DMARectangleWriteLinePitch
suffix:semicolon
DECL|member|DMARectangleWrite
r_int
r_int
id|DMARectangleWrite
suffix:semicolon
DECL|member|DMARectangleReadAddress
r_int
r_int
id|DMARectangleReadAddress
suffix:semicolon
DECL|member|DMARectangleReadLinePitch
r_int
r_int
id|DMARectangleReadLinePitch
suffix:semicolon
DECL|member|DMARectangleRead
r_int
r_int
id|DMARectangleRead
suffix:semicolon
DECL|member|DMARectangleReadTarget
r_int
r_int
id|DMARectangleReadTarget
suffix:semicolon
DECL|typedef|drm_gamma_copy_t
)brace
id|drm_gamma_copy_t
suffix:semicolon
DECL|struct|drm_gamma_init
r_typedef
r_struct
id|drm_gamma_init
(brace
r_enum
(brace
DECL|enumerator|GAMMA_INIT_DMA
id|GAMMA_INIT_DMA
op_assign
l_int|0x01
comma
DECL|enumerator|GAMMA_CLEANUP_DMA
id|GAMMA_CLEANUP_DMA
op_assign
l_int|0x02
DECL|member|func
)brace
id|func
suffix:semicolon
DECL|member|sarea_priv_offset
r_int
id|sarea_priv_offset
suffix:semicolon
DECL|member|pcimode
r_int
id|pcimode
suffix:semicolon
DECL|member|mmio0
r_int
r_int
id|mmio0
suffix:semicolon
DECL|member|mmio1
r_int
r_int
id|mmio1
suffix:semicolon
DECL|member|mmio2
r_int
r_int
id|mmio2
suffix:semicolon
DECL|member|mmio3
r_int
r_int
id|mmio3
suffix:semicolon
DECL|member|buffers_offset
r_int
r_int
id|buffers_offset
suffix:semicolon
DECL|typedef|drm_gamma_init_t
)brace
id|drm_gamma_init_t
suffix:semicolon
macro_line|#endif /* _GAMMA_DRM_H_ */
eof
