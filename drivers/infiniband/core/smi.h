multiline_comment|/*&n; * Copyright (c) 2004 Mellanox Technologies Ltd.  All rights reserved.&n; * Copyright (c) 2004 Infinicon Corporation.  All rights reserved.&n; * Copyright (c) 2004 Intel Corporation.  All rights reserved.&n; * Copyright (c) 2004 Topspin Corporation.  All rights reserved.&n; * Copyright (c) 2004 Voltaire Corporation.  All rights reserved.&n; *&n; * This software is available to you under a choice of one of two&n; * licenses.  You may choose to be licensed under the terms of the GNU&n; * General Public License (GPL) Version 2, available from the file&n; * COPYING in the main directory of this source tree, or the&n; * OpenIB.org BSD license below:&n; *&n; *     Redistribution and use in source and binary forms, with or&n; *     without modification, are permitted provided that the following&n; *     conditions are met:&n; *&n; *      - Redistributions of source code must retain the above&n; *        copyright notice, this list of conditions and the following&n; *        disclaimer.&n; *&n; *      - Redistributions in binary form must reproduce the above&n; *        copyright notice, this list of conditions and the following&n; *        disclaimer in the documentation and/or other materials&n; *        provided with the distribution.&n; *&n; * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,&n; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF&n; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND&n; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS&n; * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN&n; * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN&n; * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE&n; * SOFTWARE.&n; *&n; * $Id: smi.h 1389 2004-12-27 22:56:47Z roland $&n; */
macro_line|#ifndef __SMI_H_
DECL|macro|__SMI_H_
mdefine_line|#define __SMI_H_
r_int
id|smi_handle_dr_smp_recv
c_func
(paren
r_struct
id|ib_smp
op_star
id|smp
comma
id|u8
id|node_type
comma
r_int
id|port_num
comma
r_int
id|phys_port_cnt
)paren
suffix:semicolon
r_extern
r_int
id|smi_check_forward_dr_smp
c_func
(paren
r_struct
id|ib_smp
op_star
id|smp
)paren
suffix:semicolon
r_extern
r_int
id|smi_handle_dr_smp_send
c_func
(paren
r_struct
id|ib_smp
op_star
id|smp
comma
id|u8
id|node_type
comma
r_int
id|port_num
)paren
suffix:semicolon
r_extern
r_int
id|smi_check_local_dr_smp
c_func
(paren
r_struct
id|ib_smp
op_star
id|smp
comma
r_struct
id|ib_device
op_star
id|device
comma
r_int
id|port_num
)paren
suffix:semicolon
multiline_comment|/*&n; * Return 1 if the SMP should be handled by the local SMA/SM via process_mad&n; */
DECL|function|smi_check_local_smp
r_static
r_inline
r_int
id|smi_check_local_smp
c_func
(paren
r_struct
id|ib_mad_agent
op_star
id|mad_agent
comma
r_struct
id|ib_smp
op_star
id|smp
)paren
(brace
multiline_comment|/* C14-9:3 -- We&squot;re at the end of the DR segment of path */
multiline_comment|/* C14-9:4 -- Hop Pointer = Hop Count + 1 -&gt; give to SMA/SM */
r_return
(paren
(paren
id|mad_agent-&gt;device-&gt;process_mad
op_logical_and
op_logical_neg
id|ib_get_smp_direction
c_func
(paren
id|smp
)paren
op_logical_and
(paren
id|smp-&gt;hop_ptr
op_eq
id|smp-&gt;hop_cnt
op_plus
l_int|1
)paren
)paren
)paren
suffix:semicolon
)brace
macro_line|#endif&t;/* __SMI_H_ */
eof
