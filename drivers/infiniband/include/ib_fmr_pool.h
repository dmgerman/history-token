multiline_comment|/*&n; * Copyright (c) 2004 Topspin Corporation.  All rights reserved.&n; *&n; * This software is available to you under a choice of one of two&n; * licenses.  You may choose to be licensed under the terms of the GNU&n; * General Public License (GPL) Version 2, available from the file&n; * COPYING in the main directory of this source tree, or the&n; * OpenIB.org BSD license below:&n; *&n; *     Redistribution and use in source and binary forms, with or&n; *     without modification, are permitted provided that the following&n; *     conditions are met:&n; *&n; *      - Redistributions of source code must retain the above&n; *        copyright notice, this list of conditions and the following&n; *        disclaimer.&n; *&n; *      - Redistributions in binary form must reproduce the above&n; *        copyright notice, this list of conditions and the following&n; *        disclaimer in the documentation and/or other materials&n; *        provided with the distribution.&n; *&n; * THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND,&n; * EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF&n; * MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND&n; * NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS&n; * BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN&n; * ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN&n; * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE&n; * SOFTWARE.&n; *&n; * $Id: ib_fmr_pool.h 1349 2004-12-16 21:09:43Z roland $&n; */
macro_line|#if !defined(IB_FMR_POOL_H)
DECL|macro|IB_FMR_POOL_H
mdefine_line|#define IB_FMR_POOL_H
macro_line|#include &lt;ib_verbs.h&gt;
r_struct
id|ib_fmr_pool
suffix:semicolon
multiline_comment|/**&n; * struct ib_fmr_pool_param - Parameters for creating FMR pool&n; * @max_pages_per_fmr:Maximum number of pages per map request.&n; * @access:Access flags for FMRs in pool.&n; * @pool_size:Number of FMRs to allocate for pool.&n; * @dirty_watermark:Flush is triggered when @dirty_watermark dirty&n; *     FMRs are present.&n; * @flush_function:Callback called when unmapped FMRs are flushed and&n; *     more FMRs are possibly available for mapping&n; * @flush_arg:Context passed to user&squot;s flush function.&n; * @cache:If set, FMRs may be reused after unmapping for identical map&n; *     requests.&n; */
DECL|struct|ib_fmr_pool_param
r_struct
id|ib_fmr_pool_param
(brace
DECL|member|max_pages_per_fmr
r_int
id|max_pages_per_fmr
suffix:semicolon
DECL|member|access
r_enum
id|ib_access_flags
id|access
suffix:semicolon
DECL|member|pool_size
r_int
id|pool_size
suffix:semicolon
DECL|member|dirty_watermark
r_int
id|dirty_watermark
suffix:semicolon
DECL|member|flush_function
r_void
(paren
op_star
id|flush_function
)paren
(paren
r_struct
id|ib_fmr_pool
op_star
id|pool
comma
r_void
op_star
id|arg
)paren
suffix:semicolon
DECL|member|flush_arg
r_void
op_star
id|flush_arg
suffix:semicolon
DECL|member|cache
r_int
id|cache
suffix:colon
l_int|1
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|ib_pool_fmr
r_struct
id|ib_pool_fmr
(brace
DECL|member|fmr
r_struct
id|ib_fmr
op_star
id|fmr
suffix:semicolon
DECL|member|pool
r_struct
id|ib_fmr_pool
op_star
id|pool
suffix:semicolon
DECL|member|list
r_struct
id|list_head
id|list
suffix:semicolon
DECL|member|cache_node
r_struct
id|hlist_node
id|cache_node
suffix:semicolon
DECL|member|ref_count
r_int
id|ref_count
suffix:semicolon
DECL|member|remap_count
r_int
id|remap_count
suffix:semicolon
DECL|member|io_virtual_address
id|u64
id|io_virtual_address
suffix:semicolon
DECL|member|page_list_len
r_int
id|page_list_len
suffix:semicolon
DECL|member|page_list
id|u64
id|page_list
(braket
l_int|0
)braket
suffix:semicolon
)brace
suffix:semicolon
r_struct
id|ib_fmr_pool
op_star
id|ib_create_fmr_pool
c_func
(paren
r_struct
id|ib_pd
op_star
id|pd
comma
r_struct
id|ib_fmr_pool_param
op_star
id|params
)paren
suffix:semicolon
r_int
id|ib_destroy_fmr_pool
c_func
(paren
r_struct
id|ib_fmr_pool
op_star
id|pool
)paren
suffix:semicolon
r_int
id|ib_flush_fmr_pool
c_func
(paren
r_struct
id|ib_fmr_pool
op_star
id|pool
)paren
suffix:semicolon
r_struct
id|ib_pool_fmr
op_star
id|ib_fmr_pool_map_phys
c_func
(paren
r_struct
id|ib_fmr_pool
op_star
id|pool_handle
comma
id|u64
op_star
id|page_list
comma
r_int
id|list_len
comma
id|u64
op_star
id|io_virtual_address
)paren
suffix:semicolon
r_int
id|ib_fmr_pool_unmap
c_func
(paren
r_struct
id|ib_pool_fmr
op_star
id|fmr
)paren
suffix:semicolon
macro_line|#endif /* IB_FMR_POOL_H */
eof
