multiline_comment|/*&n; * Largely written by Julian Elischer (julian@tfs.com)&n; * for TRW Financial Systems.&n; *&n; * TRW Financial Systems, in accordance with their agreement with Carnegie&n; * Mellon University, makes this software available to CMU to distribute&n; * or use in any manner that they see fit as long as this message is kept with&n; * the software. For this reason TFS also grants any other persons or&n; * organisations permission to use or modify this software.&n; *&n; * TFS supplies this software to be publicly redistributed&n; * on the understanding that TFS is not responsible for the correct&n; * functioning of this software in any circumstances.&n; *&n; * Ported to run under 386BSD by Julian Elischer (julian@tfs.com) Sept 1992&n; *&n; * $FreeBSD: src/sys/cam/scsi/scsi_all.h,v 1.21 2002/10/08 17:12:44 ken Exp $&n; * $Id$&n; */
multiline_comment|/*&n; * SCSI general  interface description&n; */
macro_line|#ifndef&t;_SCSI_SCSI_ALL_H
DECL|macro|_SCSI_SCSI_ALL_H
mdefine_line|#define _SCSI_SCSI_ALL_H 1
multiline_comment|/*&n; * SCSI command format&n; */
multiline_comment|/*&n; * Define dome bits that are in ALL (or a lot of) scsi commands&n; */
DECL|macro|SCSI_CTL_LINK
mdefine_line|#define SCSI_CTL_LINK&t;&t;0x01
DECL|macro|SCSI_CTL_FLAG
mdefine_line|#define SCSI_CTL_FLAG&t;&t;0x02
DECL|macro|SCSI_CTL_VENDOR
mdefine_line|#define SCSI_CTL_VENDOR&t;&t;0xC0
DECL|macro|SCSI_CMD_LUN
mdefine_line|#define&t;SCSI_CMD_LUN&t;&t;0xA0&t;/* these two should not be needed */
DECL|macro|SCSI_CMD_LUN_SHIFT
mdefine_line|#define&t;SCSI_CMD_LUN_SHIFT&t;5&t;/* LUN in the cmd is no longer SCSI */
DECL|macro|SCSI_MAX_CDBLEN
mdefine_line|#define SCSI_MAX_CDBLEN&t;&t;16&t;/* &n;&t;&t;&t;&t;&t; * 16 byte commands are in the &n;&t;&t;&t;&t;&t; * SCSI-3 spec &n;&t;&t;&t;&t;&t; */
multiline_comment|/* 6byte CDBs special case 0 length to be 256 */
DECL|macro|SCSI_CDB6_LEN
mdefine_line|#define SCSI_CDB6_LEN(len)&t;((len) == 0 ? 256 : len)
multiline_comment|/*&n; * This type defines actions to be taken when a particular sense code is&n; * received.  Right now, these flags are only defined to take up 16 bits,&n; * but can be expanded in the future if necessary.&n; */
r_typedef
r_enum
(brace
DECL|enumerator|SS_NOP
id|SS_NOP
op_assign
l_int|0x000000
comma
multiline_comment|/* Do nothing */
DECL|enumerator|SS_RETRY
id|SS_RETRY
op_assign
l_int|0x010000
comma
multiline_comment|/* Retry the command */
DECL|enumerator|SS_FAIL
id|SS_FAIL
op_assign
l_int|0x020000
comma
multiline_comment|/* Bail out */
DECL|enumerator|SS_START
id|SS_START
op_assign
l_int|0x030000
comma
multiline_comment|/* Send a Start Unit command to the device,&n;&t;&t;&t;&t;     * then retry the original command.&n;&t;&t;&t;&t;     */
DECL|enumerator|SS_TUR
id|SS_TUR
op_assign
l_int|0x040000
comma
multiline_comment|/* Send a Test Unit Ready command to the&n;&t;&t;&t;&t;     * device, then retry the original command.&n;&t;&t;&t;&t;     */
DECL|enumerator|SS_REQSENSE
id|SS_REQSENSE
op_assign
l_int|0x050000
comma
multiline_comment|/* Send a RequestSense command to the&n;&t;&t;&t;&t;     * device, then retry the original command.&n;&t;&t;&t;&t;     */
DECL|enumerator|SS_INQ_REFRESH
id|SS_INQ_REFRESH
op_assign
l_int|0x060000
comma
DECL|enumerator|SS_MASK
id|SS_MASK
op_assign
l_int|0xff0000
DECL|typedef|aic_sense_action
)brace
id|aic_sense_action
suffix:semicolon
r_typedef
r_enum
(brace
DECL|enumerator|SSQ_NONE
id|SSQ_NONE
op_assign
l_int|0x0000
comma
DECL|enumerator|SSQ_DECREMENT_COUNT
id|SSQ_DECREMENT_COUNT
op_assign
l_int|0x0100
comma
multiline_comment|/* Decrement the retry count */
DECL|enumerator|SSQ_MANY
id|SSQ_MANY
op_assign
l_int|0x0200
comma
multiline_comment|/* send lots of recovery commands */
DECL|enumerator|SSQ_RANGE
id|SSQ_RANGE
op_assign
l_int|0x0400
comma
multiline_comment|/*&n;&t;&t;&t;&t;&t;    * This table entry represents the&n;&t;&t;&t;&t;&t;    * end of a range of ASCQs that&n;&t;&t;&t;&t;&t;    * have identical error actions&n;&t;&t;&t;&t;&t;    * and text.&n;&t;&t;&t;&t;&t;    */
DECL|enumerator|SSQ_PRINT_SENSE
id|SSQ_PRINT_SENSE
op_assign
l_int|0x0800
comma
DECL|enumerator|SSQ_DELAY
id|SSQ_DELAY
op_assign
l_int|0x1000
comma
multiline_comment|/* Delay before retry. */
DECL|enumerator|SSQ_DELAY_RANDOM
id|SSQ_DELAY_RANDOM
op_assign
l_int|0x2000
comma
multiline_comment|/* Randomized delay before retry. */
DECL|enumerator|SSQ_FALLBACK
id|SSQ_FALLBACK
op_assign
l_int|0x4000
comma
multiline_comment|/* Do a speed fallback to recover */
DECL|enumerator|SSQ_MASK
id|SSQ_MASK
op_assign
l_int|0xff00
DECL|typedef|aic_sense_action_qualifier
)brace
id|aic_sense_action_qualifier
suffix:semicolon
multiline_comment|/* Mask for error status values */
DECL|macro|SS_ERRMASK
mdefine_line|#define SS_ERRMASK&t;0xff
multiline_comment|/* The default, retyable, error action */
DECL|macro|SS_RDEF
mdefine_line|#define SS_RDEF&t;&t;SS_RETRY|SSQ_DECREMENT_COUNT|SSQ_PRINT_SENSE|EIO
multiline_comment|/* The retyable, error action, with table specified error code */
DECL|macro|SS_RET
mdefine_line|#define SS_RET&t;&t;SS_RETRY|SSQ_DECREMENT_COUNT|SSQ_PRINT_SENSE
multiline_comment|/* Fatal error action, with table specified error code */
DECL|macro|SS_FATAL
mdefine_line|#define SS_FATAL&t;SS_FAIL|SSQ_PRINT_SENSE
DECL|struct|scsi_generic
r_struct
id|scsi_generic
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|bytes
r_uint8
id|bytes
(braket
l_int|11
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_request_sense
r_struct
id|scsi_request_sense
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|member|unused
r_uint8
id|unused
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|length
r_uint8
id|length
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_test_unit_ready
r_struct
id|scsi_test_unit_ready
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|member|unused
r_uint8
id|unused
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_send_diag
r_struct
id|scsi_send_diag
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|macro|SSD_UOL
mdefine_line|#define&t;SSD_UOL&t;&t;0x01
DECL|macro|SSD_DOL
mdefine_line|#define&t;SSD_DOL&t;&t;0x02
DECL|macro|SSD_SELFTEST
mdefine_line|#define&t;SSD_SELFTEST&t;0x04
DECL|macro|SSD_PF
mdefine_line|#define&t;SSD_PF&t;&t;0x10
DECL|member|unused
r_uint8
id|unused
(braket
l_int|1
)braket
suffix:semicolon
DECL|member|paramlen
r_uint8
id|paramlen
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_sense
r_struct
id|scsi_sense
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|member|unused
r_uint8
id|unused
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|length
r_uint8
id|length
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_inquiry
r_struct
id|scsi_inquiry
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|macro|SI_EVPD
mdefine_line|#define&t;SI_EVPD 0x01
DECL|member|page_code
r_uint8
id|page_code
suffix:semicolon
DECL|member|reserved
r_uint8
id|reserved
suffix:semicolon
DECL|member|length
r_uint8
id|length
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_mode_sense_6
r_struct
id|scsi_mode_sense_6
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|macro|SMS_DBD
mdefine_line|#define&t;SMS_DBD&t;&t;&t;&t;0x08
DECL|member|page
r_uint8
id|page
suffix:semicolon
DECL|macro|SMS_PAGE_CODE
mdefine_line|#define&t;SMS_PAGE_CODE &t;&t;&t;0x3F
DECL|macro|SMS_VENDOR_SPECIFIC_PAGE
mdefine_line|#define SMS_VENDOR_SPECIFIC_PAGE&t;0x00
DECL|macro|SMS_DISCONNECT_RECONNECT_PAGE
mdefine_line|#define SMS_DISCONNECT_RECONNECT_PAGE&t;0x02
DECL|macro|SMS_PERIPHERAL_DEVICE_PAGE
mdefine_line|#define SMS_PERIPHERAL_DEVICE_PAGE&t;0x09
DECL|macro|SMS_CONTROL_MODE_PAGE
mdefine_line|#define SMS_CONTROL_MODE_PAGE&t;&t;0x0A
DECL|macro|SMS_ALL_PAGES_PAGE
mdefine_line|#define SMS_ALL_PAGES_PAGE&t;&t;0x3F
DECL|macro|SMS_PAGE_CTRL_MASK
mdefine_line|#define&t;SMS_PAGE_CTRL_MASK&t;&t;0xC0
DECL|macro|SMS_PAGE_CTRL_CURRENT
mdefine_line|#define&t;SMS_PAGE_CTRL_CURRENT &t;&t;0x00
DECL|macro|SMS_PAGE_CTRL_CHANGEABLE
mdefine_line|#define&t;SMS_PAGE_CTRL_CHANGEABLE &t;0x40
DECL|macro|SMS_PAGE_CTRL_DEFAULT
mdefine_line|#define&t;SMS_PAGE_CTRL_DEFAULT &t;&t;0x80
DECL|macro|SMS_PAGE_CTRL_SAVED
mdefine_line|#define&t;SMS_PAGE_CTRL_SAVED &t;&t;0xC0
DECL|member|unused
r_uint8
id|unused
suffix:semicolon
DECL|member|length
r_uint8
id|length
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_mode_sense_10
r_struct
id|scsi_mode_sense_10
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
multiline_comment|/* same bits as small version */
DECL|member|page
r_uint8
id|page
suffix:semicolon
multiline_comment|/* same bits as small version */
DECL|member|unused
r_uint8
id|unused
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|length
r_uint8
id|length
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_mode_select_6
r_struct
id|scsi_mode_select_6
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|macro|SMS_SP
mdefine_line|#define&t;SMS_SP&t;0x01
DECL|macro|SMS_PF
mdefine_line|#define&t;SMS_PF&t;0x10
DECL|member|unused
r_uint8
id|unused
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|length
r_uint8
id|length
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_mode_select_10
r_struct
id|scsi_mode_select_10
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
multiline_comment|/* same bits as small version */
DECL|member|unused
r_uint8
id|unused
(braket
l_int|5
)braket
suffix:semicolon
DECL|member|length
r_uint8
id|length
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * When sending a mode select to a tape drive, the medium type must be 0.&n; */
DECL|struct|scsi_mode_hdr_6
r_struct
id|scsi_mode_hdr_6
(brace
DECL|member|datalen
r_uint8
id|datalen
suffix:semicolon
DECL|member|medium_type
r_uint8
id|medium_type
suffix:semicolon
DECL|member|dev_specific
r_uint8
id|dev_specific
suffix:semicolon
DECL|member|block_descr_len
r_uint8
id|block_descr_len
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_mode_hdr_10
r_struct
id|scsi_mode_hdr_10
(brace
DECL|member|datalen
r_uint8
id|datalen
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|medium_type
r_uint8
id|medium_type
suffix:semicolon
DECL|member|dev_specific
r_uint8
id|dev_specific
suffix:semicolon
DECL|member|reserved
r_uint8
id|reserved
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|block_descr_len
r_uint8
id|block_descr_len
(braket
l_int|2
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_mode_block_descr
r_struct
id|scsi_mode_block_descr
(brace
DECL|member|density_code
r_uint8
id|density_code
suffix:semicolon
DECL|member|num_blocks
r_uint8
id|num_blocks
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|reserved
r_uint8
id|reserved
suffix:semicolon
DECL|member|block_len
r_uint8
id|block_len
(braket
l_int|3
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_log_sense
r_struct
id|scsi_log_sense
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|macro|SLS_SP
mdefine_line|#define&t;SLS_SP&t;&t;&t;&t;0x01
DECL|macro|SLS_PPC
mdefine_line|#define&t;SLS_PPC&t;&t;&t;&t;0x02
DECL|member|page
r_uint8
id|page
suffix:semicolon
DECL|macro|SLS_PAGE_CODE
mdefine_line|#define&t;SLS_PAGE_CODE &t;&t;&t;0x3F
DECL|macro|SLS_ALL_PAGES_PAGE
mdefine_line|#define&t;SLS_ALL_PAGES_PAGE&t;&t;0x00
DECL|macro|SLS_OVERRUN_PAGE
mdefine_line|#define&t;SLS_OVERRUN_PAGE&t;&t;0x01
DECL|macro|SLS_ERROR_WRITE_PAGE
mdefine_line|#define&t;SLS_ERROR_WRITE_PAGE&t;&t;0x02
DECL|macro|SLS_ERROR_READ_PAGE
mdefine_line|#define&t;SLS_ERROR_READ_PAGE&t;&t;0x03
DECL|macro|SLS_ERROR_READREVERSE_PAGE
mdefine_line|#define&t;SLS_ERROR_READREVERSE_PAGE&t;0x04
DECL|macro|SLS_ERROR_VERIFY_PAGE
mdefine_line|#define&t;SLS_ERROR_VERIFY_PAGE&t;&t;0x05
DECL|macro|SLS_ERROR_NONMEDIUM_PAGE
mdefine_line|#define&t;SLS_ERROR_NONMEDIUM_PAGE&t;0x06
DECL|macro|SLS_ERROR_LASTN_PAGE
mdefine_line|#define&t;SLS_ERROR_LASTN_PAGE&t;&t;0x07
DECL|macro|SLS_PAGE_CTRL_MASK
mdefine_line|#define&t;SLS_PAGE_CTRL_MASK&t;&t;0xC0
DECL|macro|SLS_PAGE_CTRL_THRESHOLD
mdefine_line|#define&t;SLS_PAGE_CTRL_THRESHOLD&t;&t;0x00
DECL|macro|SLS_PAGE_CTRL_CUMULATIVE
mdefine_line|#define&t;SLS_PAGE_CTRL_CUMULATIVE&t;0x40
DECL|macro|SLS_PAGE_CTRL_THRESH_DEFAULT
mdefine_line|#define&t;SLS_PAGE_CTRL_THRESH_DEFAULT&t;0x80
DECL|macro|SLS_PAGE_CTRL_CUMUL_DEFAULT
mdefine_line|#define&t;SLS_PAGE_CTRL_CUMUL_DEFAULT&t;0xC0
DECL|member|reserved
r_uint8
id|reserved
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|paramptr
r_uint8
id|paramptr
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|length
r_uint8
id|length
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_log_select
r_struct
id|scsi_log_select
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
multiline_comment|/*&t;SLS_SP&t;&t;&t;&t;0x01 */
DECL|macro|SLS_PCR
mdefine_line|#define&t;SLS_PCR&t;&t;&t;&t;0x02
DECL|member|page
r_uint8
id|page
suffix:semicolon
multiline_comment|/*&t;SLS_PAGE_CTRL_MASK&t;&t;0xC0 */
multiline_comment|/*&t;SLS_PAGE_CTRL_THRESHOLD&t;&t;0x00 */
multiline_comment|/*&t;SLS_PAGE_CTRL_CUMULATIVE&t;0x40 */
multiline_comment|/*&t;SLS_PAGE_CTRL_THRESH_DEFAULT&t;0x80 */
multiline_comment|/*&t;SLS_PAGE_CTRL_CUMUL_DEFAULT&t;0xC0 */
DECL|member|reserved
r_uint8
id|reserved
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|length
r_uint8
id|length
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_log_header
r_struct
id|scsi_log_header
(brace
DECL|member|page
r_uint8
id|page
suffix:semicolon
DECL|member|reserved
r_uint8
id|reserved
suffix:semicolon
DECL|member|datalen
r_uint8
id|datalen
(braket
l_int|2
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_log_param_header
r_struct
id|scsi_log_param_header
(brace
DECL|member|param_code
r_uint8
id|param_code
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|param_control
r_uint8
id|param_control
suffix:semicolon
DECL|macro|SLP_LP
mdefine_line|#define&t;SLP_LP&t;&t;&t;&t;0x01
DECL|macro|SLP_LBIN
mdefine_line|#define&t;SLP_LBIN&t;&t;&t;0x02
DECL|macro|SLP_TMC_MASK
mdefine_line|#define&t;SLP_TMC_MASK&t;&t;&t;0x0C
DECL|macro|SLP_TMC_ALWAYS
mdefine_line|#define&t;SLP_TMC_ALWAYS&t;&t;&t;0x00
DECL|macro|SLP_TMC_EQUAL
mdefine_line|#define&t;SLP_TMC_EQUAL&t;&t;&t;0x04
DECL|macro|SLP_TMC_NOTEQUAL
mdefine_line|#define&t;SLP_TMC_NOTEQUAL&t;&t;0x08
DECL|macro|SLP_TMC_GREATER
mdefine_line|#define&t;SLP_TMC_GREATER&t;&t;&t;0x0C
DECL|macro|SLP_ETC
mdefine_line|#define&t;SLP_ETC&t;&t;&t;&t;0x10
DECL|macro|SLP_TSD
mdefine_line|#define&t;SLP_TSD&t;&t;&t;&t;0x20
DECL|macro|SLP_DS
mdefine_line|#define&t;SLP_DS&t;&t;&t;&t;0x40
DECL|macro|SLP_DU
mdefine_line|#define&t;SLP_DU&t;&t;&t;&t;0x80
DECL|member|param_len
r_uint8
id|param_len
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_control_page
r_struct
id|scsi_control_page
(brace
DECL|member|page_code
r_uint8
id|page_code
suffix:semicolon
DECL|member|page_length
r_uint8
id|page_length
suffix:semicolon
DECL|member|rlec
r_uint8
id|rlec
suffix:semicolon
DECL|macro|SCB_RLEC
mdefine_line|#define SCB_RLEC&t;&t;&t;0x01&t;/*Report Log Exception Cond*/
DECL|member|queue_flags
r_uint8
id|queue_flags
suffix:semicolon
DECL|macro|SCP_QUEUE_ALG_MASK
mdefine_line|#define SCP_QUEUE_ALG_MASK&t;&t;0xF0
DECL|macro|SCP_QUEUE_ALG_RESTRICTED
mdefine_line|#define SCP_QUEUE_ALG_RESTRICTED&t;0x00
DECL|macro|SCP_QUEUE_ALG_UNRESTRICTED
mdefine_line|#define SCP_QUEUE_ALG_UNRESTRICTED&t;0x10
DECL|macro|SCP_QUEUE_ERR
mdefine_line|#define SCP_QUEUE_ERR&t;&t;&t;0x02&t;/*Queued I/O aborted for CACs*/
DECL|macro|SCP_QUEUE_DQUE
mdefine_line|#define SCP_QUEUE_DQUE&t;&t;&t;0x01&t;/*Queued I/O disabled*/
DECL|member|eca_and_aen
r_uint8
id|eca_and_aen
suffix:semicolon
DECL|macro|SCP_EECA
mdefine_line|#define SCP_EECA&t;&t;&t;0x80&t;/*Enable Extended CA*/
DECL|macro|SCP_RAENP
mdefine_line|#define SCP_RAENP&t;&t;&t;0x04&t;/*Ready AEN Permission*/
DECL|macro|SCP_UAAENP
mdefine_line|#define SCP_UAAENP&t;&t;&t;0x02&t;/*UA AEN Permission*/
DECL|macro|SCP_EAENP
mdefine_line|#define SCP_EAENP&t;&t;&t;0x01&t;/*Error AEN Permission*/
DECL|member|reserved
r_uint8
id|reserved
suffix:semicolon
DECL|member|aen_holdoff_period
r_uint8
id|aen_holdoff_period
(braket
l_int|2
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_reserve
r_struct
id|scsi_reserve
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|member|unused
r_uint8
id|unused
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|length
r_uint8
id|length
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_release
r_struct
id|scsi_release
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|member|unused
r_uint8
id|unused
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|length
r_uint8
id|length
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_prevent
r_struct
id|scsi_prevent
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|member|unused
r_uint8
id|unused
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|how
r_uint8
id|how
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|PR_PREVENT
mdefine_line|#define&t;PR_PREVENT 0x01
DECL|macro|PR_ALLOW
mdefine_line|#define PR_ALLOW   0x00
DECL|struct|scsi_sync_cache
r_struct
id|scsi_sync_cache
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|member|begin_lba
r_uint8
id|begin_lba
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|reserved
r_uint8
id|reserved
suffix:semicolon
DECL|member|lb_count
r_uint8
id|lb_count
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_changedef
r_struct
id|scsi_changedef
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|member|unused1
r_uint8
id|unused1
suffix:semicolon
DECL|member|how
r_uint8
id|how
suffix:semicolon
DECL|member|unused
r_uint8
id|unused
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|datalen
r_uint8
id|datalen
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_read_buffer
r_struct
id|scsi_read_buffer
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|macro|RWB_MODE
mdefine_line|#define&t;RWB_MODE&t;&t;0x07
DECL|macro|RWB_MODE_HDR_DATA
mdefine_line|#define&t;RWB_MODE_HDR_DATA&t;0x00
DECL|macro|RWB_MODE_DATA
mdefine_line|#define&t;RWB_MODE_DATA&t;&t;0x02
DECL|macro|RWB_MODE_DOWNLOAD
mdefine_line|#define&t;RWB_MODE_DOWNLOAD&t;0x04
DECL|macro|RWB_MODE_DOWNLOAD_SAVE
mdefine_line|#define&t;RWB_MODE_DOWNLOAD_SAVE&t;0x05
DECL|member|buffer_id
r_uint8
id|buffer_id
suffix:semicolon
DECL|member|offset
r_uint8
id|offset
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|length
r_uint8
id|length
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_write_buffer
r_struct
id|scsi_write_buffer
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|member|buffer_id
r_uint8
id|buffer_id
suffix:semicolon
DECL|member|offset
r_uint8
id|offset
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|length
r_uint8
id|length
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_rw_6
r_struct
id|scsi_rw_6
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|addr
r_uint8
id|addr
(braket
l_int|3
)braket
suffix:semicolon
multiline_comment|/* only 5 bits are valid in the MSB address byte */
DECL|macro|SRW_TOPADDR
mdefine_line|#define&t;SRW_TOPADDR&t;0x1F
DECL|member|length
r_uint8
id|length
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_rw_10
r_struct
id|scsi_rw_10
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|macro|SRW10_RELADDR
mdefine_line|#define&t;SRW10_RELADDR&t;0x01
DECL|macro|SRW10_FUA
mdefine_line|#define SRW10_FUA&t;0x08
DECL|macro|SRW10_DPO
mdefine_line|#define&t;SRW10_DPO&t;0x10
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|member|addr
r_uint8
id|addr
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|reserved
r_uint8
id|reserved
suffix:semicolon
DECL|member|length
r_uint8
id|length
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_rw_12
r_struct
id|scsi_rw_12
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|macro|SRW12_RELADDR
mdefine_line|#define&t;SRW12_RELADDR&t;0x01
DECL|macro|SRW12_FUA
mdefine_line|#define SRW12_FUA&t;0x08
DECL|macro|SRW12_DPO
mdefine_line|#define&t;SRW12_DPO&t;0x10
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|member|addr
r_uint8
id|addr
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|length
r_uint8
id|length
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|reserved
r_uint8
id|reserved
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_start_stop_unit
r_struct
id|scsi_start_stop_unit
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|macro|SSS_IMMED
mdefine_line|#define&t;SSS_IMMED&t;&t;0x01
DECL|member|reserved
r_uint8
id|reserved
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|how
r_uint8
id|how
suffix:semicolon
DECL|macro|SSS_START
mdefine_line|#define&t;SSS_START&t;&t;0x01
DECL|macro|SSS_LOEJ
mdefine_line|#define&t;SSS_LOEJ&t;&t;0x02
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|SC_SCSI_1
mdefine_line|#define SC_SCSI_1 0x01
DECL|macro|SC_SCSI_2
mdefine_line|#define SC_SCSI_2 0x03
multiline_comment|/*&n; * Opcodes&n; */
DECL|macro|TEST_UNIT_READY
mdefine_line|#define&t;TEST_UNIT_READY&t;&t;0x00
DECL|macro|REQUEST_SENSE
mdefine_line|#define REQUEST_SENSE&t;&t;0x03
DECL|macro|READ_6
mdefine_line|#define&t;READ_6&t;&t;&t;0x08
DECL|macro|WRITE_6
mdefine_line|#define WRITE_6&t;&t;&t;0x0a
DECL|macro|INQUIRY
mdefine_line|#define INQUIRY&t;&t;&t;0x12
DECL|macro|MODE_SELECT_6
mdefine_line|#define MODE_SELECT_6&t;&t;0x15
DECL|macro|MODE_SENSE_6
mdefine_line|#define MODE_SENSE_6&t;&t;0x1a
DECL|macro|START_STOP_UNIT
mdefine_line|#define START_STOP_UNIT&t;&t;0x1b
DECL|macro|START_STOP
mdefine_line|#define START_STOP&t;&t;0x1b
DECL|macro|RESERVE
mdefine_line|#define RESERVE      &t;&t;0x16
DECL|macro|RELEASE
mdefine_line|#define RELEASE      &t;&t;0x17
DECL|macro|RECEIVE_DIAGNOSTIC
mdefine_line|#define&t;RECEIVE_DIAGNOSTIC&t;0x1c
DECL|macro|SEND_DIAGNOSTIC
mdefine_line|#define&t;SEND_DIAGNOSTIC&t;&t;0x1d
DECL|macro|PREVENT_ALLOW
mdefine_line|#define PREVENT_ALLOW&t;&t;0x1e
DECL|macro|READ_CAPACITY
mdefine_line|#define&t;READ_CAPACITY&t;&t;0x25
DECL|macro|READ_10
mdefine_line|#define&t;READ_10&t;&t;&t;0x28
DECL|macro|WRITE_10
mdefine_line|#define WRITE_10&t;&t;0x2a
DECL|macro|POSITION_TO_ELEMENT
mdefine_line|#define POSITION_TO_ELEMENT&t;0x2b
DECL|macro|SYNCHRONIZE_CACHE
mdefine_line|#define&t;SYNCHRONIZE_CACHE&t;0x35
DECL|macro|WRITE_BUFFER
mdefine_line|#define&t;WRITE_BUFFER            0x3b
DECL|macro|READ_BUFFER
mdefine_line|#define&t;READ_BUFFER             0x3c
DECL|macro|CHANGE_DEFINITION
mdefine_line|#define&t;CHANGE_DEFINITION&t;0x40
DECL|macro|LOG_SELECT
mdefine_line|#define&t;LOG_SELECT&t;&t;0x4c
DECL|macro|LOG_SENSE
mdefine_line|#define&t;LOG_SENSE&t;&t;0x4d
macro_line|#ifdef XXXCAM
DECL|macro|MODE_SENSE_10
mdefine_line|#define&t;MODE_SENSE_10&t;&t;0x5A
macro_line|#endif
DECL|macro|MODE_SELECT_10
mdefine_line|#define&t;MODE_SELECT_10&t;&t;0x55
DECL|macro|MOVE_MEDIUM
mdefine_line|#define MOVE_MEDIUM     &t;0xa5
DECL|macro|READ_12
mdefine_line|#define READ_12&t;&t;&t;0xa8
DECL|macro|WRITE_12
mdefine_line|#define WRITE_12&t;&t;0xaa
DECL|macro|READ_ELEMENT_STATUS
mdefine_line|#define READ_ELEMENT_STATUS&t;0xb8
multiline_comment|/*&n; * Device Types&n; */
DECL|macro|T_DIRECT
mdefine_line|#define T_DIRECT&t;0x00
DECL|macro|T_SEQUENTIAL
mdefine_line|#define T_SEQUENTIAL&t;0x01
DECL|macro|T_PRINTER
mdefine_line|#define T_PRINTER&t;0x02
DECL|macro|T_PROCESSOR
mdefine_line|#define T_PROCESSOR&t;0x03
DECL|macro|T_WORM
mdefine_line|#define T_WORM&t;&t;0x04
DECL|macro|T_CDROM
mdefine_line|#define T_CDROM&t;&t;0x05
DECL|macro|T_SCANNER
mdefine_line|#define T_SCANNER &t;0x06
DECL|macro|T_OPTICAL
mdefine_line|#define T_OPTICAL &t;0x07
DECL|macro|T_CHANGER
mdefine_line|#define T_CHANGER&t;0x08
DECL|macro|T_COMM
mdefine_line|#define T_COMM&t;&t;0x09
DECL|macro|T_ASC0
mdefine_line|#define T_ASC0&t;&t;0x0a
DECL|macro|T_ASC1
mdefine_line|#define T_ASC1&t;&t;0x0b
DECL|macro|T_STORARRAY
mdefine_line|#define&t;T_STORARRAY&t;0x0c
DECL|macro|T_ENCLOSURE
mdefine_line|#define&t;T_ENCLOSURE&t;0x0d
DECL|macro|T_RBC
mdefine_line|#define&t;T_RBC&t;&t;0x0e
DECL|macro|T_OCRW
mdefine_line|#define&t;T_OCRW&t;&t;0x0f
DECL|macro|T_NODEVICE
mdefine_line|#define T_NODEVICE&t;0x1F
DECL|macro|T_ANY
mdefine_line|#define&t;T_ANY&t;&t;0xFF&t;/* Used in Quirk table matches */
DECL|macro|T_REMOV
mdefine_line|#define T_REMOV&t;&t;1
DECL|macro|T_FIXED
mdefine_line|#define&t;T_FIXED&t;&t;0
multiline_comment|/*&n; * This length is the initial inquiry length used by the probe code, as    &n; * well as the legnth necessary for aic_print_inquiry() to function &n; * correctly.  If either use requires a different length in the future, &n; * the two values should be de-coupled.&n; */
DECL|macro|SHORT_INQUIRY_LENGTH
mdefine_line|#define&t;SHORT_INQUIRY_LENGTH&t;36
DECL|struct|scsi_inquiry_data
r_struct
id|scsi_inquiry_data
(brace
DECL|member|device
r_uint8
id|device
suffix:semicolon
DECL|macro|SID_TYPE
mdefine_line|#define&t;SID_TYPE(inq_data) ((inq_data)-&gt;device &amp; 0x1f)
DECL|macro|SID_QUAL
mdefine_line|#define&t;SID_QUAL(inq_data) (((inq_data)-&gt;device &amp; 0xE0) &gt;&gt; 5)
DECL|macro|SID_QUAL_LU_CONNECTED
mdefine_line|#define&t;SID_QUAL_LU_CONNECTED&t;0x00&t;/*&n;&t;&t;&t;&t;&t; * The specified peripheral device&n;&t;&t;&t;&t;&t; * type is currently connected to&n;&t;&t;&t;&t;&t; * logical unit.  If the target cannot&n;&t;&t;&t;&t;&t; * determine whether or not a physical&n;&t;&t;&t;&t;&t; * device is currently connected, it&n;&t;&t;&t;&t;&t; * shall also use this peripheral&n;&t;&t;&t;&t;&t; * qualifier when returning the INQUIRY&n;&t;&t;&t;&t;&t; * data.  This peripheral qualifier&n;&t;&t;&t;&t;&t; * does not mean that the device is&n;&t;&t;&t;&t;&t; * ready for access by the initiator.&n;&t;&t;&t;&t;&t; */
DECL|macro|SID_QUAL_LU_OFFLINE
mdefine_line|#define&t;SID_QUAL_LU_OFFLINE&t;0x01&t;/*&n;&t;&t;&t;&t;&t; * The target is capable of supporting&n;&t;&t;&t;&t;&t; * the specified peripheral device type&n;&t;&t;&t;&t;&t; * on this logical unit; however, the&n;&t;&t;&t;&t;&t; * physical device is not currently&n;&t;&t;&t;&t;&t; * connected to this logical unit.&n;&t;&t;&t;&t;&t; */
DECL|macro|SID_QUAL_RSVD
mdefine_line|#define SID_QUAL_RSVD&t;&t;0x02
DECL|macro|SID_QUAL_BAD_LU
mdefine_line|#define&t;SID_QUAL_BAD_LU&t;&t;0x03&t;/*&n;&t;&t;&t;&t;&t; * The target is not capable of&n;&t;&t;&t;&t;&t; * supporting a physical device on&n;&t;&t;&t;&t;&t; * this logical unit. For this&n;&t;&t;&t;&t;&t; * peripheral qualifier the peripheral&n;&t;&t;&t;&t;&t; * device type shall be set to 1Fh to&n;&t;&t;&t;&t;&t; * provide compatibility with previous&n;&t;&t;&t;&t;&t; * versions of SCSI. All other&n;&t;&t;&t;&t;&t; * peripheral device type values are&n;&t;&t;&t;&t;&t; * reserved for this peripheral&n;&t;&t;&t;&t;&t; * qualifier.&n;&t;&t;&t;&t;&t; */
DECL|macro|SID_QUAL_IS_VENDOR_UNIQUE
mdefine_line|#define&t;SID_QUAL_IS_VENDOR_UNIQUE(inq_data) ((SID_QUAL(inq_data) &amp; 0x08) != 0)
DECL|member|dev_qual2
r_uint8
id|dev_qual2
suffix:semicolon
DECL|macro|SID_QUAL2
mdefine_line|#define&t;SID_QUAL2&t;0x7F
DECL|macro|SID_IS_REMOVABLE
mdefine_line|#define&t;SID_IS_REMOVABLE(inq_data) (((inq_data)-&gt;dev_qual2 &amp; 0x80) != 0)
DECL|member|version
r_uint8
id|version
suffix:semicolon
DECL|macro|SID_ANSI_REV
mdefine_line|#define SID_ANSI_REV(inq_data) ((inq_data)-&gt;version &amp; 0x07)
DECL|macro|SCSI_REV_0
mdefine_line|#define&t;&t;SCSI_REV_0&t;&t;0
DECL|macro|SCSI_REV_CCS
mdefine_line|#define&t;&t;SCSI_REV_CCS&t;&t;1
DECL|macro|SCSI_REV_2
mdefine_line|#define&t;&t;SCSI_REV_2&t;&t;2
DECL|macro|SCSI_REV_SPC
mdefine_line|#define&t;&t;SCSI_REV_SPC&t;&t;3
DECL|macro|SCSI_REV_SPC2
mdefine_line|#define&t;&t;SCSI_REV_SPC2&t;&t;4
DECL|macro|SID_ECMA
mdefine_line|#define SID_ECMA&t;0x38
DECL|macro|SID_ISO
mdefine_line|#define SID_ISO&t;&t;0xC0
DECL|member|response_format
r_uint8
id|response_format
suffix:semicolon
DECL|macro|SID_AENC
mdefine_line|#define SID_AENC&t;0x80
DECL|macro|SID_TrmIOP
mdefine_line|#define SID_TrmIOP&t;0x40
DECL|member|additional_length
r_uint8
id|additional_length
suffix:semicolon
DECL|member|reserved
r_uint8
id|reserved
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|flags
r_uint8
id|flags
suffix:semicolon
DECL|macro|SID_SftRe
mdefine_line|#define&t;SID_SftRe&t;0x01
DECL|macro|SID_CmdQue
mdefine_line|#define&t;SID_CmdQue&t;0x02
DECL|macro|SID_Linked
mdefine_line|#define&t;SID_Linked&t;0x08
DECL|macro|SID_Sync
mdefine_line|#define&t;SID_Sync&t;0x10
DECL|macro|SID_WBus16
mdefine_line|#define&t;SID_WBus16&t;0x20
DECL|macro|SID_WBus32
mdefine_line|#define&t;SID_WBus32&t;0x40
DECL|macro|SID_RelAdr
mdefine_line|#define&t;SID_RelAdr&t;0x80
DECL|macro|SID_VENDOR_SIZE
mdefine_line|#define SID_VENDOR_SIZE   8
DECL|member|vendor
r_char
id|vendor
(braket
id|SID_VENDOR_SIZE
)braket
suffix:semicolon
DECL|macro|SID_PRODUCT_SIZE
mdefine_line|#define SID_PRODUCT_SIZE  16
DECL|member|product
r_char
id|product
(braket
id|SID_PRODUCT_SIZE
)braket
suffix:semicolon
DECL|macro|SID_REVISION_SIZE
mdefine_line|#define SID_REVISION_SIZE 4
DECL|member|revision
r_char
id|revision
(braket
id|SID_REVISION_SIZE
)braket
suffix:semicolon
multiline_comment|/*&n;&t; * The following fields were taken from SCSI Primary Commands - 2&n;&t; * (SPC-2) Revision 14, Dated 11 November 1999&n;&t; */
DECL|macro|SID_VENDOR_SPECIFIC_0_SIZE
mdefine_line|#define&t;SID_VENDOR_SPECIFIC_0_SIZE&t;20
DECL|member|vendor_specific0
r_uint8
id|vendor_specific0
(braket
id|SID_VENDOR_SPECIFIC_0_SIZE
)braket
suffix:semicolon
multiline_comment|/*&n;&t; * An extension of SCSI Parallel Specific Values&n;&t; */
DECL|macro|SID_SPI_IUS
mdefine_line|#define&t;SID_SPI_IUS&t;&t;0x01
DECL|macro|SID_SPI_QAS
mdefine_line|#define&t;SID_SPI_QAS&t;&t;0x02
DECL|macro|SID_SPI_CLOCK_ST
mdefine_line|#define&t;SID_SPI_CLOCK_ST&t;0x00
DECL|macro|SID_SPI_CLOCK_DT
mdefine_line|#define&t;SID_SPI_CLOCK_DT&t;0x04
DECL|macro|SID_SPI_CLOCK_DT_ST
mdefine_line|#define&t;SID_SPI_CLOCK_DT_ST&t;0x0C
DECL|macro|SID_SPI_MASK
mdefine_line|#define&t;SID_SPI_MASK&t;&t;0x0F
DECL|member|spi3data
r_uint8
id|spi3data
suffix:semicolon
DECL|member|reserved2
r_uint8
id|reserved2
suffix:semicolon
multiline_comment|/*&n;&t; * Version Descriptors, stored 2 byte values.&n;&t; */
DECL|member|version1
r_uint8
id|version1
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|version2
r_uint8
id|version2
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|version3
r_uint8
id|version3
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|version4
r_uint8
id|version4
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|version5
r_uint8
id|version5
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|version6
r_uint8
id|version6
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|version7
r_uint8
id|version7
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|version8
r_uint8
id|version8
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|reserved3
r_uint8
id|reserved3
(braket
l_int|22
)braket
suffix:semicolon
DECL|macro|SID_VENDOR_SPECIFIC_1_SIZE
mdefine_line|#define&t;SID_VENDOR_SPECIFIC_1_SIZE&t;160
DECL|member|vendor_specific1
r_uint8
id|vendor_specific1
(braket
id|SID_VENDOR_SPECIFIC_1_SIZE
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_vpd_unit_serial_number
r_struct
id|scsi_vpd_unit_serial_number
(brace
DECL|member|device
r_uint8
id|device
suffix:semicolon
DECL|member|page_code
r_uint8
id|page_code
suffix:semicolon
DECL|macro|SVPD_UNIT_SERIAL_NUMBER
mdefine_line|#define SVPD_UNIT_SERIAL_NUMBER&t;0x80
DECL|member|reserved
r_uint8
id|reserved
suffix:semicolon
DECL|member|length
r_uint8
id|length
suffix:semicolon
multiline_comment|/* serial number length */
DECL|macro|SVPD_SERIAL_NUM_SIZE
mdefine_line|#define SVPD_SERIAL_NUM_SIZE 251
DECL|member|serial_num
r_uint8
id|serial_num
(braket
id|SVPD_SERIAL_NUM_SIZE
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_read_capacity
r_struct
id|scsi_read_capacity
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|member|addr
r_uint8
id|addr
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|unused
r_uint8
id|unused
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_read_capacity_data
r_struct
id|scsi_read_capacity_data
(brace
DECL|member|addr
r_uint8
id|addr
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|length
r_uint8
id|length
(braket
l_int|4
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_report_luns
r_struct
id|scsi_report_luns
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|byte2
r_uint8
id|byte2
suffix:semicolon
DECL|member|unused
r_uint8
id|unused
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|addr
r_uint8
id|addr
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|control
r_uint8
id|control
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_report_luns_data
r_struct
id|scsi_report_luns_data
(brace
DECL|member|length
r_uint8
id|length
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* length of LUN inventory, in bytes */
DECL|member|reserved
r_uint8
id|reserved
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* unused */
multiline_comment|/*&n;&t; * LUN inventory- we only support the type zero form for now.&n;&t; */
r_struct
(brace
DECL|member|lundata
r_uint8
id|lundata
(braket
l_int|8
)braket
suffix:semicolon
DECL|member|luns
)brace
id|luns
(braket
l_int|1
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|RPL_LUNDATA_ATYP_MASK
mdefine_line|#define&t;RPL_LUNDATA_ATYP_MASK&t;0xc0&t;/* MBZ for type 0 lun */
DECL|macro|RPL_LUNDATA_T0LUN
mdefine_line|#define&t;RPL_LUNDATA_T0LUN&t;1&t;/* @ lundata[1] */
DECL|struct|scsi_sense_data
r_struct
id|scsi_sense_data
(brace
DECL|member|error_code
r_uint8
id|error_code
suffix:semicolon
DECL|macro|SSD_ERRCODE
mdefine_line|#define&t;SSD_ERRCODE&t;&t;&t;0x7F
DECL|macro|SSD_CURRENT_ERROR
mdefine_line|#define&t;&t;SSD_CURRENT_ERROR&t;0x70
DECL|macro|SSD_DEFERRED_ERROR
mdefine_line|#define&t;&t;SSD_DEFERRED_ERROR&t;0x71
DECL|macro|SSD_ERRCODE_VALID
mdefine_line|#define&t;SSD_ERRCODE_VALID&t;0x80&t;
DECL|member|segment
r_uint8
id|segment
suffix:semicolon
DECL|member|flags
r_uint8
id|flags
suffix:semicolon
DECL|macro|SSD_KEY
mdefine_line|#define&t;SSD_KEY&t;&t;&t;&t;0x0F
DECL|macro|SSD_KEY_NO_SENSE
mdefine_line|#define&t;&t;SSD_KEY_NO_SENSE&t;0x00
DECL|macro|SSD_KEY_RECOVERED_ERROR
mdefine_line|#define&t;&t;SSD_KEY_RECOVERED_ERROR&t;0x01
DECL|macro|SSD_KEY_NOT_READY
mdefine_line|#define&t;&t;SSD_KEY_NOT_READY&t;0x02
DECL|macro|SSD_KEY_MEDIUM_ERROR
mdefine_line|#define&t;&t;SSD_KEY_MEDIUM_ERROR&t;0x03
DECL|macro|SSD_KEY_HARDWARE_ERROR
mdefine_line|#define&t;&t;SSD_KEY_HARDWARE_ERROR&t;0x04
DECL|macro|SSD_KEY_ILLEGAL_REQUEST
mdefine_line|#define&t;&t;SSD_KEY_ILLEGAL_REQUEST&t;0x05
DECL|macro|SSD_KEY_UNIT_ATTENTION
mdefine_line|#define&t;&t;SSD_KEY_UNIT_ATTENTION&t;0x06
DECL|macro|SSD_KEY_DATA_PROTECT
mdefine_line|#define&t;&t;SSD_KEY_DATA_PROTECT&t;0x07
DECL|macro|SSD_KEY_BLANK_CHECK
mdefine_line|#define&t;&t;SSD_KEY_BLANK_CHECK&t;0x08
DECL|macro|SSD_KEY_Vendor_Specific
mdefine_line|#define&t;&t;SSD_KEY_Vendor_Specific&t;0x09
DECL|macro|SSD_KEY_COPY_ABORTED
mdefine_line|#define&t;&t;SSD_KEY_COPY_ABORTED&t;0x0a
DECL|macro|SSD_KEY_ABORTED_COMMAND
mdefine_line|#define&t;&t;SSD_KEY_ABORTED_COMMAND&t;0x0b&t;&t;
DECL|macro|SSD_KEY_EQUAL
mdefine_line|#define&t;&t;SSD_KEY_EQUAL&t;&t;0x0c
DECL|macro|SSD_KEY_VOLUME_OVERFLOW
mdefine_line|#define&t;&t;SSD_KEY_VOLUME_OVERFLOW&t;0x0d
DECL|macro|SSD_KEY_MISCOMPARE
mdefine_line|#define&t;&t;SSD_KEY_MISCOMPARE&t;0x0e
DECL|macro|SSD_KEY_RESERVED
mdefine_line|#define&t;&t;SSD_KEY_RESERVED&t;0x0f&t;&t;&t;
DECL|macro|SSD_ILI
mdefine_line|#define&t;SSD_ILI&t;&t;0x20
DECL|macro|SSD_EOM
mdefine_line|#define&t;SSD_EOM&t;&t;0x40
DECL|macro|SSD_FILEMARK
mdefine_line|#define&t;SSD_FILEMARK&t;0x80
DECL|member|info
r_uint8
id|info
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|extra_len
r_uint8
id|extra_len
suffix:semicolon
DECL|member|cmd_spec_info
r_uint8
id|cmd_spec_info
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|add_sense_code
r_uint8
id|add_sense_code
suffix:semicolon
DECL|member|add_sense_code_qual
r_uint8
id|add_sense_code_qual
suffix:semicolon
DECL|member|fru
r_uint8
id|fru
suffix:semicolon
DECL|member|sense_key_spec
r_uint8
id|sense_key_spec
(braket
l_int|3
)braket
suffix:semicolon
DECL|macro|SSD_SCS_VALID
mdefine_line|#define&t;SSD_SCS_VALID&t;&t;0x80
DECL|macro|SSD_FIELDPTR_CMD
mdefine_line|#define SSD_FIELDPTR_CMD&t;0x40
DECL|macro|SSD_BITPTR_VALID
mdefine_line|#define SSD_BITPTR_VALID&t;0x08
DECL|macro|SSD_BITPTR_VALUE
mdefine_line|#define SSD_BITPTR_VALUE&t;0x07
DECL|macro|SSD_MIN_SIZE
mdefine_line|#define SSD_MIN_SIZE 18
DECL|member|extra_bytes
r_uint8
id|extra_bytes
(braket
l_int|14
)braket
suffix:semicolon
DECL|macro|SSD_FULL_SIZE
mdefine_line|#define SSD_FULL_SIZE sizeof(struct scsi_sense_data)
)brace
suffix:semicolon
DECL|struct|scsi_mode_header_6
r_struct
id|scsi_mode_header_6
(brace
DECL|member|data_length
r_uint8
id|data_length
suffix:semicolon
multiline_comment|/* Sense data length */
DECL|member|medium_type
r_uint8
id|medium_type
suffix:semicolon
DECL|member|dev_spec
r_uint8
id|dev_spec
suffix:semicolon
DECL|member|blk_desc_len
r_uint8
id|blk_desc_len
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_mode_header_10
r_struct
id|scsi_mode_header_10
(brace
DECL|member|data_length
r_uint8
id|data_length
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* Sense data length */
DECL|member|medium_type
r_uint8
id|medium_type
suffix:semicolon
DECL|member|dev_spec
r_uint8
id|dev_spec
suffix:semicolon
DECL|member|unused
r_uint8
id|unused
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|blk_desc_len
r_uint8
id|blk_desc_len
(braket
l_int|2
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_mode_page_header
r_struct
id|scsi_mode_page_header
(brace
DECL|member|page_code
r_uint8
id|page_code
suffix:semicolon
DECL|member|page_length
r_uint8
id|page_length
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_mode_blk_desc
r_struct
id|scsi_mode_blk_desc
(brace
DECL|member|density
r_uint8
id|density
suffix:semicolon
DECL|member|nblocks
r_uint8
id|nblocks
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|reserved
r_uint8
id|reserved
suffix:semicolon
DECL|member|blklen
r_uint8
id|blklen
(braket
l_int|3
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|SCSI_DEFAULT_DENSITY
mdefine_line|#define&t;SCSI_DEFAULT_DENSITY&t;0x00&t;/* use &squot;default&squot; density */
DECL|macro|SCSI_SAME_DENSITY
mdefine_line|#define&t;SCSI_SAME_DENSITY&t;0x7f&t;/* use &squot;same&squot; density- &gt;= SCSI-2 only */
multiline_comment|/*&n; * Status Byte&n; */
DECL|macro|SCSI_STATUS_OK
mdefine_line|#define&t;SCSI_STATUS_OK&t;&t;&t;0x00
DECL|macro|SCSI_STATUS_CHECK_COND
mdefine_line|#define&t;SCSI_STATUS_CHECK_COND&t;&t;0x02
DECL|macro|SCSI_STATUS_COND_MET
mdefine_line|#define&t;SCSI_STATUS_COND_MET&t;&t;0x04
DECL|macro|SCSI_STATUS_BUSY
mdefine_line|#define&t;SCSI_STATUS_BUSY&t;&t;0x08
DECL|macro|SCSI_STATUS_INTERMED
mdefine_line|#define SCSI_STATUS_INTERMED&t;&t;0x10
DECL|macro|SCSI_STATUS_INTERMED_COND_MET
mdefine_line|#define SCSI_STATUS_INTERMED_COND_MET&t;0x14
DECL|macro|SCSI_STATUS_RESERV_CONFLICT
mdefine_line|#define SCSI_STATUS_RESERV_CONFLICT&t;0x18
DECL|macro|SCSI_STATUS_CMD_TERMINATED
mdefine_line|#define SCSI_STATUS_CMD_TERMINATED&t;0x22&t;/* Obsolete in SAM-2 */
DECL|macro|SCSI_STATUS_QUEUE_FULL
mdefine_line|#define SCSI_STATUS_QUEUE_FULL&t;&t;0x28
DECL|macro|SCSI_STATUS_ACA_ACTIVE
mdefine_line|#define SCSI_STATUS_ACA_ACTIVE&t;&t;0x30
DECL|macro|SCSI_STATUS_TASK_ABORTED
mdefine_line|#define SCSI_STATUS_TASK_ABORTED&t;0x40
DECL|struct|scsi_inquiry_pattern
r_struct
id|scsi_inquiry_pattern
(brace
DECL|member|type
r_uint8
id|type
suffix:semicolon
DECL|member|media_type
r_uint8
id|media_type
suffix:semicolon
DECL|macro|SIP_MEDIA_REMOVABLE
mdefine_line|#define&t;SIP_MEDIA_REMOVABLE&t;0x01
DECL|macro|SIP_MEDIA_FIXED
mdefine_line|#define&t;SIP_MEDIA_FIXED&t;&t;0x02
DECL|member|vendor
r_const
r_char
op_star
id|vendor
suffix:semicolon
DECL|member|product
r_const
r_char
op_star
id|product
suffix:semicolon
DECL|member|revision
r_const
r_char
op_star
id|revision
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_static_inquiry_pattern
r_struct
id|scsi_static_inquiry_pattern
(brace
DECL|member|type
r_uint8
id|type
suffix:semicolon
DECL|member|media_type
r_uint8
id|media_type
suffix:semicolon
DECL|member|vendor
r_char
id|vendor
(braket
id|SID_VENDOR_SIZE
op_plus
l_int|1
)braket
suffix:semicolon
DECL|member|product
r_char
id|product
(braket
id|SID_PRODUCT_SIZE
op_plus
l_int|1
)braket
suffix:semicolon
DECL|member|revision
r_char
id|revision
(braket
id|SID_REVISION_SIZE
op_plus
l_int|1
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_sense_quirk_entry
r_struct
id|scsi_sense_quirk_entry
(brace
DECL|member|inq_pat
r_struct
id|scsi_inquiry_pattern
id|inq_pat
suffix:semicolon
DECL|member|num_sense_keys
r_int
id|num_sense_keys
suffix:semicolon
DECL|member|num_ascs
r_int
id|num_ascs
suffix:semicolon
DECL|member|sense_key_info
r_struct
id|sense_key_table_entry
op_star
id|sense_key_info
suffix:semicolon
DECL|member|asc_info
r_struct
id|asc_table_entry
op_star
id|asc_info
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|sense_key_table_entry
r_struct
id|sense_key_table_entry
(brace
DECL|member|sense_key
r_uint8
id|sense_key
suffix:semicolon
DECL|member|action
r_uint32
id|action
suffix:semicolon
DECL|member|desc
r_const
r_char
op_star
id|desc
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|asc_table_entry
r_struct
id|asc_table_entry
(brace
DECL|member|asc
r_uint8
id|asc
suffix:semicolon
DECL|member|ascq
r_uint8
id|ascq
suffix:semicolon
DECL|member|action
r_uint32
id|action
suffix:semicolon
DECL|member|desc
r_const
r_char
op_star
id|desc
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|op_table_entry
r_struct
id|op_table_entry
(brace
DECL|member|opcode
r_uint8
id|opcode
suffix:semicolon
DECL|member|opmask
r_uint16
id|opmask
suffix:semicolon
DECL|member|desc
r_const
r_char
op_star
id|desc
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|scsi_op_quirk_entry
r_struct
id|scsi_op_quirk_entry
(brace
DECL|member|inq_pat
r_struct
id|scsi_inquiry_pattern
id|inq_pat
suffix:semicolon
DECL|member|num_ops
r_int
id|num_ops
suffix:semicolon
DECL|member|op_table
r_struct
id|op_table_entry
op_star
id|op_table
suffix:semicolon
)brace
suffix:semicolon
r_typedef
r_enum
(brace
DECL|enumerator|SSS_FLAG_NONE
id|SSS_FLAG_NONE
op_assign
l_int|0x00
comma
DECL|enumerator|SSS_FLAG_PRINT_COMMAND
id|SSS_FLAG_PRINT_COMMAND
op_assign
l_int|0x01
DECL|typedef|scsi_sense_string_flags
)brace
id|scsi_sense_string_flags
suffix:semicolon
r_extern
r_const
r_char
op_star
id|scsi_sense_key_text
(braket
)braket
suffix:semicolon
multiline_comment|/************************* Large Disk Handling ********************************/
macro_line|#if LINUX_VERSION_CODE &lt; KERNEL_VERSION(2,5,0)
r_static
id|__inline
r_int
id|aic_sector_div
c_func
(paren
id|u_long
id|capacity
comma
r_int
id|heads
comma
r_int
id|sectors
)paren
suffix:semicolon
r_static
id|__inline
r_int
DECL|function|aic_sector_div
id|aic_sector_div
c_func
(paren
id|u_long
id|capacity
comma
r_int
id|heads
comma
r_int
id|sectors
)paren
(brace
r_return
(paren
id|capacity
op_div
(paren
id|heads
op_star
id|sectors
)paren
)paren
suffix:semicolon
)brace
macro_line|#else
r_static
id|__inline
r_int
id|aic_sector_div
c_func
(paren
id|sector_t
id|capacity
comma
r_int
id|heads
comma
r_int
id|sectors
)paren
suffix:semicolon
r_static
id|__inline
r_int
DECL|function|aic_sector_div
id|aic_sector_div
c_func
(paren
id|sector_t
id|capacity
comma
r_int
id|heads
comma
r_int
id|sectors
)paren
(brace
multiline_comment|/* ugly, ugly sector_div calling convention.. */
id|sector_div
c_func
(paren
id|capacity
comma
(paren
id|heads
op_star
id|sectors
)paren
)paren
suffix:semicolon
r_return
(paren
r_int
)paren
id|capacity
suffix:semicolon
)brace
macro_line|#endif
multiline_comment|/**************************** Module Library Hack *****************************/
multiline_comment|/*&n; * What we&squot;d like to do is have a single &quot;scsi library&quot; module that both the&n; * aic7xxx and aic79xx drivers could load and depend on.  A cursory examination&n; * of implementing module dependencies in Linux (handling the install and&n; * initrd cases) does not look promissing.  For now, we just duplicate this&n; * code in both drivers using a simple symbol renaming scheme that hides this&n; * hack from the drivers.&n; */
DECL|macro|AIC_LIB_ENTRY_CONCAT
mdefine_line|#define AIC_LIB_ENTRY_CONCAT(x, prefix)&t;prefix ## x
DECL|macro|AIC_LIB_ENTRY_EXPAND
mdefine_line|#define&t;AIC_LIB_ENTRY_EXPAND(x, prefix) AIC_LIB_ENTRY_CONCAT(x, prefix)
DECL|macro|AIC_LIB_ENTRY
mdefine_line|#define AIC_LIB_ENTRY(x)&t;&t;AIC_LIB_ENTRY_EXPAND(x, AIC_LIB_PREFIX)
DECL|macro|aic_sense_desc
mdefine_line|#define&t;aic_sense_desc&t;&t;&t;AIC_LIB_ENTRY(_sense_desc)
DECL|macro|aic_sense_error_action
mdefine_line|#define&t;aic_sense_error_action&t;&t;AIC_LIB_ENTRY(_sense_error_action)
DECL|macro|aic_error_action
mdefine_line|#define&t;aic_error_action&t;&t;AIC_LIB_ENTRY(_error_action)
DECL|macro|aic_op_desc
mdefine_line|#define&t;aic_op_desc&t;&t;&t;AIC_LIB_ENTRY(_op_desc)
DECL|macro|aic_cdb_string
mdefine_line|#define&t;aic_cdb_string&t;&t;&t;AIC_LIB_ENTRY(_cdb_string)
DECL|macro|aic_print_inquiry
mdefine_line|#define aic_print_inquiry&t;&t;AIC_LIB_ENTRY(_print_inquiry)
DECL|macro|aic_calc_syncsrate
mdefine_line|#define aic_calc_syncsrate&t;&t;AIC_LIB_ENTRY(_calc_syncrate)
DECL|macro|aic_calc_syncparam
mdefine_line|#define&t;aic_calc_syncparam&t;&t;AIC_LIB_ENTRY(_calc_syncparam)
DECL|macro|aic_calc_speed
mdefine_line|#define&t;aic_calc_speed&t;&t;&t;AIC_LIB_ENTRY(_calc_speed)
DECL|macro|aic_inquiry_match
mdefine_line|#define&t;aic_inquiry_match&t;&t;AIC_LIB_ENTRY(_inquiry_match)
DECL|macro|aic_static_inquiry_match
mdefine_line|#define&t;aic_static_inquiry_match&t;AIC_LIB_ENTRY(_static_inquiry_match)
multiline_comment|/******************************************************************************/
r_void
id|aic_sense_desc
c_func
(paren
r_int
multiline_comment|/*sense_key*/
comma
r_int
multiline_comment|/*asc*/
comma
r_int
multiline_comment|/*ascq*/
comma
r_struct
id|scsi_inquiry_data
op_star
comma
r_const
r_char
op_star
op_star
multiline_comment|/*sense_key_desc*/
comma
r_const
r_char
op_star
op_star
multiline_comment|/*asc_desc*/
)paren
suffix:semicolon
id|aic_sense_action
id|aic_sense_error_action
c_func
(paren
r_struct
id|scsi_sense_data
op_star
comma
r_struct
id|scsi_inquiry_data
op_star
comma
r_uint32
multiline_comment|/*sense_flags*/
)paren
suffix:semicolon
r_uint32
id|aic_error_action
c_func
(paren
r_struct
id|scsi_cmnd
op_star
comma
r_struct
id|scsi_inquiry_data
op_star
comma
id|cam_status
comma
id|u_int
)paren
suffix:semicolon
DECL|macro|SF_RETRY_UA
mdefine_line|#define&t;SF_RETRY_UA&t;0x01
DECL|macro|SF_NO_PRINT
mdefine_line|#define SF_NO_PRINT&t;0x02
DECL|macro|SF_QUIET_IR
mdefine_line|#define SF_QUIET_IR&t;0x04&t;/* Be quiet about Illegal Request reponses */
DECL|macro|SF_PRINT_ALWAYS
mdefine_line|#define SF_PRINT_ALWAYS&t;0x08
r_const
r_char
op_star
id|aic_op_desc
c_func
(paren
r_uint16
multiline_comment|/*opcode*/
comma
r_struct
id|scsi_inquiry_data
op_star
)paren
suffix:semicolon
r_char
op_star
id|aic_cdb_string
c_func
(paren
r_uint8
op_star
multiline_comment|/*cdb_ptr*/
comma
r_char
op_star
multiline_comment|/*cdb_string*/
comma
r_int
multiline_comment|/*len*/
)paren
suffix:semicolon
r_void
id|aic_print_inquiry
c_func
(paren
r_struct
id|scsi_inquiry_data
op_star
)paren
suffix:semicolon
id|u_int
id|aic_calc_syncsrate
c_func
(paren
id|u_int
multiline_comment|/*period_factor*/
)paren
suffix:semicolon
id|u_int
id|aic_calc_syncparam
c_func
(paren
id|u_int
multiline_comment|/*period*/
)paren
suffix:semicolon
id|u_int
id|aic_calc_speed
c_func
(paren
id|u_int
id|width
comma
id|u_int
id|period
comma
id|u_int
id|offset
comma
id|u_int
id|min_rate
)paren
suffix:semicolon
r_int
id|aic_inquiry_match
c_func
(paren
id|caddr_t
multiline_comment|/*inqbuffer*/
comma
id|caddr_t
multiline_comment|/*table_entry*/
)paren
suffix:semicolon
r_int
id|aic_static_inquiry_match
c_func
(paren
id|caddr_t
multiline_comment|/*inqbuffer*/
comma
id|caddr_t
multiline_comment|/*table_entry*/
)paren
suffix:semicolon
r_static
id|__inline
r_void
id|scsi_extract_sense
c_func
(paren
r_struct
id|scsi_sense_data
op_star
id|sense
comma
r_int
op_star
id|error_code
comma
r_int
op_star
id|sense_key
comma
r_int
op_star
id|asc
comma
r_int
op_star
id|ascq
)paren
suffix:semicolon
r_static
id|__inline
r_void
id|scsi_ulto2b
c_func
(paren
r_uint32
id|val
comma
r_uint8
op_star
id|bytes
)paren
suffix:semicolon
r_static
id|__inline
r_void
id|scsi_ulto3b
c_func
(paren
r_uint32
id|val
comma
r_uint8
op_star
id|bytes
)paren
suffix:semicolon
r_static
id|__inline
r_void
id|scsi_ulto4b
c_func
(paren
r_uint32
id|val
comma
r_uint8
op_star
id|bytes
)paren
suffix:semicolon
r_static
id|__inline
r_uint32
id|scsi_2btoul
c_func
(paren
r_uint8
op_star
id|bytes
)paren
suffix:semicolon
r_static
id|__inline
r_uint32
id|scsi_3btoul
c_func
(paren
r_uint8
op_star
id|bytes
)paren
suffix:semicolon
r_static
id|__inline
r_int32
id|scsi_3btol
c_func
(paren
r_uint8
op_star
id|bytes
)paren
suffix:semicolon
r_static
id|__inline
r_uint32
id|scsi_4btoul
c_func
(paren
r_uint8
op_star
id|bytes
)paren
suffix:semicolon
DECL|function|scsi_extract_sense
r_static
id|__inline
r_void
id|scsi_extract_sense
c_func
(paren
r_struct
id|scsi_sense_data
op_star
id|sense
comma
r_int
op_star
id|error_code
comma
r_int
op_star
id|sense_key
comma
r_int
op_star
id|asc
comma
r_int
op_star
id|ascq
)paren
(brace
op_star
id|error_code
op_assign
id|sense-&gt;error_code
op_amp
id|SSD_ERRCODE
suffix:semicolon
op_star
id|sense_key
op_assign
id|sense-&gt;flags
op_amp
id|SSD_KEY
suffix:semicolon
op_star
id|asc
op_assign
(paren
id|sense-&gt;extra_len
op_ge
l_int|5
)paren
ques
c_cond
id|sense-&gt;add_sense_code
suffix:colon
l_int|0
suffix:semicolon
op_star
id|ascq
op_assign
(paren
id|sense-&gt;extra_len
op_ge
l_int|6
)paren
ques
c_cond
id|sense-&gt;add_sense_code_qual
suffix:colon
l_int|0
suffix:semicolon
)brace
r_static
id|__inline
r_void
DECL|function|scsi_ulto2b
id|scsi_ulto2b
c_func
(paren
r_uint32
id|val
comma
r_uint8
op_star
id|bytes
)paren
(brace
id|bytes
(braket
l_int|0
)braket
op_assign
(paren
id|val
op_rshift
l_int|8
)paren
op_amp
l_int|0xff
suffix:semicolon
id|bytes
(braket
l_int|1
)braket
op_assign
id|val
op_amp
l_int|0xff
suffix:semicolon
)brace
r_static
id|__inline
r_void
DECL|function|scsi_ulto3b
id|scsi_ulto3b
c_func
(paren
r_uint32
id|val
comma
r_uint8
op_star
id|bytes
)paren
(brace
id|bytes
(braket
l_int|0
)braket
op_assign
(paren
id|val
op_rshift
l_int|16
)paren
op_amp
l_int|0xff
suffix:semicolon
id|bytes
(braket
l_int|1
)braket
op_assign
(paren
id|val
op_rshift
l_int|8
)paren
op_amp
l_int|0xff
suffix:semicolon
id|bytes
(braket
l_int|2
)braket
op_assign
id|val
op_amp
l_int|0xff
suffix:semicolon
)brace
r_static
id|__inline
r_void
DECL|function|scsi_ulto4b
id|scsi_ulto4b
c_func
(paren
r_uint32
id|val
comma
r_uint8
op_star
id|bytes
)paren
(brace
id|bytes
(braket
l_int|0
)braket
op_assign
(paren
id|val
op_rshift
l_int|24
)paren
op_amp
l_int|0xff
suffix:semicolon
id|bytes
(braket
l_int|1
)braket
op_assign
(paren
id|val
op_rshift
l_int|16
)paren
op_amp
l_int|0xff
suffix:semicolon
id|bytes
(braket
l_int|2
)braket
op_assign
(paren
id|val
op_rshift
l_int|8
)paren
op_amp
l_int|0xff
suffix:semicolon
id|bytes
(braket
l_int|3
)braket
op_assign
id|val
op_amp
l_int|0xff
suffix:semicolon
)brace
r_static
id|__inline
r_uint32
DECL|function|scsi_2btoul
id|scsi_2btoul
c_func
(paren
r_uint8
op_star
id|bytes
)paren
(brace
r_uint32
id|rv
suffix:semicolon
id|rv
op_assign
(paren
id|bytes
(braket
l_int|0
)braket
op_lshift
l_int|8
)paren
op_or
id|bytes
(braket
l_int|1
)braket
suffix:semicolon
r_return
(paren
id|rv
)paren
suffix:semicolon
)brace
r_static
id|__inline
r_uint32
DECL|function|scsi_3btoul
id|scsi_3btoul
c_func
(paren
r_uint8
op_star
id|bytes
)paren
(brace
r_uint32
id|rv
suffix:semicolon
id|rv
op_assign
(paren
id|bytes
(braket
l_int|0
)braket
op_lshift
l_int|16
)paren
op_or
(paren
id|bytes
(braket
l_int|1
)braket
op_lshift
l_int|8
)paren
op_or
id|bytes
(braket
l_int|2
)braket
suffix:semicolon
r_return
(paren
id|rv
)paren
suffix:semicolon
)brace
r_static
id|__inline
r_int32
DECL|function|scsi_3btol
id|scsi_3btol
c_func
(paren
r_uint8
op_star
id|bytes
)paren
(brace
r_uint32
id|rc
op_assign
id|scsi_3btoul
c_func
(paren
id|bytes
)paren
suffix:semicolon
r_if
c_cond
(paren
id|rc
op_amp
l_int|0x00800000
)paren
id|rc
op_or_assign
l_int|0xff000000
suffix:semicolon
r_return
(paren
r_int32
)paren
id|rc
suffix:semicolon
)brace
r_static
id|__inline
r_uint32
DECL|function|scsi_4btoul
id|scsi_4btoul
c_func
(paren
r_uint8
op_star
id|bytes
)paren
(brace
r_uint32
id|rv
suffix:semicolon
id|rv
op_assign
(paren
id|bytes
(braket
l_int|0
)braket
op_lshift
l_int|24
)paren
op_or
(paren
id|bytes
(braket
l_int|1
)braket
op_lshift
l_int|16
)paren
op_or
(paren
id|bytes
(braket
l_int|2
)braket
op_lshift
l_int|8
)paren
op_or
id|bytes
(braket
l_int|3
)braket
suffix:semicolon
r_return
(paren
id|rv
)paren
suffix:semicolon
)brace
macro_line|#endif /*_SCSI_SCSI_ALL_H*/
eof
