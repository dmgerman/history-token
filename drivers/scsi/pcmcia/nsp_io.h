multiline_comment|/*&n;  NinjaSCSI I/O funtions &n;      By: YOKOTA Hiroshi &lt;yokota@netlab.is.tsukuba.ac.jp&gt;&n; &n;  This software may be used and distributed according to the terms of&n;  the GNU Public License.&n;&n;  */
multiline_comment|/* $Id: nsp_io.h,v 1.8 2001/01/30 05:16:02 elca Exp $ */
macro_line|#ifndef __NSP_IO_H__
DECL|macro|__NSP_IO_H__
mdefine_line|#define __NSP_IO_H__
r_static
r_inline
r_void
id|nsp_write
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|index
comma
r_int
r_char
id|val
)paren
suffix:semicolon
r_static
r_inline
r_int
r_char
id|nsp_read
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|index
)paren
suffix:semicolon
r_static
r_inline
r_void
id|nsp_index_write
c_func
(paren
r_int
r_int
id|BaseAddr
comma
r_int
r_int
id|Register
comma
r_int
r_char
id|Value
)paren
suffix:semicolon
r_static
r_inline
r_int
r_char
id|nsp_index_read
c_func
(paren
r_int
r_int
id|BaseAddr
comma
r_int
r_int
id|Register
)paren
suffix:semicolon
multiline_comment|/*******************************************************************&n; * Basic IO&n; */
DECL|function|nsp_write
r_static
r_inline
r_void
id|nsp_write
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|index
comma
r_int
r_char
id|val
)paren
(brace
id|outb
c_func
(paren
id|val
comma
(paren
id|base
op_plus
id|index
)paren
)paren
suffix:semicolon
)brace
DECL|function|nsp_read
r_static
r_inline
r_int
r_char
id|nsp_read
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|index
)paren
(brace
r_return
id|inb
c_func
(paren
id|base
op_plus
id|index
)paren
suffix:semicolon
)brace
multiline_comment|/**********************************************************************&n; * Indexed IO&n; */
DECL|function|nsp_index_read
r_static
r_inline
r_int
r_char
id|nsp_index_read
c_func
(paren
r_int
r_int
id|BaseAddr
comma
r_int
r_int
id|Register
)paren
(brace
id|outb
c_func
(paren
id|Register
comma
id|BaseAddr
op_plus
id|INDEXREG
)paren
suffix:semicolon
r_return
id|inb
c_func
(paren
id|BaseAddr
op_plus
id|DATAREG
)paren
suffix:semicolon
)brace
DECL|function|nsp_index_write
r_static
r_inline
r_void
id|nsp_index_write
c_func
(paren
r_int
r_int
id|BaseAddr
comma
r_int
r_int
id|Register
comma
r_int
r_char
id|Value
)paren
(brace
id|outb
c_func
(paren
id|Register
comma
id|BaseAddr
op_plus
id|INDEXREG
)paren
suffix:semicolon
id|outb
c_func
(paren
id|Value
comma
id|BaseAddr
op_plus
id|DATAREG
)paren
suffix:semicolon
)brace
multiline_comment|/*********************************************************************&n; * fifo func&n; */
multiline_comment|/* read 8 bit FIFO */
DECL|function|nsp_multi_read_1
r_static
r_inline
r_void
id|nsp_multi_read_1
c_func
(paren
r_int
r_int
id|BaseAddr
comma
r_int
r_int
id|Register
comma
r_void
op_star
id|buf
comma
r_int
r_int
id|count
)paren
(brace
id|insb
c_func
(paren
id|BaseAddr
op_plus
id|Register
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
DECL|function|nsp_fifo8_read
r_static
r_inline
r_void
id|nsp_fifo8_read
c_func
(paren
r_int
r_int
id|base
comma
r_void
op_star
id|buf
comma
r_int
r_int
id|count
)paren
(brace
singleline_comment|//DEBUG(0, __FUNCTION__ &quot;() buf=0x%p, count=0x%lx&bslash;n&quot;, buf, count);
id|nsp_multi_read_1
c_func
(paren
id|base
comma
id|FIFODATA
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
multiline_comment|/*--------------------------------------------------------------*/
multiline_comment|/* read 16 bit FIFO */
DECL|function|nsp_multi_read_2
r_static
r_inline
r_void
id|nsp_multi_read_2
c_func
(paren
r_int
r_int
id|BaseAddr
comma
r_int
r_int
id|Register
comma
r_void
op_star
id|buf
comma
r_int
r_int
id|count
)paren
(brace
id|insw
c_func
(paren
id|BaseAddr
op_plus
id|Register
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
DECL|function|nsp_fifo16_read
r_static
r_inline
r_void
id|nsp_fifo16_read
c_func
(paren
r_int
r_int
id|base
comma
r_void
op_star
id|buf
comma
r_int
r_int
id|count
)paren
(brace
singleline_comment|//DEBUG(0, __FUNCTION__ &quot;() buf=0x%p, count=0x%lx*2&bslash;n&quot;, buf, count);
id|nsp_multi_read_2
c_func
(paren
id|base
comma
id|FIFODATA
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
multiline_comment|/*--------------------------------------------------------------*/
multiline_comment|/* read 32bit FIFO */
DECL|function|nsp_multi_read_4
r_static
r_inline
r_void
id|nsp_multi_read_4
c_func
(paren
r_int
r_int
id|BaseAddr
comma
r_int
r_int
id|Register
comma
r_void
op_star
id|buf
comma
r_int
r_int
id|count
)paren
(brace
id|insl
c_func
(paren
id|BaseAddr
op_plus
id|Register
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
DECL|function|nsp_fifo32_read
r_static
r_inline
r_void
id|nsp_fifo32_read
c_func
(paren
r_int
r_int
id|base
comma
r_void
op_star
id|buf
comma
r_int
r_int
id|count
)paren
(brace
singleline_comment|//DEBUG(0, __FUNCTION__ &quot;() buf=0x%p, count=0x%lx*4&bslash;n&quot;, buf, count);
id|nsp_multi_read_4
c_func
(paren
id|base
comma
id|FIFODATA
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
multiline_comment|/*----------------------------------------------------------*/
multiline_comment|/* write 8bit FIFO */
DECL|function|nsp_multi_write_1
r_static
r_inline
r_void
id|nsp_multi_write_1
c_func
(paren
r_int
r_int
id|BaseAddr
comma
r_int
r_int
id|Register
comma
r_void
op_star
id|buf
comma
r_int
r_int
id|count
)paren
(brace
id|outsb
c_func
(paren
id|BaseAddr
op_plus
id|Register
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
DECL|function|nsp_fifo8_write
r_static
r_inline
r_void
id|nsp_fifo8_write
c_func
(paren
r_int
r_int
id|base
comma
r_void
op_star
id|buf
comma
r_int
r_int
id|count
)paren
(brace
id|nsp_multi_write_1
c_func
(paren
id|base
comma
id|FIFODATA
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
multiline_comment|/*---------------------------------------------------------*/
multiline_comment|/* write 16bit FIFO */
DECL|function|nsp_multi_write_2
r_static
r_inline
r_void
id|nsp_multi_write_2
c_func
(paren
r_int
r_int
id|BaseAddr
comma
r_int
r_int
id|Register
comma
r_void
op_star
id|buf
comma
r_int
r_int
id|count
)paren
(brace
id|outsw
c_func
(paren
id|BaseAddr
op_plus
id|Register
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
DECL|function|nsp_fifo16_write
r_static
r_inline
r_void
id|nsp_fifo16_write
c_func
(paren
r_int
r_int
id|base
comma
r_void
op_star
id|buf
comma
r_int
r_int
id|count
)paren
(brace
id|nsp_multi_write_2
c_func
(paren
id|base
comma
id|FIFODATA
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
multiline_comment|/*---------------------------------------------------------*/
multiline_comment|/* write 32bit FIFO */
DECL|function|nsp_multi_write_4
r_static
r_inline
r_void
id|nsp_multi_write_4
c_func
(paren
r_int
r_int
id|BaseAddr
comma
r_int
r_int
id|Register
comma
r_void
op_star
id|buf
comma
r_int
r_int
id|count
)paren
(brace
id|outsl
c_func
(paren
id|BaseAddr
op_plus
id|Register
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
DECL|function|nsp_fifo32_write
r_static
r_inline
r_void
id|nsp_fifo32_write
c_func
(paren
r_int
r_int
id|base
comma
r_void
op_star
id|buf
comma
r_int
r_int
id|count
)paren
(brace
id|nsp_multi_write_4
c_func
(paren
id|base
comma
id|FIFODATA
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
macro_line|#endif
multiline_comment|/* end */
eof
