multiline_comment|/*&n; * Workbit NinjaSCSI-32Bi/UDE PCI/Cardbus SCSI Host Bus Adapter driver&n; * I/O routine&n; *&n; * This software may be used and distributed according to the terms of&n; * the GNU General Public License.&n; */
macro_line|#ifndef _NSP32_IO_H
DECL|macro|_NSP32_IO_H
mdefine_line|#define _NSP32_IO_H
DECL|function|nsp32_write1
r_static
r_inline
r_void
id|nsp32_write1
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|index
comma
r_int
r_char
id|val
)paren
(brace
id|outb
c_func
(paren
id|val
comma
(paren
id|base
op_plus
id|index
)paren
)paren
suffix:semicolon
)brace
DECL|function|nsp32_read1
r_static
r_inline
r_int
r_char
id|nsp32_read1
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|index
)paren
(brace
r_return
id|inb
c_func
(paren
id|base
op_plus
id|index
)paren
suffix:semicolon
)brace
DECL|function|nsp32_write2
r_static
r_inline
r_void
id|nsp32_write2
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|index
comma
r_int
r_int
id|val
)paren
(brace
id|outw
c_func
(paren
id|cpu_to_le16
c_func
(paren
id|val
)paren
comma
(paren
id|base
op_plus
id|index
)paren
)paren
suffix:semicolon
)brace
DECL|function|nsp32_read2
r_static
r_inline
r_int
r_int
id|nsp32_read2
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|index
)paren
(brace
r_return
id|le16_to_cpu
c_func
(paren
id|inw
c_func
(paren
id|base
op_plus
id|index
)paren
)paren
suffix:semicolon
)brace
DECL|function|nsp32_write4
r_static
r_inline
r_void
id|nsp32_write4
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|index
comma
r_int
r_int
id|val
)paren
(brace
id|outl
c_func
(paren
id|cpu_to_le32
c_func
(paren
id|val
)paren
comma
(paren
id|base
op_plus
id|index
)paren
)paren
suffix:semicolon
)brace
DECL|function|nsp32_read4
r_static
r_inline
r_int
r_int
id|nsp32_read4
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|index
)paren
(brace
r_return
id|le32_to_cpu
c_func
(paren
id|inl
c_func
(paren
id|base
op_plus
id|index
)paren
)paren
suffix:semicolon
)brace
multiline_comment|/*==============================================*/
DECL|function|nsp32_mmio_write1
r_static
r_inline
r_void
id|nsp32_mmio_write1
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|index
comma
r_int
r_char
id|val
)paren
(brace
r_volatile
r_int
r_char
op_star
id|ptr
suffix:semicolon
id|ptr
op_assign
(paren
r_int
r_char
op_star
)paren
(paren
id|base
op_plus
id|NSP32_MMIO_OFFSET
op_plus
id|index
)paren
suffix:semicolon
op_star
id|ptr
op_assign
id|val
suffix:semicolon
)brace
DECL|function|nsp32_mmio_read1
r_static
r_inline
r_int
r_char
id|nsp32_mmio_read1
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|index
)paren
(brace
r_volatile
r_int
r_char
op_star
id|ptr
suffix:semicolon
id|ptr
op_assign
(paren
r_int
r_char
op_star
)paren
(paren
id|base
op_plus
id|NSP32_MMIO_OFFSET
op_plus
id|index
)paren
suffix:semicolon
r_return
op_star
id|ptr
suffix:semicolon
)brace
DECL|function|nsp32_mmio_write2
r_static
r_inline
r_void
id|nsp32_mmio_write2
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|index
comma
r_int
r_int
id|val
)paren
(brace
r_volatile
r_int
r_int
op_star
id|ptr
suffix:semicolon
id|ptr
op_assign
(paren
r_int
r_int
op_star
)paren
(paren
id|base
op_plus
id|NSP32_MMIO_OFFSET
op_plus
id|index
)paren
suffix:semicolon
op_star
id|ptr
op_assign
id|cpu_to_le16
c_func
(paren
id|val
)paren
suffix:semicolon
)brace
DECL|function|nsp32_mmio_read2
r_static
r_inline
r_int
r_int
id|nsp32_mmio_read2
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|index
)paren
(brace
r_volatile
r_int
r_int
op_star
id|ptr
suffix:semicolon
singleline_comment|//printk(__FUNCTION__ &quot;&bslash;n&quot;);
id|ptr
op_assign
(paren
r_int
r_int
op_star
)paren
(paren
id|base
op_plus
id|NSP32_MMIO_OFFSET
op_plus
id|index
)paren
suffix:semicolon
r_return
id|le16_to_cpu
c_func
(paren
op_star
id|ptr
)paren
suffix:semicolon
)brace
DECL|function|nsp32_mmio_write4
r_static
r_inline
r_void
id|nsp32_mmio_write4
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|index
comma
r_int
r_int
id|val
)paren
(brace
r_volatile
r_int
r_int
op_star
id|ptr
suffix:semicolon
id|ptr
op_assign
(paren
r_int
r_int
op_star
)paren
(paren
id|base
op_plus
id|NSP32_MMIO_OFFSET
op_plus
id|index
)paren
suffix:semicolon
op_star
id|ptr
op_assign
id|cpu_to_le32
c_func
(paren
id|val
)paren
suffix:semicolon
)brace
DECL|function|nsp32_mmio_read4
r_static
r_inline
r_int
r_int
id|nsp32_mmio_read4
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|index
)paren
(brace
r_volatile
r_int
r_int
op_star
id|ptr
suffix:semicolon
singleline_comment|//printk(__FUNCTION__ &quot;&bslash;n&quot;);
id|ptr
op_assign
(paren
r_int
r_int
op_star
)paren
(paren
id|base
op_plus
id|NSP32_MMIO_OFFSET
op_plus
id|index
)paren
suffix:semicolon
r_return
id|le32_to_cpu
c_func
(paren
op_star
id|ptr
)paren
suffix:semicolon
)brace
multiline_comment|/*=============================================*/
DECL|function|nsp32_index_read1
r_static
r_inline
r_int
r_char
id|nsp32_index_read1
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|reg
)paren
(brace
id|outb
c_func
(paren
id|reg
comma
id|base
op_plus
id|INDEX_REG
)paren
suffix:semicolon
r_return
id|inb
c_func
(paren
id|base
op_plus
id|DATA_REG_LOW
)paren
suffix:semicolon
)brace
DECL|function|nsp32_index_write1
r_static
r_inline
r_void
id|nsp32_index_write1
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|reg
comma
r_int
r_char
id|val
)paren
(brace
id|outb
c_func
(paren
id|reg
comma
id|base
op_plus
id|INDEX_REG
)paren
suffix:semicolon
id|outb
c_func
(paren
id|val
comma
id|base
op_plus
id|DATA_REG_LOW
)paren
suffix:semicolon
)brace
DECL|function|nsp32_index_read2
r_static
r_inline
r_int
r_int
id|nsp32_index_read2
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|reg
)paren
(brace
id|outb
c_func
(paren
id|reg
comma
id|base
op_plus
id|INDEX_REG
)paren
suffix:semicolon
r_return
id|le16_to_cpu
c_func
(paren
id|inw
c_func
(paren
id|base
op_plus
id|DATA_REG_LOW
)paren
)paren
suffix:semicolon
)brace
DECL|function|nsp32_index_write2
r_static
r_inline
r_void
id|nsp32_index_write2
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|reg
comma
r_int
r_int
id|val
)paren
(brace
id|outb
c_func
(paren
id|reg
comma
id|base
op_plus
id|INDEX_REG
)paren
suffix:semicolon
id|outw
c_func
(paren
id|cpu_to_le16
c_func
(paren
id|val
)paren
comma
id|base
op_plus
id|DATA_REG_LOW
)paren
suffix:semicolon
)brace
DECL|function|nsp32_index_read4
r_static
r_inline
r_int
r_int
id|nsp32_index_read4
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|reg
)paren
(brace
r_int
r_int
id|h
comma
id|l
suffix:semicolon
id|outb
c_func
(paren
id|reg
comma
id|base
op_plus
id|INDEX_REG
)paren
suffix:semicolon
id|l
op_assign
id|le16_to_cpu
c_func
(paren
id|inw
c_func
(paren
id|base
op_plus
id|DATA_REG_LOW
)paren
)paren
suffix:semicolon
id|h
op_assign
id|le16_to_cpu
c_func
(paren
id|inw
c_func
(paren
id|base
op_plus
id|DATA_REG_HI
)paren
)paren
suffix:semicolon
r_return
(paren
(paren
id|h
op_lshift
l_int|16
)paren
op_or
id|l
)paren
suffix:semicolon
)brace
DECL|function|nsp32_index_write4
r_static
r_inline
r_void
id|nsp32_index_write4
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|reg
comma
r_int
r_int
id|val
)paren
(brace
r_int
r_int
id|h
comma
id|l
suffix:semicolon
id|h
op_assign
(paren
id|val
op_amp
l_int|0xffff0000
)paren
op_rshift
l_int|16
suffix:semicolon
id|l
op_assign
(paren
id|val
op_amp
l_int|0x0000ffff
)paren
op_rshift
l_int|0
suffix:semicolon
id|outb
c_func
(paren
id|reg
comma
id|base
op_plus
id|INDEX_REG
)paren
suffix:semicolon
id|outw
c_func
(paren
id|cpu_to_le16
c_func
(paren
id|l
)paren
comma
id|base
op_plus
id|DATA_REG_LOW
)paren
suffix:semicolon
id|outw
c_func
(paren
id|cpu_to_le16
c_func
(paren
id|h
)paren
comma
id|base
op_plus
id|DATA_REG_HI
)paren
suffix:semicolon
)brace
multiline_comment|/* ===================================*/
DECL|function|nsp32_mmio_index_read1
r_static
r_inline
r_int
r_char
id|nsp32_mmio_index_read1
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|reg
)paren
(brace
r_volatile
r_int
r_int
op_star
id|index_ptr
comma
op_star
id|data_ptr
suffix:semicolon
id|index_ptr
op_assign
(paren
r_int
r_int
op_star
)paren
(paren
id|base
op_plus
id|NSP32_MMIO_OFFSET
op_plus
id|INDEX_REG
)paren
suffix:semicolon
id|data_ptr
op_assign
(paren
r_int
r_int
op_star
)paren
(paren
id|base
op_plus
id|NSP32_MMIO_OFFSET
op_plus
id|DATA_REG_LOW
)paren
suffix:semicolon
op_star
id|index_ptr
op_assign
id|reg
suffix:semicolon
r_return
(paren
(paren
op_star
id|data_ptr
)paren
op_amp
l_int|0xff
)paren
suffix:semicolon
)brace
DECL|function|nsp32_mmio_index_write1
r_static
r_inline
r_void
id|nsp32_mmio_index_write1
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|reg
comma
r_int
r_char
id|val
)paren
(brace
r_volatile
r_int
r_int
op_star
id|index_ptr
comma
op_star
id|data_ptr
suffix:semicolon
id|index_ptr
op_assign
(paren
r_int
r_int
op_star
)paren
(paren
id|base
op_plus
id|NSP32_MMIO_OFFSET
op_plus
id|INDEX_REG
)paren
suffix:semicolon
id|data_ptr
op_assign
(paren
r_int
r_int
op_star
)paren
(paren
id|base
op_plus
id|NSP32_MMIO_OFFSET
op_plus
id|DATA_REG_LOW
)paren
suffix:semicolon
op_star
id|index_ptr
op_assign
id|reg
suffix:semicolon
op_star
id|data_ptr
op_assign
(paren
r_int
r_int
)paren
id|val
suffix:semicolon
)brace
DECL|function|nsp32_mmio_index_read2
r_static
r_inline
r_int
r_int
id|nsp32_mmio_index_read2
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|reg
)paren
(brace
r_volatile
r_int
r_int
op_star
id|index_ptr
comma
op_star
id|data_ptr
suffix:semicolon
id|index_ptr
op_assign
(paren
r_int
r_int
op_star
)paren
(paren
id|base
op_plus
id|NSP32_MMIO_OFFSET
op_plus
id|INDEX_REG
)paren
suffix:semicolon
id|data_ptr
op_assign
(paren
r_int
r_int
op_star
)paren
(paren
id|base
op_plus
id|NSP32_MMIO_OFFSET
op_plus
id|DATA_REG_LOW
)paren
suffix:semicolon
op_star
id|index_ptr
op_assign
id|reg
suffix:semicolon
r_return
id|le16_to_cpu
c_func
(paren
op_star
id|data_ptr
)paren
suffix:semicolon
)brace
DECL|function|nsp32_mmio_index_write2
r_static
r_inline
r_void
id|nsp32_mmio_index_write2
c_func
(paren
r_int
r_int
id|base
comma
r_int
r_int
id|reg
comma
r_int
r_int
id|val
)paren
(brace
r_volatile
r_int
r_int
op_star
id|index_ptr
comma
op_star
id|data_ptr
suffix:semicolon
id|index_ptr
op_assign
(paren
r_int
r_int
op_star
)paren
(paren
id|base
op_plus
id|NSP32_MMIO_OFFSET
op_plus
id|INDEX_REG
)paren
suffix:semicolon
id|data_ptr
op_assign
(paren
r_int
r_int
op_star
)paren
(paren
id|base
op_plus
id|NSP32_MMIO_OFFSET
op_plus
id|DATA_REG_LOW
)paren
suffix:semicolon
op_star
id|index_ptr
op_assign
id|reg
suffix:semicolon
op_star
id|data_ptr
op_assign
id|val
suffix:semicolon
)brace
multiline_comment|/*-------------------------------------------------------------------*/
DECL|function|nsp32_multi_read4
r_static
r_inline
r_void
id|nsp32_multi_read4
c_func
(paren
r_int
r_int
id|BaseAddr
comma
r_int
r_int
id|Register
comma
r_void
op_star
id|buf
comma
r_int
r_int
id|count
)paren
(brace
id|insl
c_func
(paren
id|BaseAddr
op_plus
id|Register
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
DECL|function|nsp32_fifo_read
r_static
r_inline
r_void
id|nsp32_fifo_read
c_func
(paren
r_int
r_int
id|base
comma
r_void
op_star
id|buf
comma
r_int
r_int
id|count
)paren
(brace
singleline_comment|//DEBUG(0, __FUNCTION__ &quot;() buf=0x%p, count=0x%lx*4&bslash;n&quot;, buf, count);
id|nsp32_multi_read4
c_func
(paren
id|base
comma
id|FIFO_DATA_LOW
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
DECL|function|nsp32_multi_write4
r_static
r_inline
r_void
id|nsp32_multi_write4
c_func
(paren
r_int
r_int
id|BaseAddr
comma
r_int
r_int
id|Register
comma
r_void
op_star
id|buf
comma
r_int
r_int
id|count
)paren
(brace
id|outsl
c_func
(paren
id|BaseAddr
op_plus
id|Register
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
DECL|function|nsp32_fifo_write
r_static
r_inline
r_void
id|nsp32_fifo_write
c_func
(paren
r_int
r_int
id|base
comma
r_void
op_star
id|buf
comma
r_int
r_int
id|count
)paren
(brace
id|nsp32_multi_write4
c_func
(paren
id|base
comma
id|FIFO_DATA_LOW
comma
id|buf
comma
id|count
)paren
suffix:semicolon
)brace
macro_line|#endif _NSP32_IO_H
multiline_comment|/* end */
eof
