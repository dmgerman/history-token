multiline_comment|/*&n; * kernel/lvm-internal.h&n; *&n; * Copyright (C) 2001 Sistina Software&n; *&n; *&n; * LVM driver is free software; you can redistribute it and/or modify&n; * it under the terms of the GNU General Public License as published by&n; * the Free Software Foundation; either version 2, or (at your option)&n; * any later version.&n; *&n; * LVM driver is distributed in the hope that it will be useful,&n; * but WITHOUT ANY WARRANTY; without even the implied warranty of&n; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; * GNU General Public License for more details.&n; *&n; * You should have received a copy of the GNU General Public License&n; * along with GNU CC; see the file COPYING.  If not, write to&n; * the Free Software Foundation, 59 Temple Place - Suite 330,&n; * Boston, MA 02111-1307, USA.&n; *&n; */
multiline_comment|/*&n; * Changelog&n; *&n; *    05/01/2001:Joe Thornber - Factored this file out of lvm.c&n; *&n; */
macro_line|#ifndef LVM_INTERNAL_H
DECL|macro|LVM_INTERNAL_H
mdefine_line|#define LVM_INTERNAL_H
macro_line|#include &lt;linux/lvm.h&gt;
DECL|macro|_LVM_INTERNAL_H_VERSION
mdefine_line|#define _LVM_INTERNAL_H_VERSION &quot;LVM &quot;LVM_RELEASE_NAME&quot; (&quot;LVM_RELEASE_DATE&quot;)&quot;
multiline_comment|/* global variables, defined in lvm.c */
r_extern
r_char
op_star
id|lvm_version
suffix:semicolon
r_extern
id|ushort
id|lvm_iop_version
suffix:semicolon
r_extern
r_int
id|loadtime
suffix:semicolon
r_extern
r_const
r_char
op_star
r_const
id|lvm_name
suffix:semicolon
r_extern
id|vg_t
op_star
id|vg
(braket
)braket
suffix:semicolon
r_extern
r_struct
id|file_operations
id|lvm_chr_fops
suffix:semicolon
r_extern
r_struct
id|block_device_operations
id|lvm_blk_dops
suffix:semicolon
multiline_comment|/* debug macros */
macro_line|#ifdef DEBUG_IOCTL
DECL|macro|P_IOCTL
mdefine_line|#define P_IOCTL(fmt, args...) printk(KERN_DEBUG &quot;lvm ioctl: &quot; fmt, ## args)
macro_line|#else
DECL|macro|P_IOCTL
mdefine_line|#define P_IOCTL(fmt, args...)
macro_line|#endif
macro_line|#ifdef DEBUG_MAP
DECL|macro|P_MAP
mdefine_line|#define P_MAP(fmt, args...) printk(KERN_DEBUG &quot;lvm map: &quot; fmt, ## args)
macro_line|#else
DECL|macro|P_MAP
mdefine_line|#define P_MAP(fmt, args...)
macro_line|#endif
macro_line|#ifdef DEBUG_KFREE
DECL|macro|P_KFREE
mdefine_line|#define P_KFREE(fmt, args...) printk(KERN_DEBUG &quot;lvm kfree: &quot; fmt, ## args)
macro_line|#else
DECL|macro|P_KFREE
mdefine_line|#define P_KFREE(fmt, args...)
macro_line|#endif
macro_line|#ifdef DEBUG_DEVICE
DECL|macro|P_DEV
mdefine_line|#define P_DEV(fmt, args...) printk(KERN_DEBUG &quot;lvm device: &quot; fmt, ## args)
macro_line|#else
DECL|macro|P_DEV
mdefine_line|#define P_DEV(fmt, args...)
macro_line|#endif
multiline_comment|/* lvm-snap.c */
r_int
id|lvm_get_blksize
c_func
(paren
id|kdev_t
)paren
suffix:semicolon
r_int
id|lvm_snapshot_alloc
c_func
(paren
id|lv_t
op_star
)paren
suffix:semicolon
r_int
id|lvm_snapshot_fill_COW_page
c_func
(paren
id|vg_t
op_star
comma
id|lv_t
op_star
)paren
suffix:semicolon
r_int
id|lvm_snapshot_COW
c_func
(paren
id|kdev_t
comma
id|ulong
comma
id|ulong
comma
id|ulong
comma
id|vg_t
op_star
id|vg
comma
id|lv_t
op_star
)paren
suffix:semicolon
r_int
id|lvm_snapshot_remap_block
c_func
(paren
id|kdev_t
op_star
comma
id|ulong
op_star
comma
id|ulong
comma
id|lv_t
op_star
)paren
suffix:semicolon
r_void
id|lvm_snapshot_release
c_func
(paren
id|lv_t
op_star
)paren
suffix:semicolon
r_int
id|lvm_write_COW_table_block
c_func
(paren
id|vg_t
op_star
comma
id|lv_t
op_star
)paren
suffix:semicolon
r_void
id|lvm_hash_link
c_func
(paren
id|lv_block_exception_t
op_star
comma
id|kdev_t
comma
id|ulong
comma
id|lv_t
op_star
)paren
suffix:semicolon
r_int
id|lvm_snapshot_alloc_hash_table
c_func
(paren
id|lv_t
op_star
)paren
suffix:semicolon
r_void
id|lvm_drop_snapshot
c_func
(paren
id|vg_t
op_star
id|vg
comma
id|lv_t
op_star
comma
r_const
r_char
op_star
)paren
suffix:semicolon
multiline_comment|/* lvm_fs.c */
r_void
id|lvm_init_fs
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|lvm_fin_fs
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|lvm_fs_create_vg
c_func
(paren
id|vg_t
op_star
id|vg_ptr
)paren
suffix:semicolon
r_void
id|lvm_fs_remove_vg
c_func
(paren
id|vg_t
op_star
id|vg_ptr
)paren
suffix:semicolon
id|devfs_handle_t
id|lvm_fs_create_lv
c_func
(paren
id|vg_t
op_star
id|vg_ptr
comma
id|lv_t
op_star
id|lv
)paren
suffix:semicolon
r_void
id|lvm_fs_remove_lv
c_func
(paren
id|vg_t
op_star
id|vg_ptr
comma
id|lv_t
op_star
id|lv
)paren
suffix:semicolon
r_void
id|lvm_fs_create_pv
c_func
(paren
id|vg_t
op_star
id|vg_ptr
comma
id|pv_t
op_star
id|pv
)paren
suffix:semicolon
r_void
id|lvm_fs_remove_pv
c_func
(paren
id|vg_t
op_star
id|vg_ptr
comma
id|pv_t
op_star
id|pv
)paren
suffix:semicolon
macro_line|#endif
eof
