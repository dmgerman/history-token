multiline_comment|/*&n; * Copyright (C) 2004 Red Hat UK Ltd.&n; *&n; * This file is released under the GPL.&n; */
macro_line|#ifndef DM_BIO_LIST_H
DECL|macro|DM_BIO_LIST_H
mdefine_line|#define DM_BIO_LIST_H
macro_line|#include &lt;linux/bio.h&gt;
DECL|struct|bio_list
r_struct
id|bio_list
(brace
DECL|member|head
r_struct
id|bio
op_star
id|head
suffix:semicolon
DECL|member|tail
r_struct
id|bio
op_star
id|tail
suffix:semicolon
)brace
suffix:semicolon
DECL|function|bio_list_init
r_static
r_inline
r_void
id|bio_list_init
c_func
(paren
r_struct
id|bio_list
op_star
id|bl
)paren
(brace
id|bl-&gt;head
op_assign
id|bl-&gt;tail
op_assign
l_int|NULL
suffix:semicolon
)brace
DECL|function|bio_list_add
r_static
r_inline
r_void
id|bio_list_add
c_func
(paren
r_struct
id|bio_list
op_star
id|bl
comma
r_struct
id|bio
op_star
id|bio
)paren
(brace
id|bio-&gt;bi_next
op_assign
l_int|NULL
suffix:semicolon
r_if
c_cond
(paren
id|bl-&gt;tail
)paren
id|bl-&gt;tail-&gt;bi_next
op_assign
id|bio
suffix:semicolon
r_else
id|bl-&gt;head
op_assign
id|bio
suffix:semicolon
id|bl-&gt;tail
op_assign
id|bio
suffix:semicolon
)brace
DECL|function|bio_list_merge
r_static
r_inline
r_void
id|bio_list_merge
c_func
(paren
r_struct
id|bio_list
op_star
id|bl
comma
r_struct
id|bio_list
op_star
id|bl2
)paren
(brace
r_if
c_cond
(paren
id|bl-&gt;tail
)paren
id|bl-&gt;tail-&gt;bi_next
op_assign
id|bl2-&gt;head
suffix:semicolon
r_else
id|bl-&gt;head
op_assign
id|bl2-&gt;head
suffix:semicolon
id|bl-&gt;tail
op_assign
id|bl2-&gt;tail
suffix:semicolon
)brace
DECL|function|bio_list_pop
r_static
r_inline
r_struct
id|bio
op_star
id|bio_list_pop
c_func
(paren
r_struct
id|bio_list
op_star
id|bl
)paren
(brace
r_struct
id|bio
op_star
id|bio
op_assign
id|bl-&gt;head
suffix:semicolon
r_if
c_cond
(paren
id|bio
)paren
(brace
id|bl-&gt;head
op_assign
id|bl-&gt;head-&gt;bi_next
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|bl-&gt;head
)paren
id|bl-&gt;tail
op_assign
l_int|NULL
suffix:semicolon
id|bio-&gt;bi_next
op_assign
l_int|NULL
suffix:semicolon
)brace
r_return
id|bio
suffix:semicolon
)brace
DECL|function|bio_list_get
r_static
r_inline
r_struct
id|bio
op_star
id|bio_list_get
c_func
(paren
r_struct
id|bio_list
op_star
id|bl
)paren
(brace
r_struct
id|bio
op_star
id|bio
op_assign
id|bl-&gt;head
suffix:semicolon
id|bl-&gt;head
op_assign
id|bl-&gt;tail
op_assign
l_int|NULL
suffix:semicolon
r_return
id|bio
suffix:semicolon
)brace
macro_line|#endif
eof
