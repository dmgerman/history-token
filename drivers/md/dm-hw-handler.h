multiline_comment|/*&n; * Copyright (C) 2004 Red Hat, Inc. All rights reserved.&n; *&n; * This file is released under the GPL.&n; *&n; * Multipath hardware handler registration.&n; */
macro_line|#ifndef&t;DM_HW_HANDLER_H
DECL|macro|DM_HW_HANDLER_H
mdefine_line|#define&t;DM_HW_HANDLER_H
macro_line|#include &lt;linux/device-mapper.h&gt;
macro_line|#include &quot;dm-mpath.h&quot;
r_struct
id|hw_handler_type
suffix:semicolon
DECL|struct|hw_handler
r_struct
id|hw_handler
(brace
DECL|member|type
r_struct
id|hw_handler_type
op_star
id|type
suffix:semicolon
DECL|member|context
r_void
op_star
id|context
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * Constructs a hardware handler object, takes custom arguments&n; */
DECL|typedef|hwh_ctr_fn
r_typedef
r_int
(paren
op_star
id|hwh_ctr_fn
)paren
(paren
r_struct
id|hw_handler
op_star
id|hwh
comma
r_int
id|arc
comma
r_char
op_star
op_star
id|argv
)paren
suffix:semicolon
DECL|typedef|hwh_dtr_fn
r_typedef
r_void
(paren
op_star
id|hwh_dtr_fn
)paren
(paren
r_struct
id|hw_handler
op_star
id|hwh
)paren
suffix:semicolon
DECL|typedef|hwh_pg_init_fn
r_typedef
r_void
(paren
op_star
id|hwh_pg_init_fn
)paren
(paren
r_struct
id|hw_handler
op_star
id|hwh
comma
r_int
id|bypassed
comma
r_struct
id|path
op_star
id|path
)paren
suffix:semicolon
DECL|typedef|hwh_err_fn
r_typedef
r_int
(paren
op_star
id|hwh_err_fn
)paren
(paren
r_struct
id|hw_handler
op_star
id|hwh
comma
r_struct
id|bio
op_star
id|bio
)paren
suffix:semicolon
DECL|typedef|hwh_status_fn
r_typedef
r_int
(paren
op_star
id|hwh_status_fn
)paren
(paren
r_struct
id|hw_handler
op_star
id|hwh
comma
id|status_type_t
id|type
comma
r_char
op_star
id|result
comma
r_int
r_int
id|maxlen
)paren
suffix:semicolon
multiline_comment|/* Information about a hardware handler type */
DECL|struct|hw_handler_type
r_struct
id|hw_handler_type
(brace
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
DECL|member|module
r_struct
id|module
op_star
id|module
suffix:semicolon
DECL|member|ctr
id|hwh_ctr_fn
id|ctr
suffix:semicolon
DECL|member|dtr
id|hwh_dtr_fn
id|dtr
suffix:semicolon
DECL|member|pg_init
id|hwh_pg_init_fn
id|pg_init
suffix:semicolon
DECL|member|err
id|hwh_err_fn
id|err
suffix:semicolon
DECL|member|status
id|hwh_status_fn
id|status
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* Register a hardware handler */
r_int
id|dm_register_hw_handler
c_func
(paren
r_struct
id|hw_handler_type
op_star
id|type
)paren
suffix:semicolon
multiline_comment|/* Unregister a hardware handler */
r_int
id|dm_unregister_hw_handler
c_func
(paren
r_struct
id|hw_handler_type
op_star
id|type
)paren
suffix:semicolon
multiline_comment|/* Returns a registered hardware handler type */
r_struct
id|hw_handler_type
op_star
id|dm_get_hw_handler
c_func
(paren
r_const
r_char
op_star
id|name
)paren
suffix:semicolon
multiline_comment|/* Releases a hardware handler  */
r_void
id|dm_put_hw_handler
c_func
(paren
r_struct
id|hw_handler_type
op_star
id|hwht
)paren
suffix:semicolon
multiline_comment|/* Default hwh_err_fn */
r_int
id|dm_scsi_err_handler
c_func
(paren
r_struct
id|hw_handler
op_star
id|hwh
comma
r_struct
id|bio
op_star
id|bio
)paren
suffix:semicolon
multiline_comment|/* Error flags for hwh_err_fn and dm_pg_init_complete */
DECL|macro|MP_FAIL_PATH
mdefine_line|#define MP_FAIL_PATH 1
DECL|macro|MP_BYPASS_PG
mdefine_line|#define MP_BYPASS_PG 2
DECL|macro|MP_ERROR_IO
mdefine_line|#define MP_ERROR_IO  4&t;/* Don&squot;t retry this I/O */
macro_line|#endif
eof
