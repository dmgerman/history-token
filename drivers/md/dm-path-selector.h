multiline_comment|/*&n; * Copyright (C) 2003 Sistina Software.&n; * Copyright (C) 2004 Red Hat, Inc. All rights reserved.&n; *&n; * Module Author: Heinz Mauelshagen&n; *&n; * This file is released under the GPL.&n; *&n; * Path-Selector registration.&n; */
macro_line|#ifndef&t;DM_PATH_SELECTOR_H
DECL|macro|DM_PATH_SELECTOR_H
mdefine_line|#define&t;DM_PATH_SELECTOR_H
macro_line|#include &lt;linux/device-mapper.h&gt;
macro_line|#include &quot;dm-mpath.h&quot;
multiline_comment|/*&n; * We provide an abstraction for the code that chooses which path&n; * to send some io down.&n; */
r_struct
id|path_selector_type
suffix:semicolon
DECL|struct|path_selector
r_struct
id|path_selector
(brace
DECL|member|type
r_struct
id|path_selector_type
op_star
id|type
suffix:semicolon
DECL|member|context
r_void
op_star
id|context
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * Constructs a path selector object, takes custom arguments&n; */
DECL|typedef|ps_ctr_fn
r_typedef
r_int
(paren
op_star
id|ps_ctr_fn
)paren
(paren
r_struct
id|path_selector
op_star
id|ps
comma
r_int
id|argc
comma
r_char
op_star
op_star
id|argv
)paren
suffix:semicolon
DECL|typedef|ps_dtr_fn
r_typedef
r_void
(paren
op_star
id|ps_dtr_fn
)paren
(paren
r_struct
id|path_selector
op_star
id|ps
)paren
suffix:semicolon
multiline_comment|/*&n; * Add an opaque path object, along with some selector specific&n; * path args (eg, path priority).&n; */
DECL|typedef|ps_add_path_fn
r_typedef
r_int
(paren
op_star
id|ps_add_path_fn
)paren
(paren
r_struct
id|path_selector
op_star
id|ps
comma
r_struct
id|path
op_star
id|path
comma
r_int
id|argc
comma
r_char
op_star
op_star
id|argv
comma
r_char
op_star
op_star
id|error
)paren
suffix:semicolon
multiline_comment|/*&n; * Chooses a path for this io, if no paths are available then&n; * NULL will be returned.&n; *&n; * repeat_count is the number of times to use the path before&n; * calling the function again.  0 means don&squot;t call it again unless&n; * the path fails.&n; */
DECL|typedef|ps_select_path_fn
r_typedef
r_struct
id|path
op_star
(paren
op_star
id|ps_select_path_fn
)paren
(paren
r_struct
id|path_selector
op_star
id|ps
comma
r_int
op_star
id|repeat_count
)paren
suffix:semicolon
multiline_comment|/*&n; * Notify the selector that a path has failed.&n; */
DECL|typedef|ps_fail_path_fn
r_typedef
r_void
(paren
op_star
id|ps_fail_path_fn
)paren
(paren
r_struct
id|path_selector
op_star
id|ps
comma
r_struct
id|path
op_star
id|p
)paren
suffix:semicolon
multiline_comment|/*&n; * Ask selector to reinstate a path.&n; */
DECL|typedef|ps_reinstate_path_fn
r_typedef
r_int
(paren
op_star
id|ps_reinstate_path_fn
)paren
(paren
r_struct
id|path_selector
op_star
id|ps
comma
r_struct
id|path
op_star
id|p
)paren
suffix:semicolon
multiline_comment|/*&n; * Table content based on parameters added in ps_add_path_fn&n; * or path selector status&n; */
DECL|typedef|ps_status_fn
r_typedef
r_int
(paren
op_star
id|ps_status_fn
)paren
(paren
r_struct
id|path_selector
op_star
id|ps
comma
r_struct
id|path
op_star
id|path
comma
id|status_type_t
id|type
comma
r_char
op_star
id|result
comma
r_int
r_int
id|maxlen
)paren
suffix:semicolon
DECL|typedef|ps_end_io_fn
r_typedef
r_int
(paren
op_star
id|ps_end_io_fn
)paren
(paren
r_struct
id|path_selector
op_star
id|ps
comma
r_struct
id|path
op_star
id|path
)paren
suffix:semicolon
multiline_comment|/* Information about a path selector type */
DECL|struct|path_selector_type
r_struct
id|path_selector_type
(brace
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
DECL|member|module
r_struct
id|module
op_star
id|module
suffix:semicolon
DECL|member|table_args
r_int
r_int
id|table_args
suffix:semicolon
DECL|member|info_args
r_int
r_int
id|info_args
suffix:semicolon
DECL|member|ctr
id|ps_ctr_fn
id|ctr
suffix:semicolon
DECL|member|dtr
id|ps_dtr_fn
id|dtr
suffix:semicolon
DECL|member|add_path
id|ps_add_path_fn
id|add_path
suffix:semicolon
DECL|member|fail_path
id|ps_fail_path_fn
id|fail_path
suffix:semicolon
DECL|member|reinstate_path
id|ps_reinstate_path_fn
id|reinstate_path
suffix:semicolon
DECL|member|select_path
id|ps_select_path_fn
id|select_path
suffix:semicolon
DECL|member|status
id|ps_status_fn
id|status
suffix:semicolon
DECL|member|end_io
id|ps_end_io_fn
id|end_io
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* Register a path selector */
r_int
id|dm_register_path_selector
c_func
(paren
r_struct
id|path_selector_type
op_star
id|type
)paren
suffix:semicolon
multiline_comment|/* Unregister a path selector */
r_int
id|dm_unregister_path_selector
c_func
(paren
r_struct
id|path_selector_type
op_star
id|type
)paren
suffix:semicolon
multiline_comment|/* Returns a registered path selector type */
r_struct
id|path_selector_type
op_star
id|dm_get_path_selector
c_func
(paren
r_const
r_char
op_star
id|name
)paren
suffix:semicolon
multiline_comment|/* Releases a path selector  */
r_void
id|dm_put_path_selector
c_func
(paren
r_struct
id|path_selector_type
op_star
id|pst
)paren
suffix:semicolon
macro_line|#endif
eof
