multiline_comment|/******************************************************************************&n; *&n; * Name: achware.h -- hardware specific interfaces&n; *&n; *****************************************************************************/
multiline_comment|/*&n; *  Copyright (C) 2000 - 2002, R. Byron Moore&n; *&n; *  This program is free software; you can redistribute it and/or modify&n; *  it under the terms of the GNU General Public License as published by&n; *  the Free Software Foundation; either version 2 of the License, or&n; *  (at your option) any later version.&n; *&n; *  This program is distributed in the hope that it will be useful,&n; *  but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *  GNU General Public License for more details.&n; *&n; *  You should have received a copy of the GNU General Public License&n; *  along with this program; if not, write to the Free Software&n; *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA&n; */
macro_line|#ifndef __ACHWARE_H__
DECL|macro|__ACHWARE_H__
mdefine_line|#define __ACHWARE_H__
multiline_comment|/* PM Timer ticks per second (HZ) */
DECL|macro|PM_TIMER_FREQUENCY
mdefine_line|#define PM_TIMER_FREQUENCY  3579545
multiline_comment|/* Prototypes */
id|acpi_status
id|acpi_hw_initialize
(paren
r_void
)paren
suffix:semicolon
id|acpi_status
id|acpi_hw_shutdown
(paren
r_void
)paren
suffix:semicolon
id|acpi_status
id|acpi_hw_initialize_system_info
(paren
r_void
)paren
suffix:semicolon
id|acpi_status
id|acpi_hw_set_mode
(paren
id|u32
id|mode
)paren
suffix:semicolon
id|u32
id|acpi_hw_get_mode
(paren
r_void
)paren
suffix:semicolon
id|u32
id|acpi_hw_get_mode_capabilities
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* Register I/O Prototypes */
id|acpi_bit_register_info
op_star
id|acpi_hw_get_bit_register_info
(paren
id|u32
id|register_id
)paren
suffix:semicolon
id|acpi_status
id|acpi_hw_register_read
(paren
id|u8
id|use_lock
comma
id|u32
id|register_id
comma
id|u32
op_star
id|return_value
)paren
suffix:semicolon
id|acpi_status
id|acpi_hw_register_write
(paren
id|u8
id|use_lock
comma
id|u32
id|register_id
comma
id|u32
id|value
)paren
suffix:semicolon
id|acpi_status
id|acpi_hw_low_level_read
(paren
id|u32
id|width
comma
id|u32
op_star
id|value
comma
id|acpi_generic_address
op_star
id|reg
comma
id|u32
id|offset
)paren
suffix:semicolon
id|acpi_status
id|acpi_hw_low_level_write
(paren
id|u32
id|width
comma
id|u32
id|value
comma
id|acpi_generic_address
op_star
id|reg
comma
id|u32
id|offset
)paren
suffix:semicolon
id|acpi_status
id|acpi_hw_clear_acpi_status
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* GPE support */
id|u8
id|acpi_hw_get_gpe_bit_mask
(paren
id|u32
id|gpe_number
)paren
suffix:semicolon
id|acpi_status
id|acpi_hw_enable_gpe
(paren
id|u32
id|gpe_number
)paren
suffix:semicolon
r_void
id|acpi_hw_enable_gpe_for_wakeup
(paren
id|u32
id|gpe_number
)paren
suffix:semicolon
id|acpi_status
id|acpi_hw_disable_gpe
(paren
id|u32
id|gpe_number
)paren
suffix:semicolon
r_void
id|acpi_hw_disable_gpe_for_wakeup
(paren
id|u32
id|gpe_number
)paren
suffix:semicolon
id|acpi_status
id|acpi_hw_clear_gpe
(paren
id|u32
id|gpe_number
)paren
suffix:semicolon
id|acpi_status
id|acpi_hw_get_gpe_status
(paren
id|u32
id|gpe_number
comma
id|acpi_event_status
op_star
id|event_status
)paren
suffix:semicolon
id|acpi_status
id|acpi_hw_disable_non_wakeup_gpes
(paren
r_void
)paren
suffix:semicolon
id|acpi_status
id|acpi_hw_enable_non_wakeup_gpes
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* ACPI Timer prototypes */
id|acpi_status
id|acpi_get_timer_resolution
(paren
id|u32
op_star
id|resolution
)paren
suffix:semicolon
id|acpi_status
id|acpi_get_timer
(paren
id|u32
op_star
id|ticks
)paren
suffix:semicolon
id|acpi_status
id|acpi_get_timer_duration
(paren
id|u32
id|start_ticks
comma
id|u32
id|end_ticks
comma
id|u32
op_star
id|time_elapsed
)paren
suffix:semicolon
macro_line|#endif /* __ACHWARE_H__ */
eof
