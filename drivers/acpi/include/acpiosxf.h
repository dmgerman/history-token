multiline_comment|/******************************************************************************&n; *&n; * Name: acpiosxf.h - All interfaces to the OS Services Layer (OSL).  These&n; *                    interfaces must be implemented by OSL to interface the&n; *                    ACPI components to the host operating system.&n; *&n; *****************************************************************************/
multiline_comment|/*&n; *  Copyright (C) 2000 - 2002, R. Byron Moore&n; *&n; *  This program is free software; you can redistribute it and/or modify&n; *  it under the terms of the GNU General Public License as published by&n; *  the Free Software Foundation; either version 2 of the License, or&n; *  (at your option) any later version.&n; *&n; *  This program is distributed in the hope that it will be useful,&n; *  but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *  GNU General Public License for more details.&n; *&n; *  You should have received a copy of the GNU General Public License&n; *  along with this program; if not, write to the Free Software&n; *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA&n; */
macro_line|#ifndef __ACPIOSXF_H__
DECL|macro|__ACPIOSXF_H__
mdefine_line|#define __ACPIOSXF_H__
macro_line|#include &quot;platform/acenv.h&quot;
macro_line|#include &quot;actypes.h&quot;
multiline_comment|/* Priorities for Acpi_os_queue_for_execution */
DECL|macro|OSD_PRIORITY_GPE
mdefine_line|#define OSD_PRIORITY_GPE            1
DECL|macro|OSD_PRIORITY_HIGH
mdefine_line|#define OSD_PRIORITY_HIGH           2
DECL|macro|OSD_PRIORITY_MED
mdefine_line|#define OSD_PRIORITY_MED            3
DECL|macro|OSD_PRIORITY_LO
mdefine_line|#define OSD_PRIORITY_LO             4
DECL|macro|ACPI_NO_UNIT_LIMIT
mdefine_line|#define ACPI_NO_UNIT_LIMIT          ((u32) -1)
DECL|macro|ACPI_MUTEX_SEM
mdefine_line|#define ACPI_MUTEX_SEM              1
multiline_comment|/* Functions for Acpi_os_signal */
DECL|macro|ACPI_SIGNAL_FATAL
mdefine_line|#define ACPI_SIGNAL_FATAL           0
DECL|macro|ACPI_SIGNAL_BREAKPOINT
mdefine_line|#define ACPI_SIGNAL_BREAKPOINT      1
DECL|struct|acpi_fatal_info
r_typedef
r_struct
id|acpi_fatal_info
(brace
DECL|member|type
id|u32
id|type
suffix:semicolon
DECL|member|code
id|u32
id|code
suffix:semicolon
DECL|member|argument
id|u32
id|argument
suffix:semicolon
DECL|typedef|ACPI_SIGNAL_FATAL_INFO
)brace
id|ACPI_SIGNAL_FATAL_INFO
suffix:semicolon
multiline_comment|/*&n; * Types specific to the OS service interfaces&n; */
r_typedef
id|u32
DECL|typedef|OSD_HANDLER
(paren
id|ACPI_SYSTEM_XFACE
op_star
id|OSD_HANDLER
)paren
(paren
r_void
op_star
id|context
)paren
suffix:semicolon
r_typedef
r_void
DECL|typedef|OSD_EXECUTION_CALLBACK
(paren
id|ACPI_SYSTEM_XFACE
op_star
id|OSD_EXECUTION_CALLBACK
)paren
(paren
r_void
op_star
id|context
)paren
suffix:semicolon
multiline_comment|/*&n; * OSL Initialization and shutdown primitives&n; */
id|acpi_status
id|acpi_os_initialize
(paren
r_void
)paren
suffix:semicolon
id|acpi_status
id|acpi_os_terminate
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/*&n; * ACPI Table interfaces&n; */
id|acpi_status
id|acpi_os_get_root_pointer
(paren
id|u32
id|flags
comma
id|ACPI_POINTER
op_star
id|address
)paren
suffix:semicolon
id|acpi_status
id|acpi_os_table_override
(paren
id|acpi_table_header
op_star
id|existing_table
comma
id|acpi_table_header
op_star
op_star
id|new_table
)paren
suffix:semicolon
multiline_comment|/*&n; * Synchronization primitives&n; */
id|acpi_status
id|acpi_os_create_semaphore
(paren
id|u32
id|max_units
comma
id|u32
id|initial_units
comma
id|acpi_handle
op_star
id|out_handle
)paren
suffix:semicolon
id|acpi_status
id|acpi_os_delete_semaphore
(paren
id|acpi_handle
id|handle
)paren
suffix:semicolon
id|acpi_status
id|acpi_os_wait_semaphore
(paren
id|acpi_handle
id|handle
comma
id|u32
id|units
comma
id|u32
id|timeout
)paren
suffix:semicolon
id|acpi_status
id|acpi_os_signal_semaphore
(paren
id|acpi_handle
id|handle
comma
id|u32
id|units
)paren
suffix:semicolon
multiline_comment|/*&n; * Memory allocation and mapping&n; */
r_void
op_star
id|acpi_os_allocate
(paren
id|ACPI_SIZE
id|size
)paren
suffix:semicolon
r_void
id|acpi_os_free
(paren
r_void
op_star
id|memory
)paren
suffix:semicolon
id|acpi_status
id|acpi_os_map_memory
(paren
id|ACPI_PHYSICAL_ADDRESS
id|physical_address
comma
id|ACPI_SIZE
id|size
comma
r_void
op_star
op_star
id|logical_address
)paren
suffix:semicolon
r_void
id|acpi_os_unmap_memory
(paren
r_void
op_star
id|logical_address
comma
id|ACPI_SIZE
id|size
)paren
suffix:semicolon
id|acpi_status
id|acpi_os_get_physical_address
(paren
r_void
op_star
id|logical_address
comma
id|ACPI_PHYSICAL_ADDRESS
op_star
id|physical_address
)paren
suffix:semicolon
multiline_comment|/*&n; * Interrupt handlers&n; */
id|acpi_status
id|acpi_os_install_interrupt_handler
(paren
id|u32
id|interrupt_number
comma
id|OSD_HANDLER
id|service_routine
comma
r_void
op_star
id|context
)paren
suffix:semicolon
id|acpi_status
id|acpi_os_remove_interrupt_handler
(paren
id|u32
id|interrupt_number
comma
id|OSD_HANDLER
id|service_routine
)paren
suffix:semicolon
multiline_comment|/*&n; * Threads and Scheduling&n; */
id|u32
id|acpi_os_get_thread_id
(paren
r_void
)paren
suffix:semicolon
id|acpi_status
id|acpi_os_queue_for_execution
(paren
id|u32
id|priority
comma
id|OSD_EXECUTION_CALLBACK
id|function
comma
r_void
op_star
id|context
)paren
suffix:semicolon
r_void
id|acpi_os_sleep
(paren
id|u32
id|seconds
comma
id|u32
id|milliseconds
)paren
suffix:semicolon
r_void
id|acpi_os_stall
(paren
id|u32
id|microseconds
)paren
suffix:semicolon
multiline_comment|/*&n; * Platform and hardware-independent I/O interfaces&n; */
id|acpi_status
id|acpi_os_read_port
(paren
id|ACPI_IO_ADDRESS
id|address
comma
r_void
op_star
id|value
comma
id|u32
id|width
)paren
suffix:semicolon
id|acpi_status
id|acpi_os_write_port
(paren
id|ACPI_IO_ADDRESS
id|address
comma
id|acpi_integer
id|value
comma
id|u32
id|width
)paren
suffix:semicolon
multiline_comment|/*&n; * Platform and hardware-independent physical memory interfaces&n; */
id|acpi_status
id|acpi_os_read_memory
(paren
id|ACPI_PHYSICAL_ADDRESS
id|address
comma
r_void
op_star
id|value
comma
id|u32
id|width
)paren
suffix:semicolon
id|acpi_status
id|acpi_os_write_memory
(paren
id|ACPI_PHYSICAL_ADDRESS
id|address
comma
id|acpi_integer
id|value
comma
id|u32
id|width
)paren
suffix:semicolon
multiline_comment|/*&n; * Platform and hardware-independent PCI configuration space access&n; */
id|acpi_status
id|acpi_os_read_pci_configuration
(paren
id|acpi_pci_id
op_star
id|pci_id
comma
id|u32
r_register
comma
r_void
op_star
id|value
comma
id|u32
id|width
)paren
suffix:semicolon
id|acpi_status
id|acpi_os_write_pci_configuration
(paren
id|acpi_pci_id
op_star
id|pci_id
comma
id|u32
r_register
comma
id|acpi_integer
id|value
comma
id|u32
id|width
)paren
suffix:semicolon
multiline_comment|/*&n; * Miscellaneous&n; */
id|u8
id|acpi_os_readable
(paren
r_void
op_star
id|pointer
comma
id|u32
id|length
)paren
suffix:semicolon
id|u8
id|acpi_os_writable
(paren
r_void
op_star
id|pointer
comma
id|u32
id|length
)paren
suffix:semicolon
id|acpi_status
id|acpi_os_signal
(paren
id|u32
id|function
comma
r_void
op_star
id|info
)paren
suffix:semicolon
multiline_comment|/*&n; * Debug print routines&n; */
r_void
id|ACPI_INTERNAL_VAR_XFACE
id|acpi_os_printf
(paren
r_const
id|NATIVE_CHAR
op_star
id|format
comma
dot
dot
dot
)paren
suffix:semicolon
r_void
id|acpi_os_vprintf
(paren
r_const
id|NATIVE_CHAR
op_star
id|format
comma
id|va_list
id|args
)paren
suffix:semicolon
multiline_comment|/*&n; * Debug input&n; */
id|u32
id|acpi_os_get_line
(paren
id|NATIVE_CHAR
op_star
id|buffer
)paren
suffix:semicolon
macro_line|#endif /* __ACPIOSXF_H__ */
eof
