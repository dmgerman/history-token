multiline_comment|/******************************************************************************&n; *&n; * Name: acutils.h -- prototypes for the common (subsystem-wide) procedures&n; *       $Revision: 100 $&n; *&n; *****************************************************************************/
multiline_comment|/*&n; *  Copyright (C) 2000, 2001 R. Byron Moore&n; *&n; *  This program is free software; you can redistribute it and/or modify&n; *  it under the terms of the GNU General Public License as published by&n; *  the Free Software Foundation; either version 2 of the License, or&n; *  (at your option) any later version.&n; *&n; *  This program is distributed in the hope that it will be useful,&n; *  but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *  GNU General Public License for more details.&n; *&n; *  You should have received a copy of the GNU General Public License&n; *  along with this program; if not, write to the Free Software&n; *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA&n; */
macro_line|#ifndef _ACUTILS_H
DECL|macro|_ACUTILS_H
mdefine_line|#define _ACUTILS_H
r_typedef
DECL|typedef|ACPI_PKG_CALLBACK
id|ACPI_STATUS
(paren
op_star
id|ACPI_PKG_CALLBACK
)paren
(paren
id|u8
id|object_type
comma
id|ACPI_OPERAND_OBJECT
op_star
id|source_object
comma
id|ACPI_GENERIC_STATE
op_star
id|state
comma
r_void
op_star
id|context
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_walk_package_tree
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|source_object
comma
r_void
op_star
id|target_object
comma
id|ACPI_PKG_CALLBACK
id|walk_callback
comma
r_void
op_star
id|context
)paren
suffix:semicolon
DECL|struct|acpi_pkg_info
r_typedef
r_struct
id|acpi_pkg_info
(brace
DECL|member|free_space
id|u8
op_star
id|free_space
suffix:semicolon
DECL|member|length
id|u32
id|length
suffix:semicolon
DECL|member|object_space
id|u32
id|object_space
suffix:semicolon
DECL|member|num_packages
id|u32
id|num_packages
suffix:semicolon
DECL|typedef|ACPI_PKG_INFO
)brace
id|ACPI_PKG_INFO
suffix:semicolon
DECL|macro|REF_INCREMENT
mdefine_line|#define REF_INCREMENT       (u16) 0
DECL|macro|REF_DECREMENT
mdefine_line|#define REF_DECREMENT       (u16) 1
DECL|macro|REF_FORCE_DELETE
mdefine_line|#define REF_FORCE_DELETE    (u16) 2
multiline_comment|/* Acpi_ut_dump_buffer */
DECL|macro|DB_BYTE_DISPLAY
mdefine_line|#define DB_BYTE_DISPLAY     1
DECL|macro|DB_WORD_DISPLAY
mdefine_line|#define DB_WORD_DISPLAY     2
DECL|macro|DB_DWORD_DISPLAY
mdefine_line|#define DB_DWORD_DISPLAY    4
DECL|macro|DB_QWORD_DISPLAY
mdefine_line|#define DB_QWORD_DISPLAY    8
multiline_comment|/* Global initialization interfaces */
r_void
id|acpi_ut_init_globals
(paren
r_void
)paren
suffix:semicolon
r_void
id|acpi_ut_terminate
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/*&n; * Ut_init - miscellaneous initialization and shutdown&n; */
id|ACPI_STATUS
id|acpi_ut_hardware_initialize
(paren
r_void
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_subsystem_shutdown
(paren
r_void
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_validate_fadt
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/*&n; * Ut_global - Global data structures and procedures&n; */
macro_line|#ifdef ACPI_DEBUG
id|NATIVE_CHAR
op_star
id|acpi_ut_get_mutex_name
(paren
id|u32
id|mutex_id
)paren
suffix:semicolon
id|NATIVE_CHAR
op_star
id|acpi_ut_get_type_name
(paren
id|u32
id|type
)paren
suffix:semicolon
id|NATIVE_CHAR
op_star
id|acpi_ut_get_region_name
(paren
id|u8
id|space_id
)paren
suffix:semicolon
macro_line|#endif
id|u8
id|acpi_ut_valid_object_type
(paren
id|u32
id|type
)paren
suffix:semicolon
id|ACPI_OWNER_ID
id|acpi_ut_allocate_owner_id
(paren
id|u32
id|id_type
)paren
suffix:semicolon
multiline_comment|/*&n; * Ut_clib - Local implementations of C library functions&n; */
macro_line|#ifndef ACPI_USE_SYSTEM_CLIBRARY
id|u32
id|acpi_ut_strlen
(paren
r_const
id|NATIVE_CHAR
op_star
id|string
)paren
suffix:semicolon
id|NATIVE_CHAR
op_star
id|acpi_ut_strcpy
(paren
id|NATIVE_CHAR
op_star
id|dst_string
comma
r_const
id|NATIVE_CHAR
op_star
id|src_string
)paren
suffix:semicolon
id|NATIVE_CHAR
op_star
id|acpi_ut_strncpy
(paren
id|NATIVE_CHAR
op_star
id|dst_string
comma
r_const
id|NATIVE_CHAR
op_star
id|src_string
comma
id|NATIVE_UINT
id|count
)paren
suffix:semicolon
id|u32
id|acpi_ut_strncmp
(paren
r_const
id|NATIVE_CHAR
op_star
id|string1
comma
r_const
id|NATIVE_CHAR
op_star
id|string2
comma
id|NATIVE_UINT
id|count
)paren
suffix:semicolon
id|u32
id|acpi_ut_strcmp
(paren
r_const
id|NATIVE_CHAR
op_star
id|string1
comma
r_const
id|NATIVE_CHAR
op_star
id|string2
)paren
suffix:semicolon
id|NATIVE_CHAR
op_star
id|acpi_ut_strcat
(paren
id|NATIVE_CHAR
op_star
id|dst_string
comma
r_const
id|NATIVE_CHAR
op_star
id|src_string
)paren
suffix:semicolon
id|NATIVE_CHAR
op_star
id|acpi_ut_strncat
(paren
id|NATIVE_CHAR
op_star
id|dst_string
comma
r_const
id|NATIVE_CHAR
op_star
id|src_string
comma
id|NATIVE_UINT
id|count
)paren
suffix:semicolon
id|u32
id|acpi_ut_strtoul
(paren
r_const
id|NATIVE_CHAR
op_star
id|string
comma
id|NATIVE_CHAR
op_star
op_star
id|terminator
comma
id|u32
id|base
)paren
suffix:semicolon
id|NATIVE_CHAR
op_star
id|acpi_ut_strstr
(paren
id|NATIVE_CHAR
op_star
id|string1
comma
id|NATIVE_CHAR
op_star
id|string2
)paren
suffix:semicolon
r_void
op_star
id|acpi_ut_memcpy
(paren
r_void
op_star
id|dest
comma
r_const
r_void
op_star
id|src
comma
id|NATIVE_UINT
id|count
)paren
suffix:semicolon
r_void
op_star
id|acpi_ut_memset
(paren
r_void
op_star
id|dest
comma
id|NATIVE_UINT
id|value
comma
id|NATIVE_UINT
id|count
)paren
suffix:semicolon
id|u32
id|acpi_ut_to_upper
(paren
id|u32
id|c
)paren
suffix:semicolon
id|u32
id|acpi_ut_to_lower
(paren
id|u32
id|c
)paren
suffix:semicolon
macro_line|#endif /* ACPI_USE_SYSTEM_CLIBRARY */
multiline_comment|/*&n; * Ut_copy - Object construction and conversion interfaces&n; */
id|ACPI_STATUS
id|acpi_ut_build_simple_object
c_func
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|obj
comma
id|ACPI_OBJECT
op_star
id|user_obj
comma
id|u8
op_star
id|data_space
comma
id|u32
op_star
id|buffer_space_used
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_build_package_object
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|obj
comma
id|u8
op_star
id|buffer
comma
id|u32
op_star
id|space_used
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_copy_iobject_to_eobject
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|obj
comma
id|ACPI_BUFFER
op_star
id|ret_buffer
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_copy_esimple_to_isimple
c_func
(paren
id|ACPI_OBJECT
op_star
id|user_obj
comma
id|ACPI_OPERAND_OBJECT
op_star
id|obj
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_copy_eobject_to_iobject
(paren
id|ACPI_OBJECT
op_star
id|obj
comma
id|ACPI_OPERAND_OBJECT
op_star
id|internal_obj
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_copy_isimple_to_isimple
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|source_obj
comma
id|ACPI_OPERAND_OBJECT
op_star
id|dest_obj
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_copy_ipackage_to_ipackage
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|source_obj
comma
id|ACPI_OPERAND_OBJECT
op_star
id|dest_obj
comma
id|ACPI_WALK_STATE
op_star
id|walk_state
)paren
suffix:semicolon
multiline_comment|/*&n; * Ut_create - Object creation&n; */
id|ACPI_STATUS
id|acpi_ut_update_object_reference
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|object
comma
id|u16
id|action
)paren
suffix:semicolon
id|ACPI_OPERAND_OBJECT
op_star
id|_ut_create_internal_object
(paren
id|NATIVE_CHAR
op_star
id|module_name
comma
id|u32
id|line_number
comma
id|u32
id|component_id
comma
id|ACPI_OBJECT_TYPE8
id|type
)paren
suffix:semicolon
multiline_comment|/*&n; * Ut_debug - Debug interfaces&n; */
id|u32
id|get_debug_level
(paren
r_void
)paren
suffix:semicolon
r_void
id|set_debug_level
(paren
id|u32
id|level
)paren
suffix:semicolon
r_void
id|function_trace
(paren
id|NATIVE_CHAR
op_star
id|module_name
comma
id|u32
id|line_number
comma
id|u32
id|component_id
comma
id|NATIVE_CHAR
op_star
id|function_name
)paren
suffix:semicolon
r_void
id|function_trace_ptr
(paren
id|NATIVE_CHAR
op_star
id|module_name
comma
id|u32
id|line_number
comma
id|u32
id|component_id
comma
id|NATIVE_CHAR
op_star
id|function_name
comma
r_void
op_star
id|pointer
)paren
suffix:semicolon
r_void
id|function_trace_u32
(paren
id|NATIVE_CHAR
op_star
id|module_name
comma
id|u32
id|line_number
comma
id|u32
id|component_id
comma
id|NATIVE_CHAR
op_star
id|function_name
comma
id|u32
id|integer
)paren
suffix:semicolon
r_void
id|function_trace_str
(paren
id|NATIVE_CHAR
op_star
id|module_name
comma
id|u32
id|line_number
comma
id|u32
id|component_id
comma
id|NATIVE_CHAR
op_star
id|function_name
comma
id|NATIVE_CHAR
op_star
id|string
)paren
suffix:semicolon
r_void
id|function_exit
(paren
id|NATIVE_CHAR
op_star
id|module_name
comma
id|u32
id|line_number
comma
id|u32
id|component_id
comma
id|NATIVE_CHAR
op_star
id|function_name
)paren
suffix:semicolon
r_void
id|function_status_exit
(paren
id|NATIVE_CHAR
op_star
id|module_name
comma
id|u32
id|line_number
comma
id|u32
id|component_id
comma
id|NATIVE_CHAR
op_star
id|function_name
comma
id|ACPI_STATUS
id|status
)paren
suffix:semicolon
r_void
id|function_value_exit
(paren
id|NATIVE_CHAR
op_star
id|module_name
comma
id|u32
id|line_number
comma
id|u32
id|component_id
comma
id|NATIVE_CHAR
op_star
id|function_name
comma
id|ACPI_INTEGER
id|value
)paren
suffix:semicolon
r_void
id|function_ptr_exit
(paren
id|NATIVE_CHAR
op_star
id|module_name
comma
id|u32
id|line_number
comma
id|u32
id|component_id
comma
id|NATIVE_CHAR
op_star
id|function_name
comma
id|u8
op_star
id|ptr
)paren
suffix:semicolon
r_void
id|debug_print_prefix
(paren
id|NATIVE_CHAR
op_star
id|module_name
comma
id|u32
id|line_number
)paren
suffix:semicolon
r_void
id|debug_print
(paren
id|NATIVE_CHAR
op_star
id|module_name
comma
id|u32
id|line_number
comma
id|u32
id|component_id
comma
id|u32
id|print_level
comma
id|NATIVE_CHAR
op_star
id|format
comma
dot
dot
dot
)paren
suffix:semicolon
r_void
id|debug_print_raw
(paren
id|NATIVE_CHAR
op_star
id|format
comma
dot
dot
dot
)paren
suffix:semicolon
r_void
id|_report_info
(paren
id|NATIVE_CHAR
op_star
id|module_name
comma
id|u32
id|line_number
comma
id|u32
id|component_id
)paren
suffix:semicolon
r_void
id|_report_error
(paren
id|NATIVE_CHAR
op_star
id|module_name
comma
id|u32
id|line_number
comma
id|u32
id|component_id
)paren
suffix:semicolon
r_void
id|_report_warning
(paren
id|NATIVE_CHAR
op_star
id|module_name
comma
id|u32
id|line_number
comma
id|u32
id|component_id
)paren
suffix:semicolon
r_void
id|acpi_ut_dump_buffer
(paren
id|u8
op_star
id|buffer
comma
id|u32
id|count
comma
id|u32
id|display
comma
id|u32
id|component_id
)paren
suffix:semicolon
multiline_comment|/*&n; * Ut_delete - Object deletion&n; */
r_void
id|acpi_ut_delete_internal_obj
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|object
)paren
suffix:semicolon
r_void
id|acpi_ut_delete_internal_package_object
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|object
)paren
suffix:semicolon
r_void
id|acpi_ut_delete_internal_simple_object
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|object
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_delete_internal_object_list
(paren
id|ACPI_OPERAND_OBJECT
op_star
op_star
id|obj_list
)paren
suffix:semicolon
multiline_comment|/*&n; * Ut_eval - object evaluation&n; */
multiline_comment|/* Method name strings */
DECL|macro|METHOD_NAME__HID
mdefine_line|#define METHOD_NAME__HID        &quot;_HID&quot;
DECL|macro|METHOD_NAME__UID
mdefine_line|#define METHOD_NAME__UID        &quot;_UID&quot;
DECL|macro|METHOD_NAME__ADR
mdefine_line|#define METHOD_NAME__ADR        &quot;_ADR&quot;
DECL|macro|METHOD_NAME__STA
mdefine_line|#define METHOD_NAME__STA        &quot;_STA&quot;
DECL|macro|METHOD_NAME__REG
mdefine_line|#define METHOD_NAME__REG        &quot;_REG&quot;
DECL|macro|METHOD_NAME__SEG
mdefine_line|#define METHOD_NAME__SEG        &quot;_SEG&quot;
DECL|macro|METHOD_NAME__BBN
mdefine_line|#define METHOD_NAME__BBN        &quot;_BBN&quot;
id|ACPI_STATUS
id|acpi_ut_evaluate_numeric_object
(paren
id|NATIVE_CHAR
op_star
id|object_name
comma
id|ACPI_NAMESPACE_NODE
op_star
id|device_node
comma
id|ACPI_INTEGER
op_star
id|address
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_execute_HID
(paren
id|ACPI_NAMESPACE_NODE
op_star
id|device_node
comma
id|ACPI_DEVICE_ID
op_star
id|hid
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_execute_STA
(paren
id|ACPI_NAMESPACE_NODE
op_star
id|device_node
comma
id|u32
op_star
id|status_flags
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_execute_UID
(paren
id|ACPI_NAMESPACE_NODE
op_star
id|device_node
comma
id|ACPI_DEVICE_ID
op_star
id|uid
)paren
suffix:semicolon
multiline_comment|/*&n; * Ut_error - exception interfaces&n; */
id|NATIVE_CHAR
op_star
id|acpi_ut_format_exception
(paren
id|ACPI_STATUS
id|status
)paren
suffix:semicolon
multiline_comment|/*&n; * Ut_mutex - mutual exclusion interfaces&n; */
id|ACPI_STATUS
id|acpi_ut_mutex_initialize
(paren
r_void
)paren
suffix:semicolon
r_void
id|acpi_ut_mutex_terminate
(paren
r_void
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_create_mutex
(paren
id|ACPI_MUTEX_HANDLE
id|mutex_id
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_delete_mutex
(paren
id|ACPI_MUTEX_HANDLE
id|mutex_id
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_acquire_mutex
(paren
id|ACPI_MUTEX_HANDLE
id|mutex_id
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_release_mutex
(paren
id|ACPI_MUTEX_HANDLE
id|mutex_id
)paren
suffix:semicolon
multiline_comment|/*&n; * Ut_object - internal object create/delete/cache routines&n; */
r_void
op_star
id|_ut_allocate_object_desc
(paren
id|NATIVE_CHAR
op_star
id|module_name
comma
id|u32
id|line_number
comma
id|u32
id|component_id
)paren
suffix:semicolon
DECL|macro|acpi_ut_create_internal_object
mdefine_line|#define acpi_ut_create_internal_object(t) _ut_create_internal_object(_THIS_MODULE,__LINE__,_COMPONENT,t)
DECL|macro|acpi_ut_allocate_object_desc
mdefine_line|#define acpi_ut_allocate_object_desc()  _ut_allocate_object_desc(_THIS_MODULE,__LINE__,_COMPONENT)
r_void
id|acpi_ut_delete_object_desc
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|object
)paren
suffix:semicolon
id|u8
id|acpi_ut_valid_internal_object
(paren
r_void
op_star
id|object
)paren
suffix:semicolon
multiline_comment|/*&n; * Ut_ref_cnt - Object reference count management&n; */
r_void
id|acpi_ut_add_reference
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|object
)paren
suffix:semicolon
r_void
id|acpi_ut_remove_reference
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|object
)paren
suffix:semicolon
multiline_comment|/*&n; * Ut_size - Object size routines&n; */
id|ACPI_STATUS
id|acpi_ut_get_simple_object_size
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|obj
comma
id|u32
op_star
id|obj_length
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_get_package_object_size
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|obj
comma
id|u32
op_star
id|obj_length
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_get_object_size
c_func
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|obj
comma
id|u32
op_star
id|obj_length
)paren
suffix:semicolon
multiline_comment|/*&n; * Ut_state - Generic state creation/cache routines&n; */
r_void
id|acpi_ut_push_generic_state
(paren
id|ACPI_GENERIC_STATE
op_star
op_star
id|list_head
comma
id|ACPI_GENERIC_STATE
op_star
id|state
)paren
suffix:semicolon
id|ACPI_GENERIC_STATE
op_star
id|acpi_ut_pop_generic_state
(paren
id|ACPI_GENERIC_STATE
op_star
op_star
id|list_head
)paren
suffix:semicolon
id|ACPI_GENERIC_STATE
op_star
id|acpi_ut_create_generic_state
(paren
r_void
)paren
suffix:semicolon
id|ACPI_GENERIC_STATE
op_star
id|acpi_ut_create_update_state
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|object
comma
id|u16
id|action
)paren
suffix:semicolon
id|ACPI_GENERIC_STATE
op_star
id|acpi_ut_create_pkg_state
(paren
r_void
op_star
id|internal_object
comma
r_void
op_star
id|external_object
comma
id|u16
id|index
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_create_update_state_and_push
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|object
comma
id|u16
id|action
comma
id|ACPI_GENERIC_STATE
op_star
op_star
id|state_list
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_create_pkg_state_and_push
(paren
r_void
op_star
id|internal_object
comma
r_void
op_star
id|external_object
comma
id|u16
id|index
comma
id|ACPI_GENERIC_STATE
op_star
op_star
id|state_list
)paren
suffix:semicolon
id|ACPI_GENERIC_STATE
op_star
id|acpi_ut_create_control_state
(paren
r_void
)paren
suffix:semicolon
r_void
id|acpi_ut_delete_generic_state
(paren
id|ACPI_GENERIC_STATE
op_star
id|state
)paren
suffix:semicolon
r_void
id|acpi_ut_delete_generic_state_cache
(paren
r_void
)paren
suffix:semicolon
r_void
id|acpi_ut_delete_object_cache
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/*&n; * Ututils&n; */
id|u8
id|acpi_ut_valid_acpi_name
(paren
id|u32
id|name
)paren
suffix:semicolon
id|u8
id|acpi_ut_valid_acpi_character
(paren
id|NATIVE_CHAR
id|character
)paren
suffix:semicolon
id|NATIVE_CHAR
op_star
id|acpi_ut_strupr
(paren
id|NATIVE_CHAR
op_star
id|src_string
)paren
suffix:semicolon
id|ACPI_STATUS
id|acpi_ut_resolve_package_references
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|obj_desc
)paren
suffix:semicolon
macro_line|#ifdef ACPI_DEBUG
r_void
id|acpi_ut_display_init_pathname
(paren
id|ACPI_HANDLE
id|obj_handle
comma
r_char
op_star
id|path
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/*&n; * Memory allocation functions and related macros.&n; * Macros that expand to include filename and line number&n; */
r_void
op_star
id|_ut_allocate
(paren
id|u32
id|size
comma
id|u32
id|component
comma
id|NATIVE_CHAR
op_star
id|module
comma
id|u32
id|line
)paren
suffix:semicolon
r_void
op_star
id|_ut_callocate
(paren
id|u32
id|size
comma
id|u32
id|component
comma
id|NATIVE_CHAR
op_star
id|module
comma
id|u32
id|line
)paren
suffix:semicolon
r_void
id|_ut_free
(paren
r_void
op_star
id|address
comma
id|u32
id|component
comma
id|NATIVE_CHAR
op_star
id|module
comma
id|u32
id|line
)paren
suffix:semicolon
r_void
id|acpi_ut_init_static_object
(paren
id|ACPI_OPERAND_OBJECT
op_star
id|obj_desc
)paren
suffix:semicolon
macro_line|#ifdef ACPI_DEBUG_TRACK_ALLOCATIONS
r_void
id|acpi_ut_dump_allocation_info
(paren
r_void
)paren
suffix:semicolon
r_void
id|acpi_ut_dump_current_allocations
(paren
id|u32
id|component
comma
id|NATIVE_CHAR
op_star
id|module
)paren
suffix:semicolon
macro_line|#endif
DECL|macro|acpi_ut_allocate
mdefine_line|#define acpi_ut_allocate(a) _ut_allocate(a,_COMPONENT,_THIS_MODULE,__LINE__)
DECL|macro|acpi_ut_callocate
mdefine_line|#define acpi_ut_callocate(a) _ut_callocate(a, _COMPONENT,_THIS_MODULE,__LINE__)
DECL|macro|acpi_ut_free
mdefine_line|#define acpi_ut_free(a)     _ut_free(a,_COMPONENT,_THIS_MODULE,__LINE__)
macro_line|#endif /* _ACUTILS_H */
eof
