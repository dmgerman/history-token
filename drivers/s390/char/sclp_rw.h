multiline_comment|/*&n; *  drivers/s390/char/sclp_rw.h&n; *    interface to the SCLP-read/write driver&n; *&n; *  S390 version&n; *    Copyright (C) 1999 IBM Deutschland Entwicklung GmbH, IBM Corporation&n; *    Author(s): Martin Peschke &lt;mpeschke@de.ibm.com&gt;&n; *&t;&t; Martin Schwidefsky &lt;schwidefsky@de.ibm.com&gt;&n; */
macro_line|#ifndef __SCLP_RW_H__
DECL|macro|__SCLP_RW_H__
mdefine_line|#define __SCLP_RW_H__
macro_line|#include &lt;linux/list.h&gt;
macro_line|#include &lt;linux/timer.h&gt;
DECL|struct|mto
r_struct
id|mto
(brace
DECL|member|length
id|u16
id|length
suffix:semicolon
DECL|member|type
id|u16
id|type
suffix:semicolon
DECL|member|line_type_flags
id|u16
id|line_type_flags
suffix:semicolon
DECL|member|alarm_control
id|u8
id|alarm_control
suffix:semicolon
DECL|member|_reserved
id|u8
id|_reserved
(braket
l_int|3
)braket
suffix:semicolon
)brace
id|__attribute__
c_func
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
DECL|struct|go
r_struct
id|go
(brace
DECL|member|length
id|u16
id|length
suffix:semicolon
DECL|member|type
id|u16
id|type
suffix:semicolon
DECL|member|domid
id|u32
id|domid
suffix:semicolon
DECL|member|hhmmss_time
id|u8
id|hhmmss_time
(braket
l_int|8
)braket
suffix:semicolon
DECL|member|th_time
id|u8
id|th_time
(braket
l_int|3
)braket
suffix:semicolon
DECL|member|reserved_0
id|u8
id|reserved_0
suffix:semicolon
DECL|member|dddyyyy_date
id|u8
id|dddyyyy_date
(braket
l_int|7
)braket
suffix:semicolon
DECL|member|_reserved_1
id|u8
id|_reserved_1
suffix:semicolon
DECL|member|general_msg_flags
id|u16
id|general_msg_flags
suffix:semicolon
DECL|member|_reserved_2
id|u8
id|_reserved_2
(braket
l_int|10
)braket
suffix:semicolon
DECL|member|originating_system_name
id|u8
id|originating_system_name
(braket
l_int|8
)braket
suffix:semicolon
DECL|member|job_guest_name
id|u8
id|job_guest_name
(braket
l_int|8
)braket
suffix:semicolon
)brace
id|__attribute__
c_func
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
DECL|struct|mdb_header
r_struct
id|mdb_header
(brace
DECL|member|length
id|u16
id|length
suffix:semicolon
DECL|member|type
id|u16
id|type
suffix:semicolon
DECL|member|tag
id|u32
id|tag
suffix:semicolon
DECL|member|revision_code
id|u32
id|revision_code
suffix:semicolon
)brace
id|__attribute__
c_func
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
DECL|struct|mdb
r_struct
id|mdb
(brace
DECL|member|header
r_struct
id|mdb_header
id|header
suffix:semicolon
DECL|member|go
r_struct
id|go
id|go
suffix:semicolon
)brace
id|__attribute__
c_func
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
DECL|struct|msg_buf
r_struct
id|msg_buf
(brace
DECL|member|header
r_struct
id|evbuf_header
id|header
suffix:semicolon
DECL|member|mdb
r_struct
id|mdb
id|mdb
suffix:semicolon
)brace
id|__attribute__
c_func
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
DECL|struct|write_sccb
r_struct
id|write_sccb
(brace
DECL|member|header
r_struct
id|sccb_header
id|header
suffix:semicolon
DECL|member|msg_buf
r_struct
id|msg_buf
id|msg_buf
suffix:semicolon
)brace
id|__attribute__
c_func
(paren
(paren
id|packed
)paren
)paren
suffix:semicolon
multiline_comment|/* The number of empty mto buffers that can be contained in a single sccb. */
DECL|macro|NR_EMPTY_MTO_PER_SCCB
mdefine_line|#define NR_EMPTY_MTO_PER_SCCB ((PAGE_SIZE - sizeof(struct sclp_buffer) - &bslash;&n;&t;&t;&t;sizeof(struct write_sccb)) / sizeof(struct mto))
multiline_comment|/*&n; * data structure for information about list of SCCBs (only for writing),&n; * will be located at the end of a SCCBs page&n; */
DECL|struct|sclp_buffer
r_struct
id|sclp_buffer
(brace
DECL|member|list
r_struct
id|list_head
id|list
suffix:semicolon
multiline_comment|/* list_head for sccb_info chain */
DECL|member|request
r_struct
id|sclp_req
id|request
suffix:semicolon
DECL|member|sccb
r_struct
id|write_sccb
op_star
id|sccb
suffix:semicolon
DECL|member|current_line
r_char
op_star
id|current_line
suffix:semicolon
DECL|member|current_length
r_int
id|current_length
suffix:semicolon
DECL|member|retry_count
r_int
id|retry_count
suffix:semicolon
DECL|member|retry_timer
r_struct
id|timer_list
id|retry_timer
suffix:semicolon
multiline_comment|/* output format settings */
DECL|member|columns
r_int
r_int
id|columns
suffix:semicolon
DECL|member|htab
r_int
r_int
id|htab
suffix:semicolon
multiline_comment|/* statistics about this buffer */
DECL|member|mto_char_sum
r_int
r_int
id|mto_char_sum
suffix:semicolon
multiline_comment|/* # chars in sccb */
DECL|member|mto_number
r_int
r_int
id|mto_number
suffix:semicolon
multiline_comment|/* # mtos in sccb */
multiline_comment|/* Callback that is called after reaching final status. */
DECL|member|callback
r_void
(paren
op_star
id|callback
)paren
(paren
r_struct
id|sclp_buffer
op_star
comma
r_int
)paren
suffix:semicolon
)brace
suffix:semicolon
r_int
id|sclp_rw_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_struct
id|sclp_buffer
op_star
id|sclp_make_buffer
c_func
(paren
r_void
op_star
comma
r_int
r_int
comma
r_int
r_int
)paren
suffix:semicolon
r_void
op_star
id|sclp_unmake_buffer
c_func
(paren
r_struct
id|sclp_buffer
op_star
)paren
suffix:semicolon
r_int
id|sclp_buffer_space
c_func
(paren
r_struct
id|sclp_buffer
op_star
)paren
suffix:semicolon
r_int
id|sclp_write
c_func
(paren
r_struct
id|sclp_buffer
op_star
id|buffer
comma
r_const
r_int
r_char
op_star
comma
r_int
)paren
suffix:semicolon
r_void
id|sclp_emit_buffer
c_func
(paren
r_struct
id|sclp_buffer
op_star
comma
r_void
(paren
op_star
)paren
(paren
r_struct
id|sclp_buffer
op_star
comma
r_int
)paren
)paren
suffix:semicolon
r_void
id|sclp_set_columns
c_func
(paren
r_struct
id|sclp_buffer
op_star
comma
r_int
r_int
)paren
suffix:semicolon
r_void
id|sclp_set_htab
c_func
(paren
r_struct
id|sclp_buffer
op_star
comma
r_int
r_int
)paren
suffix:semicolon
r_int
id|sclp_chars_in_buffer
c_func
(paren
r_struct
id|sclp_buffer
op_star
)paren
suffix:semicolon
macro_line|#endif&t;/* __SCLP_RW_H__ */
eof
