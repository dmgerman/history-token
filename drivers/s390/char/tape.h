multiline_comment|/***************************************************************************&n; *&n; *  drivers/s390/char/tape.h&n; *    tape device driver for 3480/3490E tapes.&n; *&n; *  S390 and zSeries version&n; *    Copyright (C) 2001 IBM Corporation&n; *    Author(s): Carsten Otte &lt;cotte@de.ibm.com&gt;&n; *               Tuan Ngo-Anh &lt;ngoanh@de.ibm.com&gt;&n; *&n; ****************************************************************************&n; */
macro_line|#ifndef _TAPE_H
DECL|macro|_TAPE_H
mdefine_line|#define _TAPE_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/blkdev.h&gt;
DECL|macro|MAX_TAPES
mdefine_line|#define  MAX_TAPES                     7        /* Max tapes supported is 7*/
DECL|macro|TAPE_MAGIC
mdefine_line|#define TAPE_MAGIC 0xE3C1D7C5       /* is ebcdic-&quot;TAPE&quot; */
r_typedef
r_enum
(brace
DECL|enumerator|TS_UNUSED
DECL|enumerator|TS_IDLE
DECL|enumerator|TS_DONE
DECL|enumerator|TS_FAILED
id|TS_UNUSED
op_assign
l_int|0
comma
id|TS_IDLE
comma
id|TS_DONE
comma
id|TS_FAILED
comma
DECL|enumerator|TS_BLOCK_INIT
id|TS_BLOCK_INIT
comma
DECL|enumerator|TS_BSB_INIT
id|TS_BSB_INIT
comma
DECL|enumerator|TS_BSF_INIT
id|TS_BSF_INIT
comma
DECL|enumerator|TS_DSE_INIT
id|TS_DSE_INIT
comma
DECL|enumerator|TS_EGA_INIT
id|TS_EGA_INIT
comma
DECL|enumerator|TS_FSB_INIT
id|TS_FSB_INIT
comma
DECL|enumerator|TS_FSF_INIT
id|TS_FSF_INIT
comma
DECL|enumerator|TS_LDI_INIT
id|TS_LDI_INIT
comma
DECL|enumerator|TS_LBL_INIT
id|TS_LBL_INIT
comma
DECL|enumerator|TS_MSE_INIT
id|TS_MSE_INIT
comma
DECL|enumerator|TS_NOP_INIT
id|TS_NOP_INIT
comma
DECL|enumerator|TS_RBA_INIT
id|TS_RBA_INIT
comma
DECL|enumerator|TS_RBI_INIT
id|TS_RBI_INIT
comma
DECL|enumerator|TS_RBU_INIT
id|TS_RBU_INIT
comma
DECL|enumerator|TS_RBL_INIT
id|TS_RBL_INIT
comma
DECL|enumerator|TS_RDC_INIT
id|TS_RDC_INIT
comma
DECL|enumerator|TS_RFO_INIT
id|TS_RFO_INIT
comma
DECL|enumerator|TS_RSD_INIT
id|TS_RSD_INIT
comma
DECL|enumerator|TS_REW_INIT
id|TS_REW_INIT
comma
DECL|enumerator|TS_REW_RELEASE_INIT
id|TS_REW_RELEASE_INIT
comma
DECL|enumerator|TS_RUN_INIT
id|TS_RUN_INIT
comma
DECL|enumerator|TS_SEN_INIT
id|TS_SEN_INIT
comma
DECL|enumerator|TS_SID_INIT
id|TS_SID_INIT
comma
DECL|enumerator|TS_SNP_INIT
id|TS_SNP_INIT
comma
DECL|enumerator|TS_SPG_INIT
id|TS_SPG_INIT
comma
DECL|enumerator|TS_SWI_INIT
id|TS_SWI_INIT
comma
DECL|enumerator|TS_SMR_INIT
id|TS_SMR_INIT
comma
DECL|enumerator|TS_SYN_INIT
id|TS_SYN_INIT
comma
DECL|enumerator|TS_TIO_INIT
id|TS_TIO_INIT
comma
DECL|enumerator|TS_UNA_INIT
id|TS_UNA_INIT
comma
DECL|enumerator|TS_WRI_INIT
id|TS_WRI_INIT
comma
DECL|enumerator|TS_WTM_INIT
id|TS_WTM_INIT
comma
DECL|enumerator|TS_NOT_OPER
id|TS_NOT_OPER
comma
DECL|enumerator|TS_SIZE
DECL|typedef|tape_stat
id|TS_SIZE
)brace
id|tape_stat
suffix:semicolon
r_struct
id|_tape_info_t
suffix:semicolon
singleline_comment|//Forward declaration
r_typedef
r_enum
(brace
DECL|enumerator|TE_START
DECL|enumerator|TE_DONE
DECL|enumerator|TE_FAILED
DECL|enumerator|TE_ERROR
DECL|enumerator|TE_OTHER
id|TE_START
op_assign
l_int|0
comma
id|TE_DONE
comma
id|TE_FAILED
comma
id|TE_ERROR
comma
id|TE_OTHER
comma
DECL|enumerator|TE_SIZE
DECL|typedef|tape_events
id|TE_SIZE
)brace
id|tape_events
suffix:semicolon
DECL|typedef|tape_disc_shutdown_t
r_typedef
r_void
(paren
op_star
id|tape_disc_shutdown_t
)paren
(paren
r_int
)paren
suffix:semicolon
DECL|typedef|tape_event_handler_t
r_typedef
r_void
(paren
op_star
id|tape_event_handler_t
)paren
(paren
r_struct
id|_tape_info_t
op_star
)paren
suffix:semicolon
DECL|typedef|tape_ccwgen_t
r_typedef
id|ccw_req_t
op_star
(paren
op_star
id|tape_ccwgen_t
)paren
(paren
r_struct
id|_tape_info_t
op_star
id|ti
comma
r_int
id|count
)paren
suffix:semicolon
DECL|typedef|tape_reqgen_t
r_typedef
id|ccw_req_t
op_star
(paren
op_star
id|tape_reqgen_t
)paren
(paren
r_struct
id|request
op_star
id|req
comma
r_struct
id|_tape_info_t
op_star
id|ti
comma
r_int
id|tapeblock_major
)paren
suffix:semicolon
DECL|typedef|tape_rwblock_t
r_typedef
id|ccw_req_t
op_star
(paren
op_star
id|tape_rwblock_t
)paren
(paren
r_const
r_char
op_star
id|data
comma
r_int
id|count
comma
r_struct
id|_tape_info_t
op_star
id|ti
)paren
suffix:semicolon
DECL|typedef|tape_freeblock_t
r_typedef
r_void
(paren
op_star
id|tape_freeblock_t
)paren
(paren
id|ccw_req_t
op_star
id|cqr
comma
r_struct
id|_tape_info_t
op_star
id|ti
)paren
suffix:semicolon
DECL|typedef|tape_setup_assist_t
r_typedef
r_void
(paren
op_star
id|tape_setup_assist_t
)paren
(paren
r_struct
id|_tape_info_t
op_star
)paren
suffix:semicolon
macro_line|#ifdef CONFIG_DEVFS_FS
DECL|typedef|tape_devfs_handler_t
r_typedef
r_void
(paren
op_star
id|tape_devfs_handler_t
)paren
(paren
r_struct
id|_tape_info_t
op_star
)paren
suffix:semicolon
macro_line|#endif
DECL|typedef|tape_event_table_t
r_typedef
id|tape_event_handler_t
id|tape_event_table_t
(braket
id|TS_SIZE
)braket
(braket
id|TE_SIZE
)braket
suffix:semicolon
DECL|struct|_tape_discipline_t
r_typedef
r_struct
id|_tape_discipline_t
(brace
DECL|member|cu_type
r_int
r_int
id|cu_type
suffix:semicolon
DECL|member|setup_assist
id|tape_setup_assist_t
id|setup_assist
suffix:semicolon
DECL|member|error_recovery
id|tape_event_handler_t
id|error_recovery
suffix:semicolon
DECL|member|bread
id|tape_reqgen_t
id|bread
suffix:semicolon
DECL|member|free_bread
id|tape_freeblock_t
id|free_bread
suffix:semicolon
DECL|member|write_block
id|tape_rwblock_t
id|write_block
suffix:semicolon
DECL|member|free_write_block
id|tape_freeblock_t
id|free_write_block
suffix:semicolon
DECL|member|read_block
id|tape_rwblock_t
id|read_block
suffix:semicolon
DECL|member|free_read_block
id|tape_freeblock_t
id|free_read_block
suffix:semicolon
DECL|member|mtfsf
id|tape_ccwgen_t
id|mtfsf
suffix:semicolon
DECL|member|mtbsf
id|tape_ccwgen_t
id|mtbsf
suffix:semicolon
DECL|member|mtfsr
id|tape_ccwgen_t
id|mtfsr
suffix:semicolon
DECL|member|mtbsr
id|tape_ccwgen_t
id|mtbsr
suffix:semicolon
DECL|member|mtweof
id|tape_ccwgen_t
id|mtweof
suffix:semicolon
DECL|member|mtrew
id|tape_ccwgen_t
id|mtrew
suffix:semicolon
DECL|member|mtoffl
id|tape_ccwgen_t
id|mtoffl
suffix:semicolon
DECL|member|mtnop
id|tape_ccwgen_t
id|mtnop
suffix:semicolon
DECL|member|mtbsfm
id|tape_ccwgen_t
id|mtbsfm
suffix:semicolon
DECL|member|mtfsfm
id|tape_ccwgen_t
id|mtfsfm
suffix:semicolon
DECL|member|mteom
id|tape_ccwgen_t
id|mteom
suffix:semicolon
DECL|member|mterase
id|tape_ccwgen_t
id|mterase
suffix:semicolon
DECL|member|mtsetdensity
id|tape_ccwgen_t
id|mtsetdensity
suffix:semicolon
DECL|member|mtseek
id|tape_ccwgen_t
id|mtseek
suffix:semicolon
DECL|member|mttell
id|tape_ccwgen_t
id|mttell
suffix:semicolon
DECL|member|mtsetdrvbuffer
id|tape_ccwgen_t
id|mtsetdrvbuffer
suffix:semicolon
DECL|member|mtlock
id|tape_ccwgen_t
id|mtlock
suffix:semicolon
DECL|member|mtunlock
id|tape_ccwgen_t
id|mtunlock
suffix:semicolon
DECL|member|mtload
id|tape_ccwgen_t
id|mtload
suffix:semicolon
DECL|member|mtunload
id|tape_ccwgen_t
id|mtunload
suffix:semicolon
DECL|member|mtcompression
id|tape_ccwgen_t
id|mtcompression
suffix:semicolon
DECL|member|mtsetpart
id|tape_ccwgen_t
id|mtsetpart
suffix:semicolon
DECL|member|mtmkpart
id|tape_ccwgen_t
id|mtmkpart
suffix:semicolon
DECL|member|mtiocget
id|tape_ccwgen_t
id|mtiocget
suffix:semicolon
DECL|member|mtiocpos
id|tape_ccwgen_t
id|mtiocpos
suffix:semicolon
DECL|member|shutdown
id|tape_disc_shutdown_t
id|shutdown
suffix:semicolon
DECL|member|discipline_ioctl_overload
r_int
(paren
op_star
id|discipline_ioctl_overload
)paren
(paren
r_struct
id|inode
op_star
comma
r_struct
id|file
op_star
comma
r_int
r_int
comma
r_int
r_int
)paren
suffix:semicolon
DECL|member|event_table
id|tape_event_table_t
op_star
id|event_table
suffix:semicolon
DECL|member|default_handler
id|tape_event_handler_t
id|default_handler
suffix:semicolon
DECL|member|tape
r_struct
id|_tape_info_t
op_star
id|tape
suffix:semicolon
multiline_comment|/* pointer for backreference */
DECL|member|next
r_void
op_star
id|next
suffix:semicolon
DECL|typedef|tape_discipline_t
)brace
id|tape_discipline_t
id|__attribute__
(paren
(paren
id|aligned
c_func
(paren
l_int|8
)paren
)paren
)paren
suffix:semicolon
DECL|struct|_tape_frontend_t
r_typedef
r_struct
id|_tape_frontend_t
(brace
DECL|member|device_setup
id|tape_setup_assist_t
id|device_setup
suffix:semicolon
macro_line|#ifdef CONFIG_DEVFS_FS
DECL|member|mkdevfstree
id|tape_devfs_handler_t
id|mkdevfstree
suffix:semicolon
DECL|member|rmdevfstree
id|tape_devfs_handler_t
id|rmdevfstree
suffix:semicolon
macro_line|#endif
DECL|member|next
r_void
op_star
id|next
suffix:semicolon
DECL|typedef|tape_frontend_t
)brace
id|tape_frontend_t
id|__attribute__
(paren
(paren
id|aligned
c_func
(paren
l_int|8
)paren
)paren
)paren
suffix:semicolon
DECL|struct|_tape_info_t
r_typedef
r_struct
id|_tape_info_t
(brace
DECL|member|wq
id|wait_queue_head_t
id|wq
suffix:semicolon
DECL|member|devinfo
id|s390_dev_info_t
id|devinfo
suffix:semicolon
multiline_comment|/* device info from Common I/O */
DECL|member|wanna_wakeup
r_int
id|wanna_wakeup
suffix:semicolon
DECL|member|rew_minor
r_int
id|rew_minor
suffix:semicolon
multiline_comment|/* minor number for the rewinding tape */
DECL|member|nor_minor
r_int
id|nor_minor
suffix:semicolon
multiline_comment|/* minor number for the nonrewinding tape */
DECL|member|blk_minor
r_int
id|blk_minor
suffix:semicolon
multiline_comment|/* minor number for the block device */
DECL|member|devstat
id|devstat_t
id|devstat
suffix:semicolon
multiline_comment|/* contains irq, devno, status */
DECL|member|block_size
r_int
id|block_size
suffix:semicolon
multiline_comment|/* block size of tape        */
DECL|member|drive_type
r_int
id|drive_type
suffix:semicolon
multiline_comment|/* Code indicating type of drive */
DECL|member|rew_filp
r_struct
id|file
op_star
id|rew_filp
suffix:semicolon
multiline_comment|/* backpointer to file structure */
DECL|member|nor_filp
r_struct
id|file
op_star
id|nor_filp
suffix:semicolon
DECL|member|blk_filp
r_struct
id|file
op_star
id|blk_filp
suffix:semicolon
DECL|member|tape_state
r_int
id|tape_state
suffix:semicolon
multiline_comment|/* State of the device. See tape_stat */
DECL|member|rc
r_int
id|rc
suffix:semicolon
multiline_comment|/* Return code. */
DECL|member|discipline
id|tape_discipline_t
op_star
id|discipline
suffix:semicolon
DECL|member|request_queue
id|request_queue_t
id|request_queue
suffix:semicolon
DECL|member|current_request
r_struct
id|request
op_star
id|current_request
suffix:semicolon
DECL|member|blk_retries
r_int
id|blk_retries
suffix:semicolon
DECL|member|position
r_int
id|position
suffix:semicolon
DECL|member|medium_is_unloaded
r_int
id|medium_is_unloaded
suffix:semicolon
singleline_comment|// Becomes true when a unload-type operation was issued, false again when medium-insert was detected
DECL|member|cqr
id|ccw_req_t
op_star
id|cqr
suffix:semicolon
DECL|member|bh_scheduled
id|atomic_t
id|bh_scheduled
suffix:semicolon
DECL|member|bh_tq
r_struct
id|tq_struct
id|bh_tq
suffix:semicolon
macro_line|#ifdef CONFIG_DEVFS_FS
DECL|member|devfs_dir
id|devfs_handle_t
id|devfs_dir
suffix:semicolon
multiline_comment|/* devfs handle for tape/DEVNO directory */
DECL|member|devfs_char_dir
id|devfs_handle_t
id|devfs_char_dir
suffix:semicolon
multiline_comment|/* devfs handle for tape/DEVNO/char directory */
DECL|member|devfs_block_dir
id|devfs_handle_t
id|devfs_block_dir
suffix:semicolon
multiline_comment|/* devfs handle for tape/DEVNO/block directory */
DECL|member|devfs_nonrewinding
id|devfs_handle_t
id|devfs_nonrewinding
suffix:semicolon
multiline_comment|/* devfs handle for tape/DEVNO/char/nonrewinding device */
DECL|member|devfs_rewinding
id|devfs_handle_t
id|devfs_rewinding
suffix:semicolon
multiline_comment|/* devfs handle for tape/DEVNO/char/rewinding device */
DECL|member|devfs_disc
id|devfs_handle_t
id|devfs_disc
suffix:semicolon
multiline_comment|/* devfs handle for tape/DEVNO/block/disc device */
macro_line|#endif
DECL|member|discdata
r_void
op_star
id|discdata
suffix:semicolon
DECL|member|kernbuf
r_void
op_star
id|kernbuf
suffix:semicolon
DECL|member|userbuf
r_void
op_star
id|userbuf
suffix:semicolon
DECL|member|next
r_void
op_star
id|next
suffix:semicolon
DECL|typedef|tape_info_t
)brace
id|tape_info_t
id|__attribute__
(paren
(paren
id|aligned
c_func
(paren
l_int|8
)paren
)paren
)paren
suffix:semicolon
multiline_comment|/* tape initialisation functions */
r_int
id|tape_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_int
id|tape_setup
(paren
id|tape_info_t
op_star
id|ti
comma
r_int
id|irq
comma
r_int
id|minor
)paren
suffix:semicolon
multiline_comment|/* functoins for alloc&squot;ing ccw stuff */
r_inline
id|ccw_req_t
op_star
id|tape_alloc_ccw_req
(paren
id|tape_info_t
op_star
id|ti
comma
r_int
id|cplength
comma
r_int
id|datasize
)paren
suffix:semicolon
r_void
id|tape_free_request
(paren
id|ccw_req_t
op_star
id|request
)paren
suffix:semicolon
multiline_comment|/* a function for dumping device sense info */
r_void
id|tape_dump_sense
(paren
id|devstat_t
op_star
id|stat
)paren
suffix:semicolon
macro_line|#ifdef CONFIG_S390_TAPE_DYNAMIC
multiline_comment|/* functions for dyn. dev. attach/detach */
r_int
id|tape_oper_handler
(paren
r_int
id|irq
comma
r_struct
id|_devreg
op_star
id|dreg
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/* functions for handling the status of a device */
r_inline
r_void
id|tapestate_set
(paren
id|tape_info_t
op_star
id|ti
comma
r_int
id|newstate
)paren
suffix:semicolon
r_inline
r_int
id|tapestate_get
(paren
id|tape_info_t
op_star
id|ti
)paren
suffix:semicolon
r_void
id|tapestate_event
(paren
id|tape_info_t
op_star
id|ti
comma
r_int
id|event
)paren
suffix:semicolon
r_extern
r_char
op_star
id|state_verbose
(braket
id|TS_SIZE
)braket
suffix:semicolon
r_extern
r_char
op_star
id|event_verbose
(braket
id|TE_SIZE
)braket
suffix:semicolon
multiline_comment|/****************************************************************************/
multiline_comment|/* Some linked lists for storing plugins and devices */
r_extern
id|tape_info_t
op_star
id|first_tape_info
suffix:semicolon
r_extern
id|tape_discipline_t
op_star
id|first_discipline
suffix:semicolon
r_extern
id|tape_frontend_t
op_star
id|first_frontend
suffix:semicolon
multiline_comment|/* The debug area */
macro_line|#ifdef TAPE_DEBUG
r_extern
id|debug_info_t
op_star
id|tape_debug_area
suffix:semicolon
macro_line|#endif
macro_line|#endif /* for ifdef tape.h */
eof
