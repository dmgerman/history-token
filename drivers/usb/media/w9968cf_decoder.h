multiline_comment|/***************************************************************************&n; * Video decoder for the W996[87]CF driver for Linux.                      *&n; *                                                                         *&n; * Copyright (C) 2003 2004 by Luca Risolia &lt;luca.risolia@studio.unibo.it&gt;  *&n; *                                                                         *&n; * This program is free software; you can redistribute it and/or modify    *&n; * it under the terms of the GNU General Public License as published by    *&n; * the Free Software Foundation; either version 2 of the License, or       *&n; * (at your option) any later version.                                     *&n; *                                                                         *&n; * This program is distributed in the hope that it will be useful,         *&n; * but WITHOUT ANY WARRANTY; without even the implied warranty of          *&n; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           *&n; * GNU General Public License for more details.                            *&n; *                                                                         *&n; * You should have received a copy of the GNU General Public License       *&n; * along with this program; if not, write to the Free Software             *&n; * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.               *&n; ***************************************************************************/
macro_line|#ifndef _W9968CF_DECODER_H_
DECL|macro|_W9968CF_DECODER_H_
mdefine_line|#define _W9968CF_DECODER_H_
multiline_comment|/* Comment/uncomment this for high/low quality of compressed video */
DECL|macro|W9968CF_DEC_FAST_LOWQUALITY_VIDEO
mdefine_line|#define W9968CF_DEC_FAST_LOWQUALITY_VIDEO
macro_line|#ifdef W9968CF_DEC_FAST_LOWQUALITY_VIDEO
DECL|variable|Y_QUANTABLE
r_static
r_const
r_int
r_char
id|Y_QUANTABLE
(braket
l_int|64
)braket
op_assign
(brace
l_int|16
comma
l_int|11
comma
l_int|10
comma
l_int|16
comma
l_int|24
comma
l_int|40
comma
l_int|51
comma
l_int|61
comma
l_int|12
comma
l_int|12
comma
l_int|14
comma
l_int|19
comma
l_int|26
comma
l_int|58
comma
l_int|60
comma
l_int|55
comma
l_int|14
comma
l_int|13
comma
l_int|16
comma
l_int|24
comma
l_int|40
comma
l_int|57
comma
l_int|69
comma
l_int|56
comma
l_int|14
comma
l_int|17
comma
l_int|22
comma
l_int|29
comma
l_int|51
comma
l_int|87
comma
l_int|80
comma
l_int|62
comma
l_int|18
comma
l_int|22
comma
l_int|37
comma
l_int|56
comma
l_int|68
comma
l_int|109
comma
l_int|103
comma
l_int|77
comma
l_int|24
comma
l_int|35
comma
l_int|55
comma
l_int|64
comma
l_int|81
comma
l_int|104
comma
l_int|113
comma
l_int|92
comma
l_int|49
comma
l_int|64
comma
l_int|78
comma
l_int|87
comma
l_int|103
comma
l_int|121
comma
l_int|120
comma
l_int|101
comma
l_int|72
comma
l_int|92
comma
l_int|95
comma
l_int|98
comma
l_int|112
comma
l_int|100
comma
l_int|103
comma
l_int|99
)brace
suffix:semicolon
DECL|variable|UV_QUANTABLE
r_static
r_const
r_int
r_char
id|UV_QUANTABLE
(braket
l_int|64
)braket
op_assign
(brace
l_int|17
comma
l_int|18
comma
l_int|24
comma
l_int|47
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|18
comma
l_int|21
comma
l_int|26
comma
l_int|66
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|24
comma
l_int|26
comma
l_int|56
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|47
comma
l_int|66
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
comma
l_int|99
)brace
suffix:semicolon
macro_line|#else
DECL|variable|Y_QUANTABLE
r_static
r_const
r_int
r_char
id|Y_QUANTABLE
(braket
l_int|64
)braket
op_assign
(brace
l_int|8
comma
l_int|5
comma
l_int|5
comma
l_int|8
comma
l_int|12
comma
l_int|20
comma
l_int|25
comma
l_int|30
comma
l_int|6
comma
l_int|6
comma
l_int|7
comma
l_int|9
comma
l_int|13
comma
l_int|29
comma
l_int|30
comma
l_int|27
comma
l_int|7
comma
l_int|6
comma
l_int|8
comma
l_int|12
comma
l_int|20
comma
l_int|28
comma
l_int|34
comma
l_int|28
comma
l_int|7
comma
l_int|8
comma
l_int|11
comma
l_int|14
comma
l_int|25
comma
l_int|43
comma
l_int|40
comma
l_int|31
comma
l_int|9
comma
l_int|11
comma
l_int|18
comma
l_int|28
comma
l_int|34
comma
l_int|54
comma
l_int|51
comma
l_int|38
comma
l_int|12
comma
l_int|17
comma
l_int|27
comma
l_int|32
comma
l_int|40
comma
l_int|52
comma
l_int|56
comma
l_int|46
comma
l_int|24
comma
l_int|32
comma
l_int|39
comma
l_int|43
comma
l_int|51
comma
l_int|60
comma
l_int|60
comma
l_int|50
comma
l_int|36
comma
l_int|46
comma
l_int|47
comma
l_int|49
comma
l_int|56
comma
l_int|50
comma
l_int|51
comma
l_int|49
)brace
suffix:semicolon
DECL|variable|UV_QUANTABLE
r_static
r_const
r_int
r_char
id|UV_QUANTABLE
(braket
l_int|64
)braket
op_assign
(brace
l_int|8
comma
l_int|9
comma
l_int|12
comma
l_int|23
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|9
comma
l_int|10
comma
l_int|13
comma
l_int|33
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|12
comma
l_int|13
comma
l_int|28
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|23
comma
l_int|33
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
comma
l_int|49
)brace
suffix:semicolon
macro_line|#endif
DECL|macro|W9968CF_DEC_ERR_CORRUPTED_DATA
mdefine_line|#define W9968CF_DEC_ERR_CORRUPTED_DATA  -1
DECL|macro|W9968CF_DEC_ERR_BUF_OVERFLOW
mdefine_line|#define W9968CF_DEC_ERR_BUF_OVERFLOW    -2
DECL|macro|W9968CF_DEC_ERR_NO_SOI
mdefine_line|#define W9968CF_DEC_ERR_NO_SOI          -3
DECL|macro|W9968CF_DEC_ERR_NO_SOF0
mdefine_line|#define W9968CF_DEC_ERR_NO_SOF0         -4
DECL|macro|W9968CF_DEC_ERR_NO_SOS
mdefine_line|#define W9968CF_DEC_ERR_NO_SOS          -5
DECL|macro|W9968CF_DEC_ERR_NO_EOI
mdefine_line|#define W9968CF_DEC_ERR_NO_EOI          -6
r_extern
r_void
id|w9968cf_init_decoder
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|w9968cf_check_headers
c_func
(paren
r_const
r_int
r_char
op_star
id|Pin
comma
r_const
r_int
r_int
id|BUF_SIZE
)paren
suffix:semicolon
r_extern
r_int
id|w9968cf_decode
c_func
(paren
r_const
r_char
op_star
id|Pin
comma
r_const
r_int
r_int
id|BUF_SIZE
comma
r_const
r_int
id|W
comma
r_const
r_int
id|H
comma
r_char
op_star
id|Pout
)paren
suffix:semicolon
macro_line|#endif /* _W9968CF_DECODER_H_ */
eof
