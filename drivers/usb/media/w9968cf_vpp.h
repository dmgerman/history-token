multiline_comment|/***************************************************************************&n; * Interface for video post-processing functions for the W996[87]CF driver *&n; * for Linux.                                                              *&n; *                                                                         *&n; * Copyright (C) 2002-2004 by Luca Risolia &lt;luca.risolia@studio.unibo.it&gt;  *&n; *                                                                         *&n; * This program is free software; you can redistribute it and/or modify    *&n; * it under the terms of the GNU General Public License as published by    *&n; * the Free Software Foundation; either version 2 of the License, or       *&n; * (at your option) any later version.                                     *&n; *                                                                         *&n; * This program is distributed in the hope that it will be useful,         *&n; * but WITHOUT ANY WARRANTY; without even the implied warranty of          *&n; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the           *&n; * GNU General Public License for more details.                            *&n; *                                                                         *&n; * You should have received a copy of the GNU General Public License       *&n; * along with this program; if not, write to the Free Software             *&n; * Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.               *&n; ***************************************************************************/
macro_line|#ifndef _W9968CF_VPP_H_
DECL|macro|_W9968CF_VPP_H_
mdefine_line|#define _W9968CF_VPP_H_
macro_line|#include &lt;linux/module.h&gt;
macro_line|#include &lt;asm/types.h&gt;
DECL|struct|w9968cf_vpp_t
r_struct
id|w9968cf_vpp_t
(brace
DECL|member|owner
r_struct
id|module
op_star
id|owner
suffix:semicolon
DECL|member|check_headers
r_int
(paren
op_star
id|check_headers
)paren
(paren
r_const
r_int
r_char
op_star
comma
r_const
r_int
r_int
)paren
suffix:semicolon
DECL|member|decode
r_int
(paren
op_star
id|decode
)paren
(paren
r_const
r_char
op_star
comma
r_const
r_int
r_int
comma
r_const
r_int
comma
r_const
r_int
comma
r_char
op_star
)paren
suffix:semicolon
DECL|member|swap_yuvbytes
r_void
(paren
op_star
id|swap_yuvbytes
)paren
(paren
r_void
op_star
comma
r_int
r_int
)paren
suffix:semicolon
DECL|member|uyvy_to_rgbx
r_void
(paren
op_star
id|uyvy_to_rgbx
)paren
(paren
id|u8
op_star
comma
r_int
r_int
comma
id|u8
op_star
comma
id|u16
comma
id|u8
)paren
suffix:semicolon
DECL|member|scale_up
r_void
(paren
op_star
id|scale_up
)paren
(paren
id|u8
op_star
comma
id|u8
op_star
comma
id|u16
comma
id|u16
comma
id|u16
comma
id|u16
comma
id|u16
)paren
suffix:semicolon
DECL|member|busy
id|u8
id|busy
suffix:semicolon
multiline_comment|/* read-only flag: module is/is not in use */
)brace
suffix:semicolon
r_extern
r_int
id|w9968cf_vppmod_register
c_func
(paren
r_struct
id|w9968cf_vpp_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|w9968cf_vppmod_deregister
c_func
(paren
r_struct
id|w9968cf_vpp_t
op_star
)paren
suffix:semicolon
macro_line|#endif /* _W9968CF_VPP_H_ */
eof
