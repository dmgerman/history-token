multiline_comment|/* &n;   BlueZ - Bluetooth protocol stack for Linux&n;   Copyright (C) 2000-2001 Qualcomm Incorporated&n;&n;   Written 2000,2001 by Maxim Krasnyansky &lt;maxk@qualcomm.com&gt;&n;&n;   This program is free software; you can redistribute it and/or modify&n;   it under the terms of the GNU General Public License version 2 as&n;   published by the Free Software Foundation;&n;&n;   THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS&n;   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&n;   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF THIRD PARTY RIGHTS.&n;   IN NO EVENT SHALL THE COPYRIGHT HOLDER(S) AND AUTHOR(S) BE LIABLE FOR ANY&n;   CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES &n;   WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN &n;   ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF &n;   OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.&n;&n;   ALL LIABILITY, INCLUDING LIABILITY FOR INFRINGEMENT OF ANY PATENTS, &n;   COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS, RELATING TO USE OF THIS &n;   SOFTWARE IS DISCLAIMED.&n;*/
multiline_comment|/*&n; * $Id: hci_uart.h,v 1.2 2002/09/09 01:17:32 maxk Exp $&n; */
macro_line|#ifndef N_HCI 
DECL|macro|N_HCI
mdefine_line|#define N_HCI&t;15
macro_line|#endif
multiline_comment|/* Ioctls */
DECL|macro|HCIUARTSETPROTO
mdefine_line|#define HCIUARTSETPROTO&t;_IOW(&squot;U&squot;, 200, int)
DECL|macro|HCIUARTGETPROTO
mdefine_line|#define HCIUARTGETPROTO&t;_IOR(&squot;U&squot;, 201, int)
multiline_comment|/* UART protocols */
DECL|macro|HCI_UART_MAX_PROTO
mdefine_line|#define HCI_UART_MAX_PROTO&t;4
DECL|macro|HCI_UART_H4
mdefine_line|#define HCI_UART_H4&t;0
DECL|macro|HCI_UART_BCSP
mdefine_line|#define HCI_UART_BCSP&t;1
DECL|macro|HCI_UART_3WIRE
mdefine_line|#define HCI_UART_3WIRE&t;2
DECL|macro|HCI_UART_H4DS
mdefine_line|#define HCI_UART_H4DS&t;3
macro_line|#ifdef __KERNEL__
r_struct
id|hci_uart
suffix:semicolon
DECL|struct|hci_uart_proto
r_struct
id|hci_uart_proto
(brace
DECL|member|id
r_int
r_int
id|id
suffix:semicolon
DECL|member|open
r_int
(paren
op_star
id|open
)paren
(paren
r_struct
id|hci_uart
op_star
id|hu
)paren
suffix:semicolon
DECL|member|close
r_int
(paren
op_star
id|close
)paren
(paren
r_struct
id|hci_uart
op_star
id|hu
)paren
suffix:semicolon
DECL|member|flush
r_int
(paren
op_star
id|flush
)paren
(paren
r_struct
id|hci_uart
op_star
id|hu
)paren
suffix:semicolon
DECL|member|recv
r_int
(paren
op_star
id|recv
)paren
(paren
r_struct
id|hci_uart
op_star
id|hu
comma
r_void
op_star
id|data
comma
r_int
id|len
)paren
suffix:semicolon
DECL|member|enqueue
r_int
(paren
op_star
id|enqueue
)paren
(paren
r_struct
id|hci_uart
op_star
id|hu
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
DECL|member|dequeue
r_struct
id|sk_buff
op_star
(paren
op_star
id|dequeue
)paren
(paren
r_struct
id|hci_uart
op_star
id|hu
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|hci_uart
r_struct
id|hci_uart
(brace
DECL|member|tty
r_struct
id|tty_struct
op_star
id|tty
suffix:semicolon
DECL|member|hdev
r_struct
id|hci_dev
op_star
id|hdev
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
DECL|member|proto
r_struct
id|hci_uart_proto
op_star
id|proto
suffix:semicolon
DECL|member|priv
r_void
op_star
id|priv
suffix:semicolon
DECL|member|tx_skb
r_struct
id|sk_buff
op_star
id|tx_skb
suffix:semicolon
DECL|member|tx_state
r_int
r_int
id|tx_state
suffix:semicolon
DECL|member|rx_lock
id|spinlock_t
id|rx_lock
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* HCI_UART flag bits */
DECL|macro|HCI_UART_PROTO_SET
mdefine_line|#define HCI_UART_PROTO_SET&t;&t;0
multiline_comment|/* TX states  */
DECL|macro|HCI_UART_SENDING
mdefine_line|#define HCI_UART_SENDING&t;&t;1
DECL|macro|HCI_UART_TX_WAKEUP
mdefine_line|#define HCI_UART_TX_WAKEUP&t;&t;2
r_int
id|hci_uart_register_proto
c_func
(paren
r_struct
id|hci_uart_proto
op_star
id|p
)paren
suffix:semicolon
r_int
id|hci_uart_unregister_proto
c_func
(paren
r_struct
id|hci_uart_proto
op_star
id|p
)paren
suffix:semicolon
r_int
id|hci_uart_tx_wakeup
c_func
(paren
r_struct
id|hci_uart
op_star
id|hu
)paren
suffix:semicolon
macro_line|#endif /* __KERNEL__ */
eof
