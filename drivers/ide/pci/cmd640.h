macro_line|#ifndef CMD640_H
DECL|macro|CMD640_H
mdefine_line|#define CMD640_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/pci.h&gt;
macro_line|#include &lt;linux/ide.h&gt;
DECL|macro|IDE_IGNORE
mdefine_line|#define IDE_IGNORE      ((void *)-1)
r_static
id|ide_pci_device_t
id|cmd640_chipsets
(braket
)braket
id|__initdata
op_assign
(brace
(brace
id|vendor
suffix:colon
id|PCI_VENDOR_ID_CMD
comma
id|device
suffix:colon
id|PCI_DEVICE_ID_CMD_640
comma
id|name
suffix:colon
l_string|&quot;CMD640&quot;
comma
id|init_setup
suffix:colon
l_int|NULL
comma
id|init_chipset
suffix:colon
l_int|NULL
comma
id|init_iops
suffix:colon
l_int|NULL
comma
id|init_hwif
suffix:colon
id|IDE_IGNORE
comma
id|init_dma
suffix:colon
l_int|NULL
comma
id|channels
suffix:colon
l_int|2
comma
id|autodma
suffix:colon
id|NODMA
comma
id|enablebits
suffix:colon
(brace
(brace
l_int|0x00
comma
l_int|0x00
comma
l_int|0x00
)brace
comma
(brace
l_int|0x00
comma
l_int|0x00
comma
l_int|0x00
)brace
)brace
comma
id|bootable
suffix:colon
id|ON_BOARD
comma
id|extra
suffix:colon
l_int|0
)brace
comma
(brace
id|vendor
suffix:colon
l_int|0
comma
id|device
suffix:colon
l_int|0
comma
id|bootable
suffix:colon
id|EOL
comma
)brace
)brace
macro_line|#endif /* CMD640_H */
eof
