macro_line|#ifndef W82C105_H
DECL|macro|W82C105_H
mdefine_line|#define W82C105_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/pci.h&gt;
macro_line|#include &lt;linux/ide.h&gt;
r_static
r_int
r_int
id|init_chipset_sl82c105
c_func
(paren
r_struct
id|pci_dev
op_star
comma
r_const
r_char
op_star
)paren
suffix:semicolon
r_static
r_void
id|init_hwif_sl82c105
c_func
(paren
id|ide_hwif_t
op_star
)paren
suffix:semicolon
r_static
r_void
id|init_dma_sl82c105
c_func
(paren
id|ide_hwif_t
op_star
comma
r_int
r_int
)paren
suffix:semicolon
DECL|variable|__devinitdata
r_static
id|ide_pci_device_t
id|sl82c105_chipsets
(braket
)braket
id|__devinitdata
op_assign
(brace
(brace
multiline_comment|/* 0 */
id|vendor
suffix:colon
id|PCI_VENDOR_ID_WINBOND
comma
id|device
suffix:colon
id|PCI_DEVICE_ID_WINBOND_82C105
comma
id|name
suffix:colon
l_string|&quot;W82C105&quot;
comma
id|init_chipset
suffix:colon
id|init_chipset_sl82c105
comma
id|init_iops
suffix:colon
l_int|NULL
comma
id|init_hwif
suffix:colon
id|init_hwif_sl82c105
comma
id|init_dma
suffix:colon
id|init_dma_sl82c105
comma
id|channels
suffix:colon
l_int|2
comma
id|autodma
suffix:colon
id|NOAUTODMA
comma
id|enablebits
suffix:colon
(brace
(brace
l_int|0x40
comma
l_int|0x01
comma
l_int|0x01
)brace
comma
(brace
l_int|0x40
comma
l_int|0x10
comma
l_int|0x10
)brace
)brace
comma
id|bootable
suffix:colon
id|ON_BOARD
comma
id|extra
suffix:colon
l_int|0
comma
)brace
comma
(brace
id|vendor
suffix:colon
l_int|0
comma
id|device
suffix:colon
l_int|0
comma
id|channels
suffix:colon
l_int|0
comma
id|bootable
suffix:colon
id|EOL
comma
)brace
)brace
suffix:semicolon
macro_line|#endif /* W82C105_H */
eof
