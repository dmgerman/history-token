macro_line|#ifndef SIIMAGE_H
DECL|macro|SIIMAGE_H
mdefine_line|#define SIIMAGE_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/pci.h&gt;
macro_line|#include &lt;linux/ide.h&gt;
macro_line|#include &lt;asm/io.h&gt;
DECL|macro|DISPLAY_SIIMAGE_TIMINGS
mdefine_line|#define DISPLAY_SIIMAGE_TIMINGS
DECL|macro|CONFIG_TRY_MMIO_SIIMAGE
mdefine_line|#define CONFIG_TRY_MMIO_SIIMAGE
singleline_comment|//#undef CONFIG_TRY_MMIO_SIIMAGE
DECL|macro|SIIMAGE_VIRTUAL_DMAPIO
macro_line|#undef SIIMAGE_VIRTUAL_DMAPIO
DECL|macro|SIIMAGE_BUFFERED_TASKFILE
macro_line|#undef SIIMAGE_BUFFERED_TASKFILE
DECL|macro|SIIMAGE_LARGE_DMA
macro_line|#undef SIIMAGE_LARGE_DMA
macro_line|#if 0
r_typedef
r_struct
id|ide_io_ops_s
id|siimage_iops
(brace
)brace
macro_line|#endif
DECL|macro|SII_DEBUG
mdefine_line|#define SII_DEBUG 0
macro_line|#if SII_DEBUG
DECL|macro|siiprintk
mdefine_line|#define siiprintk(x...)&t;printk(x)
macro_line|#else
DECL|macro|siiprintk
mdefine_line|#define siiprintk(x...)
macro_line|#endif
DECL|macro|ADJREG
mdefine_line|#define ADJREG(B,R)&t;((B)|(R)|((hwif-&gt;channel)&lt;&lt;(4+(2*(hwif-&gt;mmio)))))
DECL|macro|SELREG
mdefine_line|#define SELREG(R)&t;ADJREG((0xA0),(R))
DECL|macro|SELADDR
mdefine_line|#define SELADDR(R)&t;((((u32)hwif-&gt;hwif_data)*(hwif-&gt;mmio))|SELREG((R)))
DECL|macro|HWIFADDR
mdefine_line|#define HWIFADDR(R)&t;((((u32)hwif-&gt;hwif_data)*(hwif-&gt;mmio))|(R))
DECL|macro|DEVADDR
mdefine_line|#define DEVADDR(R)&t;(((u32) pci_get_drvdata(dev))|(R))
DECL|function|sii_inb
r_inline
id|u8
id|sii_inb
(paren
id|u32
id|port
)paren
(brace
r_return
(paren
id|u8
)paren
id|readb
c_func
(paren
id|port
)paren
suffix:semicolon
)brace
DECL|function|sii_inw
r_inline
id|u16
id|sii_inw
(paren
id|u32
id|port
)paren
(brace
r_return
(paren
id|u16
)paren
id|readw
c_func
(paren
id|port
)paren
suffix:semicolon
)brace
DECL|function|sii_insw
r_inline
r_void
id|sii_insw
(paren
id|u32
id|port
comma
r_void
op_star
id|addr
comma
id|u32
id|count
)paren
(brace
r_while
c_loop
(paren
id|count
op_decrement
)paren
(brace
op_star
(paren
id|u16
op_star
)paren
id|addr
op_assign
id|readw
c_func
(paren
id|port
)paren
suffix:semicolon
id|addr
op_add_assign
l_int|2
suffix:semicolon
)brace
)brace
DECL|function|sii_inl
r_inline
id|u32
id|sii_inl
(paren
id|u32
id|port
)paren
(brace
r_return
(paren
id|u32
)paren
id|readl
c_func
(paren
id|port
)paren
suffix:semicolon
)brace
DECL|function|sii_insl
r_inline
r_void
id|sii_insl
(paren
id|u32
id|port
comma
r_void
op_star
id|addr
comma
id|u32
id|count
)paren
(brace
id|sii_insw
c_func
(paren
id|port
comma
id|addr
comma
(paren
id|count
)paren
op_lshift
l_int|1
)paren
suffix:semicolon
singleline_comment|//&t;while (count--) { *(u32 *)addr = readl(port); addr += 4; }
)brace
DECL|function|sii_outb
r_inline
r_void
id|sii_outb
(paren
id|u8
id|value
comma
id|u32
id|port
)paren
(brace
id|writeb
c_func
(paren
id|value
comma
id|port
)paren
suffix:semicolon
)brace
DECL|function|sii_outw
r_inline
r_void
id|sii_outw
(paren
id|u16
id|value
comma
id|u32
id|port
)paren
(brace
id|writew
c_func
(paren
id|value
comma
id|port
)paren
suffix:semicolon
)brace
DECL|function|sii_outsw
r_inline
r_void
id|sii_outsw
(paren
id|u32
id|port
comma
r_void
op_star
id|addr
comma
id|u32
id|count
)paren
(brace
r_while
c_loop
(paren
id|count
op_decrement
)paren
(brace
id|writew
c_func
(paren
op_star
(paren
id|u16
op_star
)paren
id|addr
comma
id|port
)paren
suffix:semicolon
id|addr
op_add_assign
l_int|2
suffix:semicolon
)brace
)brace
DECL|function|sii_outl
r_inline
r_void
id|sii_outl
(paren
id|u32
id|value
comma
id|u32
id|port
)paren
(brace
id|writel
c_func
(paren
id|value
comma
id|port
)paren
suffix:semicolon
)brace
DECL|function|sii_outsl
r_inline
r_void
id|sii_outsl
(paren
id|u32
id|port
comma
r_void
op_star
id|addr
comma
id|u32
id|count
)paren
(brace
id|sii_outsw
c_func
(paren
id|port
comma
id|addr
comma
(paren
id|count
)paren
op_lshift
l_int|1
)paren
suffix:semicolon
singleline_comment|//&t;while (count--) { writel(*(u32 *)addr, port); addr += 4; }
)brace
macro_line|#if defined(DISPLAY_SIIMAGE_TIMINGS) &amp;&amp; defined(CONFIG_PROC_FS)
macro_line|#include &lt;linux/stat.h&gt;
macro_line|#include &lt;linux/proc_fs.h&gt;
r_static
r_char
op_star
id|print_siimage_get_info
c_func
(paren
r_char
op_star
comma
r_struct
id|pci_dev
op_star
comma
r_int
)paren
suffix:semicolon
r_static
r_int
id|siimage_get_info
c_func
(paren
r_char
op_star
comma
r_char
op_star
op_star
comma
id|off_t
comma
r_int
)paren
suffix:semicolon
DECL|variable|siimage_proc
r_static
id|u8
id|siimage_proc
suffix:semicolon
DECL|variable|__initdata
r_static
id|ide_pci_host_proc_t
id|siimage_procs
(braket
)braket
id|__initdata
op_assign
(brace
(brace
dot
id|name
op_assign
l_string|&quot;siimage&quot;
comma
dot
id|set
op_assign
l_int|1
comma
dot
id|get_info
op_assign
id|siimage_get_info
comma
dot
id|parent
op_assign
l_int|NULL
comma
)brace
comma
)brace
suffix:semicolon
macro_line|#endif /* DISPLAY_SIIMAGE_TIMINGS &amp;&amp; CONFIG_PROC_FS */&t;
r_static
r_int
r_int
id|init_chipset_siimage
c_func
(paren
r_struct
id|pci_dev
op_star
comma
r_const
r_char
op_star
)paren
suffix:semicolon
r_static
r_void
id|init_iops_siimage
c_func
(paren
id|ide_hwif_t
op_star
)paren
suffix:semicolon
r_static
r_void
id|init_hwif_siimage
c_func
(paren
id|ide_hwif_t
op_star
)paren
suffix:semicolon
r_static
r_void
id|init_dma_siimage
c_func
(paren
id|ide_hwif_t
op_star
comma
r_int
r_int
)paren
suffix:semicolon
DECL|variable|__devinitdata
r_static
id|ide_pci_device_t
id|siimage_chipsets
(braket
)braket
id|__devinitdata
op_assign
(brace
(brace
multiline_comment|/* 0 */
dot
id|vendor
op_assign
id|PCI_VENDOR_ID_CMD
comma
dot
id|device
op_assign
id|PCI_DEVICE_ID_SII_680
comma
dot
id|name
op_assign
l_string|&quot;SiI680&quot;
comma
dot
id|init_chipset
op_assign
id|init_chipset_siimage
comma
dot
id|init_iops
op_assign
id|init_iops_siimage
comma
dot
id|init_hwif
op_assign
id|init_hwif_siimage
comma
dot
id|init_dma
op_assign
id|init_dma_siimage
comma
dot
id|channels
op_assign
l_int|2
comma
dot
id|autodma
op_assign
id|AUTODMA
comma
dot
id|enablebits
op_assign
(brace
(brace
l_int|0x00
comma
l_int|0x00
comma
l_int|0x00
)brace
comma
(brace
l_int|0x00
comma
l_int|0x00
comma
l_int|0x00
)brace
)brace
comma
dot
id|bootable
op_assign
id|ON_BOARD
comma
dot
id|extra
op_assign
l_int|0
comma
)brace
comma
(brace
multiline_comment|/* 1 */
dot
id|vendor
op_assign
id|PCI_VENDOR_ID_CMD
comma
dot
id|device
op_assign
id|PCI_DEVICE_ID_SII_3112
comma
dot
id|name
op_assign
l_string|&quot;SiI3112 Serial ATA&quot;
comma
dot
id|init_chipset
op_assign
id|init_chipset_siimage
comma
dot
id|init_iops
op_assign
id|init_iops_siimage
comma
dot
id|init_hwif
op_assign
id|init_hwif_siimage
comma
dot
id|init_dma
op_assign
id|init_dma_siimage
comma
dot
id|channels
op_assign
l_int|2
comma
dot
id|autodma
op_assign
id|AUTODMA
comma
dot
id|enablebits
op_assign
(brace
(brace
l_int|0x00
comma
l_int|0x00
comma
l_int|0x00
)brace
comma
(brace
l_int|0x00
comma
l_int|0x00
comma
l_int|0x00
)brace
)brace
comma
dot
id|bootable
op_assign
id|ON_BOARD
comma
dot
id|extra
op_assign
l_int|0
comma
)brace
comma
(brace
dot
id|vendor
op_assign
l_int|0
comma
dot
id|device
op_assign
l_int|0
comma
dot
id|channels
op_assign
l_int|0
comma
dot
id|bootable
op_assign
id|EOL
comma
)brace
)brace
suffix:semicolon
macro_line|#endif /* SIIMAGE_H */
eof
