multiline_comment|/*&n; * IBM ASM Service Processor Device Driver&n; *&n; * This program is free software; you can redistribute it and/or modify&n; * it under the terms of the GNU General Public License as published by&n; * the Free Software Foundation; either version 2 of the License, or&n; * (at your option) any later version.&n; *&n; * This program is distributed in the hope that it will be useful,&n; * but WITHOUT ANY WARRANTY; without even the implied warranty of&n; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; * GNU General Public License for more details.&n; *&n; * You should have received a copy of the GNU General Public License&n; * along with this program; if not, write to the Free Software&n; * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.&n; *&n; * Copyright (C) IBM Corporation, 2004&n; *&n; * Author: Max Asb&#xfffd;ck &lt;amax@us.ibm.com&gt; &n; *&n; */
macro_line|#include &lt;linux/kernel.h&gt;
macro_line|#include &lt;linux/types.h&gt;
macro_line|#include &lt;linux/errno.h&gt;
macro_line|#include &lt;linux/list.h&gt;
macro_line|#include &lt;linux/wait.h&gt;
macro_line|#include &lt;linux/spinlock.h&gt;
macro_line|#include &lt;linux/slab.h&gt;
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/module.h&gt;
macro_line|#include &lt;linux/version.h&gt;
macro_line|#include &lt;linux/interrupt.h&gt;
macro_line|#include &lt;linux/device.h&gt;
multiline_comment|/* Driver identification */
DECL|macro|DRIVER_NAME
mdefine_line|#define DRIVER_NAME&t;&quot;ibmasm&quot;
DECL|macro|DRIVER_VERSION
mdefine_line|#define DRIVER_VERSION  &quot;0.4&quot;
DECL|macro|DRIVER_AUTHOR
mdefine_line|#define DRIVER_AUTHOR   &quot;Max Asbock&quot;
DECL|macro|DRIVER_DESC
mdefine_line|#define DRIVER_DESC     &quot;IBM ASM Service Processor Driver&quot;
DECL|macro|err
mdefine_line|#define err(msg) printk(KERN_ERR &quot;%s: &quot; msg &quot;&bslash;n&quot;, DRIVER_NAME)
DECL|macro|info
mdefine_line|#define info(msg) printk(KERN_INFO &quot;%s: &quot; msg &quot;&bslash;n&quot;, DRIVER_NAME)
DECL|macro|IBMASM_CMD_PENDING
mdefine_line|#define IBMASM_CMD_PENDING&t;0&t;
DECL|macro|IBMASM_CMD_COMPLETE
mdefine_line|#define IBMASM_CMD_COMPLETE&t;1&t;
DECL|macro|IBMASM_CMD_FAILED
mdefine_line|#define IBMASM_CMD_FAILED&t;2
DECL|macro|IBMASM_CMD_TIMEOUT_NORMAL
mdefine_line|#define IBMASM_CMD_TIMEOUT_NORMAL&t;45
DECL|macro|IBMASM_CMD_TIMEOUT_EXTRA
mdefine_line|#define IBMASM_CMD_TIMEOUT_EXTRA&t;240
DECL|macro|IBMASM_CMD_MAX_BUFFER_SIZE
mdefine_line|#define IBMASM_CMD_MAX_BUFFER_SIZE&t;0x4000
DECL|macro|REVERSE_HEARTBEAT_TIMEOUT
mdefine_line|#define REVERSE_HEARTBEAT_TIMEOUT&t;120
DECL|macro|HEARTBEAT_BUFFER_SIZE
mdefine_line|#define HEARTBEAT_BUFFER_SIZE&t;&t;0x400
macro_line|#ifdef IA64
DECL|macro|IBMASM_DRIVER_VPD
mdefine_line|#define IBMASM_DRIVER_VPD &quot;Lin64 6.08      &quot;
macro_line|#else
DECL|macro|IBMASM_DRIVER_VPD
mdefine_line|#define IBMASM_DRIVER_VPD &quot;Lin32 6.08      &quot;
macro_line|#endif
DECL|macro|SYSTEM_STATE_OS_UP
mdefine_line|#define SYSTEM_STATE_OS_UP      5
DECL|macro|SYSTEM_STATE_OS_DOWN
mdefine_line|#define SYSTEM_STATE_OS_DOWN    4
DECL|macro|IBMASM_NAME_SIZE
mdefine_line|#define IBMASM_NAME_SIZE&t;16
DECL|macro|IBMASM_NUM_EVENTS
mdefine_line|#define IBMASM_NUM_EVENTS&t;10
DECL|macro|IBMASM_EVENT_MAX_SIZE
mdefine_line|#define IBMASM_EVENT_MAX_SIZE&t;2048u
DECL|struct|command
r_struct
id|command
(brace
DECL|member|queue_node
r_struct
id|list_head
id|queue_node
suffix:semicolon
DECL|member|wait
id|wait_queue_head_t
id|wait
suffix:semicolon
DECL|member|buffer
r_int
r_char
op_star
id|buffer
suffix:semicolon
DECL|member|buffer_size
r_int
id|buffer_size
suffix:semicolon
DECL|member|status
r_int
id|status
suffix:semicolon
DECL|member|kobj
r_struct
id|kobject
id|kobj
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|to_command
mdefine_line|#define to_command(c) container_of(c, struct command, kobj)
DECL|function|command_put
r_static
r_inline
r_void
id|command_put
c_func
(paren
r_struct
id|command
op_star
id|cmd
)paren
(brace
id|kobject_put
c_func
(paren
op_amp
id|cmd-&gt;kobj
)paren
suffix:semicolon
)brace
DECL|function|command_get
r_static
r_inline
r_void
id|command_get
c_func
(paren
r_struct
id|command
op_star
id|cmd
)paren
(brace
id|kobject_get
c_func
(paren
op_amp
id|cmd-&gt;kobj
)paren
suffix:semicolon
)brace
DECL|struct|ibmasm_event
r_struct
id|ibmasm_event
(brace
DECL|member|serial_number
r_int
r_int
id|serial_number
suffix:semicolon
DECL|member|data_size
r_int
r_int
id|data_size
suffix:semicolon
DECL|member|data
r_int
r_char
id|data
(braket
id|IBMASM_EVENT_MAX_SIZE
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|event_buffer
r_struct
id|event_buffer
(brace
DECL|member|events
r_struct
id|ibmasm_event
id|events
(braket
id|IBMASM_NUM_EVENTS
)braket
suffix:semicolon
DECL|member|next_serial_number
r_int
r_int
id|next_serial_number
suffix:semicolon
DECL|member|next_index
r_int
r_int
id|next_index
suffix:semicolon
DECL|member|readers
r_struct
id|list_head
id|readers
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|event_reader
r_struct
id|event_reader
(brace
DECL|member|next_serial_number
r_int
r_int
id|next_serial_number
suffix:semicolon
DECL|member|wait
id|wait_queue_head_t
id|wait
suffix:semicolon
DECL|member|node
r_struct
id|list_head
id|node
suffix:semicolon
DECL|member|data_size
r_int
r_int
id|data_size
suffix:semicolon
DECL|member|data
r_int
r_char
id|data
(braket
id|IBMASM_EVENT_MAX_SIZE
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|reverse_heartbeat
r_struct
id|reverse_heartbeat
(brace
DECL|member|wait
id|wait_queue_head_t
id|wait
suffix:semicolon
DECL|member|stopped
r_int
r_int
id|stopped
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* remote console events */
DECL|struct|mouse_event
r_struct
id|mouse_event
(brace
DECL|member|x
r_int
id|x
suffix:semicolon
DECL|member|y
r_int
id|y
suffix:semicolon
DECL|member|buttons
r_int
r_char
id|buttons
suffix:semicolon
DECL|member|transitions
r_int
r_char
id|transitions
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|keyboard_event
r_struct
id|keyboard_event
(brace
DECL|member|key_code
r_int
r_int
id|key_code
suffix:semicolon
DECL|member|key_down
r_int
r_char
id|key_down
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|remote_event
r_struct
id|remote_event
(brace
DECL|member|type
r_int
r_int
id|type
suffix:semicolon
r_union
(brace
DECL|member|mouse
r_struct
id|mouse_event
id|mouse
suffix:semicolon
DECL|member|keyboard
r_struct
id|keyboard_event
id|keyboard
suffix:semicolon
DECL|member|data
)brace
id|data
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|DRIVER_REMOTE_QUEUE_SIZE
mdefine_line|#define DRIVER_REMOTE_QUEUE_SIZE 240
DECL|struct|remote_queue
r_struct
id|remote_queue
(brace
DECL|member|start
r_struct
id|remote_event
op_star
id|start
suffix:semicolon
DECL|member|end
r_struct
id|remote_event
op_star
id|end
suffix:semicolon
DECL|member|reader
r_struct
id|remote_event
op_star
id|reader
suffix:semicolon
DECL|member|writer
r_struct
id|remote_event
op_star
id|writer
suffix:semicolon
DECL|member|size
r_int
r_int
id|size
suffix:semicolon
DECL|member|open
r_int
id|open
suffix:semicolon
DECL|member|wait
id|wait_queue_head_t
id|wait
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|service_processor
r_struct
id|service_processor
(brace
DECL|member|node
r_struct
id|list_head
id|node
suffix:semicolon
DECL|member|lock
id|spinlock_t
id|lock
suffix:semicolon
DECL|member|base_address
r_void
op_star
id|base_address
suffix:semicolon
DECL|member|irq
r_int
r_int
id|irq
suffix:semicolon
DECL|member|current_command
r_struct
id|command
op_star
id|current_command
suffix:semicolon
DECL|member|heartbeat
r_struct
id|command
op_star
id|heartbeat
suffix:semicolon
DECL|member|command_queue
r_struct
id|list_head
id|command_queue
suffix:semicolon
DECL|member|event_buffer
r_struct
id|event_buffer
op_star
id|event_buffer
suffix:semicolon
DECL|member|dirname
r_char
id|dirname
(braket
id|IBMASM_NAME_SIZE
)braket
suffix:semicolon
DECL|member|devname
r_char
id|devname
(braket
id|IBMASM_NAME_SIZE
)braket
suffix:semicolon
DECL|member|number
r_int
r_int
id|number
suffix:semicolon
DECL|member|remote_queue
r_struct
id|remote_queue
id|remote_queue
suffix:semicolon
DECL|member|serial_line
r_int
id|serial_line
suffix:semicolon
DECL|member|dev
r_struct
id|device
op_star
id|dev
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* command processing */
r_extern
r_struct
id|command
op_star
id|ibmasm_new_command
c_func
(paren
r_int
id|buffer_size
)paren
suffix:semicolon
r_extern
r_void
id|ibmasm_exec_command
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
comma
r_struct
id|command
op_star
id|cmd
)paren
suffix:semicolon
r_extern
r_void
id|ibmasm_wait_for_response
c_func
(paren
r_struct
id|command
op_star
id|cmd
comma
r_int
id|timeout
)paren
suffix:semicolon
r_extern
r_void
id|ibmasm_receive_command_response
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
comma
r_void
op_star
id|response
comma
r_int
id|size
)paren
suffix:semicolon
multiline_comment|/* event processing */
r_extern
r_int
id|ibmasm_event_buffer_init
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
)paren
suffix:semicolon
r_extern
r_void
id|ibmasm_event_buffer_exit
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
)paren
suffix:semicolon
r_extern
r_void
id|ibmasm_receive_event
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
comma
r_void
op_star
id|data
comma
r_int
r_int
id|data_size
)paren
suffix:semicolon
r_extern
r_void
id|ibmasm_event_reader_register
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
comma
r_struct
id|event_reader
op_star
id|reader
)paren
suffix:semicolon
r_extern
r_void
id|ibmasm_event_reader_unregister
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
comma
r_struct
id|event_reader
op_star
id|reader
)paren
suffix:semicolon
r_extern
r_int
id|ibmasm_get_next_event
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
comma
r_struct
id|event_reader
op_star
id|reader
)paren
suffix:semicolon
multiline_comment|/* heartbeat - from SP to OS */
r_extern
r_void
id|ibmasm_register_panic_notifier
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|ibmasm_unregister_panic_notifier
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|ibmasm_heartbeat_init
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
)paren
suffix:semicolon
r_extern
r_void
id|ibmasm_heartbeat_exit
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
)paren
suffix:semicolon
r_extern
r_void
id|ibmasm_receive_heartbeat
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
comma
r_void
op_star
id|message
comma
r_int
id|size
)paren
suffix:semicolon
multiline_comment|/* reverse heartbeat - from OS to SP */
r_extern
r_void
id|ibmasm_init_reverse_heartbeat
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
comma
r_struct
id|reverse_heartbeat
op_star
id|rhb
)paren
suffix:semicolon
r_extern
r_int
id|ibmasm_start_reverse_heartbeat
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
comma
r_struct
id|reverse_heartbeat
op_star
id|rhb
)paren
suffix:semicolon
r_extern
r_void
id|ibmasm_stop_reverse_heartbeat
c_func
(paren
r_struct
id|reverse_heartbeat
op_star
id|rhb
)paren
suffix:semicolon
multiline_comment|/* dot commands */
r_extern
r_void
id|ibmasm_receive_message
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
comma
r_void
op_star
id|data
comma
r_int
id|data_size
)paren
suffix:semicolon
r_extern
r_int
id|ibmasm_send_driver_vpd
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
)paren
suffix:semicolon
r_extern
r_int
id|ibmasm_send_os_state
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
comma
r_int
id|os_state
)paren
suffix:semicolon
multiline_comment|/* low level message processing */
r_extern
r_int
id|ibmasm_send_i2o_message
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
)paren
suffix:semicolon
r_extern
id|irqreturn_t
id|ibmasm_interrupt_handler
c_func
(paren
r_int
id|irq
comma
r_void
op_star
id|dev_id
comma
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
multiline_comment|/* remote console */
r_extern
r_void
id|ibmasm_handle_mouse_interrupt
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
)paren
suffix:semicolon
r_extern
r_int
id|ibmasm_init_remote_queue
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
)paren
suffix:semicolon
r_extern
r_void
id|ibmasm_free_remote_queue
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
)paren
suffix:semicolon
r_extern
r_void
id|ibmasm_advance_reader
c_func
(paren
r_struct
id|remote_queue
op_star
id|q
comma
r_int
r_int
id|n
)paren
suffix:semicolon
r_extern
r_int
id|ibmasm_events_available
c_func
(paren
r_struct
id|remote_queue
op_star
id|q
)paren
suffix:semicolon
multiline_comment|/* file system */
r_extern
r_int
id|ibmasmfs_register
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|ibmasmfs_unregister
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|ibmasmfs_add_sp
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
)paren
suffix:semicolon
multiline_comment|/* uart */
macro_line|#ifdef CONFIG_SERIAL_8250
r_extern
r_void
id|ibmasm_register_uart
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
)paren
suffix:semicolon
r_extern
r_void
id|ibmasm_unregister_uart
c_func
(paren
r_struct
id|service_processor
op_star
id|sp
)paren
suffix:semicolon
macro_line|#else
DECL|macro|ibmasm_register_uart
mdefine_line|#define ibmasm_register_uart(sp)&t;do { } while(0)
DECL|macro|ibmasm_unregister_uart
mdefine_line|#define ibmasm_unregister_uart(sp)&t;do { } while(0)
macro_line|#endif
eof
