multiline_comment|/*&n; *&n;  Copyright (c) Eicon Networks, 2002.&n; *&n;  This source file is supplied for the use with&n;  Eicon Networks range of DIVA Server Adapters.&n; *&n;  Eicon File Revision :    2.1&n; *&n;  This program is free software; you can redistribute it and/or modify&n;  it under the terms of the GNU General Public License as published by&n;  the Free Software Foundation; either version 2, or (at your option)&n;  any later version.&n; *&n;  This program is distributed in the hope that it will be useful,&n;  but WITHOUT ANY WARRANTY OF ANY KIND WHATSOEVER INCLUDING ANY&n;  implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&n;  See the GNU General Public License for more details.&n; *&n;  You should have received a copy of the GNU General Public License&n;  along with this program; if not, write to the Free Software&n;  Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.&n; *&n; */
multiline_comment|/*&n; *  some macros for detailed trace management&n; */
macro_line|#include &quot;di_dbg.h&quot;
multiline_comment|/*****************************************************************************/
DECL|macro|XMOREC
mdefine_line|#define XMOREC 0x1f
DECL|macro|XMOREF
mdefine_line|#define XMOREF 0x20
DECL|macro|XBUSY
mdefine_line|#define XBUSY  0x40
DECL|macro|RMORE
mdefine_line|#define RMORE  0x80
DECL|macro|DIVA_MISC_FLAGS_REMOVE_PENDING
mdefine_line|#define DIVA_MISC_FLAGS_REMOVE_PENDING    0x01
DECL|macro|DIVA_MISC_FLAGS_NO_RC_CANCELLING
mdefine_line|#define DIVA_MISC_FLAGS_NO_RC_CANCELLING  0x02
DECL|macro|DIVA_MISC_FLAGS_RX_DMA
mdefine_line|#define DIVA_MISC_FLAGS_RX_DMA            0x04
multiline_comment|/* structure for all information we have to keep on a per   */
multiline_comment|/* adapater basis                                           */
DECL|typedef|ADAPTER
r_typedef
r_struct
id|adapter_s
id|ADAPTER
suffix:semicolon
DECL|struct|adapter_s
r_struct
id|adapter_s
(brace
DECL|member|io
r_void
op_star
id|io
suffix:semicolon
DECL|member|IdTable
id|byte
id|IdTable
(braket
l_int|256
)braket
suffix:semicolon
DECL|member|IdTypeTable
id|byte
id|IdTypeTable
(braket
l_int|256
)braket
suffix:semicolon
DECL|member|FlowControlIdTable
id|byte
id|FlowControlIdTable
(braket
l_int|256
)braket
suffix:semicolon
DECL|member|FlowControlSkipTable
id|byte
id|FlowControlSkipTable
(braket
l_int|256
)braket
suffix:semicolon
DECL|member|ReadyInt
id|byte
id|ReadyInt
suffix:semicolon
DECL|member|RcExtensionSupported
id|byte
id|RcExtensionSupported
suffix:semicolon
DECL|member|misc_flags_table
id|byte
id|misc_flags_table
(braket
l_int|256
)braket
suffix:semicolon
DECL|member|protocol_capabilities
id|dword
id|protocol_capabilities
suffix:semicolon
DECL|member|ram_in
id|byte
(paren
op_star
id|ram_in
)paren
(paren
id|ADAPTER
op_star
id|a
comma
r_void
op_star
id|adr
)paren
suffix:semicolon
DECL|member|ram_inw
id|word
(paren
op_star
id|ram_inw
)paren
(paren
id|ADAPTER
op_star
id|a
comma
r_void
op_star
id|adr
)paren
suffix:semicolon
DECL|member|ram_in_buffer
r_void
(paren
op_star
id|ram_in_buffer
)paren
(paren
id|ADAPTER
op_star
id|a
comma
r_void
op_star
id|adr
comma
r_void
op_star
id|P
comma
id|word
id|length
)paren
suffix:semicolon
DECL|member|ram_look_ahead
r_void
(paren
op_star
id|ram_look_ahead
)paren
(paren
id|ADAPTER
op_star
id|a
comma
id|PBUFFER
op_star
id|RBuffer
comma
id|ENTITY
op_star
id|e
)paren
suffix:semicolon
DECL|member|ram_out
r_void
(paren
op_star
id|ram_out
)paren
(paren
id|ADAPTER
op_star
id|a
comma
r_void
op_star
id|adr
comma
id|byte
id|data
)paren
suffix:semicolon
DECL|member|ram_outw
r_void
(paren
op_star
id|ram_outw
)paren
(paren
id|ADAPTER
op_star
id|a
comma
r_void
op_star
id|adr
comma
id|word
id|data
)paren
suffix:semicolon
DECL|member|ram_out_buffer
r_void
(paren
op_star
id|ram_out_buffer
)paren
(paren
id|ADAPTER
op_star
id|a
comma
r_void
op_star
id|adr
comma
r_void
op_star
id|P
comma
id|word
id|length
)paren
suffix:semicolon
DECL|member|ram_inc
r_void
(paren
op_star
id|ram_inc
)paren
(paren
id|ADAPTER
op_star
id|a
comma
r_void
op_star
id|adr
)paren
suffix:semicolon
macro_line|#if defined(DIVA_ISTREAM)
DECL|member|rx_stream
id|dword
id|rx_stream
(braket
l_int|256
)braket
suffix:semicolon
DECL|member|tx_stream
id|dword
id|tx_stream
(braket
l_int|256
)braket
suffix:semicolon
DECL|member|tx_pos
id|word
id|tx_pos
(braket
l_int|256
)braket
suffix:semicolon
DECL|member|rx_pos
id|word
id|rx_pos
(braket
l_int|256
)braket
suffix:semicolon
DECL|member|stream_buffer
id|byte
id|stream_buffer
(braket
l_int|2512
)braket
suffix:semicolon
DECL|member|ram_offset
id|dword
(paren
op_star
id|ram_offset
)paren
(paren
id|ADAPTER
op_star
id|a
)paren
suffix:semicolon
DECL|member|ram_out_dw
r_void
(paren
op_star
id|ram_out_dw
)paren
(paren
id|ADAPTER
op_star
id|a
comma
r_void
op_star
id|addr
comma
r_const
id|dword
op_star
id|data
comma
r_int
id|dwords
)paren
suffix:semicolon
DECL|member|ram_in_dw
r_void
(paren
op_star
id|ram_in_dw
)paren
(paren
id|ADAPTER
op_star
id|a
comma
r_void
op_star
id|addr
comma
id|dword
op_star
id|data
comma
r_int
id|dwords
)paren
suffix:semicolon
DECL|member|istream_wakeup
r_void
(paren
op_star
id|istream_wakeup
)paren
(paren
id|ADAPTER
op_star
id|a
)paren
suffix:semicolon
macro_line|#else
DECL|member|stream_buffer
id|byte
id|stream_buffer
(braket
l_int|4
)braket
suffix:semicolon
macro_line|#endif
)brace
suffix:semicolon
multiline_comment|/*------------------------------------------------------------------*/
multiline_comment|/* public functions of IDI common code                              */
multiline_comment|/*------------------------------------------------------------------*/
r_void
id|pr_out
c_func
(paren
id|ADAPTER
op_star
id|a
)paren
suffix:semicolon
id|byte
id|pr_dpc
c_func
(paren
id|ADAPTER
op_star
id|a
)paren
suffix:semicolon
id|byte
id|scom_test_int
c_func
(paren
id|ADAPTER
op_star
id|a
)paren
suffix:semicolon
r_void
id|scom_clear_int
c_func
(paren
id|ADAPTER
op_star
id|a
)paren
suffix:semicolon
multiline_comment|/*------------------------------------------------------------------*/
multiline_comment|/* OS specific functions used by IDI common code                    */
multiline_comment|/*------------------------------------------------------------------*/
r_void
id|free_entity
c_func
(paren
id|ADAPTER
op_star
id|a
comma
id|byte
id|e_no
)paren
suffix:semicolon
r_void
id|assign_queue
c_func
(paren
id|ADAPTER
op_star
id|a
comma
id|byte
id|e_no
comma
id|word
id|ref
)paren
suffix:semicolon
id|byte
id|get_assign
c_func
(paren
id|ADAPTER
op_star
id|a
comma
id|word
id|ref
)paren
suffix:semicolon
r_void
id|req_queue
c_func
(paren
id|ADAPTER
op_star
id|a
comma
id|byte
id|e_no
)paren
suffix:semicolon
id|byte
id|look_req
c_func
(paren
id|ADAPTER
op_star
id|a
)paren
suffix:semicolon
r_void
id|next_req
c_func
(paren
id|ADAPTER
op_star
id|a
)paren
suffix:semicolon
id|ENTITY
op_star
id|entity_ptr
c_func
(paren
id|ADAPTER
op_star
id|a
comma
id|byte
id|e_no
)paren
suffix:semicolon
macro_line|#if defined(DIVA_ISTREAM)
r_struct
id|_diva_xdi_stream_interface
suffix:semicolon
r_void
id|diva_xdi_provide_istream_info
(paren
id|ADAPTER
op_star
id|a
comma
r_struct
id|_diva_xdi_stream_interface
op_star
id|pI
)paren
suffix:semicolon
r_void
id|pr_stream
(paren
id|ADAPTER
op_star
id|a
)paren
suffix:semicolon
r_int
id|diva_istream_write
(paren
r_void
op_star
id|context
comma
r_int
id|Id
comma
r_void
op_star
id|data
comma
r_int
id|length
comma
r_int
id|final
comma
id|byte
id|usr1
comma
id|byte
id|usr2
)paren
suffix:semicolon
r_int
id|diva_istream_read
(paren
r_void
op_star
id|context
comma
r_int
id|Id
comma
r_void
op_star
id|data
comma
r_int
id|max_length
comma
r_int
op_star
id|final
comma
id|byte
op_star
id|usr1
comma
id|byte
op_star
id|usr2
)paren
suffix:semicolon
macro_line|#if defined(DIVA_IDI_RX_DMA)
macro_line|#include &quot;diva_dma.h&quot;
macro_line|#endif
macro_line|#endif
eof
