multiline_comment|/*&n; * Driver for ST5481 USB ISDN modem&n; *&n; * Author       Frode Isaksen&n; * Copyright    2001 by Frode Isaksen      &lt;fisaksen@bewan.com&gt;&n; *              2001 by Kai Germaschewski  &lt;kai.germaschewski@gmx.de&gt;&n; * &n; * This software may be used and distributed according to the terms&n; * of the GNU General Public License, incorporated herein by reference.&n; *&n; */
macro_line|#ifndef __ST5481_HDLC_H__
DECL|macro|__ST5481_HDLC_H__
mdefine_line|#define __ST5481_HDLC_H__
DECL|struct|hdlc_vars
r_struct
id|hdlc_vars
(brace
DECL|member|bit_shift
r_int
id|bit_shift
suffix:semicolon
DECL|member|hdlc_bits1
r_int
id|hdlc_bits1
suffix:semicolon
DECL|member|data_bits
r_int
id|data_bits
suffix:semicolon
DECL|member|ffbit_shift
r_int
id|ffbit_shift
suffix:semicolon
singleline_comment|// encoding only
DECL|member|state
r_int
id|state
suffix:semicolon
DECL|member|dstpos
r_int
id|dstpos
suffix:semicolon
DECL|member|data_received
r_int
id|data_received
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// set if transferring data
DECL|member|dchannel
r_int
id|dchannel
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// set if D channel (send idle instead of flags)
DECL|member|do_adapt56
r_int
id|do_adapt56
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// set if 56K adaptation
DECL|member|do_closing
r_int
id|do_closing
suffix:colon
l_int|1
suffix:semicolon
singleline_comment|// set if in closing phase (need to send CRC + flag
DECL|member|crc
r_int
r_int
id|crc
suffix:semicolon
DECL|member|cbin
r_int
r_char
id|cbin
suffix:semicolon
DECL|member|shift_reg
r_int
r_char
id|shift_reg
suffix:semicolon
DECL|member|ffvalue
r_int
r_char
id|ffvalue
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n;  The return value from hdlc_decode is&n;  the frame length, 0 if no complete frame was decoded,&n;  or a negative error number&n;*/
DECL|macro|HDLC_FRAMING_ERROR
mdefine_line|#define HDLC_FRAMING_ERROR     1
DECL|macro|HDLC_CRC_ERROR
mdefine_line|#define HDLC_CRC_ERROR         2
DECL|macro|HDLC_LENGTH_ERROR
mdefine_line|#define HDLC_LENGTH_ERROR      3
r_void
id|hdlc_rcv_init
c_func
(paren
r_struct
id|hdlc_vars
op_star
id|hdlc
comma
r_int
id|do_adapt56
)paren
suffix:semicolon
r_int
id|hdlc_decode
c_func
(paren
r_struct
id|hdlc_vars
op_star
id|hdlc
comma
r_const
r_int
r_char
op_star
id|src
comma
r_int
id|slen
comma
r_int
op_star
id|count
comma
r_int
r_char
op_star
id|dst
comma
r_int
id|dsize
)paren
suffix:semicolon
r_void
id|hdlc_out_init
c_func
(paren
r_struct
id|hdlc_vars
op_star
id|hdlc
comma
r_int
id|is_d_channel
comma
r_int
id|do_adapt56
)paren
suffix:semicolon
r_int
id|hdlc_encode
c_func
(paren
r_struct
id|hdlc_vars
op_star
id|hdlc
comma
r_const
r_int
r_char
op_star
id|src
comma
r_int
r_int
id|slen
comma
r_int
op_star
id|count
comma
r_int
r_char
op_star
id|dst
comma
r_int
id|dsize
)paren
suffix:semicolon
macro_line|#endif
eof
