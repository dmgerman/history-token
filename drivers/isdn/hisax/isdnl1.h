multiline_comment|/* $Id: isdnl1.h,v 2.9.6.3 2001/09/23 22:24:49 kai Exp $&n; *&n; * Layer 1 defines&n; *&n; * This software may be used and distributed according to the terms&n; * of the GNU General Public License, incorporated herein by reference.&n; *&n; */
DECL|macro|D_RCVBUFREADY
mdefine_line|#define D_RCVBUFREADY&t;0
DECL|macro|D_XMTBUFREADY
mdefine_line|#define D_XMTBUFREADY&t;1
DECL|macro|D_L1STATECHANGE
mdefine_line|#define D_L1STATECHANGE&t;2
DECL|macro|D_CLEARBUSY
mdefine_line|#define D_CLEARBUSY&t;3
DECL|macro|D_RX_MON0
mdefine_line|#define D_RX_MON0&t;4
DECL|macro|D_RX_MON1
mdefine_line|#define D_RX_MON1&t;5
DECL|macro|D_TX_MON0
mdefine_line|#define D_TX_MON0&t;6
DECL|macro|D_TX_MON1
mdefine_line|#define D_TX_MON1&t;7
DECL|macro|E_RCVBUFREADY
mdefine_line|#define E_RCVBUFREADY&t;8
DECL|macro|B_RCVBUFREADY
mdefine_line|#define B_RCVBUFREADY   0
DECL|macro|B_XMTBUFREADY
mdefine_line|#define B_XMTBUFREADY   1
DECL|macro|B_CMPLREADY
mdefine_line|#define B_CMPLREADY     2
DECL|macro|B_LL_NOCARRIER
mdefine_line|#define B_LL_NOCARRIER&t;8
DECL|macro|B_LL_CONNECT
mdefine_line|#define B_LL_CONNECT&t;9
DECL|macro|B_LL_OK
mdefine_line|#define B_LL_OK&t;&t;10
r_extern
r_void
id|debugl1
c_func
(paren
r_struct
id|IsdnCardState
op_star
id|cs
comma
r_char
op_star
id|fmt
comma
dot
dot
dot
)paren
suffix:semicolon
r_extern
r_void
id|DChannel_proc_xmt
c_func
(paren
r_struct
id|IsdnCardState
op_star
id|cs
)paren
suffix:semicolon
r_extern
r_void
id|DChannel_proc_rcv
c_func
(paren
r_struct
id|IsdnCardState
op_star
id|cs
)paren
suffix:semicolon
r_extern
r_void
id|l1_msg
c_func
(paren
r_struct
id|IsdnCardState
op_star
id|cs
comma
r_int
id|pr
comma
r_void
op_star
id|arg
)paren
suffix:semicolon
r_extern
r_void
id|l1_msg_b
c_func
(paren
r_struct
id|PStack
op_star
id|st
comma
r_int
id|pr
comma
r_void
op_star
id|arg
)paren
suffix:semicolon
r_static
r_inline
r_void
DECL|function|fill_fifo_b
id|fill_fifo_b
c_func
(paren
r_struct
id|BCState
op_star
id|bcs
)paren
(brace
id|bcs-&gt;cs-&gt;bc_l1_ops
op_member_access_from_pointer
id|fill_fifo
c_func
(paren
id|bcs
)paren
suffix:semicolon
)brace
macro_line|#ifdef L2FRAME_DEBUG
r_extern
r_void
id|Logl2Frame
c_func
(paren
r_struct
id|IsdnCardState
op_star
id|cs
comma
r_struct
id|sk_buff
op_star
id|skb
comma
r_char
op_star
id|buf
comma
r_int
id|dir
)paren
suffix:semicolon
macro_line|#endif
r_static
r_inline
r_void
DECL|function|sched_b_event
id|sched_b_event
c_func
(paren
r_struct
id|BCState
op_star
id|bcs
comma
r_int
id|event
)paren
(brace
id|set_bit
c_func
(paren
id|event
comma
op_amp
id|bcs-&gt;event
)paren
suffix:semicolon
id|schedule_work
c_func
(paren
op_amp
id|bcs-&gt;work
)paren
suffix:semicolon
)brace
r_static
r_inline
r_void
DECL|function|sched_d_event
id|sched_d_event
c_func
(paren
r_struct
id|IsdnCardState
op_star
id|cs
comma
r_int
id|event
)paren
(brace
id|set_bit
c_func
(paren
id|event
comma
op_amp
id|cs-&gt;event
)paren
suffix:semicolon
id|schedule_work
c_func
(paren
op_amp
id|cs-&gt;work
)paren
suffix:semicolon
)brace
multiline_comment|/* called with the card lock held */
r_static
r_inline
r_void
DECL|function|xmit_complete_b
id|xmit_complete_b
c_func
(paren
r_struct
id|BCState
op_star
id|bcs
)paren
(brace
id|skb_queue_tail
c_func
(paren
op_amp
id|bcs-&gt;cmpl_queue
comma
id|bcs-&gt;tx_skb
)paren
suffix:semicolon
id|sched_b_event
c_func
(paren
id|bcs
comma
id|B_CMPLREADY
)paren
suffix:semicolon
id|bcs-&gt;tx_skb
op_assign
l_int|NULL
suffix:semicolon
)brace
multiline_comment|/* called with the card lock held */
r_static
r_inline
r_void
DECL|function|xmit_complete_d
id|xmit_complete_d
c_func
(paren
r_struct
id|IsdnCardState
op_star
id|cs
)paren
(brace
id|dev_kfree_skb_irq
c_func
(paren
id|cs-&gt;tx_skb
)paren
suffix:semicolon
id|cs-&gt;tx_skb
op_assign
l_int|NULL
suffix:semicolon
)brace
multiline_comment|/* called with the card lock held */
r_static
r_inline
r_void
DECL|function|xmit_ready_b
id|xmit_ready_b
c_func
(paren
r_struct
id|BCState
op_star
id|bcs
)paren
(brace
id|bcs-&gt;tx_skb
op_assign
id|skb_dequeue
c_func
(paren
op_amp
id|bcs-&gt;squeue
)paren
suffix:semicolon
r_if
c_cond
(paren
id|bcs-&gt;tx_skb
)paren
(brace
id|bcs-&gt;count
op_assign
l_int|0
suffix:semicolon
id|set_bit
c_func
(paren
id|BC_FLG_BUSY
comma
op_amp
id|bcs-&gt;Flag
)paren
suffix:semicolon
id|fill_fifo_b
c_func
(paren
id|bcs
)paren
suffix:semicolon
)brace
r_else
(brace
id|clear_bit
c_func
(paren
id|BC_FLG_BUSY
comma
op_amp
id|bcs-&gt;Flag
)paren
suffix:semicolon
id|sched_b_event
c_func
(paren
id|bcs
comma
id|B_XMTBUFREADY
)paren
suffix:semicolon
)brace
)brace
multiline_comment|/* called with the card lock held */
r_static
r_inline
r_void
DECL|function|xmit_ready_d
id|xmit_ready_d
c_func
(paren
r_struct
id|IsdnCardState
op_star
id|cs
)paren
(brace
id|cs-&gt;tx_skb
op_assign
id|skb_dequeue
c_func
(paren
op_amp
id|cs-&gt;sq
)paren
suffix:semicolon
r_if
c_cond
(paren
id|cs-&gt;tx_skb
)paren
(brace
id|cs-&gt;tx_cnt
op_assign
l_int|0
suffix:semicolon
id|cs
op_member_access_from_pointer
id|DC_Send_Data
c_func
(paren
id|cs
)paren
suffix:semicolon
)brace
r_else
(brace
id|sched_d_event
c_func
(paren
id|cs
comma
id|D_XMTBUFREADY
)paren
suffix:semicolon
)brace
)brace
r_static
r_inline
r_void
DECL|function|xmit_data_req_b
id|xmit_data_req_b
c_func
(paren
r_struct
id|BCState
op_star
id|bcs
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
(brace
r_struct
id|IsdnCardState
op_star
id|cs
op_assign
id|bcs-&gt;cs
suffix:semicolon
r_int
r_int
id|flags
suffix:semicolon
id|spin_lock_irqsave
c_func
(paren
op_amp
id|cs-&gt;lock
comma
id|flags
)paren
suffix:semicolon
r_if
c_cond
(paren
id|bcs-&gt;tx_skb
)paren
(brace
id|skb_queue_tail
c_func
(paren
op_amp
id|bcs-&gt;squeue
comma
id|skb
)paren
suffix:semicolon
)brace
r_else
(brace
id|set_bit
c_func
(paren
id|BC_FLG_BUSY
comma
op_amp
id|bcs-&gt;Flag
)paren
suffix:semicolon
id|bcs-&gt;tx_skb
op_assign
id|skb
suffix:semicolon
id|bcs-&gt;count
op_assign
l_int|0
suffix:semicolon
id|fill_fifo_b
c_func
(paren
id|bcs
)paren
suffix:semicolon
)brace
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|cs-&gt;lock
comma
id|flags
)paren
suffix:semicolon
)brace
r_static
r_inline
r_void
DECL|function|xmit_data_req_d
id|xmit_data_req_d
c_func
(paren
r_struct
id|IsdnCardState
op_star
id|cs
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
(brace
r_int
r_int
id|flags
suffix:semicolon
id|spin_lock_irqsave
c_func
(paren
op_amp
id|cs-&gt;lock
comma
id|flags
)paren
suffix:semicolon
r_if
c_cond
(paren
id|cs-&gt;debug
op_amp
id|DEB_DLOG_HEX
)paren
id|LogFrame
c_func
(paren
id|cs
comma
id|skb-&gt;data
comma
id|skb-&gt;len
)paren
suffix:semicolon
r_if
c_cond
(paren
id|cs-&gt;debug
op_amp
id|DEB_DLOG_VERBOSE
)paren
id|dlogframe
c_func
(paren
id|cs
comma
id|skb
comma
l_int|0
)paren
suffix:semicolon
r_if
c_cond
(paren
id|cs-&gt;tx_skb
)paren
(brace
id|skb_queue_tail
c_func
(paren
op_amp
id|cs-&gt;sq
comma
id|skb
)paren
suffix:semicolon
macro_line|#ifdef L2FRAME_DEBUG
r_if
c_cond
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_LAPD
)paren
id|Logl2Frame
c_func
(paren
id|cs
comma
id|skb
comma
l_string|&quot;PH_DATA Queued&quot;
comma
l_int|0
)paren
suffix:semicolon
macro_line|#endif
)brace
r_else
(brace
id|cs-&gt;tx_skb
op_assign
id|skb
suffix:semicolon
id|cs-&gt;tx_cnt
op_assign
l_int|0
suffix:semicolon
macro_line|#ifdef L2FRAME_DEBUG
r_if
c_cond
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_LAPD
)paren
id|Logl2Frame
c_func
(paren
id|cs
comma
id|skb
comma
l_string|&quot;PH_DATA&quot;
comma
l_int|0
)paren
suffix:semicolon
macro_line|#endif
id|cs
op_member_access_from_pointer
id|DC_Send_Data
c_func
(paren
id|cs
)paren
suffix:semicolon
)brace
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|cs-&gt;lock
comma
id|flags
)paren
suffix:semicolon
)brace
r_static
r_inline
r_void
DECL|function|xmit_pull_ind_b
id|xmit_pull_ind_b
c_func
(paren
r_struct
id|BCState
op_star
id|bcs
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
(brace
r_struct
id|IsdnCardState
op_star
id|cs
op_assign
id|bcs-&gt;cs
suffix:semicolon
r_int
r_int
id|flags
suffix:semicolon
id|spin_lock_irqsave
c_func
(paren
op_amp
id|cs-&gt;lock
comma
id|flags
)paren
suffix:semicolon
r_if
c_cond
(paren
id|bcs-&gt;tx_skb
)paren
(brace
id|WARN_ON
c_func
(paren
l_int|1
)paren
suffix:semicolon
)brace
r_else
(brace
id|set_bit
c_func
(paren
id|BC_FLG_BUSY
comma
op_amp
id|bcs-&gt;Flag
)paren
suffix:semicolon
id|bcs-&gt;tx_skb
op_assign
id|skb
suffix:semicolon
id|bcs-&gt;count
op_assign
l_int|0
suffix:semicolon
id|fill_fifo_b
c_func
(paren
id|bcs
)paren
suffix:semicolon
)brace
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|cs-&gt;lock
comma
id|flags
)paren
suffix:semicolon
)brace
r_static
r_inline
r_void
DECL|function|xmit_pull_ind_d
id|xmit_pull_ind_d
c_func
(paren
r_struct
id|IsdnCardState
op_star
id|cs
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
(brace
r_int
r_int
id|flags
suffix:semicolon
id|spin_lock_irqsave
c_func
(paren
op_amp
id|cs-&gt;lock
comma
id|flags
)paren
suffix:semicolon
r_if
c_cond
(paren
id|cs-&gt;tx_skb
)paren
(brace
id|WARN_ON
c_func
(paren
l_int|1
)paren
suffix:semicolon
)brace
r_else
(brace
r_if
c_cond
(paren
id|cs-&gt;debug
op_amp
id|DEB_DLOG_HEX
)paren
id|LogFrame
c_func
(paren
id|cs
comma
id|skb-&gt;data
comma
id|skb-&gt;len
)paren
suffix:semicolon
r_if
c_cond
(paren
id|cs-&gt;debug
op_amp
id|DEB_DLOG_VERBOSE
)paren
id|dlogframe
c_func
(paren
id|cs
comma
id|skb
comma
l_int|0
)paren
suffix:semicolon
macro_line|#ifdef L2FRAME_DEBUG
r_if
c_cond
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_LAPD
)paren
id|Logl2Frame
c_func
(paren
id|cs
comma
id|skb
comma
l_string|&quot;PH_DATA_PULLED&quot;
comma
l_int|0
)paren
suffix:semicolon
macro_line|#endif
id|cs-&gt;tx_skb
op_assign
id|skb
suffix:semicolon
id|cs-&gt;tx_cnt
op_assign
l_int|0
suffix:semicolon
id|cs
op_member_access_from_pointer
id|DC_Send_Data
c_func
(paren
id|cs
)paren
suffix:semicolon
)brace
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|cs-&gt;lock
comma
id|flags
)paren
suffix:semicolon
)brace
multiline_comment|/* If busy, the PH_PULL | CONFIRM scheduling is handled under&n; * the card lock by xmit_ready_b() above, so no race */
r_static
r_inline
r_void
DECL|function|xmit_pull_req_b
id|xmit_pull_req_b
c_func
(paren
r_struct
id|PStack
op_star
id|st
)paren
(brace
r_struct
id|BCState
op_star
id|bcs
op_assign
id|st-&gt;l1.bcs
suffix:semicolon
r_struct
id|IsdnCardState
op_star
id|cs
op_assign
id|bcs-&gt;cs
suffix:semicolon
r_int
r_int
id|flags
suffix:semicolon
r_int
id|busy
op_assign
l_int|0
suffix:semicolon
id|spin_lock_irqsave
c_func
(paren
op_amp
id|cs-&gt;lock
comma
id|flags
)paren
suffix:semicolon
r_if
c_cond
(paren
id|bcs-&gt;tx_skb
)paren
(brace
id|set_bit
c_func
(paren
id|FLG_L1_PULL_REQ
comma
op_amp
id|st-&gt;l1.Flags
)paren
suffix:semicolon
id|busy
op_assign
l_int|1
suffix:semicolon
)brace
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|cs-&gt;lock
comma
id|flags
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|busy
)paren
id|L1L2
c_func
(paren
id|st
comma
id|PH_PULL
op_or
id|CONFIRM
comma
l_int|NULL
)paren
suffix:semicolon
)brace
multiline_comment|/* If busy, the PH_PULL | CONFIRM scheduling is handled under&n; * the card lock by xmit_ready_d() above, so no race */
r_static
r_inline
r_void
DECL|function|xmit_pull_req_d
id|xmit_pull_req_d
c_func
(paren
r_struct
id|PStack
op_star
id|st
)paren
(brace
r_struct
id|IsdnCardState
op_star
id|cs
op_assign
id|st-&gt;l1.hardware
suffix:semicolon
r_int
r_int
id|flags
suffix:semicolon
r_int
id|busy
op_assign
l_int|0
suffix:semicolon
macro_line|#ifdef L2FRAME_DEBUG
r_if
c_cond
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_LAPD
)paren
id|debugl1
c_func
(paren
id|cs
comma
l_string|&quot;-&gt; PH_REQUEST_PULL&quot;
)paren
suffix:semicolon
macro_line|#endif
id|spin_lock_irqsave
c_func
(paren
op_amp
id|cs-&gt;lock
comma
id|flags
)paren
suffix:semicolon
r_if
c_cond
(paren
id|cs-&gt;tx_skb
)paren
(brace
id|set_bit
c_func
(paren
id|FLG_L1_PULL_REQ
comma
op_amp
id|st-&gt;l1.Flags
)paren
suffix:semicolon
id|busy
op_assign
l_int|1
suffix:semicolon
)brace
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|cs-&gt;lock
comma
id|flags
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|busy
)paren
id|L1L2
c_func
(paren
id|st
comma
id|PH_PULL
op_or
id|CONFIRM
comma
l_int|NULL
)paren
suffix:semicolon
)brace
multiline_comment|/* called with the card lock held */
r_static
r_inline
r_void
DECL|function|xmit_restart_b
id|xmit_restart_b
c_func
(paren
r_struct
id|BCState
op_star
id|bcs
)paren
(brace
macro_line|#ifdef ERROR_STATISTIC
id|bcs-&gt;err_tx
op_increment
suffix:semicolon
macro_line|#endif
r_if
c_cond
(paren
op_logical_neg
id|bcs-&gt;tx_skb
)paren
(brace
id|WARN_ON
c_func
(paren
l_int|1
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
id|skb_push
c_func
(paren
id|bcs-&gt;tx_skb
comma
id|bcs-&gt;count
)paren
suffix:semicolon
id|bcs-&gt;tx_cnt
op_add_assign
id|bcs-&gt;count
suffix:semicolon
id|bcs-&gt;count
op_assign
l_int|0
suffix:semicolon
)brace
multiline_comment|/* called with the card lock held */
r_static
r_inline
r_void
DECL|function|xmit_restart_d
id|xmit_restart_d
c_func
(paren
r_struct
id|IsdnCardState
op_star
id|cs
)paren
(brace
macro_line|#ifdef ERROR_STATISTIC
id|cs-&gt;err_tx
op_increment
suffix:semicolon
macro_line|#endif
r_if
c_cond
(paren
op_logical_neg
id|cs-&gt;tx_skb
)paren
(brace
id|WARN_ON
c_func
(paren
l_int|1
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
id|skb_push
c_func
(paren
id|cs-&gt;tx_skb
comma
id|cs-&gt;tx_cnt
)paren
suffix:semicolon
id|cs-&gt;tx_cnt
op_assign
l_int|0
suffix:semicolon
)brace
multiline_comment|/* Useful for HSCX/ISAC work-alike&squot;s */
multiline_comment|/* ---------------------------------------------------------------------- */
multiline_comment|/* XPR - transmit pool ready */
multiline_comment|/* called with the card lock held */
r_static
r_inline
r_void
DECL|function|xmit_xpr_b
id|xmit_xpr_b
c_func
(paren
r_struct
id|BCState
op_star
id|bcs
)paren
(brace
multiline_comment|/* current frame? */
r_if
c_cond
(paren
id|bcs-&gt;tx_skb
)paren
(brace
multiline_comment|/* last frame not done yet? */
r_if
c_cond
(paren
id|bcs-&gt;tx_skb-&gt;len
)paren
(brace
id|fill_fifo_b
c_func
(paren
id|bcs
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
id|xmit_complete_b
c_func
(paren
id|bcs
)paren
suffix:semicolon
id|bcs-&gt;count
op_assign
l_int|0
suffix:semicolon
)brace
id|xmit_ready_b
c_func
(paren
id|bcs
)paren
suffix:semicolon
)brace
multiline_comment|/* XPR - transmit pool ready */
multiline_comment|/* called with the card lock held */
r_static
r_inline
r_void
DECL|function|xmit_xpr_d
id|xmit_xpr_d
c_func
(paren
r_struct
id|IsdnCardState
op_star
id|cs
)paren
(brace
r_if
c_cond
(paren
id|test_and_clear_bit
c_func
(paren
id|FLG_DBUSY_TIMER
comma
op_amp
id|cs-&gt;HW_Flags
)paren
)paren
id|del_timer
c_func
(paren
op_amp
id|cs-&gt;dbusytimer
)paren
suffix:semicolon
r_if
c_cond
(paren
id|test_and_clear_bit
c_func
(paren
id|FLG_L1_DBUSY
comma
op_amp
id|cs-&gt;HW_Flags
)paren
)paren
id|sched_d_event
c_func
(paren
id|cs
comma
id|D_CLEARBUSY
)paren
suffix:semicolon
multiline_comment|/* current frame? */
r_if
c_cond
(paren
id|cs-&gt;tx_skb
)paren
(brace
multiline_comment|/* last frame not done yet? */
r_if
c_cond
(paren
id|cs-&gt;tx_skb-&gt;len
)paren
(brace
id|cs
op_member_access_from_pointer
id|DC_Send_Data
c_func
(paren
id|cs
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
id|xmit_complete_d
c_func
(paren
id|cs
)paren
suffix:semicolon
id|cs-&gt;tx_cnt
op_assign
l_int|0
suffix:semicolon
)brace
id|xmit_ready_d
c_func
(paren
id|cs
)paren
suffix:semicolon
)brace
multiline_comment|/* XDU - transmit data underrun */
multiline_comment|/* called with the card lock held */
r_static
r_inline
r_void
DECL|function|xmit_xdu_b
id|xmit_xdu_b
c_func
(paren
r_struct
id|BCState
op_star
id|bcs
comma
r_void
(paren
op_star
id|reset_xmit
)paren
(paren
r_struct
id|BCState
op_star
id|bcs
)paren
)paren
(brace
r_struct
id|IsdnCardState
op_star
id|cs
op_assign
id|bcs-&gt;cs
suffix:semicolon
r_if
c_cond
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_WARN
)paren
id|debugl1
c_func
(paren
id|cs
comma
l_string|&quot;HSCX %c EXIR XDU&quot;
comma
l_char|&squot;A&squot;
op_plus
id|bcs-&gt;channel
)paren
suffix:semicolon
r_if
c_cond
(paren
id|bcs-&gt;mode
op_eq
id|L1_MODE_TRANS
)paren
(brace
id|fill_fifo_b
c_func
(paren
id|bcs
)paren
suffix:semicolon
)brace
r_else
(brace
id|xmit_restart_b
c_func
(paren
id|bcs
)paren
suffix:semicolon
id|reset_xmit
c_func
(paren
id|bcs
)paren
suffix:semicolon
)brace
)brace
multiline_comment|/* XDU - transmit data underrun */
multiline_comment|/* called with the card lock held */
r_static
r_inline
r_void
DECL|function|xmit_xdu_d
id|xmit_xdu_d
c_func
(paren
r_struct
id|IsdnCardState
op_star
id|cs
comma
r_void
(paren
op_star
id|reset_xmit
)paren
(paren
r_struct
id|IsdnCardState
op_star
id|cs
)paren
)paren
(brace
id|printk
c_func
(paren
id|KERN_WARNING
l_string|&quot;HiSax: D XDU&bslash;n&quot;
)paren
suffix:semicolon
r_if
c_cond
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_WARN
)paren
id|debugl1
c_func
(paren
id|cs
comma
l_string|&quot;D XDU&quot;
)paren
suffix:semicolon
r_if
c_cond
(paren
id|test_and_clear_bit
c_func
(paren
id|FLG_DBUSY_TIMER
comma
op_amp
id|cs-&gt;HW_Flags
)paren
)paren
id|del_timer
c_func
(paren
op_amp
id|cs-&gt;dbusytimer
)paren
suffix:semicolon
r_if
c_cond
(paren
id|test_and_clear_bit
c_func
(paren
id|FLG_L1_DBUSY
comma
op_amp
id|cs-&gt;HW_Flags
)paren
)paren
id|sched_d_event
c_func
(paren
id|cs
comma
id|D_CLEARBUSY
)paren
suffix:semicolon
id|xmit_restart_d
c_func
(paren
id|cs
)paren
suffix:semicolon
r_if
c_cond
(paren
id|reset_xmit
)paren
id|reset_xmit
c_func
(paren
id|cs
)paren
suffix:semicolon
)brace
r_static
r_inline
r_int
r_char
op_star
DECL|function|xmit_fill_fifo_b
id|xmit_fill_fifo_b
c_func
(paren
r_struct
id|BCState
op_star
id|bcs
comma
r_int
id|fifo_size
comma
r_int
op_star
id|count
comma
r_int
op_star
id|more
)paren
(brace
r_struct
id|IsdnCardState
op_star
id|cs
op_assign
id|bcs-&gt;cs
suffix:semicolon
r_int
r_char
op_star
id|p
suffix:semicolon
r_if
c_cond
(paren
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_HSCX
)paren
op_logical_and
op_logical_neg
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_HSCX_FIFO
)paren
)paren
id|debugl1
c_func
(paren
id|cs
comma
id|__FUNCTION__
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|bcs-&gt;tx_skb
op_logical_or
id|bcs-&gt;tx_skb-&gt;len
op_le
l_int|0
)paren
(brace
id|WARN_ON
c_func
(paren
l_int|1
)paren
suffix:semicolon
r_return
l_int|NULL
suffix:semicolon
)brace
op_star
id|more
op_assign
(paren
id|bcs-&gt;mode
op_eq
id|L1_MODE_TRANS
)paren
suffix:semicolon
r_if
c_cond
(paren
id|bcs-&gt;tx_skb-&gt;len
OG
id|fifo_size
)paren
(brace
op_star
id|more
op_assign
l_int|1
suffix:semicolon
op_star
id|count
op_assign
id|fifo_size
suffix:semicolon
)brace
r_else
(brace
op_star
id|count
op_assign
id|bcs-&gt;tx_skb-&gt;len
suffix:semicolon
)brace
id|p
op_assign
id|bcs-&gt;tx_skb-&gt;data
suffix:semicolon
id|skb_pull
c_func
(paren
id|bcs-&gt;tx_skb
comma
op_star
id|count
)paren
suffix:semicolon
id|bcs-&gt;tx_cnt
op_sub_assign
op_star
id|count
suffix:semicolon
id|bcs-&gt;count
op_add_assign
op_star
id|count
suffix:semicolon
r_if
c_cond
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_HSCX_FIFO
)paren
(brace
r_char
op_star
id|t
op_assign
id|bcs-&gt;blog
suffix:semicolon
id|t
op_add_assign
id|sprintf
c_func
(paren
id|t
comma
l_string|&quot;%s %c cnt %d&quot;
comma
id|__FUNCTION__
comma
id|bcs-&gt;unit
ques
c_cond
l_char|&squot;B&squot;
suffix:colon
l_char|&squot;A&squot;
comma
op_star
id|count
)paren
suffix:semicolon
id|QuickHex
c_func
(paren
id|t
comma
id|p
comma
op_star
id|count
)paren
suffix:semicolon
id|debugl1
c_func
(paren
id|cs
comma
id|bcs-&gt;blog
)paren
suffix:semicolon
)brace
r_return
id|p
suffix:semicolon
)brace
r_static
r_inline
r_int
r_char
op_star
DECL|function|xmit_fill_fifo_d
id|xmit_fill_fifo_d
c_func
(paren
r_struct
id|IsdnCardState
op_star
id|cs
comma
r_int
id|fifo_size
comma
r_int
op_star
id|count
comma
r_int
op_star
id|more
)paren
(brace
r_int
r_char
op_star
id|p
suffix:semicolon
r_if
c_cond
(paren
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_ISAC
)paren
op_logical_and
op_logical_neg
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_ISAC_FIFO
)paren
)paren
id|debugl1
c_func
(paren
id|cs
comma
id|__FUNCTION__
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|cs-&gt;tx_skb
op_logical_or
id|cs-&gt;tx_skb-&gt;len
op_le
l_int|0
)paren
(brace
id|WARN_ON
c_func
(paren
l_int|1
)paren
suffix:semicolon
r_return
l_int|NULL
suffix:semicolon
)brace
op_star
id|more
op_assign
l_int|0
suffix:semicolon
r_if
c_cond
(paren
id|cs-&gt;tx_skb-&gt;len
OG
id|fifo_size
)paren
(brace
op_star
id|more
op_assign
l_int|1
suffix:semicolon
op_star
id|count
op_assign
id|fifo_size
suffix:semicolon
)brace
r_else
(brace
op_star
id|count
op_assign
id|cs-&gt;tx_skb-&gt;len
suffix:semicolon
)brace
id|p
op_assign
id|cs-&gt;tx_skb-&gt;data
suffix:semicolon
id|skb_pull
c_func
(paren
id|cs-&gt;tx_skb
comma
op_star
id|count
)paren
suffix:semicolon
id|cs-&gt;tx_cnt
op_add_assign
op_star
id|count
suffix:semicolon
r_if
c_cond
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_ISAC_FIFO
)paren
(brace
r_char
op_star
id|t
op_assign
id|cs-&gt;dlog
suffix:semicolon
id|t
op_add_assign
id|sprintf
c_func
(paren
id|t
comma
l_string|&quot;%s cnt %d&quot;
comma
id|__FUNCTION__
comma
op_star
id|count
)paren
suffix:semicolon
id|QuickHex
c_func
(paren
id|t
comma
id|p
comma
op_star
id|count
)paren
suffix:semicolon
id|debugl1
c_func
(paren
id|cs
comma
id|cs-&gt;dlog
)paren
suffix:semicolon
)brace
r_return
id|p
suffix:semicolon
)brace
r_static
r_inline
r_void
DECL|function|recv_empty_fifo_d
id|recv_empty_fifo_d
c_func
(paren
r_struct
id|IsdnCardState
op_star
id|cs
comma
r_int
id|count
)paren
(brace
id|u8
op_star
id|p
suffix:semicolon
r_if
c_cond
(paren
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_ISAC
)paren
op_logical_and
op_logical_neg
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_ISAC_FIFO
)paren
)paren
id|debugl1
c_func
(paren
id|cs
comma
id|__FUNCTION__
)paren
suffix:semicolon
r_if
c_cond
(paren
id|cs-&gt;rcvidx
op_plus
id|count
OG
id|MAX_DFRAME_LEN_L1
)paren
(brace
r_if
c_cond
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_WARN
)paren
id|debugl1
c_func
(paren
id|cs
comma
l_string|&quot;%s: incoming packet too large&quot;
comma
id|__FUNCTION__
)paren
suffix:semicolon
id|cs-&gt;rcvidx
op_assign
l_int|0
suffix:semicolon
r_return
suffix:semicolon
)brace
id|p
op_assign
id|cs-&gt;rcvbuf
op_plus
id|cs-&gt;rcvidx
suffix:semicolon
id|cs-&gt;rcvidx
op_add_assign
id|count
suffix:semicolon
id|cs-&gt;dc_hw_ops
op_member_access_from_pointer
id|read_fifo
c_func
(paren
id|cs
comma
id|p
comma
id|count
)paren
suffix:semicolon
r_if
c_cond
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_ISAC_FIFO
)paren
(brace
r_char
op_star
id|t
op_assign
id|cs-&gt;dlog
suffix:semicolon
id|t
op_add_assign
id|sprintf
c_func
(paren
id|t
comma
l_string|&quot;%s cnt %d&quot;
comma
id|__FUNCTION__
comma
id|count
)paren
suffix:semicolon
id|QuickHex
c_func
(paren
id|t
comma
id|p
comma
id|count
)paren
suffix:semicolon
id|debugl1
c_func
(paren
id|cs
comma
id|cs-&gt;dlog
)paren
suffix:semicolon
)brace
)brace
r_static
r_inline
r_void
DECL|function|recv_empty_fifo_b
id|recv_empty_fifo_b
c_func
(paren
r_struct
id|BCState
op_star
id|bcs
comma
r_int
id|count
)paren
(brace
id|u8
op_star
id|p
suffix:semicolon
r_struct
id|IsdnCardState
op_star
id|cs
op_assign
id|bcs-&gt;cs
suffix:semicolon
r_if
c_cond
(paren
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_HSCX
)paren
op_logical_and
op_logical_neg
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_HSCX_FIFO
)paren
)paren
id|debugl1
c_func
(paren
id|cs
comma
id|__FUNCTION__
)paren
suffix:semicolon
r_if
c_cond
(paren
id|bcs-&gt;rcvidx
op_plus
id|count
OG
id|HSCX_BUFMAX
)paren
(brace
r_if
c_cond
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_WARN
)paren
id|debugl1
c_func
(paren
id|cs
comma
l_string|&quot;%s: incoming packet too large&quot;
comma
id|__FUNCTION__
)paren
suffix:semicolon
id|bcs-&gt;rcvidx
op_assign
l_int|0
suffix:semicolon
r_return
suffix:semicolon
)brace
id|p
op_assign
id|bcs-&gt;rcvbuf
op_plus
id|bcs-&gt;rcvidx
suffix:semicolon
id|bcs-&gt;rcvidx
op_add_assign
id|count
suffix:semicolon
id|cs-&gt;bc_hw_ops
op_member_access_from_pointer
id|read_fifo
c_func
(paren
id|cs
comma
id|bcs-&gt;unit
comma
id|p
comma
id|count
)paren
suffix:semicolon
r_if
c_cond
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_HSCX_FIFO
)paren
(brace
r_char
op_star
id|t
op_assign
id|bcs-&gt;blog
suffix:semicolon
id|t
op_add_assign
id|sprintf
c_func
(paren
id|t
comma
l_string|&quot;%s %c cnt %d&quot;
comma
id|__FUNCTION__
comma
id|bcs-&gt;unit
ques
c_cond
l_char|&squot;B&squot;
suffix:colon
l_char|&squot;A&squot;
comma
id|count
)paren
suffix:semicolon
id|QuickHex
c_func
(paren
id|t
comma
id|p
comma
id|count
)paren
suffix:semicolon
id|debugl1
c_func
(paren
id|cs
comma
id|bcs-&gt;blog
)paren
suffix:semicolon
)brace
)brace
multiline_comment|/* RME - receive message end */
r_static
r_inline
r_void
DECL|function|recv_rme_d
id|recv_rme_d
c_func
(paren
r_struct
id|IsdnCardState
op_star
id|cs
)paren
(brace
r_struct
id|sk_buff
op_star
id|skb
suffix:semicolon
r_int
id|count
suffix:semicolon
id|count
op_assign
id|cs-&gt;rcvidx
op_minus
l_int|1
suffix:semicolon
id|cs-&gt;rcvidx
op_assign
l_int|0
suffix:semicolon
r_if
c_cond
(paren
id|count
op_eq
l_int|0
)paren
r_return
suffix:semicolon
id|skb
op_assign
id|dev_alloc_skb
c_func
(paren
id|count
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|skb
)paren
(brace
id|printk
c_func
(paren
id|KERN_WARNING
l_string|&quot;HiSax: %s: out of memory&bslash;n&quot;
comma
id|__FUNCTION__
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
id|memcpy
c_func
(paren
id|skb_put
c_func
(paren
id|skb
comma
id|count
)paren
comma
id|cs-&gt;rcvbuf
comma
id|count
)paren
suffix:semicolon
id|skb_queue_tail
c_func
(paren
op_amp
id|cs-&gt;rq
comma
id|skb
)paren
suffix:semicolon
id|sched_d_event
c_func
(paren
id|cs
comma
id|D_RCVBUFREADY
)paren
suffix:semicolon
)brace
r_static
r_inline
r_void
DECL|function|recv_rme_b
id|recv_rme_b
c_func
(paren
r_struct
id|BCState
op_star
id|bcs
)paren
(brace
r_struct
id|IsdnCardState
op_star
id|cs
op_assign
id|bcs-&gt;cs
suffix:semicolon
r_struct
id|sk_buff
op_star
id|skb
suffix:semicolon
r_int
id|count
suffix:semicolon
id|count
op_assign
id|bcs-&gt;rcvidx
op_minus
l_int|1
suffix:semicolon
id|bcs-&gt;rcvidx
op_assign
l_int|0
suffix:semicolon
r_if
c_cond
(paren
id|count
op_eq
l_int|0
)paren
r_return
suffix:semicolon
r_if
c_cond
(paren
id|cs-&gt;debug
op_amp
id|L1_DEB_HSCX_FIFO
)paren
id|debugl1
c_func
(paren
id|cs
comma
l_string|&quot;HX Frame %d&quot;
comma
id|count
)paren
suffix:semicolon
id|skb
op_assign
id|dev_alloc_skb
c_func
(paren
id|count
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|skb
)paren
(brace
id|printk
c_func
(paren
id|KERN_WARNING
l_string|&quot;HiSax: %s: out of memory&bslash;n&quot;
comma
id|__FUNCTION__
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
id|memcpy
c_func
(paren
id|skb_put
c_func
(paren
id|skb
comma
id|count
)paren
comma
id|bcs-&gt;rcvbuf
comma
id|count
)paren
suffix:semicolon
id|skb_queue_tail
c_func
(paren
op_amp
id|bcs-&gt;rqueue
comma
id|skb
)paren
suffix:semicolon
id|sched_b_event
c_func
(paren
id|bcs
comma
id|B_RCVBUFREADY
)paren
suffix:semicolon
)brace
multiline_comment|/* RPF - receive pull full */
r_static
r_inline
r_void
DECL|function|recv_rpf_b
id|recv_rpf_b
c_func
(paren
r_struct
id|BCState
op_star
id|bcs
)paren
(brace
r_if
c_cond
(paren
id|bcs-&gt;mode
op_ne
id|L1_MODE_TRANS
)paren
r_return
suffix:semicolon
id|recv_rme_b
c_func
(paren
id|bcs
)paren
suffix:semicolon
)brace
r_static
r_inline
r_int
DECL|function|bc_open
id|bc_open
c_func
(paren
r_struct
id|BCState
op_star
id|bcs
)paren
(brace
r_if
c_cond
(paren
id|test_and_set_bit
c_func
(paren
id|BC_FLG_INIT
comma
op_amp
id|bcs-&gt;Flag
)paren
)paren
r_return
l_int|0
suffix:semicolon
id|bcs-&gt;rcvbuf
op_assign
id|kmalloc
c_func
(paren
id|HSCX_BUFMAX
comma
id|GFP_ATOMIC
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|bcs-&gt;rcvbuf
)paren
r_goto
id|err
suffix:semicolon
id|bcs-&gt;blog
op_assign
id|kmalloc
c_func
(paren
id|MAX_BLOG_SPACE
comma
id|GFP_ATOMIC
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|bcs-&gt;blog
)paren
r_goto
id|err_rcvbuf
suffix:semicolon
id|skb_queue_head_init
c_func
(paren
op_amp
id|bcs-&gt;rqueue
)paren
suffix:semicolon
id|skb_queue_head_init
c_func
(paren
op_amp
id|bcs-&gt;squeue
)paren
suffix:semicolon
id|skb_queue_head_init
c_func
(paren
op_amp
id|bcs-&gt;cmpl_queue
)paren
suffix:semicolon
id|clear_bit
c_func
(paren
id|BC_FLG_BUSY
comma
op_amp
id|bcs-&gt;Flag
)paren
suffix:semicolon
id|bcs-&gt;tx_skb
op_assign
l_int|NULL
suffix:semicolon
id|bcs-&gt;rcvidx
op_assign
l_int|0
suffix:semicolon
id|bcs-&gt;tx_cnt
op_assign
l_int|0
suffix:semicolon
id|bcs-&gt;event
op_assign
l_int|0
suffix:semicolon
r_return
l_int|0
suffix:semicolon
id|err_rcvbuf
suffix:colon
id|kfree
c_func
(paren
id|bcs-&gt;rcvbuf
)paren
suffix:semicolon
id|err
suffix:colon
id|clear_bit
c_func
(paren
id|BC_FLG_INIT
comma
op_amp
id|bcs-&gt;Flag
)paren
suffix:semicolon
id|printk
c_func
(paren
id|KERN_WARNING
l_string|&quot;HiSax: %s: out of memory&bslash;n&quot;
comma
id|__FUNCTION__
)paren
suffix:semicolon
r_return
op_minus
id|ENOMEM
suffix:semicolon
suffix:semicolon
)brace
r_static
r_inline
r_void
DECL|function|bc_close
id|bc_close
c_func
(paren
r_struct
id|BCState
op_star
id|bcs
)paren
(brace
r_if
c_cond
(paren
op_logical_neg
id|test_and_clear_bit
c_func
(paren
id|BC_FLG_INIT
comma
op_amp
id|bcs-&gt;Flag
)paren
)paren
r_return
suffix:semicolon
id|kfree
c_func
(paren
id|bcs-&gt;rcvbuf
)paren
suffix:semicolon
id|bcs-&gt;rcvbuf
op_assign
l_int|NULL
suffix:semicolon
id|kfree
c_func
(paren
id|bcs-&gt;blog
)paren
suffix:semicolon
id|bcs-&gt;blog
op_assign
l_int|NULL
suffix:semicolon
id|skb_queue_purge
c_func
(paren
op_amp
id|bcs-&gt;rqueue
)paren
suffix:semicolon
id|skb_queue_purge
c_func
(paren
op_amp
id|bcs-&gt;squeue
)paren
suffix:semicolon
id|skb_queue_purge
c_func
(paren
op_amp
id|bcs-&gt;cmpl_queue
)paren
suffix:semicolon
r_if
c_cond
(paren
id|bcs-&gt;tx_skb
)paren
(brace
id|dev_kfree_skb_any
c_func
(paren
id|bcs-&gt;tx_skb
)paren
suffix:semicolon
id|bcs-&gt;tx_skb
op_assign
l_int|NULL
suffix:semicolon
id|clear_bit
c_func
(paren
id|BC_FLG_BUSY
comma
op_amp
id|bcs-&gt;Flag
)paren
suffix:semicolon
)brace
)brace
eof
