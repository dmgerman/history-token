multiline_comment|/* $Id: isdn_net.h,v 1.19.6.4 2001/09/28 08:05:29 kai Exp $&n; *&n; * header for Linux ISDN subsystem, network related functions (linklevel).&n; *&n; * Copyright 1994-1999  by Fritz Elfert (fritz@isdn4linux.de)&n; * Copyright 1995,96    by Thinking Objects Software GmbH Wuerzburg&n; * Copyright 1995,96    by Michael Hipp (Michael.Hipp@student.uni-tuebingen.de)&n; *&n; * This software may be used and distributed according to the terms&n; * of the GNU General Public License, incorporated herein by reference.&n; *&n; */
macro_line|#include &lt;linux/kernel.h&gt;
macro_line|#include &lt;linux/netdevice.h&gt;
macro_line|#include &lt;linux/isdn.h&gt;
multiline_comment|/* Definitions for hupflags:                */
DECL|macro|ISDN_CHARGEHUP
mdefine_line|#define ISDN_CHARGEHUP   4      /* We want to use the charge mechanism      */
DECL|macro|ISDN_INHUP
mdefine_line|#define ISDN_INHUP       8      /* Even if incoming, close after huptimeout */
DECL|macro|ISDN_MANCHARGE
mdefine_line|#define ISDN_MANCHARGE  16      /* Charge Interval manually set             */
multiline_comment|/*&n; * Definitions for Cisco-HDLC header.&n; */
DECL|macro|CISCO_ADDR_UNICAST
mdefine_line|#define CISCO_ADDR_UNICAST    0x0f
DECL|macro|CISCO_ADDR_BROADCAST
mdefine_line|#define CISCO_ADDR_BROADCAST  0x8f
DECL|macro|CISCO_CTRL
mdefine_line|#define CISCO_CTRL            0x00
DECL|macro|CISCO_TYPE_CDP
mdefine_line|#define CISCO_TYPE_CDP        0x2000
DECL|macro|CISCO_TYPE_SLARP
mdefine_line|#define CISCO_TYPE_SLARP      0x8035
DECL|macro|CISCO_SLARP_REQUEST
mdefine_line|#define CISCO_SLARP_REQUEST   0
DECL|macro|CISCO_SLARP_REPLY
mdefine_line|#define CISCO_SLARP_REPLY     1
DECL|macro|CISCO_SLARP_KEEPALIVE
mdefine_line|#define CISCO_SLARP_KEEPALIVE 2
r_extern
r_void
id|isdn_net_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|isdn_net_exit
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|isdn_net_lib_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|isdn_net_lib_exit
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|isdn_net_hangup_all
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_ioctl
c_func
(paren
r_struct
id|inode
op_star
comma
r_struct
id|file
op_star
comma
id|uint
comma
id|ulong
)paren
suffix:semicolon
r_extern
r_int
id|register_isdn_netif
c_func
(paren
r_int
id|encap
comma
r_struct
id|isdn_netif_ops
op_star
id|ops
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_autodial
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_struct
id|net_device
op_star
id|ndev
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_start_xmit
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_struct
id|net_device
op_star
id|ndev
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_dial
c_func
(paren
id|isdn_net_dev
op_star
id|idev
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_bsent
c_func
(paren
id|isdn_net_dev
op_star
id|idev
comma
id|isdn_ctrl
op_star
id|c
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_stat_callback
c_func
(paren
r_int
comma
id|isdn_ctrl
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_find_icall
c_func
(paren
r_int
comma
r_int
comma
r_int
comma
id|setup_parm
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_hangup
c_func
(paren
id|isdn_net_dev
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_rcv_skb
c_func
(paren
r_int
comma
r_struct
id|sk_buff
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_dial_req
c_func
(paren
id|isdn_net_dev
op_star
)paren
suffix:semicolon
r_extern
r_void
id|isdn_net_writebuf_skb
c_func
(paren
id|isdn_net_dev
op_star
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_extern
r_void
id|isdn_net_write_super
c_func
(paren
id|isdn_net_dev
op_star
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_online
c_func
(paren
id|isdn_net_dev
op_star
)paren
suffix:semicolon
r_enum
(brace
DECL|enumerator|ST_CHARGE_NULL
id|ST_CHARGE_NULL
comma
DECL|enumerator|ST_CHARGE_GOT_CINF
id|ST_CHARGE_GOT_CINF
comma
multiline_comment|/* got a first charge info */
DECL|enumerator|ST_CHARGE_HAVE_CINT
id|ST_CHARGE_HAVE_CINT
comma
multiline_comment|/* got a second chare info and thus the timing */
)brace
suffix:semicolon
r_static
r_inline
r_int
DECL|function|isdn_net_bound
id|isdn_net_bound
c_func
(paren
id|isdn_net_dev
op_star
id|idev
)paren
(brace
r_return
id|idev-&gt;isdn_slot
op_ge
l_int|0
suffix:semicolon
)brace
r_static
r_inline
r_int
DECL|function|put_u8
id|put_u8
c_func
(paren
r_int
r_char
op_star
id|p
comma
id|u8
id|x
)paren
(brace
op_star
id|p
op_assign
id|x
suffix:semicolon
r_return
l_int|1
suffix:semicolon
)brace
r_static
r_inline
r_int
DECL|function|put_u16
id|put_u16
c_func
(paren
r_int
r_char
op_star
id|p
comma
id|u16
id|x
)paren
(brace
op_star
(paren
(paren
id|u16
op_star
)paren
id|p
)paren
op_assign
id|htons
c_func
(paren
id|x
)paren
suffix:semicolon
r_return
l_int|2
suffix:semicolon
)brace
r_static
r_inline
r_int
DECL|function|put_u32
id|put_u32
c_func
(paren
r_int
r_char
op_star
id|p
comma
id|u32
id|x
)paren
(brace
op_star
(paren
(paren
id|u32
op_star
)paren
id|p
)paren
op_assign
id|htonl
c_func
(paren
id|x
)paren
suffix:semicolon
r_return
l_int|4
suffix:semicolon
)brace
r_static
r_inline
r_int
DECL|function|get_u8
id|get_u8
c_func
(paren
r_int
r_char
op_star
id|p
comma
id|u8
op_star
id|x
)paren
(brace
op_star
id|x
op_assign
op_star
id|p
suffix:semicolon
r_return
l_int|1
suffix:semicolon
)brace
r_static
r_inline
r_int
DECL|function|get_u16
id|get_u16
c_func
(paren
r_int
r_char
op_star
id|p
comma
id|u16
op_star
id|x
)paren
(brace
op_star
id|x
op_assign
id|ntohs
c_func
(paren
op_star
(paren
(paren
id|u16
op_star
)paren
id|p
)paren
)paren
suffix:semicolon
r_return
l_int|2
suffix:semicolon
)brace
r_static
r_inline
r_int
DECL|function|get_u32
id|get_u32
c_func
(paren
r_int
r_char
op_star
id|p
comma
id|u32
op_star
id|x
)paren
(brace
op_star
id|x
op_assign
id|ntohl
c_func
(paren
op_star
(paren
(paren
id|u32
op_star
)paren
id|p
)paren
)paren
suffix:semicolon
r_return
l_int|4
suffix:semicolon
)brace
eof
