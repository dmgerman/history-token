multiline_comment|/* $Id: isdn_net.h,v 1.19.6.4 2001/09/28 08:05:29 kai Exp $&n; *&n; * header for Linux ISDN subsystem, network related functions (linklevel).&n; *&n; * Copyright 1994-1999  by Fritz Elfert (fritz@isdn4linux.de)&n; * Copyright 1995,96    by Thinking Objects Software GmbH Wuerzburg&n; * Copyright 1995,96    by Michael Hipp (Michael.Hipp@student.uni-tuebingen.de)&n; *&n; * This software may be used and distributed according to the terms&n; * of the GNU General Public License, incorporated herein by reference.&n; *&n; */
macro_line|#include &lt;linux/kernel.h&gt;
macro_line|#include &lt;linux/netdevice.h&gt;
macro_line|#include &lt;linux/isdn.h&gt;
multiline_comment|/* Definitions for hupflags:                */
DECL|macro|ISDN_CHARGEHUP
mdefine_line|#define ISDN_CHARGEHUP   4      /* We want to use the charge mechanism      */
DECL|macro|ISDN_INHUP
mdefine_line|#define ISDN_INHUP       8      /* Even if incoming, close after huptimeout */
DECL|macro|ISDN_MANCHARGE
mdefine_line|#define ISDN_MANCHARGE  16      /* Charge Interval manually set             */
multiline_comment|/*&n; * Definitions for Cisco-HDLC header.&n; */
DECL|macro|CISCO_ADDR_UNICAST
mdefine_line|#define CISCO_ADDR_UNICAST    0x0f
DECL|macro|CISCO_ADDR_BROADCAST
mdefine_line|#define CISCO_ADDR_BROADCAST  0x8f
DECL|macro|CISCO_CTRL
mdefine_line|#define CISCO_CTRL            0x00
DECL|macro|CISCO_TYPE_CDP
mdefine_line|#define CISCO_TYPE_CDP        0x2000
DECL|macro|CISCO_TYPE_SLARP
mdefine_line|#define CISCO_TYPE_SLARP      0x8035
DECL|macro|CISCO_SLARP_REQUEST
mdefine_line|#define CISCO_SLARP_REQUEST   0
DECL|macro|CISCO_SLARP_REPLY
mdefine_line|#define CISCO_SLARP_REPLY     1
DECL|macro|CISCO_SLARP_KEEPALIVE
mdefine_line|#define CISCO_SLARP_KEEPALIVE 2
r_extern
r_void
id|isdn_net_init_module
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_new
c_func
(paren
r_char
op_star
comma
id|isdn_net_local
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_newslave
c_func
(paren
r_char
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_rm
c_func
(paren
r_char
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_rmall
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_stat_callback
c_func
(paren
r_int
comma
id|isdn_ctrl
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_setcfg
c_func
(paren
id|isdn_net_ioctl_cfg
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_getcfg
c_func
(paren
id|isdn_net_ioctl_cfg
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_addphone
c_func
(paren
id|isdn_net_ioctl_phone
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_getphones
c_func
(paren
id|isdn_net_ioctl_phone
op_star
comma
r_char
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_getpeer
c_func
(paren
id|isdn_net_ioctl_phone
op_star
comma
id|isdn_net_ioctl_phone
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_delphone
c_func
(paren
id|isdn_net_ioctl_phone
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_find_icall
c_func
(paren
r_int
comma
r_int
comma
r_int
comma
id|setup_parm
op_star
)paren
suffix:semicolon
r_extern
r_void
id|isdn_net_hangup
c_func
(paren
id|isdn_net_dev
op_star
)paren
suffix:semicolon
r_extern
r_void
id|isdn_net_hangup_all
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_force_hangup
c_func
(paren
r_char
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_force_dial
c_func
(paren
r_char
op_star
)paren
suffix:semicolon
r_extern
id|isdn_net_dev
op_star
id|isdn_net_findif
c_func
(paren
r_char
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_rcv_skb
c_func
(paren
r_int
comma
r_struct
id|sk_buff
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_dial_req
c_func
(paren
id|isdn_net_dev
op_star
)paren
suffix:semicolon
r_extern
r_void
id|isdn_net_writebuf_skb
c_func
(paren
id|isdn_net_dev
op_star
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_extern
r_void
id|isdn_net_write_super
c_func
(paren
id|isdn_net_dev
op_star
comma
r_struct
id|sk_buff
op_star
id|skb
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_online
c_func
(paren
id|isdn_net_dev
op_star
)paren
suffix:semicolon
r_extern
r_int
id|isdn_net_autodial
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_struct
id|net_device
op_star
id|ndev
)paren
suffix:semicolon
DECL|macro|ISDN_NET_MAX_QUEUE_LENGTH
mdefine_line|#define ISDN_NET_MAX_QUEUE_LENGTH 2
multiline_comment|/*&n; * is this particular channel busy?&n; */
r_static
r_inline
r_int
DECL|function|isdn_net_dev_busy
id|isdn_net_dev_busy
c_func
(paren
id|isdn_net_dev
op_star
id|idev
)paren
(brace
r_if
c_cond
(paren
id|atomic_read
c_func
(paren
op_amp
id|idev-&gt;frame_cnt
)paren
OL
id|ISDN_NET_MAX_QUEUE_LENGTH
)paren
r_return
l_int|0
suffix:semicolon
r_else
r_return
l_int|1
suffix:semicolon
)brace
multiline_comment|/*&n; * For the given net device, this will get a non-busy channel out of the&n; * corresponding bundle. The returned channel is locked.&n; */
r_static
r_inline
id|isdn_net_dev
op_star
DECL|function|isdn_net_get_locked_dev
id|isdn_net_get_locked_dev
c_func
(paren
id|isdn_net_local
op_star
id|mlp
)paren
(brace
r_int
r_int
id|flags
suffix:semicolon
id|isdn_net_dev
op_star
id|idev
suffix:semicolon
id|spin_lock_irqsave
c_func
(paren
op_amp
id|mlp-&gt;online_lock
comma
id|flags
)paren
suffix:semicolon
id|list_for_each_entry
c_func
(paren
id|idev
comma
op_amp
id|mlp-&gt;online
comma
id|online
)paren
(brace
id|spin_lock_bh
c_func
(paren
op_amp
id|idev-&gt;xmit_lock
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|isdn_net_dev_busy
c_func
(paren
id|idev
)paren
)paren
(brace
multiline_comment|/* point the head to next online channel */
id|list_del
c_func
(paren
op_amp
id|mlp-&gt;online
)paren
suffix:semicolon
id|list_add
c_func
(paren
op_amp
id|mlp-&gt;online
comma
op_amp
id|idev-&gt;online
)paren
suffix:semicolon
r_goto
id|found
suffix:semicolon
)brace
id|spin_unlock_bh
c_func
(paren
op_amp
id|idev-&gt;xmit_lock
)paren
suffix:semicolon
)brace
id|idev
op_assign
l_int|NULL
suffix:semicolon
id|found
suffix:colon
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|mlp-&gt;online_lock
comma
id|flags
)paren
suffix:semicolon
r_return
id|idev
suffix:semicolon
)brace
multiline_comment|/*&n; * add a channel to a bundle&n; */
r_static
r_inline
r_void
DECL|function|isdn_net_add_to_bundle
id|isdn_net_add_to_bundle
c_func
(paren
id|isdn_net_local
op_star
id|mlp
comma
id|isdn_net_dev
op_star
id|idev
)paren
(brace
r_int
r_int
id|flags
suffix:semicolon
id|spin_lock_irqsave
c_func
(paren
op_amp
id|mlp-&gt;online_lock
comma
id|flags
)paren
suffix:semicolon
id|list_add
c_func
(paren
op_amp
id|idev-&gt;online
comma
op_amp
id|mlp-&gt;online
)paren
suffix:semicolon
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|mlp-&gt;online_lock
comma
id|flags
)paren
suffix:semicolon
)brace
multiline_comment|/*&n; * remove a channel from the bundle it belongs to&n; */
r_static
r_inline
r_void
DECL|function|isdn_net_rm_from_bundle
id|isdn_net_rm_from_bundle
c_func
(paren
id|isdn_net_dev
op_star
id|idev
)paren
(brace
id|isdn_net_local
op_star
id|mlp
op_assign
id|idev-&gt;mlp
suffix:semicolon
r_int
r_int
id|flags
suffix:semicolon
id|spin_lock_irqsave
c_func
(paren
op_amp
id|mlp-&gt;online_lock
comma
id|flags
)paren
suffix:semicolon
id|list_del
c_func
(paren
op_amp
id|idev-&gt;online
)paren
suffix:semicolon
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|mlp-&gt;online_lock
comma
id|flags
)paren
suffix:semicolon
)brace
multiline_comment|/*&n; * wake up the network -&gt; net_device queue.&n; * For slaves, wake the corresponding master interface.&n; */
r_static
r_inline
r_void
DECL|function|isdn_net_dev_wake_queue
id|isdn_net_dev_wake_queue
c_func
(paren
id|isdn_net_dev
op_star
id|idev
)paren
(brace
id|netif_wake_queue
c_func
(paren
op_amp
id|idev-&gt;mlp-&gt;dev
)paren
suffix:semicolon
)brace
r_static
r_inline
r_int
DECL|function|isdn_net_bound
id|isdn_net_bound
c_func
(paren
id|isdn_net_dev
op_star
id|idev
)paren
(brace
r_return
id|idev-&gt;isdn_slot
op_ge
l_int|0
suffix:semicolon
)brace
r_static
r_inline
r_int
DECL|function|put_u8
id|put_u8
c_func
(paren
r_int
r_char
op_star
id|p
comma
id|u8
id|x
)paren
(brace
op_star
id|p
op_assign
id|x
suffix:semicolon
r_return
l_int|1
suffix:semicolon
)brace
r_static
r_inline
r_int
DECL|function|put_u16
id|put_u16
c_func
(paren
r_int
r_char
op_star
id|p
comma
id|u16
id|x
)paren
(brace
op_star
(paren
(paren
id|u16
op_star
)paren
id|p
)paren
op_assign
id|htons
c_func
(paren
id|x
)paren
suffix:semicolon
r_return
l_int|2
suffix:semicolon
)brace
r_static
r_inline
r_int
DECL|function|put_u32
id|put_u32
c_func
(paren
r_int
r_char
op_star
id|p
comma
id|u32
id|x
)paren
(brace
op_star
(paren
(paren
id|u32
op_star
)paren
id|p
)paren
op_assign
id|htonl
c_func
(paren
id|x
)paren
suffix:semicolon
r_return
l_int|4
suffix:semicolon
)brace
r_static
r_inline
r_int
DECL|function|get_u8
id|get_u8
c_func
(paren
r_int
r_char
op_star
id|p
comma
id|u8
op_star
id|x
)paren
(brace
op_star
id|x
op_assign
op_star
id|p
suffix:semicolon
r_return
l_int|1
suffix:semicolon
)brace
r_static
r_inline
r_int
DECL|function|get_u16
id|get_u16
c_func
(paren
r_int
r_char
op_star
id|p
comma
id|u16
op_star
id|x
)paren
(brace
op_star
id|x
op_assign
id|ntohs
c_func
(paren
op_star
(paren
(paren
id|u16
op_star
)paren
id|p
)paren
)paren
suffix:semicolon
r_return
l_int|2
suffix:semicolon
)brace
r_static
r_inline
r_int
DECL|function|get_u32
id|get_u32
c_func
(paren
r_int
r_char
op_star
id|p
comma
id|u32
op_star
id|x
)paren
(brace
op_star
id|x
op_assign
id|ntohl
c_func
(paren
op_star
(paren
(paren
id|u32
op_star
)paren
id|p
)paren
)paren
suffix:semicolon
r_return
l_int|4
suffix:semicolon
)brace
eof
