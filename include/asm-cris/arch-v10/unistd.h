macro_line|#ifndef _ASM_CRIS_ARCH_UNISTD_H_
DECL|macro|_ASM_CRIS_ARCH_UNISTD_H_
mdefine_line|#define _ASM_CRIS_ARCH_UNISTD_H_
multiline_comment|/* XXX - _foo needs to be __foo, while __NR_bar could be _NR_bar. */
multiline_comment|/*&n; * Don&squot;t remove the .ifnc tests; they are an insurance against&n; * any hard-to-spot gcc register allocation bugs.&n; */
DECL|macro|_syscall0
mdefine_line|#define _syscall0(type,name) &bslash;&n;type name(void) &bslash;&n;{ &bslash;&n;  register long __a __asm__ (&quot;r10&quot;); &bslash;&n;  register long __n_ __asm__ (&quot;r9&quot;) = (__NR_##name); &bslash;&n;  __asm__ __volatile__ (&quot;.ifnc %0%1,$r10$r9&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;.err&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;.endif&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;break 13&quot; &bslash;&n;&t;&t;&t;: &quot;=r&quot; (__a) &bslash;&n;&t;&t;&t;: &quot;r&quot; (__n_)); &bslash;&n;  if (__a &gt;= 0) &bslash;&n;     return (type) __a; &bslash;&n;  errno = -__a; &bslash;&n;  return (type) -1; &bslash;&n;}
DECL|macro|_syscall1
mdefine_line|#define _syscall1(type,name,type1,arg1) &bslash;&n;type name(type1 arg1) &bslash;&n;{ &bslash;&n;  register long __a __asm__ (&quot;r10&quot;) = (long) arg1; &bslash;&n;  register long __n_ __asm__ (&quot;r9&quot;) = (__NR_##name); &bslash;&n;  __asm__ __volatile__ (&quot;.ifnc %0%1,$r10$r9&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;.err&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;.endif&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;break 13&quot; &bslash;&n;&t;&t;&t;: &quot;=r&quot; (__a) &bslash;&n;&t;&t;&t;: &quot;r&quot; (__n_), &quot;0&quot; (__a)); &bslash;&n;  if (__a &gt;= 0) &bslash;&n;     return (type) __a; &bslash;&n;  errno = -__a; &bslash;&n;  return (type) -1; &bslash;&n;}
DECL|macro|_syscall2
mdefine_line|#define _syscall2(type,name,type1,arg1,type2,arg2) &bslash;&n;type name(type1 arg1,type2 arg2) &bslash;&n;{ &bslash;&n;  register long __a __asm__ (&quot;r10&quot;) = (long) arg1; &bslash;&n;  register long __b __asm__ (&quot;r11&quot;) = (long) arg2; &bslash;&n;  register long __n_ __asm__ (&quot;r9&quot;) = (__NR_##name); &bslash;&n;  __asm__ __volatile__ (&quot;.ifnc %0%1%3,$r10$r9$r11&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;.err&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;.endif&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;break 13&quot; &bslash;&n;&t;&t;&t;: &quot;=r&quot; (__a) &bslash;&n;&t;&t;&t;: &quot;r&quot; (__n_), &quot;0&quot; (__a), &quot;r&quot; (__b)); &bslash;&n;  if (__a &gt;= 0) &bslash;&n;     return (type) __a; &bslash;&n;  errno = -__a; &bslash;&n;  return (type) -1; &bslash;&n;}
DECL|macro|_syscall3
mdefine_line|#define _syscall3(type,name,type1,arg1,type2,arg2,type3,arg3) &bslash;&n;type name(type1 arg1,type2 arg2,type3 arg3) &bslash;&n;{ &bslash;&n;  register long __a __asm__ (&quot;r10&quot;) = (long) arg1; &bslash;&n;  register long __b __asm__ (&quot;r11&quot;) = (long) arg2; &bslash;&n;  register long __c __asm__ (&quot;r12&quot;) = (long) arg3; &bslash;&n;  register long __n_ __asm__ (&quot;r9&quot;) = (__NR_##name); &bslash;&n;  __asm__ __volatile__ (&quot;.ifnc %0%1%3%4,$r10$r9$r11$r12&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;.err&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;.endif&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;break 13&quot; &bslash;&n;&t;&t;&t;: &quot;=r&quot; (__a) &bslash;&n;&t;&t;&t;: &quot;r&quot; (__n_), &quot;0&quot; (__a), &quot;r&quot; (__b), &quot;r&quot; (__c)); &bslash;&n;  if (__a &gt;= 0) &bslash;&n;     return (type) __a; &bslash;&n;  errno = -__a; &bslash;&n;  return (type) -1; &bslash;&n;}
DECL|macro|_syscall4
mdefine_line|#define _syscall4(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4) &bslash;&n;type name (type1 arg1, type2 arg2, type3 arg3, type4 arg4) &bslash;&n;{ &bslash;&n;  register long __a __asm__ (&quot;r10&quot;) = (long) arg1; &bslash;&n;  register long __b __asm__ (&quot;r11&quot;) = (long) arg2; &bslash;&n;  register long __c __asm__ (&quot;r12&quot;) = (long) arg3; &bslash;&n;  register long __d __asm__ (&quot;r13&quot;) = (long) arg4; &bslash;&n;  register long __n_ __asm__ (&quot;r9&quot;) = (__NR_##name); &bslash;&n;  __asm__ __volatile__ (&quot;.ifnc %0%1%3%4%5,$r10$r9$r11$r12$r13&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;.err&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;.endif&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;break 13&quot; &bslash;&n;&t;&t;&t;: &quot;=r&quot; (__a) &bslash;&n;&t;&t;&t;: &quot;r&quot; (__n_), &quot;0&quot; (__a), &quot;r&quot; (__b), &bslash;&n;&t;&t;&t;  &quot;r&quot; (__c), &quot;r&quot; (__d)); &bslash;&n;  if (__a &gt;= 0) &bslash;&n;     return (type) __a; &bslash;&n;  errno = -__a; &bslash;&n;  return (type) -1; &bslash;&n;} 
DECL|macro|_syscall5
mdefine_line|#define _syscall5(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, &bslash;&n;&t;  type5,arg5) &bslash;&n;type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5) &bslash;&n;{ &bslash;&n;  register long __a __asm__ (&quot;r10&quot;) = (long) arg1; &bslash;&n;  register long __b __asm__ (&quot;r11&quot;) = (long) arg2; &bslash;&n;  register long __c __asm__ (&quot;r12&quot;) = (long) arg3; &bslash;&n;  register long __d __asm__ (&quot;r13&quot;) = (long) arg4; &bslash;&n;  register long __n_ __asm__ (&quot;r9&quot;) = (__NR_##name); &bslash;&n;  __asm__ __volatile__ (&quot;.ifnc %0%1%3%4%5,$r10$r9$r11$r12$r13&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;.err&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;.endif&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;move %6,$mof&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;break 13&quot; &bslash;&n;&t;&t;&t;: &quot;=r&quot; (__a) &bslash;&n;&t;&t;&t;: &quot;r&quot; (__n_), &quot;0&quot; (__a), &quot;r&quot; (__b), &bslash;&n;&t;&t;&t;  &quot;r&quot; (__c), &quot;r&quot; (__d), &quot;g&quot; (arg5)); &bslash;&n;  if (__a &gt;= 0) &bslash;&n;     return (type) __a; &bslash;&n;  errno = -__a; &bslash;&n;  return (type) -1; &bslash;&n;}
DECL|macro|_syscall6
mdefine_line|#define _syscall6(type,name,type1,arg1,type2,arg2,type3,arg3,type4,arg4, &bslash;&n;&t;  type5,arg5,type6,arg6) &bslash;&n;type name (type1 arg1,type2 arg2,type3 arg3,type4 arg4,type5 arg5,type6 arg6) &bslash;&n;{ &bslash;&n;  register long __a __asm__ (&quot;r10&quot;) = (long) arg1; &bslash;&n;  register long __b __asm__ (&quot;r11&quot;) = (long) arg2; &bslash;&n;  register long __c __asm__ (&quot;r12&quot;) = (long) arg3; &bslash;&n;  register long __d __asm__ (&quot;r13&quot;) = (long) arg4; &bslash;&n;  register long __n_ __asm__ (&quot;r9&quot;) = (__NR_##name); &bslash;&n;  __asm__ __volatile__ (&quot;.ifnc %0%1%3%4%5,$r10$r9$r11$r12$r13&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;.err&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;.endif&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;move %6,$mof&bslash;n&bslash;tmove %7,$srp&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&t;&quot;break 13&quot; &bslash;&n;&t;&t;&t;: &quot;=r&quot; (__a) &bslash;&n;&t;&t;&t;: &quot;r&quot; (__n_), &quot;0&quot; (__a), &quot;r&quot; (__b), &bslash;&n;&t;&t;&t;  &quot;r&quot; (__c), &quot;r&quot; (__d), &quot;g&quot; (arg5), &quot;g&quot; (arg6)&bslash;&n;&t;&t;&t;: &quot;srp&quot;); &bslash;&n;  if (__a &gt;= 0) &bslash;&n;     return (type) __a; &bslash;&n;  errno = -__a; &bslash;&n;  return (type) -1; &bslash;&n;}
macro_line|#endif
eof
