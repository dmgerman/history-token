multiline_comment|/*&n; *  include/asm-i386/mach-default/mach_traps.h&n; *&n; *  Machine specific NMI handling for generic.&n; *  Split out from traps.c by Osamu Tomita &lt;tomita@cinet.co.jp&gt;&n; */
macro_line|#ifndef _MACH_TRAPS_H
DECL|macro|_MACH_TRAPS_H
mdefine_line|#define _MACH_TRAPS_H
macro_line|#include &lt;asm/mc146818rtc.h&gt;
DECL|function|clear_mem_error
r_static
r_inline
r_void
id|clear_mem_error
c_func
(paren
r_int
r_char
id|reason
)paren
(brace
id|reason
op_assign
(paren
id|reason
op_amp
l_int|0xf
)paren
op_or
l_int|4
suffix:semicolon
id|outb
c_func
(paren
id|reason
comma
l_int|0x61
)paren
suffix:semicolon
)brace
DECL|function|get_nmi_reason
r_static
r_inline
r_int
r_char
id|get_nmi_reason
c_func
(paren
r_void
)paren
(brace
r_return
id|inb
c_func
(paren
l_int|0x61
)paren
suffix:semicolon
)brace
DECL|function|reassert_nmi
r_static
r_inline
r_void
id|reassert_nmi
c_func
(paren
r_void
)paren
(brace
r_int
id|old_reg
op_assign
op_minus
l_int|1
suffix:semicolon
r_if
c_cond
(paren
id|do_i_have_lock_cmos
c_func
(paren
)paren
)paren
id|old_reg
op_assign
id|current_lock_cmos_reg
c_func
(paren
)paren
suffix:semicolon
r_else
id|lock_cmos
c_func
(paren
l_int|0
)paren
suffix:semicolon
multiline_comment|/* register doesn&squot;t matter here */
id|outb
c_func
(paren
l_int|0x8f
comma
l_int|0x70
)paren
suffix:semicolon
id|inb
c_func
(paren
l_int|0x71
)paren
suffix:semicolon
multiline_comment|/* dummy */
id|outb
c_func
(paren
l_int|0x0f
comma
l_int|0x70
)paren
suffix:semicolon
id|inb
c_func
(paren
l_int|0x71
)paren
suffix:semicolon
multiline_comment|/* dummy */
r_if
c_cond
(paren
id|old_reg
op_ge
l_int|0
)paren
id|outb
c_func
(paren
id|old_reg
comma
l_int|0x70
)paren
suffix:semicolon
r_else
id|unlock_cmos
c_func
(paren
)paren
suffix:semicolon
)brace
macro_line|#endif /* !_MACH_TRAPS_H */
eof
