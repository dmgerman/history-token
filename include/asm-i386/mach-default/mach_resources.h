multiline_comment|/*&n; *  include/asm-i386/mach-default/mach_resources.h&n; *&n; *  Machine specific resource allocation for generic.&n; *  Split out from setup.c by Osamu Tomita &lt;tomita@cinet.co.jp&gt;&n; */
macro_line|#ifndef _MACH_RESOURCES_H
DECL|macro|_MACH_RESOURCES_H
mdefine_line|#define _MACH_RESOURCES_H
DECL|variable|standard_io_resources
r_struct
id|resource
id|standard_io_resources
(braket
)braket
op_assign
(brace
(brace
l_string|&quot;dma1&quot;
comma
l_int|0x00
comma
l_int|0x1f
comma
id|IORESOURCE_BUSY
)brace
comma
(brace
l_string|&quot;pic1&quot;
comma
l_int|0x20
comma
l_int|0x3f
comma
id|IORESOURCE_BUSY
)brace
comma
(brace
l_string|&quot;timer&quot;
comma
l_int|0x40
comma
l_int|0x5f
comma
id|IORESOURCE_BUSY
)brace
comma
(brace
l_string|&quot;keyboard&quot;
comma
l_int|0x60
comma
l_int|0x6f
comma
id|IORESOURCE_BUSY
)brace
comma
(brace
l_string|&quot;dma page reg&quot;
comma
l_int|0x80
comma
l_int|0x8f
comma
id|IORESOURCE_BUSY
)brace
comma
(brace
l_string|&quot;pic2&quot;
comma
l_int|0xa0
comma
l_int|0xbf
comma
id|IORESOURCE_BUSY
)brace
comma
(brace
l_string|&quot;dma2&quot;
comma
l_int|0xc0
comma
l_int|0xdf
comma
id|IORESOURCE_BUSY
)brace
comma
(brace
l_string|&quot;fpu&quot;
comma
l_int|0xf0
comma
l_int|0xff
comma
id|IORESOURCE_BUSY
)brace
)brace
suffix:semicolon
macro_line|#ifdef CONFIG_MELAN
id|standard_io_resources
(braket
l_int|1
)braket
op_assign
(brace
l_string|&quot;pic1&quot;
comma
l_int|0x20
comma
l_int|0x21
comma
id|IORESOURCE_BUSY
)brace
suffix:semicolon
id|standard_io_resources
(braket
l_int|5
)braket
op_assign
(brace
l_string|&quot;pic2&quot;
comma
l_int|0xa0
comma
l_int|0xa1
comma
id|IORESOURCE_BUSY
)brace
suffix:semicolon
macro_line|#endif
DECL|macro|STANDARD_IO_RESOURCES
mdefine_line|#define STANDARD_IO_RESOURCES (sizeof(standard_io_resources)/sizeof(struct resource))
DECL|variable|vram_resource
r_static
r_struct
id|resource
id|vram_resource
op_assign
(brace
l_string|&quot;Video RAM area&quot;
comma
l_int|0xa0000
comma
l_int|0xbffff
comma
id|IORESOURCE_BUSY
)brace
suffix:semicolon
multiline_comment|/* System ROM resources */
DECL|macro|MAXROMS
mdefine_line|#define MAXROMS 6
DECL|variable|rom_resources
r_static
r_struct
id|resource
id|rom_resources
(braket
id|MAXROMS
)braket
op_assign
(brace
(brace
l_string|&quot;System ROM&quot;
comma
l_int|0xF0000
comma
l_int|0xFFFFF
comma
id|IORESOURCE_BUSY
)brace
comma
(brace
l_string|&quot;Video ROM&quot;
comma
l_int|0xc0000
comma
l_int|0xc7fff
comma
id|IORESOURCE_BUSY
)brace
)brace
suffix:semicolon
DECL|macro|romsignature
mdefine_line|#define romsignature(x) (*(unsigned short *)(x) == 0xaa55)
DECL|function|probe_video_rom
r_static
r_inline
r_void
id|probe_video_rom
c_func
(paren
r_int
id|roms
)paren
(brace
r_int
r_int
id|base
suffix:semicolon
r_int
r_char
op_star
id|romstart
suffix:semicolon
multiline_comment|/* Video ROM is standard at C000:0000 - C7FF:0000, check signature */
r_for
c_loop
(paren
id|base
op_assign
l_int|0xC0000
suffix:semicolon
id|base
OL
l_int|0xE0000
suffix:semicolon
id|base
op_add_assign
l_int|2048
)paren
(brace
id|romstart
op_assign
id|isa_bus_to_virt
c_func
(paren
id|base
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|romsignature
c_func
(paren
id|romstart
)paren
)paren
r_continue
suffix:semicolon
id|request_resource
c_func
(paren
op_amp
id|iomem_resource
comma
id|rom_resources
op_plus
id|roms
)paren
suffix:semicolon
id|roms
op_increment
suffix:semicolon
r_break
suffix:semicolon
)brace
)brace
DECL|function|probe_extension_roms
r_static
r_inline
r_void
id|probe_extension_roms
c_func
(paren
r_int
id|roms
)paren
(brace
r_int
r_int
id|base
suffix:semicolon
r_int
r_char
op_star
id|romstart
suffix:semicolon
multiline_comment|/* Extension roms at C800:0000 - DFFF:0000 */
r_for
c_loop
(paren
id|base
op_assign
l_int|0xC8000
suffix:semicolon
id|base
OL
l_int|0xE0000
suffix:semicolon
id|base
op_add_assign
l_int|2048
)paren
(brace
r_int
r_int
id|length
suffix:semicolon
id|romstart
op_assign
id|isa_bus_to_virt
c_func
(paren
id|base
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|romsignature
c_func
(paren
id|romstart
)paren
)paren
r_continue
suffix:semicolon
id|length
op_assign
id|romstart
(braket
l_int|2
)braket
op_star
l_int|512
suffix:semicolon
r_if
c_cond
(paren
id|length
)paren
(brace
r_int
r_int
id|i
suffix:semicolon
r_int
r_char
id|chksum
suffix:semicolon
id|chksum
op_assign
l_int|0
suffix:semicolon
r_for
c_loop
(paren
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|length
suffix:semicolon
id|i
op_increment
)paren
id|chksum
op_add_assign
id|romstart
(braket
id|i
)braket
suffix:semicolon
multiline_comment|/* Good checksum? */
r_if
c_cond
(paren
op_logical_neg
id|chksum
)paren
(brace
id|rom_resources
(braket
id|roms
)braket
dot
id|start
op_assign
id|base
suffix:semicolon
id|rom_resources
(braket
id|roms
)braket
dot
id|end
op_assign
id|base
op_plus
id|length
op_minus
l_int|1
suffix:semicolon
id|rom_resources
(braket
id|roms
)braket
dot
id|name
op_assign
l_string|&quot;Extension ROM&quot;
suffix:semicolon
id|rom_resources
(braket
id|roms
)braket
dot
id|flags
op_assign
id|IORESOURCE_BUSY
suffix:semicolon
id|request_resource
c_func
(paren
op_amp
id|iomem_resource
comma
id|rom_resources
op_plus
id|roms
)paren
suffix:semicolon
id|roms
op_increment
suffix:semicolon
r_if
c_cond
(paren
id|roms
op_ge
id|MAXROMS
)paren
r_return
suffix:semicolon
)brace
)brace
)brace
multiline_comment|/* Final check for motherboard extension rom at E000:0000 */
id|base
op_assign
l_int|0xE0000
suffix:semicolon
id|romstart
op_assign
id|isa_bus_to_virt
c_func
(paren
id|base
)paren
suffix:semicolon
r_if
c_cond
(paren
id|romsignature
c_func
(paren
id|romstart
)paren
)paren
(brace
id|rom_resources
(braket
id|roms
)braket
dot
id|start
op_assign
id|base
suffix:semicolon
id|rom_resources
(braket
id|roms
)braket
dot
id|end
op_assign
id|base
op_plus
l_int|65535
suffix:semicolon
id|rom_resources
(braket
id|roms
)braket
dot
id|name
op_assign
l_string|&quot;Extension ROM&quot;
suffix:semicolon
id|rom_resources
(braket
id|roms
)braket
dot
id|flags
op_assign
id|IORESOURCE_BUSY
suffix:semicolon
id|request_resource
c_func
(paren
op_amp
id|iomem_resource
comma
id|rom_resources
op_plus
id|roms
)paren
suffix:semicolon
)brace
)brace
DECL|function|request_graphics_resource
r_static
r_inline
r_void
id|request_graphics_resource
c_func
(paren
r_void
)paren
(brace
id|request_resource
c_func
(paren
op_amp
id|iomem_resource
comma
op_amp
id|vram_resource
)paren
suffix:semicolon
)brace
macro_line|#endif /* !_MACH_RESOURCES_H */
eof
