macro_line|#ifndef __ASM_MACH_MPPARSE_H
DECL|macro|__ASM_MACH_MPPARSE_H
mdefine_line|#define __ASM_MACH_MPPARSE_H
r_extern
r_int
id|use_cyclone
suffix:semicolon
DECL|function|mpc_oem_bus_info
r_static
r_inline
r_void
id|mpc_oem_bus_info
c_func
(paren
r_struct
id|mpc_config_bus
op_star
id|m
comma
r_char
op_star
id|name
comma
r_struct
id|mpc_config_translation
op_star
id|translation
)paren
(brace
id|Dprintk
c_func
(paren
l_string|&quot;Bus #%d is %s&bslash;n&quot;
comma
id|m-&gt;mpc_busid
comma
id|name
)paren
suffix:semicolon
)brace
DECL|function|mpc_oem_pci_bus
r_static
r_inline
r_void
id|mpc_oem_pci_bus
c_func
(paren
r_struct
id|mpc_config_bus
op_star
id|m
comma
r_struct
id|mpc_config_translation
op_star
id|translation
)paren
(brace
)brace
DECL|function|mps_oem_check
r_static
r_inline
r_int
id|mps_oem_check
c_func
(paren
r_struct
id|mp_config_table
op_star
id|mpc
comma
r_char
op_star
id|oem
comma
r_char
op_star
id|productid
)paren
(brace
r_if
c_cond
(paren
op_logical_neg
id|strncmp
c_func
(paren
id|oem
comma
l_string|&quot;IBM ENSW&quot;
comma
l_int|8
)paren
op_logical_and
(paren
op_logical_neg
id|strncmp
c_func
(paren
id|productid
comma
l_string|&quot;VIGIL SMP&quot;
comma
l_int|9
)paren
op_logical_or
op_logical_neg
id|strncmp
c_func
(paren
id|productid
comma
l_string|&quot;EXA&quot;
comma
l_int|3
)paren
op_logical_or
op_logical_neg
id|strncmp
c_func
(paren
id|productid
comma
l_string|&quot;RUTHLESS SMP&quot;
comma
l_int|12
)paren
)paren
)paren
(brace
macro_line|#ifndef CONFIG_X86_GENERICARCH
id|x86_summit
op_assign
l_int|1
suffix:semicolon
macro_line|#endif
id|use_cyclone
op_assign
l_int|1
suffix:semicolon
multiline_comment|/*enable cyclone-timer*/
r_return
l_int|1
suffix:semicolon
)brace
r_return
l_int|0
suffix:semicolon
)brace
multiline_comment|/* Hook from generic ACPI tables.c */
DECL|function|acpi_madt_oem_check
r_static
r_inline
r_int
id|acpi_madt_oem_check
c_func
(paren
r_char
op_star
id|oem_id
comma
r_char
op_star
id|oem_table_id
)paren
(brace
r_if
c_cond
(paren
op_logical_neg
id|strncmp
c_func
(paren
id|oem_id
comma
l_string|&quot;IBM&quot;
comma
l_int|3
)paren
op_logical_and
(paren
op_logical_neg
id|strncmp
c_func
(paren
id|oem_table_id
comma
l_string|&quot;SERVIGIL&quot;
comma
l_int|8
)paren
op_logical_or
op_logical_neg
id|strncmp
c_func
(paren
id|oem_table_id
comma
l_string|&quot;EXA&quot;
comma
l_int|3
)paren
)paren
)paren
(brace
macro_line|#ifndef CONFIG_X86_GENERICARCH
id|x86_summit
op_assign
l_int|1
suffix:semicolon
macro_line|#endif
id|use_cyclone
op_assign
l_int|1
suffix:semicolon
multiline_comment|/*enable cyclone-timer*/
r_return
l_int|1
suffix:semicolon
)brace
r_return
l_int|0
suffix:semicolon
)brace
macro_line|#endif /* __ASM_MACH_MPPARSE_H */
eof
