macro_line|#ifndef _I386_KDEBUG_H
DECL|macro|_I386_KDEBUG_H
mdefine_line|#define _I386_KDEBUG_H 1
multiline_comment|/*&n; * Aug-05 2004 Ported by Prasanna S Panchamukhi &lt;prasanna@in.ibm.com&gt;&n; * from x86_64 architecture.&n; */
macro_line|#include &lt;linux/notifier.h&gt;
r_struct
id|pt_regs
suffix:semicolon
DECL|struct|die_args
r_struct
id|die_args
(brace
DECL|member|regs
r_struct
id|pt_regs
op_star
id|regs
suffix:semicolon
DECL|member|str
r_const
r_char
op_star
id|str
suffix:semicolon
DECL|member|err
r_int
id|err
suffix:semicolon
DECL|member|trapnr
r_int
id|trapnr
suffix:semicolon
DECL|member|signr
r_int
id|signr
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* Note - you should never unregister because that can race with NMIs.&n;   If you really want to do it first unregister - then synchronize_kernel - then free.&n;  */
r_int
id|register_die_notifier
c_func
(paren
r_struct
id|notifier_block
op_star
id|nb
)paren
suffix:semicolon
r_extern
r_struct
id|notifier_block
op_star
id|i386die_chain
suffix:semicolon
multiline_comment|/* Grossly misnamed. */
DECL|enum|die_val
r_enum
id|die_val
(brace
DECL|enumerator|DIE_OOPS
id|DIE_OOPS
op_assign
l_int|1
comma
DECL|enumerator|DIE_INT3
id|DIE_INT3
comma
DECL|enumerator|DIE_DEBUG
id|DIE_DEBUG
comma
DECL|enumerator|DIE_PANIC
id|DIE_PANIC
comma
DECL|enumerator|DIE_NMI
id|DIE_NMI
comma
DECL|enumerator|DIE_DIE
id|DIE_DIE
comma
DECL|enumerator|DIE_NMIWATCHDOG
id|DIE_NMIWATCHDOG
comma
DECL|enumerator|DIE_KERNELDEBUG
id|DIE_KERNELDEBUG
comma
DECL|enumerator|DIE_TRAP
id|DIE_TRAP
comma
DECL|enumerator|DIE_GPF
id|DIE_GPF
comma
DECL|enumerator|DIE_CALL
id|DIE_CALL
comma
DECL|enumerator|DIE_NMI_IPI
id|DIE_NMI_IPI
comma
DECL|enumerator|DIE_PAGE_FAULT
id|DIE_PAGE_FAULT
comma
)brace
suffix:semicolon
DECL|function|notify_die
r_static
r_inline
r_int
id|notify_die
c_func
(paren
r_enum
id|die_val
id|val
comma
r_char
op_star
id|str
comma
r_struct
id|pt_regs
op_star
id|regs
comma
r_int
id|err
comma
r_int
id|trap
comma
r_int
id|sig
)paren
(brace
r_struct
id|die_args
id|args
op_assign
(brace
dot
id|regs
op_assign
id|regs
comma
dot
id|str
op_assign
id|str
comma
dot
id|err
op_assign
id|err
comma
dot
id|trapnr
op_assign
id|trap
comma
dot
id|signr
op_assign
id|sig
)brace
suffix:semicolon
r_return
id|notifier_call_chain
c_func
(paren
op_amp
id|i386die_chain
comma
id|val
comma
op_amp
id|args
)paren
suffix:semicolon
)brace
macro_line|#endif
eof
