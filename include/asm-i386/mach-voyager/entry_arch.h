multiline_comment|/* -*- mode: c; c-basic-offset: 8 -*- */
multiline_comment|/* Copyright (C) 2002&n; *&n; * Author: James.Bottomley@HansenPartnership.com&n; *&n; * linux/arch/i386/voyager/entry_arch.h&n; *&n; * This file builds the VIC and QIC CPI gates&n; */
multiline_comment|/* initialise the voyager interrupt gates &n; *&n; * This uses the macros in irq.h to set up assembly jump gates.  The&n; * calls are then redirected to the same routine with smp_ prefixed */
id|BUILD_INTERRUPT
c_func
(paren
id|vic_sys_interrupt
comma
id|VIC_SYS_INT
)paren
id|BUILD_INTERRUPT
c_func
(paren
id|vic_cmn_interrupt
comma
id|VIC_CMN_INT
)paren
id|BUILD_INTERRUPT
c_func
(paren
id|vic_cpi_interrupt
comma
id|VIC_CPI_LEVEL0
)paren
suffix:semicolon
multiline_comment|/* do all the QIC interrupts */
id|BUILD_INTERRUPT
c_func
(paren
id|qic_timer_interrupt
comma
id|QIC_TIMER_CPI
)paren
suffix:semicolon
DECL|variable|BUILD_INTERRUPT
id|BUILD_INTERRUPT
c_func
(paren
id|qic_invalidate_interrupt
comma
id|QIC_INVALIDATE_CPI
)paren
suffix:semicolon
id|BUILD_INTERRUPT
c_func
(paren
id|qic_reschedule_interrupt
comma
id|QIC_RESCHEDULE_CPI
)paren
suffix:semicolon
id|BUILD_INTERRUPT
c_func
(paren
id|qic_enable_irq_interrupt
comma
id|QIC_ENABLE_IRQ_CPI
)paren
suffix:semicolon
id|BUILD_INTERRUPT
c_func
(paren
id|qic_call_function_interrupt
comma
id|QIC_CALL_FUNCTION_CPI
)paren
suffix:semicolon
eof
