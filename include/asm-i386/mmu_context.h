macro_line|#ifndef __I386_MMU_CONTEXT_H
DECL|macro|__I386_MMU_CONTEXT_H
mdefine_line|#define __I386_MMU_CONTEXT_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;asm/desc.h&gt;
macro_line|#include &lt;asm/atomic.h&gt;
macro_line|#include &lt;asm/pgalloc.h&gt;
multiline_comment|/*&n; * Every architecture must define this function. It&squot;s the fastest&n; * way of searching a 168-bit bitmap where the first 128 bits are&n; * unlikely to be set. It&squot;s guaranteed that at least one of the 168&n; * bits is cleared.&n; */
macro_line|#if MAX_RT_PRIO != 128 || MAX_PRIO != 168
macro_line|# error update this function.
macro_line|#endif
DECL|function|sched_find_first_zero_bit
r_static
r_inline
r_int
id|sched_find_first_zero_bit
c_func
(paren
r_char
op_star
id|bitmap
)paren
(brace
r_int
r_int
op_star
id|b
op_assign
(paren
r_int
r_int
op_star
)paren
id|bitmap
suffix:semicolon
r_int
r_int
id|rt
suffix:semicolon
id|rt
op_assign
id|b
(braket
l_int|0
)braket
op_amp
id|b
(braket
l_int|1
)braket
op_amp
id|b
(braket
l_int|2
)braket
op_amp
id|b
(braket
l_int|3
)braket
suffix:semicolon
r_if
c_cond
(paren
id|unlikely
c_func
(paren
id|rt
op_ne
l_int|0xffffffff
)paren
)paren
r_return
id|find_first_zero_bit
c_func
(paren
id|bitmap
comma
id|MAX_RT_PRIO
)paren
suffix:semicolon
r_if
c_cond
(paren
id|b
(braket
l_int|4
)braket
op_ne
op_complement
l_int|0
)paren
r_return
id|ffz
c_func
(paren
id|b
(braket
l_int|4
)braket
)paren
op_plus
id|MAX_RT_PRIO
suffix:semicolon
r_return
id|ffz
c_func
(paren
id|b
(braket
l_int|5
)braket
)paren
op_plus
l_int|32
op_plus
id|MAX_RT_PRIO
suffix:semicolon
)brace
multiline_comment|/*&n; * possibly do the LDT unload here?&n; */
DECL|macro|destroy_context
mdefine_line|#define destroy_context(mm)&t;&t;do { } while(0)
DECL|macro|init_new_context
mdefine_line|#define init_new_context(tsk,mm)&t;0
macro_line|#ifdef CONFIG_SMP
DECL|function|enter_lazy_tlb
r_static
r_inline
r_void
id|enter_lazy_tlb
c_func
(paren
r_struct
id|mm_struct
op_star
id|mm
comma
r_struct
id|task_struct
op_star
id|tsk
comma
r_int
id|cpu
)paren
(brace
r_if
c_cond
(paren
id|cpu_tlbstate
(braket
id|cpu
)braket
dot
id|state
op_eq
id|TLBSTATE_OK
)paren
(brace
id|cpu_tlbstate
(braket
id|cpu
)braket
dot
id|state
op_assign
id|TLBSTATE_LAZY
suffix:semicolon
)brace
)brace
macro_line|#else
DECL|function|enter_lazy_tlb
r_static
r_inline
r_void
id|enter_lazy_tlb
c_func
(paren
r_struct
id|mm_struct
op_star
id|mm
comma
r_struct
id|task_struct
op_star
id|tsk
comma
r_int
id|cpu
)paren
(brace
)brace
macro_line|#endif
DECL|function|switch_mm
r_static
r_inline
r_void
id|switch_mm
c_func
(paren
r_struct
id|mm_struct
op_star
id|prev
comma
r_struct
id|mm_struct
op_star
id|next
comma
r_struct
id|task_struct
op_star
id|tsk
comma
r_int
id|cpu
)paren
(brace
r_if
c_cond
(paren
id|prev
op_ne
id|next
)paren
(brace
multiline_comment|/* stop flush ipis for the previous mm */
id|clear_bit
c_func
(paren
id|cpu
comma
op_amp
id|prev-&gt;cpu_vm_mask
)paren
suffix:semicolon
multiline_comment|/*&n;&t;&t; * Re-load LDT if necessary&n;&t;&t; */
r_if
c_cond
(paren
id|prev-&gt;context.segments
op_ne
id|next-&gt;context.segments
)paren
id|load_LDT
c_func
(paren
id|next
)paren
suffix:semicolon
macro_line|#ifdef CONFIG_SMP
id|cpu_tlbstate
(braket
id|cpu
)braket
dot
id|state
op_assign
id|TLBSTATE_OK
suffix:semicolon
id|cpu_tlbstate
(braket
id|cpu
)braket
dot
id|active_mm
op_assign
id|next
suffix:semicolon
macro_line|#endif
id|set_bit
c_func
(paren
id|cpu
comma
op_amp
id|next-&gt;cpu_vm_mask
)paren
suffix:semicolon
id|set_bit
c_func
(paren
id|cpu
comma
op_amp
id|next-&gt;context.cpuvalid
)paren
suffix:semicolon
multiline_comment|/* Re-load page tables */
id|asm
r_volatile
(paren
l_string|&quot;movl %0,%%cr3&quot;
suffix:colon
suffix:colon
l_string|&quot;r&quot;
(paren
id|__pa
c_func
(paren
id|next-&gt;pgd
)paren
)paren
)paren
suffix:semicolon
)brace
macro_line|#ifdef CONFIG_SMP
r_else
(brace
id|cpu_tlbstate
(braket
id|cpu
)braket
dot
id|state
op_assign
id|TLBSTATE_OK
suffix:semicolon
r_if
c_cond
(paren
id|cpu_tlbstate
(braket
id|cpu
)braket
dot
id|active_mm
op_ne
id|next
)paren
(brace
id|BUG
c_func
(paren
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
op_logical_neg
id|test_and_set_bit
c_func
(paren
id|cpu
comma
op_amp
id|next-&gt;cpu_vm_mask
)paren
)paren
(brace
multiline_comment|/* We were in lazy tlb mode and leave_mm disabled &n;&t;&t;&t; * tlb flush IPI delivery. We must flush our tlb.&n;&t;&t;&t; */
id|local_flush_tlb
c_func
(paren
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
op_logical_neg
id|test_and_set_bit
c_func
(paren
id|cpu
comma
op_amp
id|next-&gt;context.cpuvalid
)paren
)paren
id|load_LDT
c_func
(paren
id|next
)paren
suffix:semicolon
)brace
macro_line|#endif
)brace
DECL|macro|activate_mm
mdefine_line|#define activate_mm(prev, next) &bslash;&n;&t;switch_mm((prev),(next),NULL,smp_processor_id())
macro_line|#endif
eof
