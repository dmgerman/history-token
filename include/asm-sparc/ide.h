multiline_comment|/* $Id: ide.h,v 1.7 2002/01/16 20:58:40 davem Exp $&n; * ide.h: SPARC PCI specific IDE glue.&n; *&n; * Copyright (C) 1997  David S. Miller (davem@caip.rutgers.edu)&n; * Copyright (C) 1998  Eddie C. Dost   (ecd@skynet.be)&n; * Adaptation from sparc64 version to sparc by Pete Zaitcev.&n; */
macro_line|#ifndef _SPARC_IDE_H
DECL|macro|_SPARC_IDE_H
mdefine_line|#define _SPARC_IDE_H
macro_line|#ifdef __KERNEL__
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;asm/pgtable.h&gt;
macro_line|#include &lt;asm/io.h&gt;
macro_line|#include &lt;asm/psr.h&gt;
DECL|macro|MAX_HWIFS
macro_line|#undef  MAX_HWIFS
DECL|macro|MAX_HWIFS
mdefine_line|#define MAX_HWIFS&t;2
DECL|macro|IDE_ARCH_OBSOLETE_INIT
mdefine_line|#define IDE_ARCH_OBSOLETE_INIT
DECL|macro|ide_default_io_ctl
mdefine_line|#define ide_default_io_ctl(base)&t;((base) + 0x206) /* obsolete */
DECL|macro|__ide_insl
mdefine_line|#define __ide_insl(data_reg, buffer, wcount) &bslash;&n;&t;__ide_insw(data_reg, buffer, (wcount)&lt;&lt;1)
DECL|macro|__ide_outsl
mdefine_line|#define __ide_outsl(data_reg, buffer, wcount) &bslash;&n;&t;__ide_outsw(data_reg, buffer, (wcount)&lt;&lt;1)
multiline_comment|/* On sparc, I/O ports and MMIO registers are accessed identically.  */
DECL|macro|__ide_mm_insw
mdefine_line|#define __ide_mm_insw&t;__ide_insw
DECL|macro|__ide_mm_insl
mdefine_line|#define __ide_mm_insl&t;__ide_insl
DECL|macro|__ide_mm_outsw
mdefine_line|#define __ide_mm_outsw&t;__ide_outsw
DECL|macro|__ide_mm_outsl
mdefine_line|#define __ide_mm_outsl&t;__ide_outsl
DECL|function|__ide_insw
r_static
id|__inline__
r_void
id|__ide_insw
c_func
(paren
r_int
r_int
id|port
comma
r_void
op_star
id|dst
comma
r_int
r_int
id|count
)paren
(brace
r_volatile
r_int
r_int
op_star
id|data_port
suffix:semicolon
multiline_comment|/* unsigned long end = (unsigned long)dst + (count &lt;&lt; 1); */
multiline_comment|/* P3 */
id|u16
op_star
id|ps
op_assign
id|dst
suffix:semicolon
id|u32
op_star
id|pi
suffix:semicolon
id|data_port
op_assign
(paren
r_volatile
r_int
r_int
op_star
)paren
id|port
suffix:semicolon
r_if
c_cond
(paren
(paren
(paren
r_int
r_int
)paren
id|ps
)paren
op_amp
l_int|0x2
)paren
(brace
op_star
id|ps
op_increment
op_assign
op_star
id|data_port
suffix:semicolon
id|count
op_decrement
suffix:semicolon
)brace
id|pi
op_assign
(paren
id|u32
op_star
)paren
id|ps
suffix:semicolon
r_while
c_loop
(paren
id|count
op_ge
l_int|2
)paren
(brace
id|u32
id|w
suffix:semicolon
id|w
op_assign
(paren
op_star
id|data_port
)paren
op_lshift
l_int|16
suffix:semicolon
id|w
op_or_assign
(paren
op_star
id|data_port
)paren
suffix:semicolon
op_star
id|pi
op_increment
op_assign
id|w
suffix:semicolon
id|count
op_sub_assign
l_int|2
suffix:semicolon
)brace
id|ps
op_assign
(paren
id|u16
op_star
)paren
id|pi
suffix:semicolon
r_if
c_cond
(paren
id|count
)paren
(brace
op_star
id|ps
op_increment
op_assign
op_star
id|data_port
suffix:semicolon
)brace
multiline_comment|/* __flush_dcache_range((unsigned long)dst, end); */
multiline_comment|/* P3 see hme */
)brace
DECL|function|__ide_outsw
r_static
id|__inline__
r_void
id|__ide_outsw
c_func
(paren
r_int
r_int
id|port
comma
r_const
r_void
op_star
id|src
comma
r_int
r_int
id|count
)paren
(brace
r_volatile
r_int
r_int
op_star
id|data_port
suffix:semicolon
multiline_comment|/* unsigned long end = (unsigned long)src + (count &lt;&lt; 1); */
r_const
id|u16
op_star
id|ps
op_assign
id|src
suffix:semicolon
r_const
id|u32
op_star
id|pi
suffix:semicolon
id|data_port
op_assign
(paren
r_volatile
r_int
r_int
op_star
)paren
id|port
suffix:semicolon
r_if
c_cond
(paren
(paren
(paren
r_int
r_int
)paren
id|src
)paren
op_amp
l_int|0x2
)paren
(brace
op_star
id|data_port
op_assign
op_star
id|ps
op_increment
suffix:semicolon
id|count
op_decrement
suffix:semicolon
)brace
id|pi
op_assign
(paren
r_const
id|u32
op_star
)paren
id|ps
suffix:semicolon
r_while
c_loop
(paren
id|count
op_ge
l_int|2
)paren
(brace
id|u32
id|w
suffix:semicolon
id|w
op_assign
op_star
id|pi
op_increment
suffix:semicolon
op_star
id|data_port
op_assign
(paren
id|w
op_rshift
l_int|16
)paren
suffix:semicolon
op_star
id|data_port
op_assign
id|w
suffix:semicolon
id|count
op_sub_assign
l_int|2
suffix:semicolon
)brace
id|ps
op_assign
(paren
r_const
id|u16
op_star
)paren
id|pi
suffix:semicolon
r_if
c_cond
(paren
id|count
)paren
(brace
op_star
id|data_port
op_assign
op_star
id|ps
suffix:semicolon
)brace
multiline_comment|/* __flush_dcache_range((unsigned long)src, end); */
multiline_comment|/* P3 see hme */
)brace
macro_line|#endif /* __KERNEL__ */
macro_line|#endif /* _SPARC_IDE_H */
eof
