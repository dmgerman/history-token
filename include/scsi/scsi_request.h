macro_line|#ifndef _SCSI_SCSI_REQUEST_H
DECL|macro|_SCSI_SCSI_REQUEST_H
mdefine_line|#define _SCSI_SCSI_REQUEST_H
macro_line|#include &lt;scsi/scsi_cmnd.h&gt;
r_struct
id|request
suffix:semicolon
r_struct
id|scsi_cmnd
suffix:semicolon
r_struct
id|scsi_device
suffix:semicolon
r_struct
id|Scsi_Host
suffix:semicolon
multiline_comment|/*&n; * This is essentially a slimmed down version of Scsi_Cmnd.  The point of&n; * having this is that requests that are injected into the queue as result&n; * of things like ioctls and character devices shouldn&squot;t be using a&n; * Scsi_Cmnd until such a time that the command is actually at the head&n; * of the queue and being sent to the driver.&n; */
DECL|struct|scsi_request
r_struct
id|scsi_request
(brace
DECL|member|sr_magic
r_int
id|sr_magic
suffix:semicolon
DECL|member|sr_result
r_int
id|sr_result
suffix:semicolon
multiline_comment|/* Status code from lower level driver */
DECL|member|sr_sense_buffer
r_int
r_char
id|sr_sense_buffer
(braket
id|SCSI_SENSE_BUFFERSIZE
)braket
suffix:semicolon
multiline_comment|/* obtained by REQUEST SENSE&n;&t;&t;&t;&t;&t;&t; * when CHECK CONDITION is&n;&t;&t;&t;&t;&t;&t; * received on original command &n;&t;&t;&t;&t;&t;&t; * (auto-sense) */
DECL|member|sr_host
r_struct
id|Scsi_Host
op_star
id|sr_host
suffix:semicolon
DECL|member|sr_device
r_struct
id|scsi_device
op_star
id|sr_device
suffix:semicolon
DECL|member|sr_command
r_struct
id|scsi_cmnd
op_star
id|sr_command
suffix:semicolon
DECL|member|sr_request
r_struct
id|request
op_star
id|sr_request
suffix:semicolon
multiline_comment|/* A copy of the command we are&n;&t;&t;&t;&t;   working on */
DECL|member|sr_bufflen
r_int
id|sr_bufflen
suffix:semicolon
multiline_comment|/* Size of data buffer */
DECL|member|sr_buffer
r_void
op_star
id|sr_buffer
suffix:semicolon
multiline_comment|/* Data buffer */
DECL|member|sr_allowed
r_int
id|sr_allowed
suffix:semicolon
DECL|member|sr_data_direction
r_int
r_char
id|sr_data_direction
suffix:semicolon
DECL|member|sr_cmd_len
r_int
r_char
id|sr_cmd_len
suffix:semicolon
DECL|member|sr_cmnd
r_int
r_char
id|sr_cmnd
(braket
id|MAX_COMMAND_SIZE
)braket
suffix:semicolon
DECL|member|sr_done
r_void
(paren
op_star
id|sr_done
)paren
(paren
r_struct
id|scsi_cmnd
op_star
)paren
suffix:semicolon
multiline_comment|/* Mid-level done function */
DECL|member|sr_timeout_per_command
r_int
id|sr_timeout_per_command
suffix:semicolon
DECL|member|sr_use_sg
r_int
r_int
id|sr_use_sg
suffix:semicolon
multiline_comment|/* Number of pieces of scatter-gather */
DECL|member|sr_sglist_len
r_int
r_int
id|sr_sglist_len
suffix:semicolon
multiline_comment|/* size of malloc&squot;d scatter-gather list */
DECL|member|sr_underflow
r_int
id|sr_underflow
suffix:semicolon
multiline_comment|/* Return error if less than&n;&t;&t;&t;&t;   this amount is transferred */
DECL|member|upper_private_data
r_void
op_star
id|upper_private_data
suffix:semicolon
multiline_comment|/* reserved for owner (usually upper&n; &t;&t;&t;&t;&t;   level driver) of this request */
)brace
suffix:semicolon
r_extern
r_struct
id|scsi_request
op_star
id|scsi_allocate_request
c_func
(paren
r_struct
id|scsi_device
op_star
)paren
suffix:semicolon
r_extern
r_void
id|scsi_release_request
c_func
(paren
r_struct
id|scsi_request
op_star
)paren
suffix:semicolon
r_extern
r_void
id|scsi_wait_req
c_func
(paren
r_struct
id|scsi_request
op_star
comma
r_const
r_void
op_star
id|cmnd
comma
r_void
op_star
id|buffer
comma
r_int
id|bufflen
comma
r_int
id|timeout
comma
r_int
id|retries
)paren
suffix:semicolon
r_extern
r_void
id|scsi_do_req
c_func
(paren
r_struct
id|scsi_request
op_star
comma
r_const
r_void
op_star
id|cmnd
comma
r_void
op_star
id|buffer
comma
r_int
id|bufflen
comma
r_void
(paren
op_star
id|done
)paren
(paren
r_struct
id|scsi_cmnd
op_star
)paren
comma
r_int
id|timeout
comma
r_int
id|retries
)paren
suffix:semicolon
macro_line|#endif /* _SCSI_SCSI_REQUEST_H */
eof
