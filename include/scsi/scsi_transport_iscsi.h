multiline_comment|/* &n; * iSCSI transport class definitions&n; *&n; * Copyright (C) IBM Corporation, 2004&n; * Copyright (C) Mike Christie, 2004&n; *&n; * This program is free software; you can redistribute it and/or modify&n; * it under the terms of the GNU General Public License as published by&n; * the Free Software Foundation; either version 2 of the License, or&n; * (at your option) any later version.&n; *&n; * This program is distributed in the hope that it will be useful,&n; * but WITHOUT ANY WARRANTY; without even the implied warranty of&n; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; * GNU General Public License for more details.&n; *&n; * You should have received a copy of the GNU General Public License&n; * along with this program; if not, write to the Free Software&n; * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.&n; */
macro_line|#ifndef SCSI_TRANSPORT_ISCSI_H
DECL|macro|SCSI_TRANSPORT_ISCSI_H
mdefine_line|#define SCSI_TRANSPORT_ISCSI_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/in6.h&gt;
macro_line|#include &lt;linux/in.h&gt;
r_struct
id|scsi_transport_template
suffix:semicolon
DECL|struct|iscsi_class_session
r_struct
id|iscsi_class_session
(brace
DECL|member|isid
r_uint8
id|isid
(braket
l_int|6
)braket
suffix:semicolon
DECL|member|tsih
r_uint16
id|tsih
suffix:semicolon
DECL|member|header_digest
r_int
id|header_digest
suffix:semicolon
multiline_comment|/* 1 CRC32, 0 None */
DECL|member|data_digest
r_int
id|data_digest
suffix:semicolon
multiline_comment|/* 1 CRC32, 0 None */
DECL|member|tpgt
r_uint16
id|tpgt
suffix:semicolon
r_union
(brace
DECL|member|sin6_addr
r_struct
id|in6_addr
id|sin6_addr
suffix:semicolon
DECL|member|sin_addr
r_struct
id|in_addr
id|sin_addr
suffix:semicolon
)brace
suffix:semicolon
DECL|member|addr_type
id|sa_family_t
id|addr_type
suffix:semicolon
multiline_comment|/* must be AF_INET or AF_INET6 */
DECL|member|port
r_uint16
id|port
suffix:semicolon
multiline_comment|/* must be in network byte order */
DECL|member|initial_r2t
r_int
id|initial_r2t
suffix:semicolon
multiline_comment|/* 1 Yes, 0 No */
DECL|member|immediate_data
r_int
id|immediate_data
suffix:semicolon
multiline_comment|/* 1 Yes, 0 No */
DECL|member|max_recv_data_segment_len
r_uint32
id|max_recv_data_segment_len
suffix:semicolon
DECL|member|max_burst_len
r_uint32
id|max_burst_len
suffix:semicolon
DECL|member|first_burst_len
r_uint32
id|first_burst_len
suffix:semicolon
DECL|member|def_time2wait
r_uint16
id|def_time2wait
suffix:semicolon
DECL|member|def_time2retain
r_uint16
id|def_time2retain
suffix:semicolon
DECL|member|max_outstanding_r2t
r_uint16
id|max_outstanding_r2t
suffix:semicolon
DECL|member|data_pdu_in_order
r_int
id|data_pdu_in_order
suffix:semicolon
multiline_comment|/* 1 Yes, 0 No */
DECL|member|data_sequence_in_order
r_int
id|data_sequence_in_order
suffix:semicolon
multiline_comment|/* 1 Yes, 0 No */
DECL|member|erl
r_int
id|erl
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * accessor macros&n; */
DECL|macro|iscsi_isid
mdefine_line|#define iscsi_isid(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;isid)
DECL|macro|iscsi_tsih
mdefine_line|#define iscsi_tsih(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;tsih)
DECL|macro|iscsi_header_digest
mdefine_line|#define iscsi_header_digest(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;header_digest)
DECL|macro|iscsi_data_digest
mdefine_line|#define iscsi_data_digest(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;data_digest)
DECL|macro|iscsi_port
mdefine_line|#define iscsi_port(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;port)
DECL|macro|iscsi_addr_type
mdefine_line|#define iscsi_addr_type(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;addr_type)
DECL|macro|iscsi_sin_addr
mdefine_line|#define iscsi_sin_addr(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;sin_addr)
DECL|macro|iscsi_sin6_addr
mdefine_line|#define iscsi_sin6_addr(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;sin6_addr)
DECL|macro|iscsi_tpgt
mdefine_line|#define iscsi_tpgt(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;tpgt)
DECL|macro|iscsi_initial_r2t
mdefine_line|#define iscsi_initial_r2t(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;initial_r2t)
DECL|macro|iscsi_immediate_data
mdefine_line|#define iscsi_immediate_data(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;immediate_data)
DECL|macro|iscsi_max_recv_data_segment_len
mdefine_line|#define iscsi_max_recv_data_segment_len(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;max_recv_data_segment_len)
DECL|macro|iscsi_max_burst_len
mdefine_line|#define iscsi_max_burst_len(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;max_burst_len)
DECL|macro|iscsi_first_burst_len
mdefine_line|#define iscsi_first_burst_len(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;first_burst_len)
DECL|macro|iscsi_def_time2wait
mdefine_line|#define iscsi_def_time2wait(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;def_time2wait)
DECL|macro|iscsi_def_time2retain
mdefine_line|#define iscsi_def_time2retain(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;def_time2retain)
DECL|macro|iscsi_max_outstanding_r2t
mdefine_line|#define iscsi_max_outstanding_r2t(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;max_outstanding_r2t)
DECL|macro|iscsi_data_pdu_in_order
mdefine_line|#define iscsi_data_pdu_in_order(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;data_pdu_in_order)
DECL|macro|iscsi_data_sequence_in_order
mdefine_line|#define iscsi_data_sequence_in_order(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;data_sequence_in_order)
DECL|macro|iscsi_erl
mdefine_line|#define iscsi_erl(x) &bslash;&n;&t;(((struct iscsi_class_session *)&amp;(x)-&gt;starget_data)-&gt;erl)
multiline_comment|/*&n; * The functions by which the transport class and the driver communicate&n; */
DECL|struct|iscsi_function_template
r_struct
id|iscsi_function_template
(brace
multiline_comment|/*&n;&t; * target attrs&n;&t; */
DECL|member|get_isid
r_void
(paren
op_star
id|get_isid
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|get_tsih
r_void
(paren
op_star
id|get_tsih
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|get_header_digest
r_void
(paren
op_star
id|get_header_digest
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|get_data_digest
r_void
(paren
op_star
id|get_data_digest
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|get_port
r_void
(paren
op_star
id|get_port
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|get_tpgt
r_void
(paren
op_star
id|get_tpgt
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
multiline_comment|/*&n;&t; * In get_ip_address the lld must set the address and&n;&t; * the address type&n;&t; */
DECL|member|get_ip_address
r_void
(paren
op_star
id|get_ip_address
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
multiline_comment|/*&n;&t; * The lld should snprintf the name or alias to the buffer&n;&t; */
DECL|member|get_target_name
id|ssize_t
(paren
op_star
id|get_target_name
)paren
(paren
r_struct
id|scsi_target
op_star
comma
r_char
op_star
comma
id|ssize_t
)paren
suffix:semicolon
DECL|member|get_target_alias
id|ssize_t
(paren
op_star
id|get_target_alias
)paren
(paren
r_struct
id|scsi_target
op_star
comma
r_char
op_star
comma
id|ssize_t
)paren
suffix:semicolon
DECL|member|get_initial_r2t
r_void
(paren
op_star
id|get_initial_r2t
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|get_immediate_data
r_void
(paren
op_star
id|get_immediate_data
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|get_max_recv_data_segment_len
r_void
(paren
op_star
id|get_max_recv_data_segment_len
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|get_max_burst_len
r_void
(paren
op_star
id|get_max_burst_len
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|get_first_burst_len
r_void
(paren
op_star
id|get_first_burst_len
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|get_def_time2wait
r_void
(paren
op_star
id|get_def_time2wait
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|get_def_time2retain
r_void
(paren
op_star
id|get_def_time2retain
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|get_max_outstanding_r2t
r_void
(paren
op_star
id|get_max_outstanding_r2t
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|get_data_pdu_in_order
r_void
(paren
op_star
id|get_data_pdu_in_order
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|get_data_sequence_in_order
r_void
(paren
op_star
id|get_data_sequence_in_order
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|get_erl
r_void
(paren
op_star
id|get_erl
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
multiline_comment|/*&n;&t; * host atts&n;&t; */
multiline_comment|/*&n;&t; * The lld should snprintf the name or alias to the buffer&n;&t; */
DECL|member|get_initiator_alias
id|ssize_t
(paren
op_star
id|get_initiator_alias
)paren
(paren
r_struct
id|Scsi_Host
op_star
comma
r_char
op_star
comma
id|ssize_t
)paren
suffix:semicolon
DECL|member|get_initiator_name
id|ssize_t
(paren
op_star
id|get_initiator_name
)paren
(paren
r_struct
id|Scsi_Host
op_star
comma
r_char
op_star
comma
id|ssize_t
)paren
suffix:semicolon
multiline_comment|/*&n;&t; * The driver sets these to tell the transport class it&n;&t; * wants the attributes displayed in sysfs.  If the show_ flag&n;&t; * is not set, the attribute will be private to the transport&n;&t; * class. We could probably just test if a get_ fn was set&n;&t; * since we only use the values for sysfs but this is how&n;&t; * fc does it too.&n;&t; */
DECL|member|show_isid
r_int
r_int
id|show_isid
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_tsih
r_int
r_int
id|show_tsih
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_header_digest
r_int
r_int
id|show_header_digest
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_data_digest
r_int
r_int
id|show_data_digest
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_port
r_int
r_int
id|show_port
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_tpgt
r_int
r_int
id|show_tpgt
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_ip_address
r_int
r_int
id|show_ip_address
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_target_name
r_int
r_int
id|show_target_name
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_target_alias
r_int
r_int
id|show_target_alias
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_initial_r2t
r_int
r_int
id|show_initial_r2t
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_immediate_data
r_int
r_int
id|show_immediate_data
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_max_recv_data_segment_len
r_int
r_int
id|show_max_recv_data_segment_len
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_max_burst_len
r_int
r_int
id|show_max_burst_len
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_first_burst_len
r_int
r_int
id|show_first_burst_len
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_def_time2wait
r_int
r_int
id|show_def_time2wait
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_def_time2retain
r_int
r_int
id|show_def_time2retain
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_max_outstanding_r2t
r_int
r_int
id|show_max_outstanding_r2t
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_data_pdu_in_order
r_int
r_int
id|show_data_pdu_in_order
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_data_sequence_in_order
r_int
r_int
id|show_data_sequence_in_order
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_erl
r_int
r_int
id|show_erl
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_initiator_name
r_int
r_int
id|show_initiator_name
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_initiator_alias
r_int
r_int
id|show_initiator_alias
suffix:colon
l_int|1
suffix:semicolon
)brace
suffix:semicolon
r_struct
id|scsi_transport_template
op_star
id|iscsi_attach_transport
c_func
(paren
r_struct
id|iscsi_function_template
op_star
)paren
suffix:semicolon
r_void
id|iscsi_release_transport
c_func
(paren
r_struct
id|scsi_transport_template
op_star
)paren
suffix:semicolon
macro_line|#endif
eof
