multiline_comment|/* &n; *  Parallel SCSI (SPI) transport specific attributes exported to sysfs.&n; *&n; *  Copyright (c) 2003 Silicon Graphics, Inc.  All rights reserved.&n; *&n; *  This program is free software; you can redistribute it and/or modify&n; *  it under the terms of the GNU General Public License as published by&n; *  the Free Software Foundation; either version 2 of the License, or&n; *  (at your option) any later version.&n; *&n; *  This program is distributed in the hope that it will be useful,&n; *  but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *  GNU General Public License for more details.&n; *&n; *  You should have received a copy of the GNU General Public License&n; *  along with this program; if not, write to the Free Software&n; *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA&n; */
macro_line|#ifndef SCSI_TRANSPORT_SPI_H
DECL|macro|SCSI_TRANSPORT_SPI_H
mdefine_line|#define SCSI_TRANSPORT_SPI_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/transport_class.h&gt;
r_struct
id|scsi_transport_template
suffix:semicolon
DECL|struct|spi_transport_attrs
r_struct
id|spi_transport_attrs
(brace
DECL|member|period
r_int
id|period
suffix:semicolon
multiline_comment|/* value in the PPR/SDTR command */
DECL|member|offset
r_int
id|offset
suffix:semicolon
DECL|member|width
r_int
r_int
id|width
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* 0 - narrow, 1 - wide */
DECL|member|iu
r_int
r_int
id|iu
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Information Units enabled */
DECL|member|dt
r_int
r_int
id|dt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* DT clocking enabled */
DECL|member|qas
r_int
r_int
id|qas
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Quick Arbitration and Selection enabled */
DECL|member|wr_flow
r_int
r_int
id|wr_flow
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Write Flow control enabled */
DECL|member|rd_strm
r_int
r_int
id|rd_strm
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Read streaming enabled */
DECL|member|rti
r_int
r_int
id|rti
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Retain Training Information */
DECL|member|pcomp_en
r_int
r_int
id|pcomp_en
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Precompensation enabled */
DECL|member|initial_dv
r_int
r_int
id|initial_dv
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* DV done to this target yet  */
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
multiline_comment|/* flags field for drivers to use */
multiline_comment|/* Device Properties fields */
DECL|member|support_sync
r_int
r_int
id|support_sync
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* synchronous support */
DECL|member|support_wide
r_int
r_int
id|support_wide
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* wide support */
DECL|member|support_dt
r_int
r_int
id|support_dt
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* allows DT phases */
DECL|member|support_dt_only
r_int
r_int
id|support_dt_only
suffix:semicolon
multiline_comment|/* disallows ST phases */
DECL|member|support_ius
r_int
r_int
id|support_ius
suffix:semicolon
multiline_comment|/* support Information Units */
DECL|member|support_qas
r_int
r_int
id|support_qas
suffix:semicolon
multiline_comment|/* supports quick arbitration and selection */
multiline_comment|/* Private Fields */
DECL|member|dv_pending
r_int
r_int
id|dv_pending
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* Internal flag */
DECL|member|dv_sem
r_struct
id|semaphore
id|dv_sem
suffix:semicolon
multiline_comment|/* semaphore to serialise dv */
)brace
suffix:semicolon
DECL|enum|spi_signal_type
r_enum
id|spi_signal_type
(brace
DECL|enumerator|SPI_SIGNAL_UNKNOWN
id|SPI_SIGNAL_UNKNOWN
op_assign
l_int|1
comma
DECL|enumerator|SPI_SIGNAL_SE
id|SPI_SIGNAL_SE
comma
DECL|enumerator|SPI_SIGNAL_LVD
id|SPI_SIGNAL_LVD
comma
DECL|enumerator|SPI_SIGNAL_HVD
id|SPI_SIGNAL_HVD
comma
)brace
suffix:semicolon
DECL|struct|spi_host_attrs
r_struct
id|spi_host_attrs
(brace
DECL|member|signalling
r_enum
id|spi_signal_type
id|signalling
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* accessor functions */
DECL|macro|spi_period
mdefine_line|#define spi_period(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;period)
DECL|macro|spi_offset
mdefine_line|#define spi_offset(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;offset)
DECL|macro|spi_width
mdefine_line|#define spi_width(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;width)
DECL|macro|spi_iu
mdefine_line|#define spi_iu(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;iu)
DECL|macro|spi_dt
mdefine_line|#define spi_dt(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;dt)
DECL|macro|spi_qas
mdefine_line|#define spi_qas(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;qas)
DECL|macro|spi_wr_flow
mdefine_line|#define spi_wr_flow(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;wr_flow)
DECL|macro|spi_rd_strm
mdefine_line|#define spi_rd_strm(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;rd_strm)
DECL|macro|spi_rti
mdefine_line|#define spi_rti(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;rti)
DECL|macro|spi_pcomp_en
mdefine_line|#define spi_pcomp_en(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;pcomp_en)
DECL|macro|spi_initial_dv
mdefine_line|#define spi_initial_dv(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;initial_dv)
DECL|macro|spi_support_sync
mdefine_line|#define spi_support_sync(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;support_sync)
DECL|macro|spi_support_wide
mdefine_line|#define spi_support_wide(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;support_wide)
DECL|macro|spi_support_dt
mdefine_line|#define spi_support_dt(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;support_dt)
DECL|macro|spi_support_dt_only
mdefine_line|#define spi_support_dt_only(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;support_dt_only)
DECL|macro|spi_support_ius
mdefine_line|#define spi_support_ius(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;support_ius)
DECL|macro|spi_support_qas
mdefine_line|#define spi_support_qas(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;support_qas)
DECL|macro|spi_flags
mdefine_line|#define spi_flags(x)&t;(((struct spi_transport_attrs *)&amp;(x)-&gt;starget_data)-&gt;flags)
DECL|macro|spi_signalling
mdefine_line|#define spi_signalling(h)&t;(((struct spi_host_attrs *)(h)-&gt;shost_data)-&gt;signalling)
multiline_comment|/* The functions by which the transport class and the driver communicate */
DECL|struct|spi_function_template
r_struct
id|spi_function_template
(brace
DECL|member|get_period
r_void
(paren
op_star
id|get_period
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|set_period
r_void
(paren
op_star
id|set_period
)paren
(paren
r_struct
id|scsi_target
op_star
comma
r_int
)paren
suffix:semicolon
DECL|member|get_offset
r_void
(paren
op_star
id|get_offset
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|set_offset
r_void
(paren
op_star
id|set_offset
)paren
(paren
r_struct
id|scsi_target
op_star
comma
r_int
)paren
suffix:semicolon
DECL|member|get_width
r_void
(paren
op_star
id|get_width
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|set_width
r_void
(paren
op_star
id|set_width
)paren
(paren
r_struct
id|scsi_target
op_star
comma
r_int
)paren
suffix:semicolon
DECL|member|get_iu
r_void
(paren
op_star
id|get_iu
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|set_iu
r_void
(paren
op_star
id|set_iu
)paren
(paren
r_struct
id|scsi_target
op_star
comma
r_int
)paren
suffix:semicolon
DECL|member|get_dt
r_void
(paren
op_star
id|get_dt
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|set_dt
r_void
(paren
op_star
id|set_dt
)paren
(paren
r_struct
id|scsi_target
op_star
comma
r_int
)paren
suffix:semicolon
DECL|member|get_qas
r_void
(paren
op_star
id|get_qas
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|set_qas
r_void
(paren
op_star
id|set_qas
)paren
(paren
r_struct
id|scsi_target
op_star
comma
r_int
)paren
suffix:semicolon
DECL|member|get_wr_flow
r_void
(paren
op_star
id|get_wr_flow
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|set_wr_flow
r_void
(paren
op_star
id|set_wr_flow
)paren
(paren
r_struct
id|scsi_target
op_star
comma
r_int
)paren
suffix:semicolon
DECL|member|get_rd_strm
r_void
(paren
op_star
id|get_rd_strm
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|set_rd_strm
r_void
(paren
op_star
id|set_rd_strm
)paren
(paren
r_struct
id|scsi_target
op_star
comma
r_int
)paren
suffix:semicolon
DECL|member|get_rti
r_void
(paren
op_star
id|get_rti
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|set_rti
r_void
(paren
op_star
id|set_rti
)paren
(paren
r_struct
id|scsi_target
op_star
comma
r_int
)paren
suffix:semicolon
DECL|member|get_pcomp_en
r_void
(paren
op_star
id|get_pcomp_en
)paren
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
DECL|member|set_pcomp_en
r_void
(paren
op_star
id|set_pcomp_en
)paren
(paren
r_struct
id|scsi_target
op_star
comma
r_int
)paren
suffix:semicolon
DECL|member|get_signalling
r_void
(paren
op_star
id|get_signalling
)paren
(paren
r_struct
id|Scsi_Host
op_star
)paren
suffix:semicolon
DECL|member|set_signalling
r_void
(paren
op_star
id|set_signalling
)paren
(paren
r_struct
id|Scsi_Host
op_star
comma
r_enum
id|spi_signal_type
)paren
suffix:semicolon
multiline_comment|/* The driver sets these to tell the transport class it&n;&t; * wants the attributes displayed in sysfs.  If the show_ flag&n;&t; * is not set, the attribute will be private to the transport&n;&t; * class */
DECL|member|show_period
r_int
r_int
id|show_period
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_offset
r_int
r_int
id|show_offset
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_width
r_int
r_int
id|show_width
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_iu
r_int
r_int
id|show_iu
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_dt
r_int
r_int
id|show_dt
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_qas
r_int
r_int
id|show_qas
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_wr_flow
r_int
r_int
id|show_wr_flow
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_rd_strm
r_int
r_int
id|show_rd_strm
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_rti
r_int
r_int
id|show_rti
suffix:colon
l_int|1
suffix:semicolon
DECL|member|show_pcomp_en
r_int
r_int
id|show_pcomp_en
suffix:colon
l_int|1
suffix:semicolon
)brace
suffix:semicolon
r_struct
id|scsi_transport_template
op_star
id|spi_attach_transport
c_func
(paren
r_struct
id|spi_function_template
op_star
)paren
suffix:semicolon
r_void
id|spi_release_transport
c_func
(paren
r_struct
id|scsi_transport_template
op_star
)paren
suffix:semicolon
r_void
id|spi_schedule_dv_device
c_func
(paren
r_struct
id|scsi_device
op_star
)paren
suffix:semicolon
r_void
id|spi_dv_device
c_func
(paren
r_struct
id|scsi_device
op_star
)paren
suffix:semicolon
r_void
id|spi_display_xfer_agreement
c_func
(paren
r_struct
id|scsi_target
op_star
)paren
suffix:semicolon
macro_line|#endif /* SCSI_TRANSPORT_SPI_H */
eof
