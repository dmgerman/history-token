multiline_comment|/*&n; * This file is subject to the terms and conditions of the GNU General Public&n; * License.  See the file &quot;COPYING&quot; in the main directory of this archive&n; * for more details.&n; *&n; * Copyright (C) 1994 - 1999 by Ralf Baechle&n; * Copyright (C) 1999 Silicon Graphics&n; *&n; * Low level exception handling&n; */
macro_line|#include &lt;asm/asm.h&gt;
macro_line|#include &lt;asm/regdef.h&gt;
macro_line|#include &lt;asm/fpregdef.h&gt;
macro_line|#include &lt;asm/mipsregs.h&gt;
macro_line|#include &lt;asm/stackframe.h&gt;
dot
id|macro
id|__build_clear_none
dot
id|endm
dot
id|macro
id|__build_clear_sti
id|STI
dot
id|endm
dot
id|macro
id|__build_clear_cli
id|CLI
dot
id|endm
dot
id|macro
id|__build_clear_fpe
id|cfc1
id|a1
comma
id|fcr31
DECL|variable|a2
id|li
id|a2
comma
op_complement
(paren
l_int|0x3f
op_lshift
l_int|12
)paren
DECL|variable|a2
op_logical_and
id|a2
comma
id|a1
DECL|variable|a2
id|ctc1
id|a2
comma
id|fcr31
id|STI
dot
id|endm
dot
id|macro
id|__build_clear_ade
id|dmfc0
id|t0
comma
id|CP0_BADVADDR
DECL|variable|t0
id|sd
id|t0
comma
id|PT_BVADDR
c_func
(paren
id|sp
)paren
id|KMODE
dot
id|endm
dot
id|macro
id|__BUILD_silent
id|exception
dot
id|endm
multiline_comment|/* Gas tries to parse the PRINT argument as a string containing&n;&t;   string escapes and emits bogus warnings if it believes to&n;&t;   recognize an unknown escape code.  So make the arguments&n;&t;   start with an n and gas will believe &bslash;n is ok ...  */
dot
id|macro
id|__BUILD_verbose
id|nexception
id|ld
id|a1
comma
id|PT_EPC
c_func
(paren
id|sp
)paren
id|PRINT
c_func
(paren
l_string|&quot;Got &bslash;nexception at %016lx&bslash;012&quot;
)paren
dot
id|endm
dot
id|macro
id|__BUILD_count
id|exception
dot
id|set
id|reorder
id|ld
id|t0
comma
id|exception_count_
"&bslash;"
id|exception
id|daddiu
id|t0
comma
l_int|1
id|sd
id|t0
comma
id|exception_count_
"&bslash;"
id|exception
dot
id|set
id|noreorder
dot
id|comm
id|exception_count
"&bslash;"
id|exception
comma
l_int|8
comma
l_int|8
dot
id|endm
dot
id|macro
id|BUILD_HANDLER
id|exception
id|handler
id|clear
id|verbose
dot
id|align
l_int|5
id|NESTED
c_func
(paren
id|handle_
"&bslash;"
id|exception
comma
id|PT_SIZE
comma
id|sp
)paren
dot
id|set
id|noat
id|SAVE_ALL
id|__BUILD_clear_
"&bslash;"
id|clear
dot
id|set
id|at
id|__BUILD_
"&bslash;"
id|verbose
"&bslash;"
id|exception
id|move
id|a0
comma
id|sp
id|jal
id|do_
"&bslash;"
id|handler
id|j
id|ret_from_exception
id|nop
id|END
c_func
(paren
id|handle_
"&bslash;"
id|exception
)paren
dot
id|endm
eof
