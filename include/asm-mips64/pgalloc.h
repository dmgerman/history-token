multiline_comment|/*&n; * This file is subject to the terms and conditions of the GNU General Public&n; * License.  See the file &quot;COPYING&quot; in the main directory of this archive&n; * for more details.&n; *&n; * Copyright (C) 1994 - 2001 by Ralf Baechle at alii&n; * Copyright (C) 1999, 2000, 2001 Silicon Graphics, Inc.&n; */
macro_line|#ifndef _ASM_PGALLOC_H
DECL|macro|_ASM_PGALLOC_H
mdefine_line|#define _ASM_PGALLOC_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/highmem.h&gt;
macro_line|#include &lt;linux/mm.h&gt;
macro_line|#include &lt;asm/page.h&gt;
DECL|macro|check_pgt_cache
mdefine_line|#define check_pgt_cache()&t;do { } while (0)
DECL|function|pmd_populate_kernel
r_static
r_inline
r_void
id|pmd_populate_kernel
c_func
(paren
r_struct
id|mm_struct
op_star
id|mm
comma
id|pmd_t
op_star
id|pmd
comma
id|pte_t
op_star
id|pte
)paren
(brace
id|set_pmd
c_func
(paren
id|pmd
comma
id|__pmd
c_func
(paren
id|__pa
c_func
(paren
id|pte
)paren
)paren
)paren
suffix:semicolon
)brace
DECL|function|pmd_populate
r_static
r_inline
r_void
id|pmd_populate
c_func
(paren
r_struct
id|mm_struct
op_star
id|mm
comma
id|pmd_t
op_star
id|pmd
comma
r_struct
id|page
op_star
id|pte
)paren
(brace
id|set_pmd
c_func
(paren
id|pmd
comma
id|__pmd
c_func
(paren
(paren
id|PAGE_OFFSET
op_plus
id|page_to_pfn
c_func
(paren
id|pte
)paren
)paren
op_lshift
id|PAGE_SHIFT
)paren
)paren
suffix:semicolon
)brace
DECL|macro|pgd_populate
mdefine_line|#define pgd_populate(mm, pgd, pmd)&t;&t;set_pgd(pgd, __pgd(pmd))
DECL|function|pgd_alloc
r_static
r_inline
id|pgd_t
op_star
id|pgd_alloc
c_func
(paren
r_struct
id|mm_struct
op_star
id|mm
)paren
(brace
id|pgd_t
op_star
id|ret
comma
op_star
id|init
suffix:semicolon
id|ret
op_assign
(paren
id|pgd_t
op_star
)paren
id|__get_free_pages
c_func
(paren
id|GFP_KERNEL
comma
l_int|1
)paren
suffix:semicolon
r_if
c_cond
(paren
id|ret
)paren
(brace
id|init
op_assign
id|pgd_offset
c_func
(paren
op_amp
id|init_mm
comma
l_int|0
)paren
suffix:semicolon
id|pgd_init
c_func
(paren
(paren
r_int
r_int
)paren
id|ret
)paren
suffix:semicolon
id|memcpy
c_func
(paren
id|ret
op_plus
id|USER_PTRS_PER_PGD
comma
id|init
op_plus
id|USER_PTRS_PER_PGD
comma
(paren
id|PTRS_PER_PGD
op_minus
id|USER_PTRS_PER_PGD
)paren
op_star
r_sizeof
(paren
id|pgd_t
)paren
)paren
suffix:semicolon
)brace
r_return
id|ret
suffix:semicolon
)brace
DECL|function|pgd_free
r_static
r_inline
r_void
id|pgd_free
c_func
(paren
id|pgd_t
op_star
id|pgd
)paren
(brace
id|free_pages
c_func
(paren
(paren
r_int
r_int
)paren
id|pgd
comma
id|PGD_ORDER
)paren
suffix:semicolon
)brace
DECL|function|pte_alloc_one_kernel
r_static
r_inline
id|pte_t
op_star
id|pte_alloc_one_kernel
c_func
(paren
r_struct
id|mm_struct
op_star
id|mm
comma
r_int
r_int
id|address
)paren
(brace
id|pte_t
op_star
id|pte
suffix:semicolon
id|pte
op_assign
(paren
id|pte_t
op_star
)paren
id|__get_free_pages
c_func
(paren
id|GFP_KERNEL
op_or
id|__GFP_REPEAT
comma
id|PTE_ORDER
)paren
suffix:semicolon
r_if
c_cond
(paren
id|pte
)paren
id|clear_page
c_func
(paren
id|pte
)paren
suffix:semicolon
r_return
id|pte
suffix:semicolon
)brace
DECL|function|pte_alloc_one
r_static
r_inline
r_struct
id|page
op_star
id|pte_alloc_one
c_func
(paren
r_struct
id|mm_struct
op_star
id|mm
comma
r_int
r_int
id|address
)paren
(brace
r_struct
id|page
op_star
id|pte
suffix:semicolon
id|pte
op_assign
id|alloc_pages
c_func
(paren
id|GFP_KERNEL
op_or
id|__GFP_REPEAT
comma
id|PTE_ORDER
)paren
suffix:semicolon
r_if
c_cond
(paren
id|pte
)paren
id|clear_highpage
c_func
(paren
id|pte
)paren
suffix:semicolon
r_return
id|pte
suffix:semicolon
)brace
DECL|function|pte_free_kernel
r_static
r_inline
r_void
id|pte_free_kernel
c_func
(paren
id|pte_t
op_star
id|pte
)paren
(brace
id|free_pages
c_func
(paren
(paren
r_int
r_int
)paren
id|pte
comma
id|PTE_ORDER
)paren
suffix:semicolon
)brace
DECL|function|pte_free
r_static
r_inline
r_void
id|pte_free
c_func
(paren
r_struct
id|page
op_star
id|pte
)paren
(brace
id|__free_pages
c_func
(paren
id|pte
comma
id|PTE_ORDER
)paren
suffix:semicolon
)brace
DECL|macro|__pte_free_tlb
mdefine_line|#define __pte_free_tlb(tlb,pte)&t;&t;tlb_remove_page((tlb),(pte))
DECL|macro|__pmd_free_tlb
mdefine_line|#define __pmd_free_tlb(tlb,x)&t;&t;do { } while (0)
DECL|function|pmd_alloc_one
r_static
r_inline
id|pmd_t
op_star
id|pmd_alloc_one
c_func
(paren
r_struct
id|mm_struct
op_star
id|mm
comma
r_int
r_int
id|address
)paren
(brace
id|pmd_t
op_star
id|pmd
suffix:semicolon
id|pmd
op_assign
(paren
id|pmd_t
op_star
)paren
id|__get_free_pages
c_func
(paren
id|GFP_KERNEL
op_or
id|__GFP_REPEAT
comma
id|PMD_ORDER
)paren
suffix:semicolon
r_if
c_cond
(paren
id|pmd
)paren
id|pmd_init
c_func
(paren
(paren
r_int
r_int
)paren
id|pmd
comma
(paren
r_int
r_int
)paren
id|invalid_pte_table
)paren
suffix:semicolon
r_return
id|pmd
suffix:semicolon
)brace
DECL|function|pmd_free
r_static
r_inline
r_void
id|pmd_free
c_func
(paren
id|pmd_t
op_star
id|pmd
)paren
(brace
id|free_pages
c_func
(paren
(paren
r_int
r_int
)paren
id|pmd
comma
id|PMD_ORDER
)paren
suffix:semicolon
)brace
r_extern
id|pte_t
id|kptbl
(braket
(paren
id|PAGE_SIZE
op_lshift
id|PGD_ORDER
)paren
op_div
r_sizeof
(paren
id|pte_t
)paren
)braket
suffix:semicolon
r_extern
id|pmd_t
id|kpmdtbl
(braket
id|PTRS_PER_PMD
)braket
suffix:semicolon
macro_line|#endif /* _ASM_PGALLOC_H */
eof
