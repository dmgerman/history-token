multiline_comment|/* Copyright (C) 2004 IBM&n; *&n; * Implements the generic device dma API for ppc64. Handles&n; * the pci and vio busses&n; */
macro_line|#ifndef _ASM_DMA_MAPPING_H
DECL|macro|_ASM_DMA_MAPPING_H
mdefine_line|#define _ASM_DMA_MAPPING_H
macro_line|#include &lt;linux/types.h&gt;
macro_line|#include &lt;linux/device.h&gt;
macro_line|#include &lt;linux/cache.h&gt;
multiline_comment|/* need struct page definitions */
macro_line|#include &lt;linux/mm.h&gt;
macro_line|#include &lt;asm/scatterlist.h&gt;
macro_line|#include &lt;asm/bug.h&gt;
r_extern
r_int
id|dma_supported
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
id|u64
id|mask
)paren
suffix:semicolon
r_extern
r_int
id|dma_set_mask
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
id|u64
id|dma_mask
)paren
suffix:semicolon
r_extern
r_void
op_star
id|dma_alloc_coherent
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
r_int
id|size
comma
id|dma_addr_t
op_star
id|dma_handle
comma
r_int
id|flag
)paren
suffix:semicolon
r_extern
r_void
id|dma_free_coherent
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
r_int
id|size
comma
r_void
op_star
id|cpu_addr
comma
id|dma_addr_t
id|dma_handle
)paren
suffix:semicolon
r_extern
id|dma_addr_t
id|dma_map_single
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
r_void
op_star
id|cpu_addr
comma
r_int
id|size
comma
r_enum
id|dma_data_direction
id|direction
)paren
suffix:semicolon
r_extern
r_void
id|dma_unmap_single
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
id|dma_addr_t
id|dma_addr
comma
r_int
id|size
comma
r_enum
id|dma_data_direction
id|direction
)paren
suffix:semicolon
r_extern
id|dma_addr_t
id|dma_map_page
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
r_struct
id|page
op_star
id|page
comma
r_int
r_int
id|offset
comma
r_int
id|size
comma
r_enum
id|dma_data_direction
id|direction
)paren
suffix:semicolon
r_extern
r_void
id|dma_unmap_page
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
id|dma_addr_t
id|dma_address
comma
r_int
id|size
comma
r_enum
id|dma_data_direction
id|direction
)paren
suffix:semicolon
r_extern
r_int
id|dma_map_sg
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
r_struct
id|scatterlist
op_star
id|sg
comma
r_int
id|nents
comma
r_enum
id|dma_data_direction
id|direction
)paren
suffix:semicolon
r_extern
r_void
id|dma_unmap_sg
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
r_struct
id|scatterlist
op_star
id|sg
comma
r_int
id|nhwentries
comma
r_enum
id|dma_data_direction
id|direction
)paren
suffix:semicolon
r_extern
r_void
id|dma_sync_single
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
id|dma_addr_t
id|dma_handle
comma
r_int
id|size
comma
r_enum
id|dma_data_direction
id|direction
)paren
suffix:semicolon
r_extern
r_void
id|dma_sync_sg
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
r_struct
id|scatterlist
op_star
id|sg
comma
r_int
id|nelems
comma
r_enum
id|dma_data_direction
id|direction
)paren
suffix:semicolon
multiline_comment|/* Now for the API extensions over the pci_ one */
DECL|macro|dma_alloc_noncoherent
mdefine_line|#define dma_alloc_noncoherent(d, s, h, f) dma_alloc_coherent(d, s, h, f)
DECL|macro|dma_free_noncoherent
mdefine_line|#define dma_free_noncoherent(d, s, v, h) dma_free_coherent(d, s, v, h)
DECL|macro|dma_is_consistent
mdefine_line|#define dma_is_consistent(d)&t;(1)
r_static
r_inline
r_int
DECL|function|dma_get_cache_alignment
id|dma_get_cache_alignment
c_func
(paren
r_void
)paren
(brace
multiline_comment|/* no easy way to get cache size on all processors, so return&n;&t; * the maximum possible, to be safe */
r_return
(paren
l_int|1
op_lshift
id|L1_CACHE_SHIFT_MAX
)paren
suffix:semicolon
)brace
r_static
r_inline
r_void
DECL|function|dma_sync_single_range
id|dma_sync_single_range
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
id|dma_addr_t
id|dma_handle
comma
r_int
r_int
id|offset
comma
r_int
id|size
comma
r_enum
id|dma_data_direction
id|direction
)paren
(brace
multiline_comment|/* just sync everything, that&squot;s all the pci API can do */
id|dma_sync_single
c_func
(paren
id|dev
comma
id|dma_handle
comma
id|offset
op_plus
id|size
comma
id|direction
)paren
suffix:semicolon
)brace
r_static
r_inline
r_void
DECL|function|dma_cache_sync
id|dma_cache_sync
c_func
(paren
r_void
op_star
id|vaddr
comma
r_int
id|size
comma
r_enum
id|dma_data_direction
id|direction
)paren
(brace
multiline_comment|/* could define this in terms of the dma_cache ... operations,&n;&t; * but if you get this on a platform, you should convert the platform&n;&t; * to using the generic device DMA API */
id|BUG
c_func
(paren
)paren
suffix:semicolon
)brace
macro_line|#endif&t;/* _ASM_DMA_MAPPING_H */
eof
