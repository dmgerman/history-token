macro_line|#ifndef __SOUND_GUS_H
DECL|macro|__SOUND_GUS_H
mdefine_line|#define __SOUND_GUS_H
multiline_comment|/*&n; *  Global structures used for GUS part of ALSA driver&n; *  Copyright (c) by Jaroslav Kysela &lt;perex@suse.cz&gt;&n; *&n; *&n; *   This program is free software; you can redistribute it and/or modify&n; *   it under the terms of the GNU General Public License as published by&n; *   the Free Software Foundation; either version 2 of the License, or&n; *   (at your option) any later version.&n; *&n; *   This program is distributed in the hope that it will be useful,&n; *   but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *   GNU General Public License for more details.&n; *&n; *   You should have received a copy of the GNU General Public License&n; *   along with this program; if not, write to the Free Software&n; *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA&n; *&n; */
macro_line|#include &quot;pcm.h&quot;
macro_line|#include &quot;rawmidi.h&quot;
macro_line|#include &quot;timer.h&quot;
macro_line|#include &quot;seq_midi_emul.h&quot;
macro_line|#include &quot;seq_device.h&quot;
macro_line|#include &quot;ainstr_iw.h&quot;
macro_line|#include &quot;ainstr_gf1.h&quot;
macro_line|#include &quot;ainstr_simple.h&quot;
macro_line|#include &lt;asm/io.h&gt;
DECL|macro|SNDRV_SEQ_DEV_ID_GUS
mdefine_line|#define SNDRV_SEQ_DEV_ID_GUS&t;&t;&t;&quot;gus-synth&quot;
multiline_comment|/* IO ports */
DECL|macro|GUSP
mdefine_line|#define GUSP(gus, x)&t;&t;&t;((gus)-&gt;gf1.port + SNDRV_g_u_s_##x)
DECL|macro|SNDRV_g_u_s_MIDICTRL
mdefine_line|#define SNDRV_g_u_s_MIDICTRL&t;&t;(0x320-0x220)
DECL|macro|SNDRV_g_u_s_MIDISTAT
mdefine_line|#define SNDRV_g_u_s_MIDISTAT&t;&t;(0x320-0x220)
DECL|macro|SNDRV_g_u_s_MIDIDATA
mdefine_line|#define SNDRV_g_u_s_MIDIDATA&t;&t;(0x321-0x220)
DECL|macro|SNDRV_g_u_s_GF1PAGE
mdefine_line|#define SNDRV_g_u_s_GF1PAGE&t;&t;(0x322-0x220)
DECL|macro|SNDRV_g_u_s_GF1REGSEL
mdefine_line|#define SNDRV_g_u_s_GF1REGSEL&t;&t;(0x323-0x220)
DECL|macro|SNDRV_g_u_s_GF1DATALOW
mdefine_line|#define SNDRV_g_u_s_GF1DATALOW&t;&t;(0x324-0x220)
DECL|macro|SNDRV_g_u_s_GF1DATAHIGH
mdefine_line|#define SNDRV_g_u_s_GF1DATAHIGH&t;&t;(0x325-0x220)
DECL|macro|SNDRV_g_u_s_IRQSTAT
mdefine_line|#define SNDRV_g_u_s_IRQSTAT&t;&t;(0x226-0x220)
DECL|macro|SNDRV_g_u_s_TIMERCNTRL
mdefine_line|#define SNDRV_g_u_s_TIMERCNTRL&t;&t;(0x228-0x220)
DECL|macro|SNDRV_g_u_s_TIMERDATA
mdefine_line|#define SNDRV_g_u_s_TIMERDATA&t;&t;(0x229-0x220)
DECL|macro|SNDRV_g_u_s_DRAM
mdefine_line|#define SNDRV_g_u_s_DRAM&t;&t;&t;(0x327-0x220)
DECL|macro|SNDRV_g_u_s_MIXCNTRLREG
mdefine_line|#define SNDRV_g_u_s_MIXCNTRLREG&t;&t;(0x220-0x220)
DECL|macro|SNDRV_g_u_s_IRQDMACNTRLREG
mdefine_line|#define SNDRV_g_u_s_IRQDMACNTRLREG&t;(0x22b-0x220)
DECL|macro|SNDRV_g_u_s_REGCNTRLS
mdefine_line|#define SNDRV_g_u_s_REGCNTRLS&t;&t;(0x22f-0x220)
DECL|macro|SNDRV_g_u_s_BOARDVERSION
mdefine_line|#define SNDRV_g_u_s_BOARDVERSION&t;&t;(0x726-0x220)
DECL|macro|SNDRV_g_u_s_MIXCNTRLPORT
mdefine_line|#define SNDRV_g_u_s_MIXCNTRLPORT&t;&t;(0x726-0x220)
DECL|macro|SNDRV_g_u_s_IVER
mdefine_line|#define SNDRV_g_u_s_IVER&t;&t;&t;(0x325-0x220)
DECL|macro|SNDRV_g_u_s_MIXDATAPORT
mdefine_line|#define SNDRV_g_u_s_MIXDATAPORT&t;&t;(0x326-0x220)
DECL|macro|SNDRV_g_u_s_MAXCNTRLPORT
mdefine_line|#define SNDRV_g_u_s_MAXCNTRLPORT&t;&t;(0x326-0x220)
multiline_comment|/* GF1 registers */
multiline_comment|/* global registers */
DECL|macro|SNDRV_GF1_GB_ACTIVE_VOICES
mdefine_line|#define SNDRV_GF1_GB_ACTIVE_VOICES&t;&t;0x0e
DECL|macro|SNDRV_GF1_GB_VOICES_IRQ
mdefine_line|#define SNDRV_GF1_GB_VOICES_IRQ&t;&t;&t;0x0f
DECL|macro|SNDRV_GF1_GB_GLOBAL_MODE
mdefine_line|#define SNDRV_GF1_GB_GLOBAL_MODE&t;&t;&t;0x19
DECL|macro|SNDRV_GF1_GW_LFO_BASE
mdefine_line|#define SNDRV_GF1_GW_LFO_BASE&t;&t;&t;0x1a
DECL|macro|SNDRV_GF1_GB_VOICES_IRQ_READ
mdefine_line|#define SNDRV_GF1_GB_VOICES_IRQ_READ&t;&t;0x1f
DECL|macro|SNDRV_GF1_GB_DRAM_DMA_CONTROL
mdefine_line|#define SNDRV_GF1_GB_DRAM_DMA_CONTROL&t;&t;0x41
DECL|macro|SNDRV_GF1_GW_DRAM_DMA_LOW
mdefine_line|#define SNDRV_GF1_GW_DRAM_DMA_LOW&t;&t;&t;0x42
DECL|macro|SNDRV_GF1_GW_DRAM_IO_LOW
mdefine_line|#define SNDRV_GF1_GW_DRAM_IO_LOW&t;&t;&t;0x43
DECL|macro|SNDRV_GF1_GB_DRAM_IO_HIGH
mdefine_line|#define SNDRV_GF1_GB_DRAM_IO_HIGH&t;&t;&t;0x44
DECL|macro|SNDRV_GF1_GB_SOUND_BLASTER_CONTROL
mdefine_line|#define SNDRV_GF1_GB_SOUND_BLASTER_CONTROL&t;0x45
DECL|macro|SNDRV_GF1_GB_ADLIB_TIMER_1
mdefine_line|#define SNDRV_GF1_GB_ADLIB_TIMER_1&t;&t;0x46
DECL|macro|SNDRV_GF1_GB_ADLIB_TIMER_2
mdefine_line|#define SNDRV_GF1_GB_ADLIB_TIMER_2&t;&t;0x47
DECL|macro|SNDRV_GF1_GB_RECORD_RATE
mdefine_line|#define SNDRV_GF1_GB_RECORD_RATE&t;&t;&t;0x48
DECL|macro|SNDRV_GF1_GB_REC_DMA_CONTROL
mdefine_line|#define SNDRV_GF1_GB_REC_DMA_CONTROL&t;&t;0x49
DECL|macro|SNDRV_GF1_GB_JOYSTICK_DAC_LEVEL
mdefine_line|#define SNDRV_GF1_GB_JOYSTICK_DAC_LEVEL&t;&t;0x4b
DECL|macro|SNDRV_GF1_GB_RESET
mdefine_line|#define SNDRV_GF1_GB_RESET&t;&t;&t;0x4c
DECL|macro|SNDRV_GF1_GB_DRAM_DMA_HIGH
mdefine_line|#define SNDRV_GF1_GB_DRAM_DMA_HIGH&t;&t;0x50
DECL|macro|SNDRV_GF1_GW_DRAM_IO16
mdefine_line|#define SNDRV_GF1_GW_DRAM_IO16&t;&t;&t;0x51
DECL|macro|SNDRV_GF1_GW_MEMORY_CONFIG
mdefine_line|#define SNDRV_GF1_GW_MEMORY_CONFIG&t;&t;0x52
DECL|macro|SNDRV_GF1_GB_MEMORY_CONTROL
mdefine_line|#define SNDRV_GF1_GB_MEMORY_CONTROL&t;&t;0x53
DECL|macro|SNDRV_GF1_GW_FIFO_RECORD_BASE_ADDR
mdefine_line|#define SNDRV_GF1_GW_FIFO_RECORD_BASE_ADDR&t;0x54
DECL|macro|SNDRV_GF1_GW_FIFO_PLAY_BASE_ADDR
mdefine_line|#define SNDRV_GF1_GW_FIFO_PLAY_BASE_ADDR&t;&t;0x55
DECL|macro|SNDRV_GF1_GW_FIFO_SIZE
mdefine_line|#define SNDRV_GF1_GW_FIFO_SIZE&t;&t;&t;0x56
DECL|macro|SNDRV_GF1_GW_INTERLEAVE
mdefine_line|#define SNDRV_GF1_GW_INTERLEAVE&t;&t;&t;0x57
DECL|macro|SNDRV_GF1_GB_COMPATIBILITY
mdefine_line|#define SNDRV_GF1_GB_COMPATIBILITY&t;&t;0x59
DECL|macro|SNDRV_GF1_GB_DECODE_CONTROL
mdefine_line|#define SNDRV_GF1_GB_DECODE_CONTROL&t;&t;0x5a
DECL|macro|SNDRV_GF1_GB_VERSION_NUMBER
mdefine_line|#define SNDRV_GF1_GB_VERSION_NUMBER&t;&t;0x5b
DECL|macro|SNDRV_GF1_GB_MPU401_CONTROL_A
mdefine_line|#define SNDRV_GF1_GB_MPU401_CONTROL_A&t;&t;0x5c
DECL|macro|SNDRV_GF1_GB_MPU401_CONTROL_B
mdefine_line|#define SNDRV_GF1_GB_MPU401_CONTROL_B&t;&t;0x5d
DECL|macro|SNDRV_GF1_GB_EMULATION_IRQ
mdefine_line|#define SNDRV_GF1_GB_EMULATION_IRQ&t;&t;0x60
multiline_comment|/* voice specific registers */
DECL|macro|SNDRV_GF1_VB_ADDRESS_CONTROL
mdefine_line|#define SNDRV_GF1_VB_ADDRESS_CONTROL&t;&t;0x00
DECL|macro|SNDRV_GF1_VW_FREQUENCY
mdefine_line|#define SNDRV_GF1_VW_FREQUENCY&t;&t;&t;0x01
DECL|macro|SNDRV_GF1_VW_START_HIGH
mdefine_line|#define SNDRV_GF1_VW_START_HIGH&t;&t;&t;0x02
DECL|macro|SNDRV_GF1_VW_START_LOW
mdefine_line|#define SNDRV_GF1_VW_START_LOW&t;&t;&t;0x03
DECL|macro|SNDRV_GF1_VA_START
mdefine_line|#define SNDRV_GF1_VA_START&t;&t;&t;SNDRV_GF1_VW_START_HIGH
DECL|macro|SNDRV_GF1_VW_END_HIGH
mdefine_line|#define SNDRV_GF1_VW_END_HIGH&t;&t;&t;0x04
DECL|macro|SNDRV_GF1_VW_END_LOW
mdefine_line|#define SNDRV_GF1_VW_END_LOW&t;&t;&t;0x05
DECL|macro|SNDRV_GF1_VA_END
mdefine_line|#define SNDRV_GF1_VA_END&t;&t;&t;&t;SNDRV_GF1_VW_END_HIGH
DECL|macro|SNDRV_GF1_VB_VOLUME_RATE
mdefine_line|#define SNDRV_GF1_VB_VOLUME_RATE&t;&t;&t;0x06
DECL|macro|SNDRV_GF1_VB_VOLUME_START
mdefine_line|#define SNDRV_GF1_VB_VOLUME_START&t;&t;&t;0x07
DECL|macro|SNDRV_GF1_VB_VOLUME_END
mdefine_line|#define SNDRV_GF1_VB_VOLUME_END&t;&t;&t;0x08
DECL|macro|SNDRV_GF1_VW_VOLUME
mdefine_line|#define SNDRV_GF1_VW_VOLUME&t;&t;&t;0x09
DECL|macro|SNDRV_GF1_VW_CURRENT_HIGH
mdefine_line|#define SNDRV_GF1_VW_CURRENT_HIGH&t;&t;&t;0x0a
DECL|macro|SNDRV_GF1_VW_CURRENT_LOW
mdefine_line|#define SNDRV_GF1_VW_CURRENT_LOW&t;&t;&t;0x0b
DECL|macro|SNDRV_GF1_VA_CURRENT
mdefine_line|#define SNDRV_GF1_VA_CURRENT&t;&t;&t;SNDRV_GF1_VW_CURRENT_HIGH
DECL|macro|SNDRV_GF1_VB_PAN
mdefine_line|#define SNDRV_GF1_VB_PAN&t;&t;&t;&t;0x0c
DECL|macro|SNDRV_GF1_VW_OFFSET_RIGHT
mdefine_line|#define SNDRV_GF1_VW_OFFSET_RIGHT&t;&t;&t;0x0c
DECL|macro|SNDRV_GF1_VB_VOLUME_CONTROL
mdefine_line|#define SNDRV_GF1_VB_VOLUME_CONTROL&t;&t;0x0d
DECL|macro|SNDRV_GF1_VB_UPPER_ADDRESS
mdefine_line|#define SNDRV_GF1_VB_UPPER_ADDRESS&t;&t;0x10
DECL|macro|SNDRV_GF1_VW_EFFECT_HIGH
mdefine_line|#define SNDRV_GF1_VW_EFFECT_HIGH&t;&t;&t;0x11
DECL|macro|SNDRV_GF1_VW_EFFECT_LOW
mdefine_line|#define SNDRV_GF1_VW_EFFECT_LOW&t;&t;&t;0x12
DECL|macro|SNDRV_GF1_VA_EFFECT
mdefine_line|#define SNDRV_GF1_VA_EFFECT&t;&t;&t;SNDRV_GF1_VW_EFFECT_HIGH
DECL|macro|SNDRV_GF1_VW_OFFSET_LEFT
mdefine_line|#define SNDRV_GF1_VW_OFFSET_LEFT&t;&t;&t;0x13
DECL|macro|SNDRV_GF1_VB_ACCUMULATOR
mdefine_line|#define SNDRV_GF1_VB_ACCUMULATOR&t;&t;&t;0x14
DECL|macro|SNDRV_GF1_VB_MODE
mdefine_line|#define SNDRV_GF1_VB_MODE&t;&t;&t;&t;0x15
DECL|macro|SNDRV_GF1_VW_EFFECT_VOLUME
mdefine_line|#define SNDRV_GF1_VW_EFFECT_VOLUME&t;&t;0x16
DECL|macro|SNDRV_GF1_VB_FREQUENCY_LFO
mdefine_line|#define SNDRV_GF1_VB_FREQUENCY_LFO&t;&t;0x17
DECL|macro|SNDRV_GF1_VB_VOLUME_LFO
mdefine_line|#define SNDRV_GF1_VB_VOLUME_LFO&t;&t;&t;0x18
DECL|macro|SNDRV_GF1_VW_OFFSET_RIGHT_FINAL
mdefine_line|#define SNDRV_GF1_VW_OFFSET_RIGHT_FINAL&t;&t;0x1b
DECL|macro|SNDRV_GF1_VW_OFFSET_LEFT_FINAL
mdefine_line|#define SNDRV_GF1_VW_OFFSET_LEFT_FINAL&t;&t;0x1c
DECL|macro|SNDRV_GF1_VW_EFFECT_VOLUME_FINAL
mdefine_line|#define SNDRV_GF1_VW_EFFECT_VOLUME_FINAL&t;&t;0x1d
multiline_comment|/* ICS registers */
DECL|macro|SNDRV_ICS_MIC_DEV
mdefine_line|#define SNDRV_ICS_MIC_DEV&t;&t;0
DECL|macro|SNDRV_ICS_LINE_DEV
mdefine_line|#define SNDRV_ICS_LINE_DEV&t;1
DECL|macro|SNDRV_ICS_CD_DEV
mdefine_line|#define SNDRV_ICS_CD_DEV&t;&t;2
DECL|macro|SNDRV_ICS_GF1_DEV
mdefine_line|#define SNDRV_ICS_GF1_DEV&t;&t;3
DECL|macro|SNDRV_ICS_NONE_DEV
mdefine_line|#define SNDRV_ICS_NONE_DEV&t;4
DECL|macro|SNDRV_ICS_MASTER_DEV
mdefine_line|#define SNDRV_ICS_MASTER_DEV&t;5
multiline_comment|/* LFO */
DECL|macro|SNDRV_LFO_TREMOLO
mdefine_line|#define SNDRV_LFO_TREMOLO&t;&t;0
DECL|macro|SNDRV_LFO_VIBRATO
mdefine_line|#define SNDRV_LFO_VIBRATO&t;&t;1
multiline_comment|/* misc */
DECL|macro|SNDRV_GF1_DMA_UNSIGNED
mdefine_line|#define SNDRV_GF1_DMA_UNSIGNED&t;0x80
DECL|macro|SNDRV_GF1_DMA_16BIT
mdefine_line|#define SNDRV_GF1_DMA_16BIT&t;0x40
DECL|macro|SNDRV_GF1_DMA_IRQ
mdefine_line|#define SNDRV_GF1_DMA_IRQ&t;&t;0x20
DECL|macro|SNDRV_GF1_DMA_WIDTH16
mdefine_line|#define SNDRV_GF1_DMA_WIDTH16&t;0x04
DECL|macro|SNDRV_GF1_DMA_READ
mdefine_line|#define SNDRV_GF1_DMA_READ&t;0x02&t;/* read from GUS&squot;s DRAM */
DECL|macro|SNDRV_GF1_DMA_ENABLE
mdefine_line|#define SNDRV_GF1_DMA_ENABLE&t;0x01
multiline_comment|/* ramp ranges */
DECL|macro|SNDRV_GF1_ATTEN
mdefine_line|#define SNDRV_GF1_ATTEN(x)&t;(snd_gf1_atten_table[x])
DECL|macro|SNDRV_GF1_MIN_VOLUME
mdefine_line|#define SNDRV_GF1_MIN_VOLUME&t;1800
DECL|macro|SNDRV_GF1_MAX_VOLUME
mdefine_line|#define SNDRV_GF1_MAX_VOLUME&t;4095
DECL|macro|SNDRV_GF1_MIN_OFFSET
mdefine_line|#define SNDRV_GF1_MIN_OFFSET&t;(SNDRV_GF1_MIN_VOLUME&gt;&gt;4)
DECL|macro|SNDRV_GF1_MAX_OFFSET
mdefine_line|#define SNDRV_GF1_MAX_OFFSET&t;255
DECL|macro|SNDRV_GF1_MAX_TDEPTH
mdefine_line|#define SNDRV_GF1_MAX_TDEPTH&t;90
multiline_comment|/* defines for memory manager */
DECL|macro|SNDRV_GF1_MEM_BLOCK_16BIT
mdefine_line|#define SNDRV_GF1_MEM_BLOCK_16BIT&t;&t;0x0001
DECL|macro|SNDRV_GF1_MEM_OWNER_DRIVER
mdefine_line|#define SNDRV_GF1_MEM_OWNER_DRIVER&t;0x0001
DECL|macro|SNDRV_GF1_MEM_OWNER_WAVE_SIMPLE
mdefine_line|#define SNDRV_GF1_MEM_OWNER_WAVE_SIMPLE&t;0x0002
DECL|macro|SNDRV_GF1_MEM_OWNER_WAVE_GF1
mdefine_line|#define SNDRV_GF1_MEM_OWNER_WAVE_GF1&t;0x0003
DECL|macro|SNDRV_GF1_MEM_OWNER_WAVE_IWFFFF
mdefine_line|#define SNDRV_GF1_MEM_OWNER_WAVE_IWFFFF&t;0x0004
multiline_comment|/* constants for interrupt handlers */
DECL|macro|SNDRV_GF1_HANDLER_MIDI_OUT
mdefine_line|#define SNDRV_GF1_HANDLER_MIDI_OUT&t;0x00010000
DECL|macro|SNDRV_GF1_HANDLER_MIDI_IN
mdefine_line|#define SNDRV_GF1_HANDLER_MIDI_IN&t;&t;0x00020000
DECL|macro|SNDRV_GF1_HANDLER_TIMER1
mdefine_line|#define SNDRV_GF1_HANDLER_TIMER1&t;&t;0x00040000
DECL|macro|SNDRV_GF1_HANDLER_TIMER2
mdefine_line|#define SNDRV_GF1_HANDLER_TIMER2&t;&t;0x00080000
DECL|macro|SNDRV_GF1_HANDLER_VOICE
mdefine_line|#define SNDRV_GF1_HANDLER_VOICE&t;&t;0x00100000
DECL|macro|SNDRV_GF1_HANDLER_DMA_WRITE
mdefine_line|#define SNDRV_GF1_HANDLER_DMA_WRITE&t;0x00200000
DECL|macro|SNDRV_GF1_HANDLER_DMA_READ
mdefine_line|#define SNDRV_GF1_HANDLER_DMA_READ&t;0x00400000
DECL|macro|SNDRV_GF1_HANDLER_ALL
mdefine_line|#define SNDRV_GF1_HANDLER_ALL&t;&t;(0xffff0000&amp;~SNDRV_GF1_HANDLER_VOICE)
multiline_comment|/* constants for DMA flags */
DECL|macro|SNDRV_GF1_DMA_TRIGGER
mdefine_line|#define SNDRV_GF1_DMA_TRIGGER&t;&t;1
multiline_comment|/* --- */
r_struct
id|_snd_gus_card
suffix:semicolon
DECL|typedef|snd_gus_card_t
r_typedef
r_struct
id|_snd_gus_card
id|snd_gus_card_t
suffix:semicolon
multiline_comment|/* GF1 specific structure */
DECL|struct|_snd_gf1_bank_info
r_typedef
r_struct
id|_snd_gf1_bank_info
(brace
DECL|member|address
r_int
r_int
id|address
suffix:semicolon
DECL|member|size
r_int
r_int
id|size
suffix:semicolon
DECL|typedef|snd_gf1_bank_info_t
)brace
id|snd_gf1_bank_info_t
suffix:semicolon
DECL|struct|_snd_gf1_mem_block
r_typedef
r_struct
id|_snd_gf1_mem_block
(brace
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
multiline_comment|/* flags - SNDRV_GF1_MEM_BLOCK_XXXX */
DECL|member|owner
r_int
r_int
id|owner
suffix:semicolon
multiline_comment|/* owner - SNDRV_GF1_MEM_OWNER_XXXX */
DECL|member|share
r_int
r_int
id|share
suffix:semicolon
multiline_comment|/* share count */
DECL|member|share_id
r_int
r_int
id|share_id
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/* share ID */
DECL|member|ptr
r_int
r_int
id|ptr
suffix:semicolon
DECL|member|size
r_int
r_int
id|size
suffix:semicolon
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
DECL|member|next
r_struct
id|_snd_gf1_mem_block
op_star
id|next
suffix:semicolon
DECL|member|prev
r_struct
id|_snd_gf1_mem_block
op_star
id|prev
suffix:semicolon
DECL|typedef|snd_gf1_mem_block_t
)brace
id|snd_gf1_mem_block_t
suffix:semicolon
DECL|struct|_snd_gf1_mem
r_typedef
r_struct
id|_snd_gf1_mem
(brace
DECL|member|banks_8
id|snd_gf1_bank_info_t
id|banks_8
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|banks_16
id|snd_gf1_bank_info_t
id|banks_16
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|first
id|snd_gf1_mem_block_t
op_star
id|first
suffix:semicolon
DECL|member|last
id|snd_gf1_mem_block_t
op_star
id|last
suffix:semicolon
DECL|member|memory_mutex
r_struct
id|semaphore
id|memory_mutex
suffix:semicolon
DECL|typedef|snd_gf1_mem_t
)brace
id|snd_gf1_mem_t
suffix:semicolon
DECL|struct|snd_gf1_dma_block
r_typedef
r_struct
id|snd_gf1_dma_block
(brace
DECL|member|buffer
r_void
op_star
id|buffer
suffix:semicolon
multiline_comment|/* buffer in computer&squot;s RAM */
DECL|member|buf_addr
r_int
r_int
id|buf_addr
suffix:semicolon
multiline_comment|/* buffer address */
DECL|member|addr
r_int
r_int
id|addr
suffix:semicolon
multiline_comment|/* address in onboard memory */
DECL|member|count
r_int
r_int
id|count
suffix:semicolon
multiline_comment|/* count in bytes */
DECL|member|cmd
r_int
r_int
id|cmd
suffix:semicolon
multiline_comment|/* DMA command (format) */
DECL|member|ack
r_void
(paren
op_star
id|ack
)paren
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_void
op_star
id|private_data
)paren
suffix:semicolon
DECL|member|private_data
r_void
op_star
id|private_data
suffix:semicolon
DECL|member|next
r_struct
id|snd_gf1_dma_block
op_star
id|next
suffix:semicolon
DECL|typedef|snd_gf1_dma_block_t
)brace
id|snd_gf1_dma_block_t
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|chset
id|snd_midi_channel_set_t
op_star
id|chset
suffix:semicolon
DECL|member|gus
id|snd_gus_card_t
op_star
id|gus
suffix:semicolon
DECL|member|mode
r_int
id|mode
suffix:semicolon
multiline_comment|/* operation mode */
DECL|member|client
r_int
id|client
suffix:semicolon
multiline_comment|/* sequencer client number */
DECL|member|port
r_int
id|port
suffix:semicolon
multiline_comment|/* sequencer port number */
DECL|member|midi_has_voices
r_int
id|midi_has_voices
suffix:colon
l_int|1
suffix:semicolon
DECL|typedef|snd_gus_port_t
)brace
id|snd_gus_port_t
suffix:semicolon
DECL|typedef|snd_gus_voice_t
r_typedef
r_struct
id|_snd_gus_voice
id|snd_gus_voice_t
suffix:semicolon
r_typedef
r_struct
(brace
DECL|member|sample_start
r_void
(paren
op_star
id|sample_start
)paren
(paren
id|snd_gus_card_t
op_star
id|gus
comma
id|snd_gus_voice_t
op_star
id|voice
comma
id|snd_seq_position_t
id|position
)paren
suffix:semicolon
DECL|member|sample_stop
r_void
(paren
op_star
id|sample_stop
)paren
(paren
id|snd_gus_card_t
op_star
id|gus
comma
id|snd_gus_voice_t
op_star
id|voice
comma
id|snd_seq_stop_mode_t
id|mode
)paren
suffix:semicolon
DECL|member|sample_freq
r_void
(paren
op_star
id|sample_freq
)paren
(paren
id|snd_gus_card_t
op_star
id|gus
comma
id|snd_gus_voice_t
op_star
id|voice
comma
id|snd_seq_frequency_t
id|freq
)paren
suffix:semicolon
DECL|member|sample_volume
r_void
(paren
op_star
id|sample_volume
)paren
(paren
id|snd_gus_card_t
op_star
id|gus
comma
id|snd_gus_voice_t
op_star
id|voice
comma
id|snd_seq_ev_volume_t
op_star
id|volume
)paren
suffix:semicolon
DECL|member|sample_loop
r_void
(paren
op_star
id|sample_loop
)paren
(paren
id|snd_gus_card_t
op_star
id|card
comma
id|snd_gus_voice_t
op_star
id|voice
comma
id|snd_seq_ev_loop_t
op_star
id|loop
)paren
suffix:semicolon
DECL|member|sample_pos
r_void
(paren
op_star
id|sample_pos
)paren
(paren
id|snd_gus_card_t
op_star
id|card
comma
id|snd_gus_voice_t
op_star
id|voice
comma
id|snd_seq_position_t
id|position
)paren
suffix:semicolon
DECL|member|sample_private1
r_void
(paren
op_star
id|sample_private1
)paren
(paren
id|snd_gus_card_t
op_star
id|card
comma
id|snd_gus_voice_t
op_star
id|voice
comma
r_int
r_char
op_star
id|data
)paren
suffix:semicolon
DECL|typedef|snd_gus_sample_ops_t
)brace
id|snd_gus_sample_ops_t
suffix:semicolon
DECL|macro|SNDRV_GF1_VOICE_TYPE_PCM
mdefine_line|#define SNDRV_GF1_VOICE_TYPE_PCM&t;&t;0
DECL|macro|SNDRV_GF1_VOICE_TYPE_SYNTH
mdefine_line|#define SNDRV_GF1_VOICE_TYPE_SYNTH &t;1
DECL|macro|SNDRV_GF1_VOICE_TYPE_MIDI
mdefine_line|#define SNDRV_GF1_VOICE_TYPE_MIDI&t;&t;2
DECL|macro|SNDRV_GF1_VFLG_RUNNING
mdefine_line|#define SNDRV_GF1_VFLG_RUNNING&t;&t;(1&lt;&lt;0)
DECL|macro|SNDRV_GF1_VFLG_EFFECT_TIMER1
mdefine_line|#define SNDRV_GF1_VFLG_EFFECT_TIMER1&t;(1&lt;&lt;1)
DECL|macro|SNDRV_GF1_VFLG_PAN
mdefine_line|#define SNDRV_GF1_VFLG_PAN&t;&t;(1&lt;&lt;2)
r_typedef
r_enum
(brace
DECL|enumerator|VENV_BEFORE
id|VENV_BEFORE
comma
DECL|enumerator|VENV_ATTACK
id|VENV_ATTACK
comma
DECL|enumerator|VENV_SUSTAIN
id|VENV_SUSTAIN
comma
DECL|enumerator|VENV_RELEASE
id|VENV_RELEASE
comma
DECL|enumerator|VENV_DONE
id|VENV_DONE
comma
DECL|enumerator|VENV_VOLUME
id|VENV_VOLUME
DECL|typedef|snd_gus_volume_state_t
)brace
id|snd_gus_volume_state_t
suffix:semicolon
DECL|struct|_snd_gus_voice
r_struct
id|_snd_gus_voice
(brace
DECL|member|number
r_int
id|number
suffix:semicolon
DECL|member|use
r_int
id|use
suffix:colon
l_int|1
comma
DECL|member|pcm
id|pcm
suffix:colon
l_int|1
comma
DECL|member|synth
id|synth
suffix:colon
l_int|1
comma
DECL|member|midi
id|midi
suffix:colon
l_int|1
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
DECL|member|client
r_int
r_char
id|client
suffix:semicolon
DECL|member|port
r_int
r_char
id|port
suffix:semicolon
DECL|member|index
r_int
r_char
id|index
suffix:semicolon
DECL|member|pad
r_int
r_char
id|pad
suffix:semicolon
macro_line|#ifdef CONFIG_SND_DEBUG
DECL|member|interrupt_stat_wave
r_int
r_int
id|interrupt_stat_wave
suffix:semicolon
DECL|member|interrupt_stat_volume
r_int
r_int
id|interrupt_stat_volume
suffix:semicolon
macro_line|#endif
DECL|member|handler_wave
r_void
(paren
op_star
id|handler_wave
)paren
(paren
id|snd_gus_card_t
op_star
id|gus
comma
id|snd_gus_voice_t
op_star
id|voice
)paren
suffix:semicolon
DECL|member|handler_volume
r_void
(paren
op_star
id|handler_volume
)paren
(paren
id|snd_gus_card_t
op_star
id|gus
comma
id|snd_gus_voice_t
op_star
id|voice
)paren
suffix:semicolon
DECL|member|handler_effect
r_void
(paren
op_star
id|handler_effect
)paren
(paren
id|snd_gus_card_t
op_star
id|gus
comma
id|snd_gus_voice_t
op_star
id|voice
)paren
suffix:semicolon
DECL|member|volume_change
r_void
(paren
op_star
id|volume_change
)paren
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
DECL|member|sample_ops
id|snd_gus_sample_ops_t
op_star
id|sample_ops
suffix:semicolon
DECL|member|instr
id|snd_seq_instr_t
id|instr
suffix:semicolon
multiline_comment|/* running status / registers */
DECL|member|sample_volume
id|snd_seq_ev_volume_t
id|sample_volume
suffix:semicolon
DECL|member|fc_register
r_int
r_int
id|fc_register
suffix:semicolon
DECL|member|fc_lfo
r_int
r_int
id|fc_lfo
suffix:semicolon
DECL|member|gf1_volume
r_int
r_int
id|gf1_volume
suffix:semicolon
DECL|member|control
r_int
r_char
id|control
suffix:semicolon
DECL|member|mode
r_int
r_char
id|mode
suffix:semicolon
DECL|member|gf1_pan
r_int
r_char
id|gf1_pan
suffix:semicolon
DECL|member|effect_accumulator
r_int
r_char
id|effect_accumulator
suffix:semicolon
DECL|member|volume_control
r_int
r_char
id|volume_control
suffix:semicolon
DECL|member|venv_value_next
r_int
r_char
id|venv_value_next
suffix:semicolon
DECL|member|venv_state
id|snd_gus_volume_state_t
id|venv_state
suffix:semicolon
DECL|member|venv_state_prev
id|snd_gus_volume_state_t
id|venv_state_prev
suffix:semicolon
DECL|member|vlo
r_int
r_int
id|vlo
suffix:semicolon
DECL|member|vro
r_int
r_int
id|vro
suffix:semicolon
DECL|member|gf1_effect_volume
r_int
r_int
id|gf1_effect_volume
suffix:semicolon
multiline_comment|/* --- */
DECL|member|private_data
r_void
op_star
id|private_data
suffix:semicolon
DECL|member|private_free
r_void
(paren
op_star
id|private_free
)paren
(paren
id|snd_gus_voice_t
op_star
id|voice
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|_snd_gf1
r_struct
id|_snd_gf1
(brace
DECL|member|enh_mode
r_int
r_int
id|enh_mode
suffix:colon
l_int|1
comma
multiline_comment|/* enhanced mode (GFA1) */
DECL|member|hw_lfo
id|hw_lfo
suffix:colon
l_int|1
comma
multiline_comment|/* use hardware LFO */
DECL|member|sw_lfo
id|sw_lfo
suffix:colon
l_int|1
comma
multiline_comment|/* use software LFO */
DECL|member|effect
id|effect
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* use effect voices */
DECL|member|port
r_int
r_int
id|port
suffix:semicolon
multiline_comment|/* port of GF1 chip */
DECL|member|res_port1
r_struct
id|resource
op_star
id|res_port1
suffix:semicolon
DECL|member|res_port2
r_struct
id|resource
op_star
id|res_port2
suffix:semicolon
DECL|member|irq
r_int
id|irq
suffix:semicolon
multiline_comment|/* IRQ number */
DECL|member|dma1
r_int
id|dma1
suffix:semicolon
multiline_comment|/* DMA1 number */
DECL|member|dma2
r_int
id|dma2
suffix:semicolon
multiline_comment|/* DMA2 number */
DECL|member|memory
r_int
r_int
id|memory
suffix:semicolon
multiline_comment|/* GUS&squot;s DRAM size in bytes */
DECL|member|rom_memory
r_int
r_int
id|rom_memory
suffix:semicolon
multiline_comment|/* GUS&squot;s ROM size in bytes */
DECL|member|rom_present
r_int
r_int
id|rom_present
suffix:semicolon
multiline_comment|/* bitmask */
DECL|member|rom_banks
r_int
r_int
id|rom_banks
suffix:semicolon
multiline_comment|/* GUS&squot;s ROM banks */
DECL|member|mem_alloc
id|snd_gf1_mem_t
id|mem_alloc
suffix:semicolon
multiline_comment|/* registers */
DECL|member|reg_page
r_int
r_int
id|reg_page
suffix:semicolon
DECL|member|reg_regsel
r_int
r_int
id|reg_regsel
suffix:semicolon
DECL|member|reg_data8
r_int
r_int
id|reg_data8
suffix:semicolon
DECL|member|reg_data16
r_int
r_int
id|reg_data16
suffix:semicolon
DECL|member|reg_irqstat
r_int
r_int
id|reg_irqstat
suffix:semicolon
DECL|member|reg_dram
r_int
r_int
id|reg_dram
suffix:semicolon
DECL|member|reg_timerctrl
r_int
r_int
id|reg_timerctrl
suffix:semicolon
DECL|member|reg_timerdata
r_int
r_int
id|reg_timerdata
suffix:semicolon
DECL|member|ics_regs
r_int
r_char
id|ics_regs
(braket
l_int|6
)braket
(braket
l_int|2
)braket
suffix:semicolon
multiline_comment|/* --------- */
DECL|member|active_voices
r_int
r_char
id|active_voices
suffix:semicolon
multiline_comment|/* active voices */
DECL|member|active_voice
r_int
r_char
id|active_voice
suffix:semicolon
multiline_comment|/* selected voice (GF1PAGE register) */
DECL|member|voices
id|snd_gus_voice_t
id|voices
(braket
l_int|32
)braket
suffix:semicolon
multiline_comment|/* GF1 voices */
DECL|member|default_voice_address
r_int
r_int
id|default_voice_address
suffix:semicolon
DECL|member|playback_freq
r_int
r_int
id|playback_freq
suffix:semicolon
multiline_comment|/* GF1 playback (mixing) frequency */
DECL|member|mode
r_int
r_int
id|mode
suffix:semicolon
multiline_comment|/* see to SNDRV_GF1_MODE_XXXX */
DECL|member|volume_ramp
r_int
r_char
id|volume_ramp
suffix:semicolon
DECL|member|smooth_pan
r_int
r_char
id|smooth_pan
suffix:semicolon
DECL|member|full_range_pan
r_int
r_char
id|full_range_pan
suffix:semicolon
DECL|member|pad0
r_int
r_char
id|pad0
suffix:semicolon
DECL|member|lfos
r_int
r_char
op_star
id|lfos
suffix:semicolon
multiline_comment|/* interrupt handlers */
DECL|member|interrupt_handler_midi_out
r_void
(paren
op_star
id|interrupt_handler_midi_out
)paren
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
DECL|member|interrupt_handler_midi_in
r_void
(paren
op_star
id|interrupt_handler_midi_in
)paren
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
DECL|member|interrupt_handler_timer1
r_void
(paren
op_star
id|interrupt_handler_timer1
)paren
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
DECL|member|interrupt_handler_timer2
r_void
(paren
op_star
id|interrupt_handler_timer2
)paren
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
DECL|member|interrupt_handler_dma_write
r_void
(paren
op_star
id|interrupt_handler_dma_write
)paren
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
DECL|member|interrupt_handler_dma_read
r_void
(paren
op_star
id|interrupt_handler_dma_read
)paren
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
macro_line|#ifdef CONFIG_SND_DEBUG
DECL|member|interrupt_stat_midi_out
r_int
r_int
id|interrupt_stat_midi_out
suffix:semicolon
DECL|member|interrupt_stat_midi_in
r_int
r_int
id|interrupt_stat_midi_in
suffix:semicolon
DECL|member|interrupt_stat_timer1
r_int
r_int
id|interrupt_stat_timer1
suffix:semicolon
DECL|member|interrupt_stat_timer2
r_int
r_int
id|interrupt_stat_timer2
suffix:semicolon
DECL|member|interrupt_stat_dma_write
r_int
r_int
id|interrupt_stat_dma_write
suffix:semicolon
DECL|member|interrupt_stat_dma_read
r_int
r_int
id|interrupt_stat_dma_read
suffix:semicolon
DECL|member|interrupt_stat_voice_lost
r_int
r_int
id|interrupt_stat_voice_lost
suffix:semicolon
macro_line|#endif
multiline_comment|/* synthesizer */
DECL|member|seq_client
r_int
id|seq_client
suffix:semicolon
DECL|member|seq_ports
id|snd_gus_port_t
id|seq_ports
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|ilist
id|snd_seq_kinstr_list_t
op_star
id|ilist
suffix:semicolon
DECL|member|iwffff_ops
id|snd_iwffff_ops_t
id|iwffff_ops
suffix:semicolon
DECL|member|gf1_ops
id|snd_gf1_ops_t
id|gf1_ops
suffix:semicolon
DECL|member|simple_ops
id|snd_simple_ops_t
id|simple_ops
suffix:semicolon
multiline_comment|/* timer */
DECL|member|timer_enabled
r_int
r_int
id|timer_enabled
suffix:semicolon
DECL|member|timer1
id|snd_timer_t
op_star
id|timer1
suffix:semicolon
DECL|member|timer2
id|snd_timer_t
op_star
id|timer2
suffix:semicolon
multiline_comment|/* midi */
DECL|member|uart_cmd
r_int
r_int
id|uart_cmd
suffix:semicolon
DECL|member|uart_framing
r_int
r_int
id|uart_framing
suffix:semicolon
DECL|member|uart_overrun
r_int
r_int
id|uart_overrun
suffix:semicolon
multiline_comment|/* dma operations */
DECL|member|dma_flags
r_int
r_int
id|dma_flags
suffix:semicolon
DECL|member|dma_shared
r_int
r_int
id|dma_shared
suffix:semicolon
DECL|member|dma_data_pcm
id|snd_gf1_dma_block_t
op_star
id|dma_data_pcm
suffix:semicolon
DECL|member|dma_data_pcm_last
id|snd_gf1_dma_block_t
op_star
id|dma_data_pcm_last
suffix:semicolon
DECL|member|dma_data_synth
id|snd_gf1_dma_block_t
op_star
id|dma_data_synth
suffix:semicolon
DECL|member|dma_data_synth_last
id|snd_gf1_dma_block_t
op_star
id|dma_data_synth_last
suffix:semicolon
DECL|member|dma_ack
r_void
(paren
op_star
id|dma_ack
)paren
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_void
op_star
id|private_data
)paren
suffix:semicolon
DECL|member|dma_private_data
r_void
op_star
id|dma_private_data
suffix:semicolon
multiline_comment|/* pcm */
DECL|member|pcm_channels
r_int
id|pcm_channels
suffix:semicolon
DECL|member|pcm_alloc_voices
r_int
id|pcm_alloc_voices
suffix:semicolon
DECL|member|pcm_volume_level_left
r_int
r_int
id|pcm_volume_level_left
suffix:semicolon
DECL|member|pcm_volume_level_right
r_int
r_int
id|pcm_volume_level_right
suffix:semicolon
DECL|member|pcm_volume_level_left1
r_int
r_int
id|pcm_volume_level_left1
suffix:semicolon
DECL|member|pcm_volume_level_right1
r_int
r_int
id|pcm_volume_level_right1
suffix:semicolon
DECL|member|pcm_rcntrl_reg
r_int
r_char
id|pcm_rcntrl_reg
suffix:semicolon
DECL|member|pad_end
r_int
r_char
id|pad_end
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* main structure for GUS card */
DECL|struct|_snd_gus_card
r_struct
id|_snd_gus_card
(brace
DECL|member|card
id|snd_card_t
op_star
id|card
suffix:semicolon
r_int
r_int
DECL|member|initialized
id|initialized
suffix:colon
l_int|1
comma
multiline_comment|/* resources were initialized */
DECL|member|equal_irq
id|equal_irq
suffix:colon
l_int|1
comma
multiline_comment|/* GF1 and CODEC shares IRQ (GUS MAX only) */
DECL|member|equal_dma
id|equal_dma
suffix:colon
l_int|1
comma
multiline_comment|/* if dma channels are equal (not valid for daughter board) */
DECL|member|ics_flag
id|ics_flag
suffix:colon
l_int|1
comma
multiline_comment|/* have we ICS mixer chip */
DECL|member|ics_flipped
id|ics_flipped
suffix:colon
l_int|1
comma
multiline_comment|/* ICS mixer have flipped some channels? */
DECL|member|codec_flag
id|codec_flag
suffix:colon
l_int|1
comma
multiline_comment|/* have we CODEC chip? */
DECL|member|max_flag
id|max_flag
suffix:colon
l_int|1
comma
multiline_comment|/* have we GUS MAX card? */
DECL|member|max_ctrl_flag
id|max_ctrl_flag
suffix:colon
l_int|1
comma
multiline_comment|/* have we original GUS MAX card? */
DECL|member|daughter_flag
id|daughter_flag
suffix:colon
l_int|1
comma
multiline_comment|/* have we daughter board? */
DECL|member|interwave
id|interwave
suffix:colon
l_int|1
comma
multiline_comment|/* hey - we have InterWave card */
DECL|member|ess_flag
id|ess_flag
suffix:colon
l_int|1
comma
multiline_comment|/* ESS chip found... GUS Extreme */
DECL|member|ace_flag
id|ace_flag
suffix:colon
l_int|1
comma
multiline_comment|/* GUS ACE detected */
DECL|member|uart_enable
id|uart_enable
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* enable MIDI UART */
DECL|member|revision
r_int
r_int
id|revision
suffix:semicolon
multiline_comment|/* revision of chip */
DECL|member|max_cntrl_val
r_int
r_int
id|max_cntrl_val
suffix:semicolon
multiline_comment|/* GUS MAX control value */
DECL|member|mix_cntrl_reg
r_int
r_int
id|mix_cntrl_reg
suffix:semicolon
multiline_comment|/* mixer control register */
DECL|member|joystick_dac
r_int
r_int
id|joystick_dac
suffix:semicolon
multiline_comment|/* joystick DAC level */
DECL|member|timer_dev
r_int
id|timer_dev
suffix:semicolon
multiline_comment|/* timer device */
DECL|member|gf1
r_struct
id|_snd_gf1
id|gf1
suffix:semicolon
multiline_comment|/* gf1 specific variables */
DECL|member|pcm
id|snd_pcm_t
op_star
id|pcm
suffix:semicolon
DECL|member|pcm_cap_substream
id|snd_pcm_substream_t
op_star
id|pcm_cap_substream
suffix:semicolon
DECL|member|c_dma_size
r_int
r_int
id|c_dma_size
suffix:semicolon
DECL|member|c_period_size
r_int
r_int
id|c_period_size
suffix:semicolon
DECL|member|c_pos
r_int
r_int
id|c_pos
suffix:semicolon
DECL|member|midi_uart
id|snd_rawmidi_t
op_star
id|midi_uart
suffix:semicolon
DECL|member|midi_substream_output
id|snd_rawmidi_substream_t
op_star
id|midi_substream_output
suffix:semicolon
DECL|member|midi_substream_input
id|snd_rawmidi_substream_t
op_star
id|midi_substream_input
suffix:semicolon
DECL|member|seq_dev
id|snd_seq_device_t
op_star
id|seq_dev
suffix:semicolon
DECL|member|reg_lock
id|spinlock_t
id|reg_lock
suffix:semicolon
DECL|member|voice_alloc
id|spinlock_t
id|voice_alloc
suffix:semicolon
DECL|member|active_voice_lock
id|spinlock_t
id|active_voice_lock
suffix:semicolon
DECL|member|event_lock
id|spinlock_t
id|event_lock
suffix:semicolon
DECL|member|dma_lock
id|spinlock_t
id|dma_lock
suffix:semicolon
DECL|member|pcm_volume_level_lock
id|spinlock_t
id|pcm_volume_level_lock
suffix:semicolon
DECL|member|uart_cmd_lock
id|spinlock_t
id|uart_cmd_lock
suffix:semicolon
DECL|member|dma_mutex
r_struct
id|semaphore
id|dma_mutex
suffix:semicolon
DECL|member|register_mutex
r_struct
id|semaphore
id|register_mutex
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* I/O functions for GF1/InterWave chip - gus_io.c */
DECL|function|snd_gf1_select_voice
r_static
r_inline
r_void
id|snd_gf1_select_voice
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
id|voice
)paren
(brace
r_int
r_int
id|flags
suffix:semicolon
id|spin_lock_irqsave
c_func
(paren
op_amp
id|gus-&gt;active_voice_lock
comma
id|flags
)paren
suffix:semicolon
r_if
c_cond
(paren
id|voice
op_ne
id|gus-&gt;gf1.active_voice
)paren
(brace
id|gus-&gt;gf1.active_voice
op_assign
id|voice
suffix:semicolon
id|outb
c_func
(paren
id|voice
comma
id|GUSP
c_func
(paren
id|gus
comma
id|GF1PAGE
)paren
)paren
suffix:semicolon
)brace
id|spin_unlock_irqrestore
c_func
(paren
op_amp
id|gus-&gt;active_voice_lock
comma
id|flags
)paren
suffix:semicolon
)brace
DECL|function|snd_gf1_uart_cmd
r_static
r_inline
r_void
id|snd_gf1_uart_cmd
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|b
)paren
(brace
id|outb
c_func
(paren
id|gus-&gt;gf1.uart_cmd
op_assign
id|b
comma
id|GUSP
c_func
(paren
id|gus
comma
id|MIDICTRL
)paren
)paren
suffix:semicolon
)brace
DECL|function|snd_gf1_uart_stat
r_static
r_inline
r_int
r_char
id|snd_gf1_uart_stat
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
(brace
r_return
id|inb
c_func
(paren
id|GUSP
c_func
(paren
id|gus
comma
id|MIDISTAT
)paren
)paren
suffix:semicolon
)brace
DECL|function|snd_gf1_uart_put
r_static
r_inline
r_void
id|snd_gf1_uart_put
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|b
)paren
(brace
id|outb
c_func
(paren
id|b
comma
id|GUSP
c_func
(paren
id|gus
comma
id|MIDIDATA
)paren
)paren
suffix:semicolon
)brace
DECL|function|snd_gf1_uart_get
r_static
r_inline
r_int
r_char
id|snd_gf1_uart_get
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
(brace
r_return
id|inb
c_func
(paren
id|GUSP
c_func
(paren
id|gus
comma
id|MIDIDATA
)paren
)paren
suffix:semicolon
)brace
r_extern
r_void
id|snd_gf1_delay
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_ctrl_stop
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_write8
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
comma
r_int
r_char
id|data
)paren
suffix:semicolon
r_extern
r_int
r_char
id|snd_gf1_look8
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
)paren
suffix:semicolon
DECL|function|snd_gf1_read8
r_extern
r_inline
r_int
r_char
id|snd_gf1_read8
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
)paren
(brace
r_return
id|snd_gf1_look8
c_func
(paren
id|gus
comma
id|reg
op_or
l_int|0x80
)paren
suffix:semicolon
)brace
r_extern
r_void
id|snd_gf1_write16
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
comma
r_int
r_int
id|data
)paren
suffix:semicolon
r_extern
r_int
r_int
id|snd_gf1_look16
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
)paren
suffix:semicolon
DECL|function|snd_gf1_read16
r_extern
r_inline
r_int
r_int
id|snd_gf1_read16
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
)paren
(brace
r_return
id|snd_gf1_look16
c_func
(paren
id|gus
comma
id|reg
op_or
l_int|0x80
)paren
suffix:semicolon
)brace
r_extern
r_void
id|snd_gf1_adlib_write
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
comma
r_int
r_char
id|data
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_dram_addr
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_int
id|addr
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_poke
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_int
id|addr
comma
r_int
r_char
id|data
)paren
suffix:semicolon
r_extern
r_int
r_char
id|snd_gf1_peek
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_int
id|addr
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_pokew
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_int
id|addr
comma
r_int
r_int
id|data
)paren
suffix:semicolon
r_extern
r_int
r_int
id|snd_gf1_peekw
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_int
id|addr
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_dram_setmem
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_int
id|addr
comma
r_int
r_int
id|value
comma
r_int
r_int
id|count
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_write_addr
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
comma
r_int
r_int
id|addr
comma
r_int
id|w_16bit
)paren
suffix:semicolon
r_extern
r_int
r_int
id|snd_gf1_read_addr
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
comma
r_int
id|w_16bit
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_i_ctrl_stop
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_i_write8
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
comma
r_int
r_char
id|data
)paren
suffix:semicolon
r_extern
r_int
r_char
id|snd_gf1_i_look8
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_i_write16
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
comma
r_int
r_int
id|data
)paren
suffix:semicolon
DECL|function|snd_gf1_i_read8
r_extern
r_inline
r_int
r_char
id|snd_gf1_i_read8
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
)paren
(brace
r_return
id|snd_gf1_i_look8
c_func
(paren
id|gus
comma
id|reg
op_or
l_int|0x80
)paren
suffix:semicolon
)brace
r_extern
r_int
r_int
id|snd_gf1_i_look16
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
)paren
suffix:semicolon
DECL|function|snd_gf1_i_read16
r_extern
r_inline
r_int
r_int
id|snd_gf1_i_read16
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
)paren
(brace
r_return
id|snd_gf1_i_look16
c_func
(paren
id|gus
comma
id|reg
op_or
l_int|0x80
)paren
suffix:semicolon
)brace
r_extern
r_void
id|snd_gf1_i_adlib_write
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
comma
r_int
r_char
id|data
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_i_write_addr
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
comma
r_int
r_int
id|addr
comma
r_int
id|w_16bit
)paren
suffix:semicolon
r_extern
r_int
r_int
id|snd_gf1_i_read_addr
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_char
id|reg
comma
r_int
id|w_16bit
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_select_active_voices
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
multiline_comment|/* gus_lfo.c */
DECL|struct|_SND_IW_LFO_PROGRAM
r_struct
id|_SND_IW_LFO_PROGRAM
(brace
DECL|member|freq_and_control
r_int
r_int
id|freq_and_control
suffix:semicolon
DECL|member|depth_final
r_int
r_char
id|depth_final
suffix:semicolon
DECL|member|depth_inc
r_int
r_char
id|depth_inc
suffix:semicolon
DECL|member|twave
r_int
r_int
id|twave
suffix:semicolon
DECL|member|depth
r_int
r_int
id|depth
suffix:semicolon
)brace
suffix:semicolon
macro_line|#if 0
r_extern
r_void
id|snd_gf1_lfo_effect_interrupt
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
id|snd_gf1_voice_t
op_star
id|voice
)paren
suffix:semicolon
macro_line|#endif
r_extern
r_void
id|snd_gf1_lfo_init
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_lfo_done
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_lfo_program
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
id|voice
comma
r_int
id|lfo_type
comma
r_struct
id|_SND_IW_LFO_PROGRAM
op_star
id|program
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_lfo_enable
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
id|voice
comma
r_int
id|lfo_type
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_lfo_disable
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
id|voice
comma
r_int
id|lfo_type
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_lfo_change_freq
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
id|voice
comma
r_int
id|lfo_type
comma
r_int
id|freq
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_lfo_change_depth
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
id|voice
comma
r_int
id|lfo_type
comma
r_int
id|depth
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_lfo_setup
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
id|voice
comma
r_int
id|lfo_type
comma
r_int
id|freq
comma
r_int
id|current_depth
comma
r_int
id|depth
comma
r_int
id|sweep
comma
r_int
id|shape
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_lfo_shutdown
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
id|voice
comma
r_int
id|lfo_type
)paren
suffix:semicolon
macro_line|#if 0
r_extern
r_void
id|snd_gf1_lfo_command
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
id|voice
comma
r_int
r_char
op_star
id|command
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/* gus_mem.c */
r_void
id|snd_gf1_mem_lock
c_func
(paren
id|snd_gf1_mem_t
op_star
id|alloc
comma
r_int
id|xup
)paren
suffix:semicolon
r_int
id|snd_gf1_mem_xfree
c_func
(paren
id|snd_gf1_mem_t
op_star
id|alloc
comma
id|snd_gf1_mem_block_t
op_star
id|block
)paren
suffix:semicolon
id|snd_gf1_mem_block_t
op_star
id|snd_gf1_mem_look
c_func
(paren
id|snd_gf1_mem_t
op_star
id|alloc
comma
r_int
r_int
id|address
)paren
suffix:semicolon
id|snd_gf1_mem_block_t
op_star
id|snd_gf1_mem_share
c_func
(paren
id|snd_gf1_mem_t
op_star
id|alloc
comma
r_int
r_int
op_star
id|share_id
)paren
suffix:semicolon
id|snd_gf1_mem_block_t
op_star
id|snd_gf1_mem_alloc
c_func
(paren
id|snd_gf1_mem_t
op_star
id|alloc
comma
r_int
id|owner
comma
r_char
op_star
id|name
comma
r_int
id|size
comma
r_int
id|w_16
comma
r_int
id|align
comma
r_int
r_int
op_star
id|share_id
)paren
suffix:semicolon
r_int
id|snd_gf1_mem_free
c_func
(paren
id|snd_gf1_mem_t
op_star
id|alloc
comma
r_int
r_int
id|address
)paren
suffix:semicolon
r_int
id|snd_gf1_mem_free_owner
c_func
(paren
id|snd_gf1_mem_t
op_star
id|alloc
comma
r_int
id|owner
)paren
suffix:semicolon
r_int
id|snd_gf1_mem_init
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
r_int
id|snd_gf1_mem_done
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
multiline_comment|/* gus_mem_proc.c */
r_int
id|snd_gf1_mem_proc_init
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
multiline_comment|/* gus_dma.c */
r_void
id|snd_gf1_dma_program
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_int
id|addr
comma
r_int
r_int
id|buf_addr
comma
r_int
r_int
id|count
comma
r_int
r_int
id|cmd
)paren
suffix:semicolon
r_void
id|snd_gf1_dma_ack
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
r_int
id|snd_gf1_dma_init
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
r_int
id|snd_gf1_dma_done
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
r_int
id|snd_gf1_dma_transfer_block
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
id|snd_gf1_dma_block_t
op_star
id|block
comma
r_int
id|atomic
comma
r_int
id|synth
)paren
suffix:semicolon
multiline_comment|/* gus_volume.c */
r_int
r_int
id|snd_gf1_lvol_to_gvol_raw
c_func
(paren
r_int
r_int
id|vol
)paren
suffix:semicolon
r_int
r_int
id|snd_gf1_gvol_to_lvol_raw
c_func
(paren
r_int
r_int
id|gf1_vol
)paren
suffix:semicolon
r_int
r_int
id|snd_gf1_calc_ramp_rate
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_int
id|start
comma
r_int
r_int
id|end
comma
r_int
r_int
id|us
)paren
suffix:semicolon
r_int
r_int
id|snd_gf1_translate_freq
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_int
id|freq2
)paren
suffix:semicolon
r_int
r_int
id|snd_gf1_compute_pitchbend
c_func
(paren
r_int
r_int
id|pitchbend
comma
r_int
r_int
id|sens
)paren
suffix:semicolon
r_int
r_int
id|snd_gf1_compute_freq
c_func
(paren
r_int
r_int
id|freq
comma
r_int
r_int
id|rate
comma
r_int
r_int
id|mix_rate
)paren
suffix:semicolon
multiline_comment|/* gus_reset.c */
r_void
id|snd_gf1_set_default_handlers
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_int
id|what
)paren
suffix:semicolon
r_void
id|snd_gf1_smart_stop_voice
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_int
id|voice
)paren
suffix:semicolon
r_void
id|snd_gf1_stop_voice
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_int
id|voice
)paren
suffix:semicolon
r_void
id|snd_gf1_clear_voices
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_int
id|v_min
comma
r_int
r_int
id|v_max
)paren
suffix:semicolon
r_void
id|snd_gf1_stop_voices
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_int
id|v_min
comma
r_int
r_int
id|v_max
)paren
suffix:semicolon
id|snd_gus_voice_t
op_star
id|snd_gf1_alloc_voice
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
id|type
comma
r_int
id|client
comma
r_int
id|port
)paren
suffix:semicolon
r_void
id|snd_gf1_free_voice
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
id|snd_gus_voice_t
op_star
id|voice
)paren
suffix:semicolon
r_int
id|snd_gf1_start
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
r_int
id|snd_gf1_stop
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
multiline_comment|/* gus_mixer.c */
r_int
id|snd_gf1_new_mixer
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
multiline_comment|/* gus_pcm.c */
r_int
id|snd_gf1_pcm_new
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
id|pcm_dev
comma
r_int
id|control_index
comma
id|snd_pcm_t
op_star
op_star
id|rpcm
)paren
suffix:semicolon
macro_line|#ifdef CONFIG_SND_DEBUG
r_extern
r_void
id|snd_gf1_print_voice_registers
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_print_global_registers
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_print_setup_registers
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
r_extern
r_void
id|snd_gf1_peek_print_block
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
r_int
id|addr
comma
r_int
id|count
comma
r_int
id|w_16bit
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/* gus.c */
r_int
id|snd_gus_use_inc
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
r_void
id|snd_gus_use_dec
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
r_int
id|snd_gus_create
c_func
(paren
id|snd_card_t
op_star
id|card
comma
r_int
r_int
id|port
comma
r_int
id|irq
comma
r_int
id|dma1
comma
r_int
id|dma2
comma
r_int
id|timer_dev
comma
r_int
id|voices
comma
r_int
id|pcm_channels
comma
r_int
id|effect
comma
id|snd_gus_card_t
op_star
op_star
id|rgus
)paren
suffix:semicolon
r_int
id|snd_gus_initialize
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
multiline_comment|/* gus_irq.c */
r_void
id|snd_gus_interrupt
c_func
(paren
r_int
id|irq
comma
r_void
op_star
id|dev_id
comma
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
macro_line|#ifdef CONFIG_SND_DEBUG
r_void
id|snd_gus_irq_profile_init
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/* gus_uart.c */
r_int
id|snd_gf1_rawmidi_new
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_int
id|device
comma
id|snd_rawmidi_t
op_star
op_star
id|rrawmidi
)paren
suffix:semicolon
macro_line|#if 0
r_extern
r_void
id|snd_engine_instrument_register
c_func
(paren
r_int
r_int
id|mode
comma
r_struct
id|_SND_INSTRUMENT_VOICE_COMMANDS
op_star
id|voice_cmds
comma
r_struct
id|_SND_INSTRUMENT_NOTE_COMMANDS
op_star
id|note_cmds
comma
r_struct
id|_SND_INSTRUMENT_CHANNEL_COMMANDS
op_star
id|channel_cmds
)paren
suffix:semicolon
r_extern
r_int
id|snd_engine_instrument_register_ask
c_func
(paren
r_int
r_int
id|mode
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/* gus_dram.c */
r_int
id|snd_gus_dram_write
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_char
op_star
id|ptr
comma
r_int
r_int
id|addr
comma
r_int
r_int
id|size
)paren
suffix:semicolon
r_int
id|snd_gus_dram_read
c_func
(paren
id|snd_gus_card_t
op_star
id|gus
comma
r_char
op_star
id|ptr
comma
r_int
r_int
id|addr
comma
r_int
r_int
id|size
comma
r_int
id|rom
)paren
suffix:semicolon
macro_line|#if defined(CONFIG_SND_SEQUENCER) || defined(CONFIG_SND_SEQUENCER_MODULE)
multiline_comment|/* gus_sample.c */
r_void
id|snd_gus_sample_event
c_func
(paren
id|snd_seq_event_t
op_star
id|ev
comma
id|snd_gus_port_t
op_star
id|p
)paren
suffix:semicolon
multiline_comment|/* gus_simple.c */
r_void
id|snd_gf1_simple_init
c_func
(paren
id|snd_gus_voice_t
op_star
id|voice
)paren
suffix:semicolon
multiline_comment|/* gus_instr.c */
r_int
id|snd_gus_iwffff_put_sample
c_func
(paren
r_void
op_star
id|private_data
comma
id|iwffff_wave_t
op_star
id|wave
comma
r_char
op_star
id|data
comma
r_int
id|len
comma
r_int
id|atomic
)paren
suffix:semicolon
r_int
id|snd_gus_iwffff_get_sample
c_func
(paren
r_void
op_star
id|private_data
comma
id|iwffff_wave_t
op_star
id|wave
comma
r_char
op_star
id|data
comma
r_int
id|len
comma
r_int
id|atomic
)paren
suffix:semicolon
r_int
id|snd_gus_iwffff_remove_sample
c_func
(paren
r_void
op_star
id|private_data
comma
id|iwffff_wave_t
op_star
id|wave
comma
r_int
id|atomic
)paren
suffix:semicolon
r_int
id|snd_gus_gf1_put_sample
c_func
(paren
r_void
op_star
id|private_data
comma
id|gf1_wave_t
op_star
id|wave
comma
r_char
op_star
id|data
comma
r_int
id|len
comma
r_int
id|atomic
)paren
suffix:semicolon
r_int
id|snd_gus_gf1_get_sample
c_func
(paren
r_void
op_star
id|private_data
comma
id|gf1_wave_t
op_star
id|wave
comma
r_char
op_star
id|data
comma
r_int
id|len
comma
r_int
id|atomic
)paren
suffix:semicolon
r_int
id|snd_gus_gf1_remove_sample
c_func
(paren
r_void
op_star
id|private_data
comma
id|gf1_wave_t
op_star
id|wave
comma
r_int
id|atomic
)paren
suffix:semicolon
r_int
id|snd_gus_simple_put_sample
c_func
(paren
r_void
op_star
id|private_data
comma
id|simple_instrument_t
op_star
id|instr
comma
r_char
op_star
id|data
comma
r_int
id|len
comma
r_int
id|atomic
)paren
suffix:semicolon
r_int
id|snd_gus_simple_get_sample
c_func
(paren
r_void
op_star
id|private_data
comma
id|simple_instrument_t
op_star
id|instr
comma
r_char
op_star
id|data
comma
r_int
id|len
comma
r_int
id|atomic
)paren
suffix:semicolon
r_int
id|snd_gus_simple_remove_sample
c_func
(paren
r_void
op_star
id|private_data
comma
id|simple_instrument_t
op_star
id|instr
comma
r_int
id|atomic
)paren
suffix:semicolon
macro_line|#endif /* CONFIG_SND_SEQUENCER */
macro_line|#endif /* __SOUND_GUS_H */
eof
