macro_line|#ifndef __SOUND_PCM_OSS_H
DECL|macro|__SOUND_PCM_OSS_H
mdefine_line|#define __SOUND_PCM_OSS_H
multiline_comment|/*&n; *  Digital Audio (PCM) - OSS compatibility abstract layer&n; *  Copyright (c) by Jaroslav Kysela &lt;perex@suse.cz&gt;&n; *&n; *&n; *   This program is free software; you can redistribute it and/or modify&n; *   it under the terms of the GNU General Public License as published by&n; *   the Free Software Foundation; either version 2 of the License, or&n; *   (at your option) any later version.&n; *&n; *   This program is distributed in the hope that it will be useful,&n; *   but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *   GNU General Public License for more details.&n; *&n; *   You should have received a copy of the GNU General Public License&n; *   along with this program; if not, write to the Free Software&n; *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA&n; *&n; */
DECL|typedef|snd_pcm_plugin_t
r_typedef
r_struct
id|_snd_pcm_plugin
id|snd_pcm_plugin_t
suffix:semicolon
DECL|typedef|snd_pcm_oss_setup_t
r_typedef
r_struct
id|_snd_pcm_oss_setup
id|snd_pcm_oss_setup_t
suffix:semicolon
DECL|struct|_snd_pcm_oss_setup
r_struct
id|_snd_pcm_oss_setup
(brace
DECL|member|task_name
r_char
op_star
id|task_name
suffix:semicolon
DECL|member|disable
r_int
r_int
id|disable
suffix:colon
l_int|1
comma
DECL|member|direct
id|direct
suffix:colon
l_int|1
comma
DECL|member|block
id|block
suffix:colon
l_int|1
comma
DECL|member|nonblock
id|nonblock
suffix:colon
l_int|1
comma
DECL|member|partialfrag
id|partialfrag
suffix:colon
l_int|1
comma
DECL|member|nosilence
id|nosilence
suffix:colon
l_int|1
suffix:semicolon
DECL|member|periods
r_int
r_int
id|periods
suffix:semicolon
DECL|member|period_size
r_int
r_int
id|period_size
suffix:semicolon
DECL|member|next
id|snd_pcm_oss_setup_t
op_star
id|next
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|_snd_pcm_oss_runtime
r_typedef
r_struct
id|_snd_pcm_oss_runtime
(brace
DECL|member|params
r_int
id|params
suffix:colon
l_int|1
comma
multiline_comment|/* format/parameter change */
DECL|member|prepare
id|prepare
suffix:colon
l_int|1
comma
multiline_comment|/* need to prepare the operation */
DECL|member|trigger
id|trigger
suffix:colon
l_int|1
comma
multiline_comment|/* trigger flag */
DECL|member|sync_trigger
id|sync_trigger
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* sync trigger flag */
DECL|member|rate
r_int
id|rate
suffix:semicolon
multiline_comment|/* requested rate */
DECL|member|format
r_int
id|format
suffix:semicolon
multiline_comment|/* requested OSS format */
DECL|member|channels
r_int
r_int
id|channels
suffix:semicolon
multiline_comment|/* requested channels */
DECL|member|fragshift
r_int
r_int
id|fragshift
suffix:semicolon
DECL|member|maxfrags
r_int
r_int
id|maxfrags
suffix:semicolon
DECL|member|subdivision
r_int
r_int
id|subdivision
suffix:semicolon
multiline_comment|/* requested subdivision */
DECL|member|period_bytes
r_int
id|period_bytes
suffix:semicolon
multiline_comment|/* requested period size */
DECL|member|period_ptr
r_int
id|period_ptr
suffix:semicolon
multiline_comment|/* actual write pointer to period */
DECL|member|periods
r_int
r_int
id|periods
suffix:semicolon
DECL|member|buffer_bytes
r_int
id|buffer_bytes
suffix:semicolon
multiline_comment|/* requested buffer size */
DECL|member|bytes
r_int
id|bytes
suffix:semicolon
multiline_comment|/* total # bytes processed */
DECL|member|mmap_bytes
r_int
id|mmap_bytes
suffix:semicolon
DECL|member|buffer
r_char
op_star
id|buffer
suffix:semicolon
multiline_comment|/* vmallocated period */
DECL|member|buffer_used
r_int
id|buffer_used
suffix:semicolon
multiline_comment|/* used length from period buffer */
DECL|member|plugin_first
id|snd_pcm_plugin_t
op_star
id|plugin_first
suffix:semicolon
DECL|member|plugin_last
id|snd_pcm_plugin_t
op_star
id|plugin_last
suffix:semicolon
DECL|member|prev_hw_ptr_interrupt
r_int
r_int
id|prev_hw_ptr_interrupt
suffix:semicolon
DECL|typedef|snd_pcm_oss_runtime_t
)brace
id|snd_pcm_oss_runtime_t
suffix:semicolon
DECL|struct|_snd_pcm_oss_file
r_typedef
r_struct
id|_snd_pcm_oss_file
(brace
DECL|member|streams
id|snd_pcm_substream_t
op_star
id|streams
(braket
l_int|2
)braket
suffix:semicolon
DECL|typedef|snd_pcm_oss_file_t
)brace
id|snd_pcm_oss_file_t
suffix:semicolon
DECL|struct|_snd_pcm_oss_substream
r_typedef
r_struct
id|_snd_pcm_oss_substream
(brace
DECL|member|oss
r_int
id|oss
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* oss mode */
DECL|member|setup
id|snd_pcm_oss_setup_t
op_star
id|setup
suffix:semicolon
multiline_comment|/* active setup */
DECL|member|file
id|snd_pcm_oss_file_t
op_star
id|file
suffix:semicolon
DECL|typedef|snd_pcm_oss_substream_t
)brace
id|snd_pcm_oss_substream_t
suffix:semicolon
DECL|struct|_snd_pcm_oss_stream
r_typedef
r_struct
id|_snd_pcm_oss_stream
(brace
DECL|member|setup_list
id|snd_pcm_oss_setup_t
op_star
id|setup_list
suffix:semicolon
multiline_comment|/* setup list */
DECL|member|setup_mutex
r_struct
id|semaphore
id|setup_mutex
suffix:semicolon
DECL|member|proc_entry
id|snd_info_entry_t
op_star
id|proc_entry
suffix:semicolon
DECL|typedef|snd_pcm_oss_stream_t
)brace
id|snd_pcm_oss_stream_t
suffix:semicolon
DECL|struct|_snd_pcm_oss
r_typedef
r_struct
id|_snd_pcm_oss
(brace
DECL|member|reg
r_int
id|reg
suffix:semicolon
DECL|member|reg_mask
r_int
r_int
id|reg_mask
suffix:semicolon
DECL|typedef|snd_pcm_oss_t
)brace
id|snd_pcm_oss_t
suffix:semicolon
macro_line|#endif /* __SOUND_PCM_OSS_H */
eof
