macro_line|#ifndef __SOUND_CS8403_H
DECL|macro|__SOUND_CS8403_H
mdefine_line|#define __SOUND_CS8403_H
multiline_comment|/*&n; *  Routines for Cirrus Logic CS8403/CS8404A IEC958 (S/PDIF) Transmitter&n; *  Copyright (c) by Jaroslav Kysela &lt;perex@suse.cz&gt;,&n; *&t;&t;     Takashi Iwai &lt;tiwai@suse.de&gt;&n; *&n; *&n; *   This program is free software; you can redistribute it and/or modify&n; *   it under the terms of the GNU General Public License as published by&n; *   the Free Software Foundation; either version 2 of the License, or&n; *   (at your option) any later version.&n; *&n; *   This program is distributed in the hope that it will be useful,&n; *   but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *   GNU General Public License for more details.&n; *&n; *   You should have received a copy of the GNU General Public License&n; *   along with this program; if not, write to the Free Software&n; *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA&n; *&n; */
macro_line|#ifdef SND_CS8403
macro_line|#ifndef SND_CS8403_DECL
DECL|macro|SND_CS8403_DECL
mdefine_line|#define SND_CS8403_DECL static
macro_line|#endif
macro_line|#ifndef SND_CS8403_DECODE
DECL|macro|SND_CS8403_DECODE
mdefine_line|#define SND_CS8403_DECODE snd_cs8403_decode_spdif_bits
macro_line|#endif
macro_line|#ifndef SND_CS8403_ENCODE
DECL|macro|SND_CS8403_ENCODE
mdefine_line|#define SND_CS8403_ENCODE snd_cs8403_encode_spdif_bits
macro_line|#endif
DECL|function|SND_CS8403_DECODE
id|SND_CS8403_DECL
r_void
id|SND_CS8403_DECODE
c_func
(paren
id|snd_aes_iec958_t
op_star
id|diga
comma
r_int
r_char
id|bits
)paren
(brace
r_if
c_cond
(paren
id|bits
op_amp
l_int|0x01
)paren
(brace
multiline_comment|/* consumer */
r_if
c_cond
(paren
op_logical_neg
(paren
id|bits
op_amp
l_int|0x02
)paren
)paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_NONAUDIO
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
(paren
id|bits
op_amp
l_int|0x08
)paren
)paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_CON_NOT_COPYRIGHT
suffix:semicolon
r_switch
c_cond
(paren
id|bits
op_amp
l_int|0x10
)paren
(brace
r_case
l_int|0x10
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_CON_EMPHASIS_NONE
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x00
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_CON_EMPHASIS_5015
suffix:semicolon
r_break
suffix:semicolon
)brace
r_if
c_cond
(paren
op_logical_neg
(paren
id|bits
op_amp
l_int|0x80
)paren
)paren
id|diga-&gt;status
(braket
l_int|1
)braket
op_or_assign
id|IEC958_AES1_CON_ORIGINAL
suffix:semicolon
r_switch
c_cond
(paren
id|bits
op_amp
l_int|0x60
)paren
(brace
r_case
l_int|0x00
suffix:colon
id|diga-&gt;status
(braket
l_int|1
)braket
op_or_assign
id|IEC958_AES1_CON_MAGNETIC_ID
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x20
suffix:colon
id|diga-&gt;status
(braket
l_int|1
)braket
op_or_assign
id|IEC958_AES1_CON_DIGDIGCONV_ID
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x40
suffix:colon
id|diga-&gt;status
(braket
l_int|1
)braket
op_or_assign
id|IEC958_AES1_CON_LASEROPT_ID
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x60
suffix:colon
id|diga-&gt;status
(braket
l_int|1
)braket
op_or_assign
id|IEC958_AES1_CON_GENERAL
suffix:semicolon
r_break
suffix:semicolon
)brace
r_switch
c_cond
(paren
id|bits
op_amp
l_int|0x06
)paren
(brace
r_case
l_int|0x00
suffix:colon
id|diga-&gt;status
(braket
l_int|3
)braket
op_or_assign
id|IEC958_AES3_CON_FS_44100
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x02
suffix:colon
id|diga-&gt;status
(braket
l_int|3
)braket
op_or_assign
id|IEC958_AES3_CON_FS_48000
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x04
suffix:colon
id|diga-&gt;status
(braket
l_int|3
)braket
op_or_assign
id|IEC958_AES3_CON_FS_32000
suffix:semicolon
r_break
suffix:semicolon
)brace
)brace
r_else
(brace
id|diga-&gt;status
(braket
l_int|0
)braket
op_assign
id|IEC958_AES0_PROFESSIONAL
suffix:semicolon
r_switch
c_cond
(paren
id|bits
op_amp
l_int|0x18
)paren
(brace
r_case
l_int|0x00
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_PRO_FS_32000
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x10
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_PRO_FS_44100
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x08
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_PRO_FS_48000
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x18
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_PRO_FS_NOTID
suffix:semicolon
r_break
suffix:semicolon
)brace
r_switch
c_cond
(paren
id|bits
op_amp
l_int|0x60
)paren
(brace
r_case
l_int|0x20
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_PRO_EMPHASIS_NONE
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x40
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_PRO_EMPHASIS_5015
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x00
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_PRO_EMPHASIS_CCITT
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x60
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_PRO_EMPHASIS_NOTID
suffix:semicolon
r_break
suffix:semicolon
)brace
r_if
c_cond
(paren
id|bits
op_amp
l_int|0x80
)paren
id|diga-&gt;status
(braket
l_int|1
)braket
op_or_assign
id|IEC958_AES1_PRO_MODE_STEREOPHONIC
suffix:semicolon
)brace
)brace
DECL|function|SND_CS8403_ENCODE
id|SND_CS8403_DECL
r_int
r_char
id|SND_CS8403_ENCODE
c_func
(paren
id|snd_aes_iec958_t
op_star
id|diga
)paren
(brace
r_int
r_char
id|bits
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
(paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_amp
id|IEC958_AES0_PROFESSIONAL
)paren
)paren
(brace
id|bits
op_assign
l_int|0x01
suffix:semicolon
multiline_comment|/* consumer mode */
r_if
c_cond
(paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_amp
id|IEC958_AES0_NONAUDIO
)paren
id|bits
op_and_assign
op_complement
l_int|0x02
suffix:semicolon
r_else
id|bits
op_or_assign
l_int|0x02
suffix:semicolon
r_if
c_cond
(paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_amp
id|IEC958_AES0_CON_NOT_COPYRIGHT
)paren
id|bits
op_and_assign
op_complement
l_int|0x08
suffix:semicolon
r_else
id|bits
op_or_assign
l_int|0x08
suffix:semicolon
r_switch
c_cond
(paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_amp
id|IEC958_AES0_CON_EMPHASIS
)paren
(brace
r_default
suffix:colon
r_case
id|IEC958_AES0_CON_EMPHASIS_NONE
suffix:colon
id|bits
op_or_assign
l_int|0x10
suffix:semicolon
r_break
suffix:semicolon
r_case
id|IEC958_AES0_CON_EMPHASIS_5015
suffix:colon
id|bits
op_or_assign
l_int|0x00
suffix:semicolon
r_break
suffix:semicolon
)brace
r_if
c_cond
(paren
id|diga-&gt;status
(braket
l_int|1
)braket
op_amp
id|IEC958_AES1_CON_ORIGINAL
)paren
id|bits
op_and_assign
op_complement
l_int|0x80
suffix:semicolon
r_else
id|bits
op_or_assign
l_int|0x80
suffix:semicolon
r_if
c_cond
(paren
(paren
id|diga-&gt;status
(braket
l_int|1
)braket
op_amp
id|IEC958_AES1_CON_CATEGORY
)paren
op_eq
id|IEC958_AES1_CON_GENERAL
)paren
id|bits
op_or_assign
l_int|0x60
suffix:semicolon
r_else
(brace
r_switch
c_cond
(paren
id|diga-&gt;status
(braket
l_int|1
)braket
op_amp
id|IEC958_AES1_CON_MAGNETIC_MASK
)paren
(brace
r_case
id|IEC958_AES1_CON_MAGNETIC_ID
suffix:colon
id|bits
op_or_assign
l_int|0x00
suffix:semicolon
r_break
suffix:semicolon
r_case
id|IEC958_AES1_CON_DIGDIGCONV_ID
suffix:colon
id|bits
op_or_assign
l_int|0x20
suffix:semicolon
r_break
suffix:semicolon
r_default
suffix:colon
r_case
id|IEC958_AES1_CON_LASEROPT_ID
suffix:colon
id|bits
op_or_assign
l_int|0x40
suffix:semicolon
r_break
suffix:semicolon
)brace
)brace
r_switch
c_cond
(paren
id|diga-&gt;status
(braket
l_int|3
)braket
op_amp
id|IEC958_AES3_CON_FS
)paren
(brace
r_default
suffix:colon
r_case
id|IEC958_AES3_CON_FS_44100
suffix:colon
id|bits
op_or_assign
l_int|0x00
suffix:semicolon
r_break
suffix:semicolon
r_case
id|IEC958_AES3_CON_FS_48000
suffix:colon
id|bits
op_or_assign
l_int|0x02
suffix:semicolon
r_break
suffix:semicolon
r_case
id|IEC958_AES3_CON_FS_32000
suffix:colon
id|bits
op_or_assign
l_int|0x04
suffix:semicolon
r_break
suffix:semicolon
)brace
)brace
r_else
(brace
id|bits
op_assign
l_int|0x00
suffix:semicolon
multiline_comment|/* professional mode */
r_if
c_cond
(paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_amp
id|IEC958_AES0_NONAUDIO
)paren
id|bits
op_and_assign
op_complement
l_int|0x02
suffix:semicolon
r_else
id|bits
op_or_assign
l_int|0x02
suffix:semicolon
multiline_comment|/* CHECKME: I&squot;m not sure about the bit order in val here */
r_switch
c_cond
(paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_amp
id|IEC958_AES0_PRO_FS
)paren
(brace
r_case
id|IEC958_AES0_PRO_FS_32000
suffix:colon
id|bits
op_or_assign
l_int|0x00
suffix:semicolon
r_break
suffix:semicolon
r_case
id|IEC958_AES0_PRO_FS_44100
suffix:colon
id|bits
op_or_assign
l_int|0x10
suffix:semicolon
r_break
suffix:semicolon
multiline_comment|/* 44.1kHz */
r_case
id|IEC958_AES0_PRO_FS_48000
suffix:colon
id|bits
op_or_assign
l_int|0x08
suffix:semicolon
r_break
suffix:semicolon
multiline_comment|/* 48kHz */
r_default
suffix:colon
r_case
id|IEC958_AES0_PRO_FS_NOTID
suffix:colon
id|bits
op_or_assign
l_int|0x18
suffix:semicolon
r_break
suffix:semicolon
)brace
r_switch
c_cond
(paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_amp
id|IEC958_AES0_PRO_EMPHASIS
)paren
(brace
r_case
id|IEC958_AES0_PRO_EMPHASIS_NONE
suffix:colon
id|bits
op_or_assign
l_int|0x20
suffix:semicolon
r_break
suffix:semicolon
r_case
id|IEC958_AES0_PRO_EMPHASIS_5015
suffix:colon
id|bits
op_or_assign
l_int|0x40
suffix:semicolon
r_break
suffix:semicolon
r_case
id|IEC958_AES0_PRO_EMPHASIS_CCITT
suffix:colon
id|bits
op_or_assign
l_int|0x00
suffix:semicolon
r_break
suffix:semicolon
r_default
suffix:colon
r_case
id|IEC958_AES0_PRO_EMPHASIS_NOTID
suffix:colon
id|bits
op_or_assign
l_int|0x60
suffix:semicolon
r_break
suffix:semicolon
)brace
r_switch
c_cond
(paren
id|diga-&gt;status
(braket
l_int|1
)braket
op_amp
id|IEC958_AES1_PRO_MODE
)paren
(brace
r_case
id|IEC958_AES1_PRO_MODE_TWO
suffix:colon
r_case
id|IEC958_AES1_PRO_MODE_STEREOPHONIC
suffix:colon
id|bits
op_or_assign
l_int|0x00
suffix:semicolon
r_break
suffix:semicolon
r_default
suffix:colon
id|bits
op_or_assign
l_int|0x80
suffix:semicolon
r_break
suffix:semicolon
)brace
)brace
r_return
id|bits
suffix:semicolon
)brace
macro_line|#endif /* SND_CS8403 */
macro_line|#ifdef SND_CS8404
macro_line|#ifndef SND_CS8404_DECL
DECL|macro|SND_CS8404_DECL
mdefine_line|#define SND_CS8404_DECL static
macro_line|#endif
macro_line|#ifndef SND_CS8404_DECODE
DECL|macro|SND_CS8404_DECODE
mdefine_line|#define SND_CS8404_DECODE snd_cs8404_decode_spdif_bits
macro_line|#endif
macro_line|#ifndef SND_CS8404_ENCODE
DECL|macro|SND_CS8404_ENCODE
mdefine_line|#define SND_CS8404_ENCODE snd_cs8404_encode_spdif_bits
macro_line|#endif
DECL|function|SND_CS8404_DECODE
id|SND_CS8404_DECL
r_void
id|SND_CS8404_DECODE
c_func
(paren
id|snd_aes_iec958_t
op_star
id|diga
comma
r_int
r_char
id|bits
)paren
(brace
r_if
c_cond
(paren
id|bits
op_amp
l_int|0x10
)paren
(brace
multiline_comment|/* consumer */
r_if
c_cond
(paren
op_logical_neg
(paren
id|bits
op_amp
l_int|0x20
)paren
)paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_CON_NOT_COPYRIGHT
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
(paren
id|bits
op_amp
l_int|0x40
)paren
)paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_CON_EMPHASIS_5015
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
(paren
id|bits
op_amp
l_int|0x80
)paren
)paren
id|diga-&gt;status
(braket
l_int|1
)braket
op_or_assign
id|IEC958_AES1_CON_ORIGINAL
suffix:semicolon
r_switch
c_cond
(paren
id|bits
op_amp
l_int|0x03
)paren
(brace
r_case
l_int|0x00
suffix:colon
id|diga-&gt;status
(braket
l_int|1
)braket
op_or_assign
id|IEC958_AES1_CON_DAT
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x03
suffix:colon
id|diga-&gt;status
(braket
l_int|1
)braket
op_or_assign
id|IEC958_AES1_CON_GENERAL
suffix:semicolon
r_break
suffix:semicolon
)brace
r_switch
c_cond
(paren
id|bits
op_amp
l_int|0x06
)paren
(brace
r_case
l_int|0x02
suffix:colon
id|diga-&gt;status
(braket
l_int|3
)braket
op_or_assign
id|IEC958_AES3_CON_FS_32000
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x04
suffix:colon
id|diga-&gt;status
(braket
l_int|3
)braket
op_or_assign
id|IEC958_AES3_CON_FS_48000
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x06
suffix:colon
id|diga-&gt;status
(braket
l_int|3
)braket
op_or_assign
id|IEC958_AES3_CON_FS_44100
suffix:semicolon
r_break
suffix:semicolon
)brace
)brace
r_else
(brace
id|diga-&gt;status
(braket
l_int|0
)braket
op_assign
id|IEC958_AES0_PROFESSIONAL
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
(paren
id|bits
op_amp
l_int|0x04
)paren
)paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_NONAUDIO
suffix:semicolon
r_switch
c_cond
(paren
id|bits
op_amp
l_int|0x60
)paren
(brace
r_case
l_int|0x00
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_PRO_FS_32000
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x40
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_PRO_FS_44100
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x20
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_PRO_FS_48000
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x60
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_PRO_FS_NOTID
suffix:semicolon
r_break
suffix:semicolon
)brace
r_switch
c_cond
(paren
id|bits
op_amp
l_int|0x03
)paren
(brace
r_case
l_int|0x02
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_PRO_EMPHASIS_NONE
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x01
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_PRO_EMPHASIS_5015
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x00
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_PRO_EMPHASIS_CCITT
suffix:semicolon
r_break
suffix:semicolon
r_case
l_int|0x03
suffix:colon
id|diga-&gt;status
(braket
l_int|0
)braket
op_or_assign
id|IEC958_AES0_PRO_EMPHASIS_NOTID
suffix:semicolon
r_break
suffix:semicolon
)brace
r_if
c_cond
(paren
op_logical_neg
(paren
id|bits
op_amp
l_int|0x80
)paren
)paren
id|diga-&gt;status
(braket
l_int|1
)braket
op_or_assign
id|IEC958_AES1_PRO_MODE_STEREOPHONIC
suffix:semicolon
)brace
)brace
DECL|function|SND_CS8404_ENCODE
id|SND_CS8404_DECL
r_int
r_char
id|SND_CS8404_ENCODE
c_func
(paren
id|snd_aes_iec958_t
op_star
id|diga
)paren
(brace
r_int
r_char
id|bits
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
(paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_amp
id|IEC958_AES0_PROFESSIONAL
)paren
)paren
(brace
id|bits
op_assign
l_int|0x10
suffix:semicolon
multiline_comment|/* consumer mode */
r_if
c_cond
(paren
op_logical_neg
(paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_amp
id|IEC958_AES0_CON_NOT_COPYRIGHT
)paren
)paren
id|bits
op_or_assign
l_int|0x20
suffix:semicolon
r_if
c_cond
(paren
(paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_amp
id|IEC958_AES0_CON_EMPHASIS
)paren
op_eq
id|IEC958_AES0_CON_EMPHASIS_NONE
)paren
id|bits
op_or_assign
l_int|0x40
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
(paren
id|diga-&gt;status
(braket
l_int|1
)braket
op_amp
id|IEC958_AES1_CON_ORIGINAL
)paren
)paren
id|bits
op_or_assign
l_int|0x80
suffix:semicolon
r_if
c_cond
(paren
(paren
id|diga-&gt;status
(braket
l_int|1
)braket
op_amp
id|IEC958_AES1_CON_CATEGORY
)paren
op_eq
id|IEC958_AES1_CON_GENERAL
)paren
id|bits
op_or_assign
l_int|0x03
suffix:semicolon
r_switch
c_cond
(paren
id|diga-&gt;status
(braket
l_int|3
)braket
op_amp
id|IEC958_AES3_CON_FS
)paren
(brace
r_default
suffix:colon
r_case
id|IEC958_AES3_CON_FS_44100
suffix:colon
id|bits
op_or_assign
l_int|0x06
suffix:semicolon
r_break
suffix:semicolon
r_case
id|IEC958_AES3_CON_FS_48000
suffix:colon
id|bits
op_or_assign
l_int|0x04
suffix:semicolon
r_break
suffix:semicolon
r_case
id|IEC958_AES3_CON_FS_32000
suffix:colon
id|bits
op_or_assign
l_int|0x02
suffix:semicolon
r_break
suffix:semicolon
)brace
)brace
r_else
(brace
id|bits
op_assign
l_int|0x00
suffix:semicolon
multiline_comment|/* professional mode */
r_if
c_cond
(paren
op_logical_neg
(paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_amp
id|IEC958_AES0_NONAUDIO
)paren
)paren
id|bits
op_or_assign
l_int|0x04
suffix:semicolon
r_switch
c_cond
(paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_amp
id|IEC958_AES0_PRO_FS
)paren
(brace
r_case
id|IEC958_AES0_PRO_FS_32000
suffix:colon
id|bits
op_or_assign
l_int|0x00
suffix:semicolon
r_break
suffix:semicolon
r_case
id|IEC958_AES0_PRO_FS_44100
suffix:colon
id|bits
op_or_assign
l_int|0x40
suffix:semicolon
r_break
suffix:semicolon
multiline_comment|/* 44.1kHz */
r_case
id|IEC958_AES0_PRO_FS_48000
suffix:colon
id|bits
op_or_assign
l_int|0x20
suffix:semicolon
r_break
suffix:semicolon
multiline_comment|/* 48kHz */
r_default
suffix:colon
r_case
id|IEC958_AES0_PRO_FS_NOTID
suffix:colon
id|bits
op_or_assign
l_int|0x00
suffix:semicolon
r_break
suffix:semicolon
)brace
r_switch
c_cond
(paren
id|diga-&gt;status
(braket
l_int|0
)braket
op_amp
id|IEC958_AES0_PRO_EMPHASIS
)paren
(brace
r_case
id|IEC958_AES0_PRO_EMPHASIS_NONE
suffix:colon
id|bits
op_or_assign
l_int|0x02
suffix:semicolon
r_break
suffix:semicolon
r_case
id|IEC958_AES0_PRO_EMPHASIS_5015
suffix:colon
id|bits
op_or_assign
l_int|0x01
suffix:semicolon
r_break
suffix:semicolon
r_case
id|IEC958_AES0_PRO_EMPHASIS_CCITT
suffix:colon
id|bits
op_or_assign
l_int|0x00
suffix:semicolon
r_break
suffix:semicolon
r_default
suffix:colon
r_case
id|IEC958_AES0_PRO_EMPHASIS_NOTID
suffix:colon
id|bits
op_or_assign
l_int|0x03
suffix:semicolon
r_break
suffix:semicolon
)brace
r_switch
c_cond
(paren
id|diga-&gt;status
(braket
l_int|1
)braket
op_amp
id|IEC958_AES1_PRO_MODE
)paren
(brace
r_case
id|IEC958_AES1_PRO_MODE_TWO
suffix:colon
r_case
id|IEC958_AES1_PRO_MODE_STEREOPHONIC
suffix:colon
id|bits
op_or_assign
l_int|0x00
suffix:semicolon
r_break
suffix:semicolon
r_default
suffix:colon
id|bits
op_or_assign
l_int|0x80
suffix:semicolon
r_break
suffix:semicolon
)brace
)brace
r_return
id|bits
suffix:semicolon
)brace
macro_line|#endif /* SND_CS8404 */
macro_line|#endif /* __SOUND_CS8403_H */
eof
