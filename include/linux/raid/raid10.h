macro_line|#ifndef _RAID10_H
DECL|macro|_RAID10_H
mdefine_line|#define _RAID10_H
macro_line|#include &lt;linux/raid/md.h&gt;
DECL|typedef|mirror_info_t
r_typedef
r_struct
id|mirror_info
id|mirror_info_t
suffix:semicolon
DECL|struct|mirror_info
r_struct
id|mirror_info
(brace
DECL|member|rdev
id|mdk_rdev_t
op_star
id|rdev
suffix:semicolon
DECL|member|head_position
id|sector_t
id|head_position
suffix:semicolon
)brace
suffix:semicolon
DECL|typedef|r10bio_t
r_typedef
r_struct
id|r10bio_s
id|r10bio_t
suffix:semicolon
DECL|struct|r10_private_data_s
r_struct
id|r10_private_data_s
(brace
DECL|member|mddev
id|mddev_t
op_star
id|mddev
suffix:semicolon
DECL|member|mirrors
id|mirror_info_t
op_star
id|mirrors
suffix:semicolon
DECL|member|raid_disks
r_int
id|raid_disks
suffix:semicolon
DECL|member|working_disks
r_int
id|working_disks
suffix:semicolon
DECL|member|device_lock
id|spinlock_t
id|device_lock
suffix:semicolon
multiline_comment|/* geometry */
DECL|member|near_copies
r_int
id|near_copies
suffix:semicolon
multiline_comment|/* number of copies layed out raid0 style */
DECL|member|far_copies
r_int
id|far_copies
suffix:semicolon
multiline_comment|/* number of copies layed out&n;&t;&t;&t;&t;&t;       * at large strides across drives&n;&t;&t;&t;&t;&t;       */
DECL|member|copies
r_int
id|copies
suffix:semicolon
multiline_comment|/* near_copies * far_copies.&n;&t;&t;&t;&t;&t;       * must be &lt;= raid_disks&n;&t;&t;&t;&t;&t;       */
DECL|member|stride
id|sector_t
id|stride
suffix:semicolon
multiline_comment|/* distance between far copies.&n;&t;&t;&t;&t;&t;       * This is size / far_copies&n;&t;&t;&t;&t;&t;       */
DECL|member|chunk_shift
r_int
id|chunk_shift
suffix:semicolon
multiline_comment|/* shift from chunks to sectors */
DECL|member|chunk_mask
id|sector_t
id|chunk_mask
suffix:semicolon
DECL|member|retry_list
r_struct
id|list_head
id|retry_list
suffix:semicolon
multiline_comment|/* for use when syncing mirrors: */
DECL|member|resync_lock
id|spinlock_t
id|resync_lock
suffix:semicolon
DECL|member|nr_pending
r_int
id|nr_pending
suffix:semicolon
DECL|member|barrier
r_int
id|barrier
suffix:semicolon
DECL|member|next_resync
id|sector_t
id|next_resync
suffix:semicolon
DECL|member|wait_idle
id|wait_queue_head_t
id|wait_idle
suffix:semicolon
DECL|member|wait_resume
id|wait_queue_head_t
id|wait_resume
suffix:semicolon
DECL|member|r10bio_pool
id|mempool_t
op_star
id|r10bio_pool
suffix:semicolon
DECL|member|r10buf_pool
id|mempool_t
op_star
id|r10buf_pool
suffix:semicolon
)brace
suffix:semicolon
DECL|typedef|conf_t
r_typedef
r_struct
id|r10_private_data_s
id|conf_t
suffix:semicolon
multiline_comment|/*&n; * this is the only point in the RAID code where we violate&n; * C type safety. mddev-&gt;private is an &squot;opaque&squot; pointer.&n; */
DECL|macro|mddev_to_conf
mdefine_line|#define mddev_to_conf(mddev) ((conf_t *) mddev-&gt;private)
multiline_comment|/*&n; * this is our &squot;private&squot; RAID10 bio.&n; *&n; * it contains information about what kind of IO operations were started&n; * for this RAID10 operation, and about their status:&n; */
DECL|struct|r10bio_s
r_struct
id|r10bio_s
(brace
DECL|member|remaining
id|atomic_t
id|remaining
suffix:semicolon
multiline_comment|/* &squot;have we finished&squot; count,&n;&t;&t;&t;&t;&t;    * used from IRQ handlers&n;&t;&t;&t;&t;&t;    */
DECL|member|sector
id|sector_t
id|sector
suffix:semicolon
multiline_comment|/* virtual sector number */
DECL|member|sectors
r_int
id|sectors
suffix:semicolon
DECL|member|state
r_int
r_int
id|state
suffix:semicolon
DECL|member|mddev
id|mddev_t
op_star
id|mddev
suffix:semicolon
multiline_comment|/*&n;&t; * original bio going to /dev/mdx&n;&t; */
DECL|member|master_bio
r_struct
id|bio
op_star
id|master_bio
suffix:semicolon
multiline_comment|/*&n;&t; * if the IO is in READ direction, then this is where we read&n;&t; */
DECL|member|read_slot
r_int
id|read_slot
suffix:semicolon
DECL|member|retry_list
r_struct
id|list_head
id|retry_list
suffix:semicolon
multiline_comment|/*&n;&t; * if the IO is in WRITE direction, then multiple bios are used,&n;&t; * one for each copy.&n;&t; * When resyncing we also use one for each copy.&n;&t; * When reconstructing, we use 2 bios, one for read, one for write.&n;&t; * We choose the number when they are allocated.&n;&t; */
r_struct
(brace
DECL|member|bio
r_struct
id|bio
op_star
id|bio
suffix:semicolon
DECL|member|addr
id|sector_t
id|addr
suffix:semicolon
DECL|member|devnum
r_int
id|devnum
suffix:semicolon
DECL|member|devs
)brace
id|devs
(braket
l_int|0
)braket
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* bits for r10bio.state */
DECL|macro|R10BIO_Uptodate
mdefine_line|#define&t;R10BIO_Uptodate&t;0
DECL|macro|R10BIO_IsSync
mdefine_line|#define&t;R10BIO_IsSync&t;1
DECL|macro|R10BIO_IsRecover
mdefine_line|#define&t;R10BIO_IsRecover 2
macro_line|#endif
eof
