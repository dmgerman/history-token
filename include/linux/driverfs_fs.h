multiline_comment|/*&n; * driverfs_fs.h - definitions for the device driver filesystem&n; *&n; * Copyright (c) 2001 Patrick Mochel &lt;mochel@osdl.org&gt;&n; *&n; *  This program is free software; you can redistribute it and/or modify&n; *  it under the terms of the GNU General Public License as published by&n; *  the Free Software Foundation; either version 2 of the License, or&n; *  (at your option) any later version.&n; *&n; *  This program is distributed in the hope that it will be useful,&n; *  but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *  GNU General Public License for more details.&n; *&n; *  You should have received a copy of the GNU General Public License&n; *  along with this program; if not, write to the Free Software&n; *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA&n; *&n; * This is a simple, ram-based filesystem, which allows kernel&n; * callbacks for read/write of files.&n; *&n; * Please see Documentation/filesystems/driverfs.txt for more information.&n; */
macro_line|#ifndef _DRIVER_FS_H_
DECL|macro|_DRIVER_FS_H_
mdefine_line|#define _DRIVER_FS_H_
r_struct
id|driver_dir_entry
suffix:semicolon
r_struct
id|attribute
suffix:semicolon
DECL|struct|driverfs_ops
r_struct
id|driverfs_ops
(brace
DECL|member|open
r_int
(paren
op_star
id|open
)paren
(paren
r_struct
id|driver_dir_entry
op_star
)paren
suffix:semicolon
DECL|member|close
r_int
(paren
op_star
id|close
)paren
(paren
r_struct
id|driver_dir_entry
op_star
)paren
suffix:semicolon
DECL|member|show
id|ssize_t
(paren
op_star
id|show
)paren
(paren
r_struct
id|driver_dir_entry
op_star
comma
r_struct
id|attribute
op_star
comma
r_char
op_star
comma
r_int
comma
id|loff_t
)paren
suffix:semicolon
DECL|member|store
id|ssize_t
(paren
op_star
id|store
)paren
(paren
r_struct
id|driver_dir_entry
op_star
comma
r_struct
id|attribute
op_star
comma
r_const
r_char
op_star
comma
r_int
comma
id|loff_t
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|driver_dir_entry
r_struct
id|driver_dir_entry
(brace
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
DECL|member|dentry
r_struct
id|dentry
op_star
id|dentry
suffix:semicolon
DECL|member|mode
id|mode_t
id|mode
suffix:semicolon
DECL|member|ops
r_struct
id|driverfs_ops
op_star
id|ops
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|attribute
r_struct
id|attribute
(brace
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
DECL|member|mode
id|mode_t
id|mode
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_int
id|driverfs_create_dir
c_func
(paren
r_struct
id|driver_dir_entry
op_star
comma
r_struct
id|driver_dir_entry
op_star
)paren
suffix:semicolon
r_extern
r_void
id|driverfs_remove_dir
c_func
(paren
r_struct
id|driver_dir_entry
op_star
id|entry
)paren
suffix:semicolon
r_extern
r_int
id|driverfs_create_file
c_func
(paren
r_struct
id|attribute
op_star
id|attr
comma
r_struct
id|driver_dir_entry
op_star
id|parent
)paren
suffix:semicolon
r_extern
r_int
id|driverfs_create_symlink
c_func
(paren
r_struct
id|driver_dir_entry
op_star
id|parent
comma
r_char
op_star
id|name
comma
r_char
op_star
id|target
)paren
suffix:semicolon
r_extern
r_void
id|driverfs_remove_file
c_func
(paren
r_struct
id|driver_dir_entry
op_star
comma
r_const
r_char
op_star
id|name
)paren
suffix:semicolon
macro_line|#endif /* _DDFS_H_ */
eof
