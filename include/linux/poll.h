macro_line|#ifndef _LINUX_POLL_H
DECL|macro|_LINUX_POLL_H
mdefine_line|#define _LINUX_POLL_H
macro_line|#include &lt;asm/poll.h&gt;
macro_line|#ifdef __KERNEL__
macro_line|#include &lt;linux/compiler.h&gt;
macro_line|#include &lt;linux/wait.h&gt;
macro_line|#include &lt;linux/string.h&gt;
macro_line|#include &lt;linux/mm.h&gt;
macro_line|#include &lt;asm/uaccess.h&gt;
r_struct
id|poll_table_struct
suffix:semicolon
multiline_comment|/* &n; * structures and helpers for f_op-&gt;poll implementations&n; */
DECL|typedef|poll_queue_proc
r_typedef
r_void
(paren
op_star
id|poll_queue_proc
)paren
(paren
r_struct
id|file
op_star
comma
id|wait_queue_head_t
op_star
comma
r_struct
id|poll_table_struct
op_star
)paren
suffix:semicolon
DECL|struct|poll_table_struct
r_typedef
r_struct
id|poll_table_struct
(brace
DECL|member|qproc
id|poll_queue_proc
id|qproc
suffix:semicolon
DECL|typedef|poll_table
)brace
id|poll_table
suffix:semicolon
DECL|function|poll_wait
r_static
r_inline
r_void
id|poll_wait
c_func
(paren
r_struct
id|file
op_star
id|filp
comma
id|wait_queue_head_t
op_star
id|wait_address
comma
id|poll_table
op_star
id|p
)paren
(brace
r_if
c_cond
(paren
id|p
op_logical_and
id|wait_address
)paren
id|p
op_member_access_from_pointer
id|qproc
c_func
(paren
id|filp
comma
id|wait_address
comma
id|p
)paren
suffix:semicolon
)brace
DECL|function|init_poll_funcptr
r_static
r_inline
r_void
id|init_poll_funcptr
c_func
(paren
id|poll_table
op_star
id|pt
comma
id|poll_queue_proc
id|qproc
)paren
(brace
id|pt-&gt;qproc
op_assign
id|qproc
suffix:semicolon
)brace
multiline_comment|/*&n; * Structures and helpers for sys_poll/sys_poll&n; */
DECL|struct|poll_wqueues
r_struct
id|poll_wqueues
(brace
DECL|member|pt
id|poll_table
id|pt
suffix:semicolon
DECL|member|table
r_struct
id|poll_table_page
op_star
id|table
suffix:semicolon
DECL|member|error
r_int
id|error
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_void
id|poll_initwait
c_func
(paren
r_struct
id|poll_wqueues
op_star
id|pwq
)paren
suffix:semicolon
r_extern
r_void
id|poll_freewait
c_func
(paren
r_struct
id|poll_wqueues
op_star
id|pwq
)paren
suffix:semicolon
multiline_comment|/*&n; * Scaleable version of the fd_set.&n; */
r_typedef
r_struct
(brace
DECL|member|in
DECL|member|out
DECL|member|ex
r_int
r_int
op_star
id|in
comma
op_star
id|out
comma
op_star
id|ex
suffix:semicolon
DECL|member|res_in
DECL|member|res_out
DECL|member|res_ex
r_int
r_int
op_star
id|res_in
comma
op_star
id|res_out
comma
op_star
id|res_ex
suffix:semicolon
DECL|typedef|fd_set_bits
)brace
id|fd_set_bits
suffix:semicolon
multiline_comment|/*&n; * How many longwords for &quot;nr&quot; bits?&n; */
DECL|macro|FDS_BITPERLONG
mdefine_line|#define FDS_BITPERLONG&t;(8*sizeof(long))
DECL|macro|FDS_LONGS
mdefine_line|#define FDS_LONGS(nr)&t;(((nr)+FDS_BITPERLONG-1)/FDS_BITPERLONG)
DECL|macro|FDS_BYTES
mdefine_line|#define FDS_BYTES(nr)&t;(FDS_LONGS(nr)*sizeof(long))
multiline_comment|/*&n; * We do a VERIFY_WRITE here even though we are only reading this time:&n; * we&squot;ll write to it eventually..&n; *&n; * Use &quot;unsigned long&quot; accesses to let user-mode fd_set&squot;s be long-aligned.&n; */
r_static
r_inline
DECL|function|get_fd_set
r_int
id|get_fd_set
c_func
(paren
r_int
r_int
id|nr
comma
r_void
id|__user
op_star
id|ufdset
comma
r_int
r_int
op_star
id|fdset
)paren
(brace
id|nr
op_assign
id|FDS_BYTES
c_func
(paren
id|nr
)paren
suffix:semicolon
r_if
c_cond
(paren
id|ufdset
)paren
r_return
id|copy_from_user
c_func
(paren
id|fdset
comma
id|ufdset
comma
id|nr
)paren
ques
c_cond
op_minus
id|EFAULT
suffix:colon
l_int|0
suffix:semicolon
id|memset
c_func
(paren
id|fdset
comma
l_int|0
comma
id|nr
)paren
suffix:semicolon
r_return
l_int|0
suffix:semicolon
)brace
r_static
r_inline
r_int
r_int
id|__must_check
DECL|function|set_fd_set
id|set_fd_set
c_func
(paren
r_int
r_int
id|nr
comma
r_void
id|__user
op_star
id|ufdset
comma
r_int
r_int
op_star
id|fdset
)paren
(brace
r_if
c_cond
(paren
id|ufdset
)paren
r_return
id|__copy_to_user
c_func
(paren
id|ufdset
comma
id|fdset
comma
id|FDS_BYTES
c_func
(paren
id|nr
)paren
)paren
suffix:semicolon
r_return
l_int|0
suffix:semicolon
)brace
r_static
r_inline
DECL|function|zero_fd_set
r_void
id|zero_fd_set
c_func
(paren
r_int
r_int
id|nr
comma
r_int
r_int
op_star
id|fdset
)paren
(brace
id|memset
c_func
(paren
id|fdset
comma
l_int|0
comma
id|FDS_BYTES
c_func
(paren
id|nr
)paren
)paren
suffix:semicolon
)brace
r_extern
r_int
id|do_select
c_func
(paren
r_int
id|n
comma
id|fd_set_bits
op_star
id|fds
comma
r_int
op_star
id|timeout
)paren
suffix:semicolon
macro_line|#endif /* KERNEL */
macro_line|#endif /* _LINUX_POLL_H */
eof
