multiline_comment|/*&n; *  linux/include/linux/mmc/host.h&n; *&n; * This program is free software; you can redistribute it and/or modify&n; * it under the terms of the GNU General Public License version 2 as&n; * published by the Free Software Foundation.&n; *&n; *  Host driver specific definitions.&n; */
macro_line|#ifndef LINUX_MMC_HOST_H
DECL|macro|LINUX_MMC_HOST_H
mdefine_line|#define LINUX_MMC_HOST_H
macro_line|#include &lt;linux/mmc/mmc.h&gt;
DECL|struct|mmc_ios
r_struct
id|mmc_ios
(brace
DECL|member|clock
r_int
r_int
id|clock
suffix:semicolon
multiline_comment|/* clock rate */
DECL|member|vdd
r_int
r_int
id|vdd
suffix:semicolon
DECL|macro|MMC_VDD_150
mdefine_line|#define&t;MMC_VDD_150&t;0
DECL|macro|MMC_VDD_155
mdefine_line|#define&t;MMC_VDD_155&t;1
DECL|macro|MMC_VDD_160
mdefine_line|#define&t;MMC_VDD_160&t;2
DECL|macro|MMC_VDD_165
mdefine_line|#define&t;MMC_VDD_165&t;3
DECL|macro|MMC_VDD_170
mdefine_line|#define&t;MMC_VDD_170&t;4
DECL|macro|MMC_VDD_180
mdefine_line|#define&t;MMC_VDD_180&t;5
DECL|macro|MMC_VDD_190
mdefine_line|#define&t;MMC_VDD_190&t;6
DECL|macro|MMC_VDD_200
mdefine_line|#define&t;MMC_VDD_200&t;7
DECL|macro|MMC_VDD_210
mdefine_line|#define&t;MMC_VDD_210&t;8
DECL|macro|MMC_VDD_220
mdefine_line|#define&t;MMC_VDD_220&t;9
DECL|macro|MMC_VDD_230
mdefine_line|#define&t;MMC_VDD_230&t;10
DECL|macro|MMC_VDD_240
mdefine_line|#define&t;MMC_VDD_240&t;11
DECL|macro|MMC_VDD_250
mdefine_line|#define&t;MMC_VDD_250&t;12
DECL|macro|MMC_VDD_260
mdefine_line|#define&t;MMC_VDD_260&t;13
DECL|macro|MMC_VDD_270
mdefine_line|#define&t;MMC_VDD_270&t;14
DECL|macro|MMC_VDD_280
mdefine_line|#define&t;MMC_VDD_280&t;15
DECL|macro|MMC_VDD_290
mdefine_line|#define&t;MMC_VDD_290&t;16
DECL|macro|MMC_VDD_300
mdefine_line|#define&t;MMC_VDD_300&t;17
DECL|macro|MMC_VDD_310
mdefine_line|#define&t;MMC_VDD_310&t;18
DECL|macro|MMC_VDD_320
mdefine_line|#define&t;MMC_VDD_320&t;19
DECL|macro|MMC_VDD_330
mdefine_line|#define&t;MMC_VDD_330&t;20
DECL|macro|MMC_VDD_340
mdefine_line|#define&t;MMC_VDD_340&t;21
DECL|macro|MMC_VDD_350
mdefine_line|#define&t;MMC_VDD_350&t;22
DECL|macro|MMC_VDD_360
mdefine_line|#define&t;MMC_VDD_360&t;23
DECL|member|bus_mode
r_int
r_char
id|bus_mode
suffix:semicolon
multiline_comment|/* command output mode */
DECL|macro|MMC_BUSMODE_OPENDRAIN
mdefine_line|#define MMC_BUSMODE_OPENDRAIN&t;1
DECL|macro|MMC_BUSMODE_PUSHPULL
mdefine_line|#define MMC_BUSMODE_PUSHPULL&t;2
DECL|member|power_mode
r_int
r_char
id|power_mode
suffix:semicolon
multiline_comment|/* power supply mode */
DECL|macro|MMC_POWER_OFF
mdefine_line|#define MMC_POWER_OFF&t;&t;0
DECL|macro|MMC_POWER_UP
mdefine_line|#define MMC_POWER_UP&t;&t;1
DECL|macro|MMC_POWER_ON
mdefine_line|#define MMC_POWER_ON&t;&t;2
)brace
suffix:semicolon
DECL|struct|mmc_host_ops
r_struct
id|mmc_host_ops
(brace
DECL|member|request
r_void
(paren
op_star
id|request
)paren
(paren
r_struct
id|mmc_host
op_star
id|host
comma
r_struct
id|mmc_request
op_star
id|req
)paren
suffix:semicolon
DECL|member|set_ios
r_void
(paren
op_star
id|set_ios
)paren
(paren
r_struct
id|mmc_host
op_star
id|host
comma
r_struct
id|mmc_ios
op_star
id|ios
)paren
suffix:semicolon
)brace
suffix:semicolon
r_struct
id|mmc_card
suffix:semicolon
r_struct
id|device
suffix:semicolon
DECL|struct|mmc_host
r_struct
id|mmc_host
(brace
DECL|member|dev
r_struct
id|device
op_star
id|dev
suffix:semicolon
DECL|member|ops
r_struct
id|mmc_host_ops
op_star
id|ops
suffix:semicolon
DECL|member|priv
r_void
op_star
id|priv
suffix:semicolon
DECL|member|f_min
r_int
r_int
id|f_min
suffix:semicolon
DECL|member|f_max
r_int
r_int
id|f_max
suffix:semicolon
DECL|member|ocr_avail
id|u32
id|ocr_avail
suffix:semicolon
DECL|member|host_name
r_char
id|host_name
(braket
l_int|8
)braket
suffix:semicolon
multiline_comment|/* private data */
DECL|member|ios
r_struct
id|mmc_ios
id|ios
suffix:semicolon
multiline_comment|/* current io bus settings */
DECL|member|ocr
id|u32
id|ocr
suffix:semicolon
multiline_comment|/* the current OCR setting */
DECL|member|cards
r_struct
id|list_head
id|cards
suffix:semicolon
multiline_comment|/* devices attached to this host */
DECL|member|wq
id|wait_queue_head_t
id|wq
suffix:semicolon
DECL|member|lock
id|spinlock_t
id|lock
suffix:semicolon
multiline_comment|/* card_busy lock */
DECL|member|card_busy
r_struct
id|mmc_card
op_star
id|card_busy
suffix:semicolon
multiline_comment|/* the MMC card claiming host */
DECL|member|card_selected
r_struct
id|mmc_card
op_star
id|card_selected
suffix:semicolon
multiline_comment|/* the selected MMC card */
DECL|member|detect
r_struct
id|work_struct
id|detect
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_struct
id|mmc_host
op_star
id|mmc_alloc_host
c_func
(paren
r_int
id|extra
comma
r_struct
id|device
op_star
)paren
suffix:semicolon
r_extern
r_int
id|mmc_add_host
c_func
(paren
r_struct
id|mmc_host
op_star
)paren
suffix:semicolon
r_extern
r_void
id|mmc_remove_host
c_func
(paren
r_struct
id|mmc_host
op_star
)paren
suffix:semicolon
r_extern
r_void
id|mmc_free_host
c_func
(paren
r_struct
id|mmc_host
op_star
)paren
suffix:semicolon
DECL|macro|mmc_priv
mdefine_line|#define mmc_priv(x)&t;((void *)((x) + 1))
DECL|macro|mmc_dev
mdefine_line|#define mmc_dev(x)&t;((x)-&gt;dev)
r_extern
r_int
id|mmc_suspend_host
c_func
(paren
r_struct
id|mmc_host
op_star
comma
id|u32
)paren
suffix:semicolon
r_extern
r_int
id|mmc_resume_host
c_func
(paren
r_struct
id|mmc_host
op_star
)paren
suffix:semicolon
r_extern
r_void
id|mmc_detect_change
c_func
(paren
r_struct
id|mmc_host
op_star
)paren
suffix:semicolon
r_extern
r_void
id|mmc_request_done
c_func
(paren
r_struct
id|mmc_host
op_star
comma
r_struct
id|mmc_request
op_star
)paren
suffix:semicolon
macro_line|#endif
eof
