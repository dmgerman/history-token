multiline_comment|/*&n; * Based on cfs.h from Coda, but revamped for increased simplicity.&n; * Linux modifications by Peter Braam, Aug 1996&n; * Rewritten for InterMezzo&n; */
macro_line|#ifndef _PRESTO_HEADER_
DECL|macro|_PRESTO_HEADER_
mdefine_line|#define _PRESTO_HEADER_
multiline_comment|/* upcall.c */
DECL|macro|SYNCHRONOUS
mdefine_line|#define SYNCHRONOUS 0
DECL|macro|ASYNCHRONOUS
mdefine_line|#define ASYNCHRONOUS 1
r_int
id|lento_permit
c_func
(paren
r_int
id|minor
comma
r_int
id|pathlen
comma
r_int
id|fsetnamelen
comma
r_char
op_star
id|path
comma
r_char
op_star
id|fset
)paren
suffix:semicolon
r_int
id|lento_opendir
c_func
(paren
r_int
id|minor
comma
r_int
id|pathlen
comma
r_char
op_star
id|path
comma
r_int
id|async
)paren
suffix:semicolon
r_int
id|lento_kml
c_func
(paren
r_int
id|minor
comma
r_int
r_int
id|offset
comma
r_int
r_int
id|first_recno
comma
r_int
r_int
id|length
comma
r_int
r_int
id|last_recno
comma
r_int
id|namelen
comma
r_char
op_star
id|fsetname
)paren
suffix:semicolon
r_int
id|lento_open
c_func
(paren
r_int
id|minor
comma
r_int
id|pathlen
comma
r_char
op_star
id|path
)paren
suffix:semicolon
r_int
id|lento_journal
c_func
(paren
r_int
id|minor
comma
r_char
op_star
id|page
comma
r_int
id|async
)paren
suffix:semicolon
r_int
id|lento_release_permit
c_func
(paren
r_int
id|minor
comma
r_int
id|cookie
)paren
suffix:semicolon
multiline_comment|/*&n; * Kernel &lt;--&gt; Lento communications.&n; */
multiline_comment|/* upcalls */
DECL|macro|LENTO_PERMIT
mdefine_line|#define LENTO_PERMIT    1
DECL|macro|LENTO_JOURNAL
mdefine_line|#define LENTO_JOURNAL   2
DECL|macro|LENTO_OPENDIR
mdefine_line|#define LENTO_OPENDIR   3
DECL|macro|LENTO_OPEN
mdefine_line|#define LENTO_OPEN      4
DECL|macro|LENTO_SIGNAL
mdefine_line|#define LENTO_SIGNAL    5
DECL|macro|LENTO_KML
mdefine_line|#define LENTO_KML       6
DECL|macro|LENTO_COOKIE
mdefine_line|#define LENTO_COOKIE    7
multiline_comment|/*         Lento &lt;-&gt; Presto  RPC arguments       */
DECL|struct|lento_up_hdr
r_struct
id|lento_up_hdr
(brace
DECL|member|opcode
r_int
r_int
id|opcode
suffix:semicolon
DECL|member|unique
r_int
r_int
id|unique
suffix:semicolon
multiline_comment|/* Keep multiple outstanding msgs distinct */
DECL|member|pid
id|u_short
id|pid
suffix:semicolon
multiline_comment|/* Common to all */
DECL|member|uid
id|u_short
id|uid
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* This structure _must_ sit at the beginning of the buffer */
DECL|struct|lento_down_hdr
r_struct
id|lento_down_hdr
(brace
DECL|member|opcode
r_int
r_int
id|opcode
suffix:semicolon
DECL|member|unique
r_int
r_int
id|unique
suffix:semicolon
DECL|member|result
r_int
r_int
id|result
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* lento_permit: */
DECL|struct|lento_permit_in
r_struct
id|lento_permit_in
(brace
DECL|member|uh
r_struct
id|lento_up_hdr
id|uh
suffix:semicolon
DECL|member|pathlen
r_int
id|pathlen
suffix:semicolon
DECL|member|fsetnamelen
r_int
id|fsetnamelen
suffix:semicolon
DECL|member|path
r_char
id|path
(braket
l_int|0
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|lento_permit_out
r_struct
id|lento_permit_out
(brace
DECL|member|dh
r_struct
id|lento_down_hdr
id|dh
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* lento_opendir: */
DECL|struct|lento_opendir_in
r_struct
id|lento_opendir_in
(brace
DECL|member|uh
r_struct
id|lento_up_hdr
id|uh
suffix:semicolon
DECL|member|async
r_int
id|async
suffix:semicolon
DECL|member|pathlen
r_int
id|pathlen
suffix:semicolon
DECL|member|path
r_char
id|path
(braket
l_int|0
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|lento_opendir_out
r_struct
id|lento_opendir_out
(brace
DECL|member|dh
r_struct
id|lento_down_hdr
id|dh
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* lento_kml: */
DECL|struct|lento_kml_in
r_struct
id|lento_kml_in
(brace
DECL|member|uh
r_struct
id|lento_up_hdr
id|uh
suffix:semicolon
DECL|member|offset
r_int
r_int
id|offset
suffix:semicolon
DECL|member|first_recno
r_int
r_int
id|first_recno
suffix:semicolon
DECL|member|length
r_int
r_int
id|length
suffix:semicolon
DECL|member|last_recno
r_int
r_int
id|last_recno
suffix:semicolon
DECL|member|namelen
r_int
id|namelen
suffix:semicolon
DECL|member|fsetname
r_char
id|fsetname
(braket
l_int|0
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|lento_kml_out
r_struct
id|lento_kml_out
(brace
DECL|member|dh
r_struct
id|lento_down_hdr
id|dh
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* lento_open: */
DECL|struct|lento_open_in
r_struct
id|lento_open_in
(brace
DECL|member|uh
r_struct
id|lento_up_hdr
id|uh
suffix:semicolon
DECL|member|pathlen
r_int
id|pathlen
suffix:semicolon
DECL|member|path
r_char
id|path
(braket
l_int|0
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|lento_open_out
r_struct
id|lento_open_out
(brace
DECL|member|dh
r_struct
id|lento_down_hdr
id|dh
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* lento_response_cookie */
DECL|struct|lento_response_cookie_in
r_struct
id|lento_response_cookie_in
(brace
DECL|member|uh
r_struct
id|lento_up_hdr
id|uh
suffix:semicolon
DECL|member|cookie
r_int
id|cookie
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|lento_response_cookie_out
r_struct
id|lento_response_cookie_out
(brace
DECL|member|dh
r_struct
id|lento_down_hdr
id|dh
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|lento_mknod
r_struct
id|lento_mknod
(brace
DECL|member|dh
r_struct
id|lento_down_hdr
id|dh
suffix:semicolon
DECL|member|major
r_int
id|major
suffix:semicolon
DECL|member|minor
r_int
id|minor
suffix:semicolon
DECL|member|mode
r_int
id|mode
suffix:semicolon
DECL|member|path
r_char
id|path
(braket
l_int|0
)braket
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* NB: every struct below begins with an up_hdr */
DECL|union|up_args
r_union
id|up_args
(brace
DECL|member|uh
r_struct
id|lento_up_hdr
id|uh
suffix:semicolon
DECL|member|lento_permit
r_struct
id|lento_permit_in
id|lento_permit
suffix:semicolon
DECL|member|lento_open
r_struct
id|lento_open_in
id|lento_open
suffix:semicolon
DECL|member|lento_opendir
r_struct
id|lento_opendir_in
id|lento_opendir
suffix:semicolon
DECL|member|lento_kml
r_struct
id|lento_kml_in
id|lento_kml
suffix:semicolon
DECL|member|lento_response_cookie
r_struct
id|lento_response_cookie_in
id|lento_response_cookie
suffix:semicolon
)brace
suffix:semicolon
DECL|union|down_args
r_union
id|down_args
(brace
DECL|member|dh
r_struct
id|lento_down_hdr
id|dh
suffix:semicolon
DECL|member|lento_permit
r_struct
id|lento_permit_out
id|lento_permit
suffix:semicolon
DECL|member|lento_open
r_struct
id|lento_open_out
id|lento_open
suffix:semicolon
DECL|member|lento_opendir
r_struct
id|lento_opendir_out
id|lento_opendir
suffix:semicolon
DECL|member|lento_kml
r_struct
id|lento_kml_out
id|lento_kml
suffix:semicolon
DECL|member|lento_response_cookie
r_struct
id|lento_response_cookie_out
id|lento_response_cookie
suffix:semicolon
)brace
suffix:semicolon
macro_line|#include &quot;intermezzo_psdev.h&quot;
r_int
id|lento_upcall
c_func
(paren
r_int
id|minor
comma
r_int
id|read_size
comma
r_int
op_star
id|rep_size
comma
r_union
id|up_args
op_star
id|buffer
comma
r_int
id|async
comma
r_struct
id|upc_req
op_star
id|rq
)paren
suffix:semicolon
macro_line|#endif 
eof
