multiline_comment|/**&n; * System devices follow a slightly different driver model. &n; * They don&squot;t need to do dynammic driver binding, can&squot;t be probed, &n; * and don&squot;t reside on any type of peripheral bus. &n; * So, we represent and treat them a little differently.&n; * &n; * We still have a notion of a driver for a system device, because we still&n; * want to perform basic operations on these devices. &n; *&n; * We also support auxillary drivers binding to devices of a certain class.&n; * &n; * This allows configurable drivers to register themselves for devices of&n; * a certain type. And, it allows class definitions to reside in generic&n; * code while arch-specific code can register specific drivers.&n; *&n; * Auxillary drivers registered with a NULL cls are registered as drivers&n; * for all system devices, and get notification calls for each device. &n; */
macro_line|#ifndef _SYSDEV_H_
DECL|macro|_SYSDEV_H_
mdefine_line|#define _SYSDEV_H_
macro_line|#include &lt;linux/kobject.h&gt;
r_struct
id|sys_device
suffix:semicolon
DECL|struct|sysdev_class
r_struct
id|sysdev_class
(brace
DECL|member|drivers
r_struct
id|list_head
id|drivers
suffix:semicolon
multiline_comment|/* Default operations for these types of devices */
DECL|member|shutdown
r_int
(paren
op_star
id|shutdown
)paren
(paren
r_struct
id|sys_device
op_star
)paren
suffix:semicolon
DECL|member|suspend
r_int
(paren
op_star
id|suspend
)paren
(paren
r_struct
id|sys_device
op_star
comma
id|u32
id|state
)paren
suffix:semicolon
DECL|member|resume
r_int
(paren
op_star
id|resume
)paren
(paren
r_struct
id|sys_device
op_star
)paren
suffix:semicolon
DECL|member|kset
r_struct
id|kset
id|kset
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_int
id|sysdev_class_register
c_func
(paren
r_struct
id|sysdev_class
op_star
)paren
suffix:semicolon
r_extern
r_void
id|sysdev_class_unregister
c_func
(paren
r_struct
id|sysdev_class
op_star
)paren
suffix:semicolon
multiline_comment|/**&n; * Auxillary system device drivers.&n; */
DECL|struct|sysdev_driver
r_struct
id|sysdev_driver
(brace
DECL|member|entry
r_struct
id|list_head
id|entry
suffix:semicolon
DECL|member|add
r_int
(paren
op_star
id|add
)paren
(paren
r_struct
id|sys_device
op_star
)paren
suffix:semicolon
DECL|member|remove
r_int
(paren
op_star
id|remove
)paren
(paren
r_struct
id|sys_device
op_star
)paren
suffix:semicolon
DECL|member|shutdown
r_int
(paren
op_star
id|shutdown
)paren
(paren
r_struct
id|sys_device
op_star
)paren
suffix:semicolon
DECL|member|suspend
r_int
(paren
op_star
id|suspend
)paren
(paren
r_struct
id|sys_device
op_star
comma
id|u32
id|state
)paren
suffix:semicolon
DECL|member|resume
r_int
(paren
op_star
id|resume
)paren
(paren
r_struct
id|sys_device
op_star
)paren
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_int
id|sysdev_driver_register
c_func
(paren
r_struct
id|sysdev_class
op_star
comma
r_struct
id|sysdev_driver
op_star
)paren
suffix:semicolon
r_extern
r_void
id|sysdev_driver_unregister
c_func
(paren
r_struct
id|sysdev_class
op_star
comma
r_struct
id|sysdev_driver
op_star
)paren
suffix:semicolon
multiline_comment|/**&n; * sys_devices can be simplified a lot from regular devices, because they&squot;re&n; * simply not as versatile. &n; */
DECL|struct|sys_device
r_struct
id|sys_device
(brace
DECL|member|id
id|u32
id|id
suffix:semicolon
DECL|member|cls
r_struct
id|sysdev_class
op_star
id|cls
suffix:semicolon
DECL|member|kobj
r_struct
id|kobject
id|kobj
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_int
id|sys_device_register
c_func
(paren
r_struct
id|sys_device
op_star
)paren
suffix:semicolon
r_extern
r_void
id|sys_device_unregister
c_func
(paren
r_struct
id|sys_device
op_star
)paren
suffix:semicolon
DECL|struct|sysdev_attribute
r_struct
id|sysdev_attribute
(brace
DECL|member|attr
r_struct
id|attribute
id|attr
suffix:semicolon
DECL|member|show
id|ssize_t
(paren
op_star
id|show
)paren
(paren
r_struct
id|sys_device
op_star
comma
r_char
op_star
)paren
suffix:semicolon
DECL|member|store
id|ssize_t
(paren
op_star
id|store
)paren
(paren
r_struct
id|sys_device
op_star
comma
r_const
r_char
op_star
comma
r_int
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|SYSDEV_ATTR
mdefine_line|#define SYSDEV_ATTR(_name,_mode,_show,_store) &t;&t;&bslash;&n;struct sysdev_attribute attr_##_name = { &t;&t;&t;&bslash;&n;&t;.attr = {.name = __stringify(_name), .mode = _mode },&t;&bslash;&n;&t;.show&t;= _show,&t;&t;&t;&t;&t;&bslash;&n;&t;.store&t;= _store,&t;&t;&t;&t;&t;&bslash;&n;};
r_extern
r_int
id|sysdev_create_file
c_func
(paren
r_struct
id|sys_device
op_star
comma
r_struct
id|sysdev_attribute
op_star
)paren
suffix:semicolon
r_extern
r_void
id|sysdev_remove_file
c_func
(paren
r_struct
id|sys_device
op_star
comma
r_struct
id|sysdev_attribute
op_star
)paren
suffix:semicolon
macro_line|#endif /* _SYSDEV_H_ */
eof
