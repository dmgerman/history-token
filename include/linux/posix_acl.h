multiline_comment|/*&n;  File: linux/posix_acl.h&n;&n;  (C) 2002 Andreas Gruenbacher, &lt;a.gruenbacher@computer.org&gt;&n;*/
macro_line|#ifndef __LINUX_POSIX_ACL_H
DECL|macro|__LINUX_POSIX_ACL_H
mdefine_line|#define __LINUX_POSIX_ACL_H
macro_line|#include &lt;linux/slab.h&gt;
DECL|macro|ACL_UNDEFINED_ID
mdefine_line|#define ACL_UNDEFINED_ID&t;(-1)
multiline_comment|/* a_type field in acl_user_posix_entry_t */
DECL|macro|ACL_TYPE_ACCESS
mdefine_line|#define ACL_TYPE_ACCESS&t;&t;(0x8000)
DECL|macro|ACL_TYPE_DEFAULT
mdefine_line|#define ACL_TYPE_DEFAULT&t;(0x4000)
multiline_comment|/* e_tag entry in struct posix_acl_entry */
DECL|macro|ACL_USER_OBJ
mdefine_line|#define ACL_USER_OBJ&t;&t;(0x01)
DECL|macro|ACL_USER
mdefine_line|#define ACL_USER&t;&t;(0x02)
DECL|macro|ACL_GROUP_OBJ
mdefine_line|#define ACL_GROUP_OBJ&t;&t;(0x04)
DECL|macro|ACL_GROUP
mdefine_line|#define ACL_GROUP&t;&t;(0x08)
DECL|macro|ACL_MASK
mdefine_line|#define ACL_MASK&t;&t;(0x10)
DECL|macro|ACL_OTHER
mdefine_line|#define ACL_OTHER&t;&t;(0x20)
multiline_comment|/* permissions in the e_perm field */
DECL|macro|ACL_READ
mdefine_line|#define ACL_READ&t;&t;(0x04)
DECL|macro|ACL_WRITE
mdefine_line|#define ACL_WRITE&t;&t;(0x02)
DECL|macro|ACL_EXECUTE
mdefine_line|#define ACL_EXECUTE&t;&t;(0x01)
singleline_comment|//#define ACL_ADD&t;&t;(0x08)
singleline_comment|//#define ACL_DELETE&t;&t;(0x10)
DECL|struct|posix_acl_entry
r_struct
id|posix_acl_entry
(brace
DECL|member|e_tag
r_int
id|e_tag
suffix:semicolon
DECL|member|e_perm
r_int
r_int
id|e_perm
suffix:semicolon
DECL|member|e_id
r_int
r_int
id|e_id
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|posix_acl
r_struct
id|posix_acl
(brace
DECL|member|a_refcount
id|atomic_t
id|a_refcount
suffix:semicolon
DECL|member|a_count
r_int
r_int
id|a_count
suffix:semicolon
DECL|member|a_entries
r_struct
id|posix_acl_entry
id|a_entries
(braket
l_int|0
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|FOREACH_ACL_ENTRY
mdefine_line|#define FOREACH_ACL_ENTRY(pa, acl, pe) &bslash;&n;&t;for(pa=(acl)-&gt;a_entries, pe=pa+(acl)-&gt;a_count; pa&lt;pe; pa++)
multiline_comment|/*&n; * Duplicate an ACL handle.&n; */
r_static
r_inline
r_struct
id|posix_acl
op_star
DECL|function|posix_acl_dup
id|posix_acl_dup
c_func
(paren
r_struct
id|posix_acl
op_star
id|acl
)paren
(brace
r_if
c_cond
(paren
id|acl
)paren
id|atomic_inc
c_func
(paren
op_amp
id|acl-&gt;a_refcount
)paren
suffix:semicolon
r_return
id|acl
suffix:semicolon
)brace
multiline_comment|/*&n; * Free an ACL handle.&n; */
r_static
r_inline
r_void
DECL|function|posix_acl_release
id|posix_acl_release
c_func
(paren
r_struct
id|posix_acl
op_star
id|acl
)paren
(brace
r_if
c_cond
(paren
id|acl
op_logical_and
id|atomic_dec_and_test
c_func
(paren
op_amp
id|acl-&gt;a_refcount
)paren
)paren
id|kfree
c_func
(paren
id|acl
)paren
suffix:semicolon
)brace
multiline_comment|/* posix_acl.c */
r_extern
r_struct
id|posix_acl
op_star
id|posix_acl_alloc
c_func
(paren
r_int
comma
r_int
)paren
suffix:semicolon
r_extern
r_struct
id|posix_acl
op_star
id|posix_acl_clone
c_func
(paren
r_const
r_struct
id|posix_acl
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|posix_acl_valid
c_func
(paren
r_const
r_struct
id|posix_acl
op_star
)paren
suffix:semicolon
r_extern
r_int
id|posix_acl_permission
c_func
(paren
r_struct
id|inode
op_star
comma
r_const
r_struct
id|posix_acl
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_struct
id|posix_acl
op_star
id|posix_acl_from_mode
c_func
(paren
id|mode_t
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|posix_acl_equiv_mode
c_func
(paren
r_const
r_struct
id|posix_acl
op_star
comma
id|mode_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|posix_acl_create_masq
c_func
(paren
r_struct
id|posix_acl
op_star
comma
id|mode_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|posix_acl_chmod_masq
c_func
(paren
r_struct
id|posix_acl
op_star
comma
id|mode_t
)paren
suffix:semicolon
r_extern
r_int
id|posix_acl_masq_nfs_mode
c_func
(paren
r_struct
id|posix_acl
op_star
comma
id|mode_t
op_star
)paren
suffix:semicolon
r_extern
r_struct
id|posix_acl
op_star
id|get_posix_acl
c_func
(paren
r_struct
id|inode
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|set_posix_acl
c_func
(paren
r_struct
id|inode
op_star
comma
r_int
comma
r_struct
id|posix_acl
op_star
)paren
suffix:semicolon
macro_line|#endif  /* __LINUX_POSIX_ACL_H */
eof
