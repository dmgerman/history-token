multiline_comment|/* -*- mode: c; c-basic-offset: 8; indent-tabs-mode: nil; -*-&n; * vim:expandtab:shiftwidth=8:tabstop=8:&n; */
macro_line|#ifndef __FILTER_H_
DECL|macro|__FILTER_H_
mdefine_line|#define __FILTER_H_ 1
macro_line|#ifdef __KERNEL__
multiline_comment|/* cachetype.c */
multiline_comment|/* &n; * it is important that things like inode, super and file operations&n; * for intermezzo are not defined statically.  If methods are NULL&n; * the VFS takes special action based on that.  Given that different&n; * cache types have NULL ops at different slots, we must install opeation &n; * talbes for InterMezzo with NULL&squot;s in the same spot&n; */
DECL|struct|filter_ops
r_struct
id|filter_ops
(brace
DECL|member|filter_sops
r_struct
id|super_operations
id|filter_sops
suffix:semicolon
DECL|member|filter_dir_iops
r_struct
id|inode_operations
id|filter_dir_iops
suffix:semicolon
DECL|member|filter_file_iops
r_struct
id|inode_operations
id|filter_file_iops
suffix:semicolon
DECL|member|filter_sym_iops
r_struct
id|inode_operations
id|filter_sym_iops
suffix:semicolon
DECL|member|filter_dir_fops
r_struct
id|file_operations
id|filter_dir_fops
suffix:semicolon
DECL|member|filter_file_fops
r_struct
id|file_operations
id|filter_file_fops
suffix:semicolon
DECL|member|filter_sym_fops
r_struct
id|file_operations
id|filter_sym_fops
suffix:semicolon
DECL|member|filter_dentry_ops
r_struct
id|dentry_operations
id|filter_dentry_ops
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|cache_ops
r_struct
id|cache_ops
(brace
multiline_comment|/* operations on the file store */
DECL|member|cache_sops
r_struct
id|super_operations
op_star
id|cache_sops
suffix:semicolon
DECL|member|cache_dir_iops
r_struct
id|inode_operations
op_star
id|cache_dir_iops
suffix:semicolon
DECL|member|cache_file_iops
r_struct
id|inode_operations
op_star
id|cache_file_iops
suffix:semicolon
DECL|member|cache_sym_iops
r_struct
id|inode_operations
op_star
id|cache_sym_iops
suffix:semicolon
DECL|member|cache_dir_fops
r_struct
id|file_operations
op_star
id|cache_dir_fops
suffix:semicolon
DECL|member|cache_file_fops
r_struct
id|file_operations
op_star
id|cache_file_fops
suffix:semicolon
DECL|member|cache_sym_fops
r_struct
id|file_operations
op_star
id|cache_sym_fops
suffix:semicolon
DECL|member|cache_dentry_ops
r_struct
id|dentry_operations
op_star
id|cache_dentry_ops
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|FILTER_DID_SUPER_OPS
mdefine_line|#define FILTER_DID_SUPER_OPS 0x1
DECL|macro|FILTER_DID_INODE_OPS
mdefine_line|#define FILTER_DID_INODE_OPS 0x2
DECL|macro|FILTER_DID_FILE_OPS
mdefine_line|#define FILTER_DID_FILE_OPS 0x4
DECL|macro|FILTER_DID_DENTRY_OPS
mdefine_line|#define FILTER_DID_DENTRY_OPS 0x8
DECL|macro|FILTER_DID_DEV_OPS
mdefine_line|#define FILTER_DID_DEV_OPS 0x10
DECL|macro|FILTER_DID_SYMLINK_OPS
mdefine_line|#define FILTER_DID_SYMLINK_OPS 0x20
DECL|macro|FILTER_DID_DIR_OPS
mdefine_line|#define FILTER_DID_DIR_OPS 0x40
DECL|struct|filter_fs
r_struct
id|filter_fs
(brace
DECL|member|o_flags
r_int
id|o_flags
suffix:semicolon
DECL|member|o_fops
r_struct
id|filter_ops
id|o_fops
suffix:semicolon
DECL|member|o_caops
r_struct
id|cache_ops
id|o_caops
suffix:semicolon
DECL|member|o_trops
r_struct
id|journal_ops
op_star
id|o_trops
suffix:semicolon
DECL|member|o_snops
r_struct
id|snapshot_ops
op_star
id|o_snops
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|FILTER_FS_TYPES
mdefine_line|#define FILTER_FS_TYPES 6
DECL|macro|FILTER_FS_EXT2
mdefine_line|#define FILTER_FS_EXT2 0
DECL|macro|FILTER_FS_EXT3
mdefine_line|#define FILTER_FS_EXT3 1
DECL|macro|FILTER_FS_REISERFS
mdefine_line|#define FILTER_FS_REISERFS 2
DECL|macro|FILTER_FS_XFS
mdefine_line|#define FILTER_FS_XFS 3
DECL|macro|FILTER_FS_OBDFS
mdefine_line|#define FILTER_FS_OBDFS 4
DECL|macro|FILTER_FS_TMPFS
mdefine_line|#define FILTER_FS_TMPFS 5
r_extern
r_struct
id|filter_fs
id|filter_oppar
(braket
id|FILTER_FS_TYPES
)braket
suffix:semicolon
r_struct
id|filter_fs
op_star
id|filter_get_filter_fs
c_func
(paren
r_const
r_char
op_star
id|cache_type
)paren
suffix:semicolon
r_void
id|filter_setup_journal_ops
c_func
(paren
r_struct
id|filter_fs
op_star
id|ops
comma
r_char
op_star
id|cache_type
)paren
suffix:semicolon
r_inline
r_struct
id|super_operations
op_star
id|filter_c2usops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
)paren
suffix:semicolon
r_inline
r_struct
id|inode_operations
op_star
id|filter_c2ufiops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
)paren
suffix:semicolon
r_inline
r_struct
id|inode_operations
op_star
id|filter_c2udiops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
)paren
suffix:semicolon
r_inline
r_struct
id|inode_operations
op_star
id|filter_c2usiops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
)paren
suffix:semicolon
r_inline
r_struct
id|file_operations
op_star
id|filter_c2uffops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
)paren
suffix:semicolon
r_inline
r_struct
id|file_operations
op_star
id|filter_c2udfops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
)paren
suffix:semicolon
r_inline
r_struct
id|file_operations
op_star
id|filter_c2usfops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
)paren
suffix:semicolon
r_inline
r_struct
id|super_operations
op_star
id|filter_c2csops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
)paren
suffix:semicolon
r_inline
r_struct
id|inode_operations
op_star
id|filter_c2cfiops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
)paren
suffix:semicolon
r_inline
r_struct
id|inode_operations
op_star
id|filter_c2cdiops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
)paren
suffix:semicolon
r_inline
r_struct
id|inode_operations
op_star
id|filter_c2csiops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
)paren
suffix:semicolon
r_inline
r_struct
id|file_operations
op_star
id|filter_c2cffops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
)paren
suffix:semicolon
r_inline
r_struct
id|file_operations
op_star
id|filter_c2cdfops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
)paren
suffix:semicolon
r_inline
r_struct
id|file_operations
op_star
id|filter_c2csfops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
)paren
suffix:semicolon
r_inline
r_struct
id|dentry_operations
op_star
id|filter_c2cdops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
)paren
suffix:semicolon
r_inline
r_struct
id|dentry_operations
op_star
id|filter_c2udops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
)paren
suffix:semicolon
r_void
id|filter_setup_super_ops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
comma
r_struct
id|super_operations
op_star
id|cache_ops
comma
r_struct
id|super_operations
op_star
id|filter_sops
)paren
suffix:semicolon
r_void
id|filter_setup_dir_ops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
comma
r_struct
id|inode
op_star
id|cache_inode
comma
r_struct
id|inode_operations
op_star
id|filter_iops
comma
r_struct
id|file_operations
op_star
id|ffops
)paren
suffix:semicolon
r_void
id|filter_setup_file_ops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
comma
r_struct
id|inode
op_star
id|cache_inode
comma
r_struct
id|inode_operations
op_star
id|filter_iops
comma
r_struct
id|file_operations
op_star
id|filter_op
)paren
suffix:semicolon
r_void
id|filter_setup_symlink_ops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
comma
r_struct
id|inode
op_star
id|cache_inode
comma
r_struct
id|inode_operations
op_star
id|filter_iops
comma
r_struct
id|file_operations
op_star
id|filter_op
)paren
suffix:semicolon
r_void
id|filter_setup_dentry_ops
c_func
(paren
r_struct
id|filter_fs
op_star
id|cache
comma
r_struct
id|dentry_operations
op_star
id|cache_dop
comma
r_struct
id|dentry_operations
op_star
id|filter_dop
)paren
suffix:semicolon
DECL|macro|PRESTO_DEBUG
mdefine_line|#define PRESTO_DEBUG
macro_line|#ifdef PRESTO_DEBUG
multiline_comment|/* debugging masks */
DECL|macro|D_SUPER
mdefine_line|#define D_SUPER     1  
DECL|macro|D_INODE
mdefine_line|#define D_INODE     2   /* print entry and exit into procedure */
DECL|macro|D_FILE
mdefine_line|#define D_FILE      4
DECL|macro|D_CACHE
mdefine_line|#define D_CACHE     8   /* cache debugging */
DECL|macro|D_MALLOC
mdefine_line|#define D_MALLOC    16  /* print malloc, de-alloc information */
DECL|macro|D_JOURNAL
mdefine_line|#define D_JOURNAL   32
DECL|macro|D_UPCALL
mdefine_line|#define D_UPCALL    64  /* up and downcall debugging */
DECL|macro|D_PSDEV
mdefine_line|#define D_PSDEV    128
DECL|macro|D_PIOCTL
mdefine_line|#define D_PIOCTL   256
DECL|macro|D_SPECIAL
mdefine_line|#define D_SPECIAL  512
DECL|macro|D_TIMING
mdefine_line|#define D_TIMING  1024
DECL|macro|D_DOWNCALL
mdefine_line|#define D_DOWNCALL 2048
DECL|macro|FDEBUG
mdefine_line|#define FDEBUG(mask, format, a...)                                      &bslash;&n;        do {                                                            &bslash;&n;                if (filter_debug &amp; mask) {                              &bslash;&n;                        printk(&quot;(%s,l. %d): &quot;, __FUNCTION__, __LINE__); &bslash;&n;                        printk(format, ##a); }                          &bslash;&n;        } while (0)
DECL|macro|FENTRY
mdefine_line|#define FENTRY                                                          &bslash;&n;        if(filter_print_entry)                                          &bslash;&n;                printk(&quot;Process %d entered %s&bslash;n&quot;, current-&gt;pid, __FUNCTION__)
DECL|macro|FEXIT
mdefine_line|#define FEXIT                                                           &bslash;&n;        if(filter_print_entry)                                          &bslash;&n;                printk(&quot;Process %d leaving %s at %d&bslash;n&quot;, current-&gt;pid,   &bslash;&n;                       __FUNCTION__,__LINE__)
macro_line|#endif
macro_line|#endif
macro_line|#endif
eof
