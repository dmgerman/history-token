macro_line|#ifndef _GAMEPORT_H
DECL|macro|_GAMEPORT_H
mdefine_line|#define _GAMEPORT_H
multiline_comment|/*&n; *  Copyright (c) 1999-2002 Vojtech Pavlik&n; *&n; * This program is free software; you can redistribute it and/or modify it&n; * under the terms of the GNU General Public License version 2 as published by&n; * the Free Software Foundation.&n; */
macro_line|#include &lt;asm/io.h&gt;
macro_line|#include &lt;linux/list.h&gt;
macro_line|#include &lt;linux/device.h&gt;
DECL|struct|gameport
r_struct
id|gameport
(brace
DECL|member|port_data
r_void
op_star
id|port_data
suffix:semicolon
multiline_comment|/* Private pointer for gameport drivers */
DECL|member|name
r_char
id|name
(braket
l_int|32
)braket
suffix:semicolon
DECL|member|phys
r_char
id|phys
(braket
l_int|32
)braket
suffix:semicolon
DECL|member|io
r_int
id|io
suffix:semicolon
DECL|member|speed
r_int
id|speed
suffix:semicolon
DECL|member|fuzz
r_int
id|fuzz
suffix:semicolon
DECL|member|trigger
r_void
(paren
op_star
id|trigger
)paren
(paren
r_struct
id|gameport
op_star
)paren
suffix:semicolon
DECL|member|read
r_int
r_char
(paren
op_star
id|read
)paren
(paren
r_struct
id|gameport
op_star
)paren
suffix:semicolon
DECL|member|cooked_read
r_int
(paren
op_star
id|cooked_read
)paren
(paren
r_struct
id|gameport
op_star
comma
r_int
op_star
comma
r_int
op_star
)paren
suffix:semicolon
DECL|member|calibrate
r_int
(paren
op_star
id|calibrate
)paren
(paren
r_struct
id|gameport
op_star
comma
r_int
op_star
comma
r_int
op_star
)paren
suffix:semicolon
DECL|member|open
r_int
(paren
op_star
id|open
)paren
(paren
r_struct
id|gameport
op_star
comma
r_int
)paren
suffix:semicolon
DECL|member|close
r_void
(paren
op_star
id|close
)paren
(paren
r_struct
id|gameport
op_star
)paren
suffix:semicolon
DECL|member|parent
DECL|member|child
r_struct
id|gameport
op_star
id|parent
comma
op_star
id|child
suffix:semicolon
DECL|member|drv
r_struct
id|gameport_driver
op_star
id|drv
suffix:semicolon
DECL|member|drv_sem
r_struct
id|semaphore
id|drv_sem
suffix:semicolon
multiline_comment|/* protects serio-&gt;drv so attributes can pin driver */
DECL|member|dev
r_struct
id|device
id|dev
suffix:semicolon
DECL|member|registered
r_int
r_int
id|registered
suffix:semicolon
multiline_comment|/* port has been fully registered with driver core */
DECL|member|node
r_struct
id|list_head
id|node
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|to_gameport_port
mdefine_line|#define to_gameport_port(d)&t;container_of(d, struct gameport, dev)
DECL|struct|gameport_driver
r_struct
id|gameport_driver
(brace
DECL|member|private
r_void
op_star
r_private
suffix:semicolon
DECL|member|description
r_char
op_star
id|description
suffix:semicolon
DECL|member|connect
r_int
(paren
op_star
id|connect
)paren
(paren
r_struct
id|gameport
op_star
comma
r_struct
id|gameport_driver
op_star
id|drv
)paren
suffix:semicolon
DECL|member|reconnect
r_int
(paren
op_star
id|reconnect
)paren
(paren
r_struct
id|gameport
op_star
)paren
suffix:semicolon
DECL|member|disconnect
r_void
(paren
op_star
id|disconnect
)paren
(paren
r_struct
id|gameport
op_star
)paren
suffix:semicolon
DECL|member|driver
r_struct
id|device_driver
id|driver
suffix:semicolon
DECL|member|ignore
r_int
r_int
id|ignore
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|to_gameport_driver
mdefine_line|#define to_gameport_driver(d)&t;container_of(d, struct gameport_driver, driver)
r_int
id|gameport_open
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
comma
r_struct
id|gameport_driver
op_star
id|drv
comma
r_int
id|mode
)paren
suffix:semicolon
r_void
id|gameport_close
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
)paren
suffix:semicolon
r_void
id|gameport_rescan
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
)paren
suffix:semicolon
r_void
id|__gameport_register_port
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
comma
r_struct
id|module
op_star
id|owner
)paren
suffix:semicolon
DECL|function|gameport_register_port
r_static
r_inline
r_void
id|gameport_register_port
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
)paren
(brace
id|__gameport_register_port
c_func
(paren
id|gameport
comma
id|THIS_MODULE
)paren
suffix:semicolon
)brace
r_void
id|gameport_unregister_port
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
)paren
suffix:semicolon
DECL|function|gameport_allocate_port
r_static
r_inline
r_struct
id|gameport
op_star
id|gameport_allocate_port
c_func
(paren
r_void
)paren
(brace
r_struct
id|gameport
op_star
id|gameport
op_assign
id|kcalloc
c_func
(paren
l_int|1
comma
r_sizeof
(paren
r_struct
id|gameport
)paren
comma
id|GFP_KERNEL
)paren
suffix:semicolon
r_return
id|gameport
suffix:semicolon
)brace
DECL|function|gameport_free_port
r_static
r_inline
r_void
id|gameport_free_port
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
)paren
(brace
id|kfree
c_func
(paren
id|gameport
)paren
suffix:semicolon
)brace
DECL|function|gameport_set_name
r_static
r_inline
r_void
id|gameport_set_name
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
comma
r_const
r_char
op_star
id|name
)paren
(brace
id|strlcpy
c_func
(paren
id|gameport-&gt;name
comma
id|name
comma
r_sizeof
(paren
id|gameport-&gt;name
)paren
)paren
suffix:semicolon
)brace
r_void
id|gameport_set_phys
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
comma
r_const
r_char
op_star
id|fmt
comma
dot
dot
dot
)paren
id|__attribute__
(paren
(paren
id|format
(paren
id|printf
comma
l_int|2
comma
l_int|3
)paren
)paren
)paren
suffix:semicolon
multiline_comment|/*&n; * Use the following fucntions to manipulate gameport&squot;s per-port&n; * driver-specific data.&n; */
DECL|function|gameport_get_drvdata
r_static
r_inline
r_void
op_star
id|gameport_get_drvdata
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
)paren
(brace
r_return
id|dev_get_drvdata
c_func
(paren
op_amp
id|gameport-&gt;dev
)paren
suffix:semicolon
)brace
DECL|function|gameport_set_drvdata
r_static
r_inline
r_void
id|gameport_set_drvdata
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
comma
r_void
op_star
id|data
)paren
(brace
id|dev_set_drvdata
c_func
(paren
op_amp
id|gameport-&gt;dev
comma
id|data
)paren
suffix:semicolon
)brace
multiline_comment|/*&n; * Use the following fucntions to pin gameport&squot;s driver in process context&n; */
DECL|function|gameport_pin_driver
r_static
r_inline
r_int
id|gameport_pin_driver
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
)paren
(brace
r_return
id|down_interruptible
c_func
(paren
op_amp
id|gameport-&gt;drv_sem
)paren
suffix:semicolon
)brace
DECL|function|gameport_unpin_driver
r_static
r_inline
r_void
id|gameport_unpin_driver
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
)paren
(brace
id|up
c_func
(paren
op_amp
id|gameport-&gt;drv_sem
)paren
suffix:semicolon
)brace
r_void
id|__gameport_register_driver
c_func
(paren
r_struct
id|gameport_driver
op_star
id|drv
comma
r_struct
id|module
op_star
id|owner
)paren
suffix:semicolon
DECL|function|gameport_register_driver
r_static
r_inline
r_void
id|gameport_register_driver
c_func
(paren
r_struct
id|gameport_driver
op_star
id|drv
)paren
(brace
id|__gameport_register_driver
c_func
(paren
id|drv
comma
id|THIS_MODULE
)paren
suffix:semicolon
)brace
r_void
id|gameport_unregister_driver
c_func
(paren
r_struct
id|gameport_driver
op_star
id|drv
)paren
suffix:semicolon
DECL|macro|GAMEPORT_MODE_DISABLED
mdefine_line|#define GAMEPORT_MODE_DISABLED&t;&t;0
DECL|macro|GAMEPORT_MODE_RAW
mdefine_line|#define GAMEPORT_MODE_RAW&t;&t;1
DECL|macro|GAMEPORT_MODE_COOKED
mdefine_line|#define GAMEPORT_MODE_COOKED&t;&t;2
DECL|macro|GAMEPORT_ID_VENDOR_ANALOG
mdefine_line|#define GAMEPORT_ID_VENDOR_ANALOG&t;0x0001
DECL|macro|GAMEPORT_ID_VENDOR_MADCATZ
mdefine_line|#define GAMEPORT_ID_VENDOR_MADCATZ&t;0x0002
DECL|macro|GAMEPORT_ID_VENDOR_LOGITECH
mdefine_line|#define GAMEPORT_ID_VENDOR_LOGITECH&t;0x0003
DECL|macro|GAMEPORT_ID_VENDOR_CREATIVE
mdefine_line|#define GAMEPORT_ID_VENDOR_CREATIVE&t;0x0004
DECL|macro|GAMEPORT_ID_VENDOR_GENIUS
mdefine_line|#define GAMEPORT_ID_VENDOR_GENIUS&t;0x0005
DECL|macro|GAMEPORT_ID_VENDOR_INTERACT
mdefine_line|#define GAMEPORT_ID_VENDOR_INTERACT&t;0x0006
DECL|macro|GAMEPORT_ID_VENDOR_MICROSOFT
mdefine_line|#define GAMEPORT_ID_VENDOR_MICROSOFT&t;0x0007
DECL|macro|GAMEPORT_ID_VENDOR_THRUSTMASTER
mdefine_line|#define GAMEPORT_ID_VENDOR_THRUSTMASTER&t;0x0008
DECL|macro|GAMEPORT_ID_VENDOR_GRAVIS
mdefine_line|#define GAMEPORT_ID_VENDOR_GRAVIS&t;0x0009
DECL|macro|GAMEPORT_ID_VENDOR_GUILLEMOT
mdefine_line|#define GAMEPORT_ID_VENDOR_GUILLEMOT&t;0x000a
DECL|function|gameport_trigger
r_static
r_inline
r_void
id|gameport_trigger
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
)paren
(brace
r_if
c_cond
(paren
id|gameport-&gt;trigger
)paren
id|gameport
op_member_access_from_pointer
id|trigger
c_func
(paren
id|gameport
)paren
suffix:semicolon
r_else
id|outb
c_func
(paren
l_int|0xff
comma
id|gameport-&gt;io
)paren
suffix:semicolon
)brace
DECL|function|gameport_read
r_static
r_inline
r_int
r_char
id|gameport_read
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
)paren
(brace
r_if
c_cond
(paren
id|gameport-&gt;read
)paren
r_return
id|gameport
op_member_access_from_pointer
id|read
c_func
(paren
id|gameport
)paren
suffix:semicolon
r_else
r_return
id|inb
c_func
(paren
id|gameport-&gt;io
)paren
suffix:semicolon
)brace
DECL|function|gameport_cooked_read
r_static
r_inline
r_int
id|gameport_cooked_read
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
comma
r_int
op_star
id|axes
comma
r_int
op_star
id|buttons
)paren
(brace
r_if
c_cond
(paren
id|gameport-&gt;cooked_read
)paren
r_return
id|gameport
op_member_access_from_pointer
id|cooked_read
c_func
(paren
id|gameport
comma
id|axes
comma
id|buttons
)paren
suffix:semicolon
r_else
r_return
op_minus
l_int|1
suffix:semicolon
)brace
DECL|function|gameport_calibrate
r_static
r_inline
r_int
id|gameport_calibrate
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
comma
r_int
op_star
id|axes
comma
r_int
op_star
id|max
)paren
(brace
r_if
c_cond
(paren
id|gameport-&gt;calibrate
)paren
r_return
id|gameport
op_member_access_from_pointer
id|calibrate
c_func
(paren
id|gameport
comma
id|axes
comma
id|max
)paren
suffix:semicolon
r_else
r_return
op_minus
l_int|1
suffix:semicolon
)brace
DECL|function|gameport_time
r_static
r_inline
r_int
id|gameport_time
c_func
(paren
r_struct
id|gameport
op_star
id|gameport
comma
r_int
id|time
)paren
(brace
r_return
(paren
id|time
op_star
id|gameport-&gt;speed
)paren
op_div
l_int|1000
suffix:semicolon
)brace
macro_line|#endif
eof
