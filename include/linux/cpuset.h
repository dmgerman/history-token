macro_line|#ifndef _LINUX_CPUSET_H
DECL|macro|_LINUX_CPUSET_H
mdefine_line|#define _LINUX_CPUSET_H
multiline_comment|/*&n; *  cpuset interface&n; *&n; *  Copyright (C) 2003 BULL SA&n; *  Copyright (C) 2004 Silicon Graphics, Inc.&n; *&n; */
macro_line|#include &lt;linux/sched.h&gt;
macro_line|#include &lt;linux/cpumask.h&gt;
macro_line|#include &lt;linux/nodemask.h&gt;
macro_line|#ifdef CONFIG_CPUSETS
r_extern
r_int
id|cpuset_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|cpuset_init_smp
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|cpuset_fork
c_func
(paren
r_struct
id|task_struct
op_star
id|p
)paren
suffix:semicolon
r_extern
r_void
id|cpuset_exit
c_func
(paren
r_struct
id|task_struct
op_star
id|p
)paren
suffix:semicolon
r_extern
r_const
id|cpumask_t
id|cpuset_cpus_allowed
c_func
(paren
r_const
r_struct
id|task_struct
op_star
id|p
)paren
suffix:semicolon
r_void
id|cpuset_init_current_mems_allowed
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|cpuset_update_current_mems_allowed
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|cpuset_restrict_to_mems_allowed
c_func
(paren
r_int
r_int
op_star
id|nodes
)paren
suffix:semicolon
r_int
id|cpuset_zonelist_valid_mems_allowed
c_func
(paren
r_struct
id|zonelist
op_star
id|zl
)paren
suffix:semicolon
r_int
id|cpuset_zone_allowed
c_func
(paren
r_struct
id|zone
op_star
id|z
)paren
suffix:semicolon
r_extern
r_struct
id|file_operations
id|proc_cpuset_operations
suffix:semicolon
r_extern
r_char
op_star
id|cpuset_task_status_allowed
c_func
(paren
r_struct
id|task_struct
op_star
id|task
comma
r_char
op_star
id|buffer
)paren
suffix:semicolon
macro_line|#else /* !CONFIG_CPUSETS */
DECL|function|cpuset_init
r_static
r_inline
r_int
id|cpuset_init
c_func
(paren
r_void
)paren
(brace
r_return
l_int|0
suffix:semicolon
)brace
DECL|function|cpuset_init_smp
r_static
r_inline
r_void
id|cpuset_init_smp
c_func
(paren
r_void
)paren
(brace
)brace
DECL|function|cpuset_fork
r_static
r_inline
r_void
id|cpuset_fork
c_func
(paren
r_struct
id|task_struct
op_star
id|p
)paren
(brace
)brace
DECL|function|cpuset_exit
r_static
r_inline
r_void
id|cpuset_exit
c_func
(paren
r_struct
id|task_struct
op_star
id|p
)paren
(brace
)brace
DECL|function|cpuset_cpus_allowed
r_static
r_inline
r_const
id|cpumask_t
id|cpuset_cpus_allowed
c_func
(paren
r_struct
id|task_struct
op_star
id|p
)paren
(brace
r_return
id|cpu_possible_map
suffix:semicolon
)brace
DECL|function|cpuset_init_current_mems_allowed
r_static
r_inline
r_void
id|cpuset_init_current_mems_allowed
c_func
(paren
r_void
)paren
(brace
)brace
DECL|function|cpuset_update_current_mems_allowed
r_static
r_inline
r_void
id|cpuset_update_current_mems_allowed
c_func
(paren
r_void
)paren
(brace
)brace
DECL|function|cpuset_restrict_to_mems_allowed
r_static
r_inline
r_void
id|cpuset_restrict_to_mems_allowed
c_func
(paren
r_int
r_int
op_star
id|nodes
)paren
(brace
)brace
DECL|function|cpuset_zonelist_valid_mems_allowed
r_static
r_inline
r_int
id|cpuset_zonelist_valid_mems_allowed
c_func
(paren
r_struct
id|zonelist
op_star
id|zl
)paren
(brace
r_return
l_int|1
suffix:semicolon
)brace
DECL|function|cpuset_zone_allowed
r_static
r_inline
r_int
id|cpuset_zone_allowed
c_func
(paren
r_struct
id|zone
op_star
id|z
)paren
(brace
r_return
l_int|1
suffix:semicolon
)brace
DECL|function|cpuset_task_status_allowed
r_static
r_inline
r_char
op_star
id|cpuset_task_status_allowed
c_func
(paren
r_struct
id|task_struct
op_star
id|task
comma
r_char
op_star
id|buffer
)paren
(brace
r_return
id|buffer
suffix:semicolon
)brace
macro_line|#endif /* !CONFIG_CPUSETS */
macro_line|#endif /* _LINUX_CPUSET_H */
eof
