multiline_comment|/* key-ui.h: key userspace interface stuff for use by keyfs&n; *&n; * Copyright (C) 2004 Red Hat, Inc. All Rights Reserved.&n; * Written by David Howells (dhowells@redhat.com)&n; *&n; * This program is free software; you can redistribute it and/or&n; * modify it under the terms of the GNU General Public License&n; * as published by the Free Software Foundation; either version&n; * 2 of the License, or (at your option) any later version.&n; */
macro_line|#ifndef _LINUX_KEY_UI_H
DECL|macro|_LINUX_KEY_UI_H
mdefine_line|#define _LINUX_KEY_UI_H
macro_line|#include &lt;linux/key.h&gt;
multiline_comment|/* the key tree */
r_extern
r_struct
id|rb_root
id|key_serial_tree
suffix:semicolon
r_extern
id|spinlock_t
id|key_serial_lock
suffix:semicolon
multiline_comment|/* required permissions */
DECL|macro|KEY_VIEW
mdefine_line|#define&t;KEY_VIEW&t;0x01&t;/* require permission to view attributes */
DECL|macro|KEY_READ
mdefine_line|#define&t;KEY_READ&t;0x02&t;/* require permission to read content */
DECL|macro|KEY_WRITE
mdefine_line|#define&t;KEY_WRITE&t;0x04&t;/* require permission to update / modify */
DECL|macro|KEY_SEARCH
mdefine_line|#define&t;KEY_SEARCH&t;0x08&t;/* require permission to search (keyring) or find (key) */
DECL|macro|KEY_LINK
mdefine_line|#define&t;KEY_LINK&t;0x10&t;/* require permission to link */
DECL|macro|KEY_ALL
mdefine_line|#define&t;KEY_ALL&t;&t;0x1f&t;/* all the above permissions */
multiline_comment|/*&n; * the keyring payload contains a list of the keys to which the keyring is&n; * subscribed&n; */
DECL|struct|keyring_list
r_struct
id|keyring_list
(brace
DECL|member|maxkeys
r_int
id|maxkeys
suffix:semicolon
multiline_comment|/* max keys this list can hold */
DECL|member|nkeys
r_int
id|nkeys
suffix:semicolon
multiline_comment|/* number of keys currently held */
DECL|member|keys
r_struct
id|key
op_star
id|keys
(braket
l_int|0
)braket
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * check to see whether permission is granted to use a key in the desired way&n; */
DECL|function|key_permission
r_static
r_inline
r_int
id|key_permission
c_func
(paren
r_const
r_struct
id|key
op_star
id|key
comma
id|key_perm_t
id|perm
)paren
(brace
id|key_perm_t
id|kperm
suffix:semicolon
r_if
c_cond
(paren
id|key-&gt;uid
op_eq
id|current-&gt;fsuid
)paren
id|kperm
op_assign
id|key-&gt;perm
op_rshift
l_int|16
suffix:semicolon
r_else
r_if
c_cond
(paren
id|key-&gt;gid
op_ne
op_minus
l_int|1
op_logical_and
id|key-&gt;perm
op_amp
id|KEY_GRP_ALL
op_logical_and
id|in_group_p
c_func
(paren
id|key-&gt;gid
)paren
)paren
id|kperm
op_assign
id|key-&gt;perm
op_rshift
l_int|8
suffix:semicolon
r_else
id|kperm
op_assign
id|key-&gt;perm
suffix:semicolon
id|kperm
op_assign
id|kperm
op_amp
id|perm
op_amp
id|KEY_ALL
suffix:semicolon
r_return
id|kperm
op_eq
id|perm
suffix:semicolon
)brace
multiline_comment|/*&n; * check to see whether permission is granted to use a key in at least one of&n; * the desired ways&n; */
DECL|function|key_any_permission
r_static
r_inline
r_int
id|key_any_permission
c_func
(paren
r_const
r_struct
id|key
op_star
id|key
comma
id|key_perm_t
id|perm
)paren
(brace
id|key_perm_t
id|kperm
suffix:semicolon
r_if
c_cond
(paren
id|key-&gt;uid
op_eq
id|current-&gt;fsuid
)paren
id|kperm
op_assign
id|key-&gt;perm
op_rshift
l_int|16
suffix:semicolon
r_else
r_if
c_cond
(paren
id|key-&gt;gid
op_ne
op_minus
l_int|1
op_logical_and
id|key-&gt;perm
op_amp
id|KEY_GRP_ALL
op_logical_and
id|in_group_p
c_func
(paren
id|key-&gt;gid
)paren
)paren
id|kperm
op_assign
id|key-&gt;perm
op_rshift
l_int|8
suffix:semicolon
r_else
id|kperm
op_assign
id|key-&gt;perm
suffix:semicolon
id|kperm
op_assign
id|kperm
op_amp
id|perm
op_amp
id|KEY_ALL
suffix:semicolon
r_return
id|kperm
op_ne
l_int|0
suffix:semicolon
)brace
r_extern
r_struct
id|key
op_star
id|lookup_user_key
c_func
(paren
id|key_serial_t
id|id
comma
r_int
id|create
comma
r_int
id|part
comma
id|key_perm_t
id|perm
)paren
suffix:semicolon
r_extern
r_int
id|join_session_keyring
c_func
(paren
r_const
r_char
op_star
id|name
)paren
suffix:semicolon
r_extern
r_struct
id|key_type
op_star
id|key_type_lookup
c_func
(paren
r_const
r_char
op_star
id|type
)paren
suffix:semicolon
r_extern
r_void
id|key_type_put
c_func
(paren
r_struct
id|key_type
op_star
id|ktype
)paren
suffix:semicolon
DECL|macro|key_negative_timeout
mdefine_line|#define key_negative_timeout&t;60&t;/* default timeout on a negative key&squot;s existence */
macro_line|#endif /* _LINUX_KEY_UI_H */
eof
