multiline_comment|/*&n; * class_container.h - a generic container for all classes&n; *&n; * Copyright (c) 2005 - James Bottomley &lt;James.Bottomley@steeleye.com&gt;&n; *&n; * This file is licensed under GPLv2&n; */
macro_line|#ifndef _ATTRIBUTE_CONTAINER_H_
DECL|macro|_ATTRIBUTE_CONTAINER_H_
mdefine_line|#define _ATTRIBUTE_CONTAINER_H_
macro_line|#include &lt;linux/device.h&gt;
macro_line|#include &lt;linux/list.h&gt;
DECL|struct|attribute_container
r_struct
id|attribute_container
(brace
DECL|member|node
r_struct
id|list_head
id|node
suffix:semicolon
DECL|member|containers
r_struct
id|list_head
id|containers
suffix:semicolon
DECL|member|class
r_struct
r_class
op_star
r_class
suffix:semicolon
DECL|member|attrs
r_struct
id|class_device_attribute
op_star
op_star
id|attrs
suffix:semicolon
DECL|member|match
r_int
(paren
op_star
id|match
)paren
(paren
r_struct
id|attribute_container
op_star
comma
r_struct
id|device
op_star
)paren
suffix:semicolon
DECL|macro|ATTRIBUTE_CONTAINER_NO_CLASSDEVS
mdefine_line|#define&t;ATTRIBUTE_CONTAINER_NO_CLASSDEVS&t;0x01
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
)brace
suffix:semicolon
r_static
r_inline
r_int
DECL|function|attribute_container_no_classdevs
id|attribute_container_no_classdevs
c_func
(paren
r_struct
id|attribute_container
op_star
id|atc
)paren
(brace
r_return
id|atc-&gt;flags
op_amp
id|ATTRIBUTE_CONTAINER_NO_CLASSDEVS
suffix:semicolon
)brace
r_static
r_inline
r_void
DECL|function|attribute_container_set_no_classdevs
id|attribute_container_set_no_classdevs
c_func
(paren
r_struct
id|attribute_container
op_star
id|atc
)paren
(brace
id|atc-&gt;flags
op_or_assign
id|ATTRIBUTE_CONTAINER_NO_CLASSDEVS
suffix:semicolon
)brace
r_int
id|attribute_container_register
c_func
(paren
r_struct
id|attribute_container
op_star
id|cont
)paren
suffix:semicolon
r_int
id|attribute_container_unregister
c_func
(paren
r_struct
id|attribute_container
op_star
id|cont
)paren
suffix:semicolon
r_void
id|attribute_container_create_device
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
r_int
(paren
op_star
id|fn
)paren
(paren
r_struct
id|attribute_container
op_star
comma
r_struct
id|device
op_star
comma
r_struct
id|class_device
op_star
)paren
)paren
suffix:semicolon
r_void
id|attribute_container_add_device
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
r_int
(paren
op_star
id|fn
)paren
(paren
r_struct
id|attribute_container
op_star
comma
r_struct
id|device
op_star
comma
r_struct
id|class_device
op_star
)paren
)paren
suffix:semicolon
r_void
id|attribute_container_remove_device
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
r_void
(paren
op_star
id|fn
)paren
(paren
r_struct
id|attribute_container
op_star
comma
r_struct
id|device
op_star
comma
r_struct
id|class_device
op_star
)paren
)paren
suffix:semicolon
r_void
id|attribute_container_device_trigger
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
r_int
(paren
op_star
id|fn
)paren
(paren
r_struct
id|attribute_container
op_star
comma
r_struct
id|device
op_star
comma
r_struct
id|class_device
op_star
)paren
)paren
suffix:semicolon
r_void
id|attribute_container_trigger
c_func
(paren
r_struct
id|device
op_star
id|dev
comma
r_int
(paren
op_star
id|fn
)paren
(paren
r_struct
id|attribute_container
op_star
comma
r_struct
id|device
op_star
)paren
)paren
suffix:semicolon
r_struct
id|class_device_attribute
op_star
op_star
id|attribute_container_classdev_to_attrs
c_func
(paren
r_const
r_struct
id|class_device
op_star
id|classdev
)paren
suffix:semicolon
macro_line|#endif
eof
