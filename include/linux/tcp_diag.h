macro_line|#ifndef _TCP_DIAG_H_
DECL|macro|_TCP_DIAG_H_
mdefine_line|#define _TCP_DIAG_H_ 1
multiline_comment|/* Just some random number */
DECL|macro|TCPDIAG_GETSOCK
mdefine_line|#define TCPDIAG_GETSOCK 18
multiline_comment|/* Socket identity */
DECL|struct|tcpdiag_sockid
r_struct
id|tcpdiag_sockid
(brace
DECL|member|tcpdiag_sport
id|__u16
id|tcpdiag_sport
suffix:semicolon
DECL|member|tcpdiag_dport
id|__u16
id|tcpdiag_dport
suffix:semicolon
DECL|member|tcpdiag_src
id|__u32
id|tcpdiag_src
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|tcpdiag_dst
id|__u32
id|tcpdiag_dst
(braket
l_int|4
)braket
suffix:semicolon
DECL|member|tcpdiag_if
id|__u32
id|tcpdiag_if
suffix:semicolon
DECL|member|tcpdiag_cookie
id|__u32
id|tcpdiag_cookie
(braket
l_int|2
)braket
suffix:semicolon
DECL|macro|TCPDIAG_NOCOOKIE
mdefine_line|#define TCPDIAG_NOCOOKIE (~0U)
)brace
suffix:semicolon
multiline_comment|/* Request structure */
DECL|struct|tcpdiagreq
r_struct
id|tcpdiagreq
(brace
DECL|member|tcpdiag_family
id|__u8
id|tcpdiag_family
suffix:semicolon
multiline_comment|/* Family of addresses. */
DECL|member|tcpdiag_src_len
id|__u8
id|tcpdiag_src_len
suffix:semicolon
DECL|member|tcpdiag_dst_len
id|__u8
id|tcpdiag_dst_len
suffix:semicolon
DECL|member|tcpdiag_ext
id|__u8
id|tcpdiag_ext
suffix:semicolon
multiline_comment|/* Query extended information */
DECL|member|id
r_struct
id|tcpdiag_sockid
id|id
suffix:semicolon
DECL|member|tcpdiag_states
id|__u32
id|tcpdiag_states
suffix:semicolon
multiline_comment|/* States to dump */
DECL|member|tcpdiag_dbs
id|__u32
id|tcpdiag_dbs
suffix:semicolon
multiline_comment|/* Tables to dump (NI) */
)brace
suffix:semicolon
r_enum
(brace
DECL|enumerator|TCPDIAG_REQ_NONE
id|TCPDIAG_REQ_NONE
comma
DECL|enumerator|TCPDIAG_REQ_BYTECODE
id|TCPDIAG_REQ_BYTECODE
comma
)brace
suffix:semicolon
DECL|macro|TCPDIAG_REQ_MAX
mdefine_line|#define TCPDIAG_REQ_MAX TCPDIAG_REQ_BYTECODE
multiline_comment|/* Bytecode is sequence of 4 byte commands followed by variable arguments.&n; * All the commands identified by &quot;code&quot; are conditional jumps forward:&n; * to offset cc+&quot;yes&quot; or to offset cc+&quot;no&quot;. &quot;yes&quot; is supposed to be&n; * length of the command and its arguments.&n; */
DECL|struct|tcpdiag_bc_op
r_struct
id|tcpdiag_bc_op
(brace
DECL|member|code
r_int
r_char
id|code
suffix:semicolon
DECL|member|yes
r_int
r_char
id|yes
suffix:semicolon
DECL|member|no
r_int
r_int
id|no
suffix:semicolon
)brace
suffix:semicolon
r_enum
(brace
DECL|enumerator|TCPDIAG_BC_NOP
id|TCPDIAG_BC_NOP
comma
DECL|enumerator|TCPDIAG_BC_JMP
id|TCPDIAG_BC_JMP
comma
DECL|enumerator|TCPDIAG_BC_S_GE
id|TCPDIAG_BC_S_GE
comma
DECL|enumerator|TCPDIAG_BC_S_LE
id|TCPDIAG_BC_S_LE
comma
DECL|enumerator|TCPDIAG_BC_D_GE
id|TCPDIAG_BC_D_GE
comma
DECL|enumerator|TCPDIAG_BC_D_LE
id|TCPDIAG_BC_D_LE
comma
DECL|enumerator|TCPDIAG_BC_AUTO
id|TCPDIAG_BC_AUTO
comma
DECL|enumerator|TCPDIAG_BC_S_COND
id|TCPDIAG_BC_S_COND
comma
DECL|enumerator|TCPDIAG_BC_D_COND
id|TCPDIAG_BC_D_COND
comma
)brace
suffix:semicolon
DECL|struct|tcpdiag_hostcond
r_struct
id|tcpdiag_hostcond
(brace
DECL|member|family
id|__u8
id|family
suffix:semicolon
DECL|member|prefix_len
id|__u8
id|prefix_len
suffix:semicolon
DECL|member|port
r_int
id|port
suffix:semicolon
DECL|member|addr
id|__u32
id|addr
(braket
l_int|0
)braket
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* Base info structure. It contains socket identity (addrs/ports/cookie)&n; * and, alas, the information shown by netstat. */
DECL|struct|tcpdiagmsg
r_struct
id|tcpdiagmsg
(brace
DECL|member|tcpdiag_family
id|__u8
id|tcpdiag_family
suffix:semicolon
DECL|member|tcpdiag_state
id|__u8
id|tcpdiag_state
suffix:semicolon
DECL|member|tcpdiag_timer
id|__u8
id|tcpdiag_timer
suffix:semicolon
DECL|member|tcpdiag_retrans
id|__u8
id|tcpdiag_retrans
suffix:semicolon
DECL|member|id
r_struct
id|tcpdiag_sockid
id|id
suffix:semicolon
DECL|member|tcpdiag_expires
id|__u32
id|tcpdiag_expires
suffix:semicolon
DECL|member|tcpdiag_rqueue
id|__u32
id|tcpdiag_rqueue
suffix:semicolon
DECL|member|tcpdiag_wqueue
id|__u32
id|tcpdiag_wqueue
suffix:semicolon
DECL|member|tcpdiag_uid
id|__u32
id|tcpdiag_uid
suffix:semicolon
DECL|member|tcpdiag_inode
id|__u32
id|tcpdiag_inode
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* Extensions */
r_enum
(brace
DECL|enumerator|TCPDIAG_NONE
id|TCPDIAG_NONE
comma
DECL|enumerator|TCPDIAG_MEMINFO
id|TCPDIAG_MEMINFO
comma
DECL|enumerator|TCPDIAG_INFO
id|TCPDIAG_INFO
comma
)brace
suffix:semicolon
DECL|macro|TCPDIAG_MAX
mdefine_line|#define TCPDIAG_MAX TCPDIAG_INFO
multiline_comment|/* TCPDIAG_MEM */
DECL|struct|tcpdiag_meminfo
r_struct
id|tcpdiag_meminfo
(brace
DECL|member|tcpdiag_rmem
id|__u32
id|tcpdiag_rmem
suffix:semicolon
DECL|member|tcpdiag_wmem
id|__u32
id|tcpdiag_wmem
suffix:semicolon
DECL|member|tcpdiag_fmem
id|__u32
id|tcpdiag_fmem
suffix:semicolon
DECL|member|tcpdiag_tmem
id|__u32
id|tcpdiag_tmem
suffix:semicolon
)brace
suffix:semicolon
macro_line|#endif /* _TCP_DIAG_H_ */
eof
