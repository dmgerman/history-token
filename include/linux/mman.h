macro_line|#ifndef _LINUX_MMAN_H
DECL|macro|_LINUX_MMAN_H
mdefine_line|#define _LINUX_MMAN_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/mm.h&gt;
macro_line|#include &lt;asm/atomic.h&gt;
macro_line|#include &lt;asm/mman.h&gt;
DECL|macro|MREMAP_MAYMOVE
mdefine_line|#define MREMAP_MAYMOVE&t;1
DECL|macro|MREMAP_FIXED
mdefine_line|#define MREMAP_FIXED&t;2
r_extern
r_int
id|sysctl_overcommit_memory
suffix:semicolon
r_extern
r_int
id|sysctl_overcommit_ratio
suffix:semicolon
r_extern
id|atomic_t
id|vm_committed_space
suffix:semicolon
macro_line|#ifdef CONFIG_SMP
r_extern
r_void
id|vm_acct_memory
c_func
(paren
r_int
id|pages
)paren
suffix:semicolon
macro_line|#else
DECL|function|vm_acct_memory
r_static
r_inline
r_void
id|vm_acct_memory
c_func
(paren
r_int
id|pages
)paren
(brace
id|atomic_add
c_func
(paren
id|pages
comma
op_amp
id|vm_committed_space
)paren
suffix:semicolon
)brace
macro_line|#endif
DECL|function|vm_unacct_memory
r_static
r_inline
r_void
id|vm_unacct_memory
c_func
(paren
r_int
id|pages
)paren
(brace
id|vm_acct_memory
c_func
(paren
op_minus
id|pages
)paren
suffix:semicolon
)brace
multiline_comment|/*&n; * Optimisation macro.  It is equivalent to:&n; *      (x &amp; bit1) ? bit2 : 0&n; * but this version is faster.&n; * (&quot;bit1&quot; and &quot;bit2&quot; must be single bits)&n; */
DECL|macro|_calc_vm_trans
mdefine_line|#define _calc_vm_trans(x, bit1, bit2) &bslash;&n;  ((bit1) &lt;= (bit2) ? ((x) &amp; (bit1)) * ((bit2) / (bit1)) &bslash;&n;   : ((x) &amp; (bit1)) / ((bit1) / (bit2)))
multiline_comment|/*&n; * Combine the mmap &quot;prot&quot; argument into &quot;vm_flags&quot; used internally.&n; */
r_static
r_inline
r_int
r_int
DECL|function|calc_vm_prot_bits
id|calc_vm_prot_bits
c_func
(paren
r_int
r_int
id|prot
)paren
(brace
r_return
id|_calc_vm_trans
c_func
(paren
id|prot
comma
id|PROT_READ
comma
id|VM_READ
)paren
op_or
id|_calc_vm_trans
c_func
(paren
id|prot
comma
id|PROT_WRITE
comma
id|VM_WRITE
)paren
op_or
id|_calc_vm_trans
c_func
(paren
id|prot
comma
id|PROT_EXEC
comma
id|VM_EXEC
)paren
suffix:semicolon
)brace
multiline_comment|/*&n; * Combine the mmap &quot;flags&quot; argument into &quot;vm_flags&quot; used internally.&n; */
r_static
r_inline
r_int
r_int
DECL|function|calc_vm_flag_bits
id|calc_vm_flag_bits
c_func
(paren
r_int
r_int
id|flags
)paren
(brace
r_return
id|_calc_vm_trans
c_func
(paren
id|flags
comma
id|MAP_GROWSDOWN
comma
id|VM_GROWSDOWN
)paren
op_or
id|_calc_vm_trans
c_func
(paren
id|flags
comma
id|MAP_DENYWRITE
comma
id|VM_DENYWRITE
)paren
op_or
id|_calc_vm_trans
c_func
(paren
id|flags
comma
id|MAP_EXECUTABLE
comma
id|VM_EXECUTABLE
)paren
op_or
id|_calc_vm_trans
c_func
(paren
id|flags
comma
id|MAP_LOCKED
comma
id|VM_LOCKED
)paren
suffix:semicolon
)brace
macro_line|#endif /* _LINUX_MMAN_H */
eof
