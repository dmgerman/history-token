multiline_comment|/*&n; * include/linux/writeback.h.&n; *&n; * These declarations are private to fs/ and mm/.&n; * Declarations which are exported to filesystems do not&n; * get placed here.&n; */
macro_line|#ifndef WRITEBACK_H
DECL|macro|WRITEBACK_H
mdefine_line|#define WRITEBACK_H
r_extern
id|spinlock_t
id|inode_lock
suffix:semicolon
r_extern
r_struct
id|list_head
id|inode_in_use
suffix:semicolon
r_extern
r_struct
id|list_head
id|inode_unused
suffix:semicolon
multiline_comment|/*&n; * Yes, writeback.h requires sched.h&n; * No, sched.h is not included from here.&n; */
DECL|function|current_is_pdflush
r_static
r_inline
r_int
id|current_is_pdflush
c_func
(paren
r_void
)paren
(brace
r_return
id|current-&gt;flags
op_amp
id|PF_FLUSHER
suffix:semicolon
)brace
multiline_comment|/*&n; * fs/fs-writeback.c&n; */
DECL|enum|writeback_sync_modes
r_enum
id|writeback_sync_modes
(brace
DECL|enumerator|WB_SYNC_NONE
id|WB_SYNC_NONE
op_assign
l_int|0
comma
multiline_comment|/* Don&squot;t wait on anything */
DECL|enumerator|WB_SYNC_LAST
id|WB_SYNC_LAST
op_assign
l_int|1
comma
multiline_comment|/* Wait on the last-written mapping */
DECL|enumerator|WB_SYNC_ALL
id|WB_SYNC_ALL
op_assign
l_int|2
comma
multiline_comment|/* Wait on every mapping */
DECL|enumerator|WB_SYNC_HOLD
id|WB_SYNC_HOLD
op_assign
l_int|3
comma
multiline_comment|/* Hold the inode on sb_dirty for sys_sync() */
)brace
suffix:semicolon
r_void
id|writeback_unlocked_inodes
c_func
(paren
r_int
op_star
id|nr_to_write
comma
r_enum
id|writeback_sync_modes
id|sync_mode
comma
r_int
r_int
op_star
id|older_than_this
)paren
suffix:semicolon
r_void
id|wake_up_inode
c_func
(paren
r_struct
id|inode
op_star
id|inode
)paren
suffix:semicolon
r_void
id|__wait_on_inode
c_func
(paren
r_struct
id|inode
op_star
id|inode
)paren
suffix:semicolon
r_void
id|sync_inodes_sb
c_func
(paren
r_struct
id|super_block
op_star
comma
r_int
id|wait
)paren
suffix:semicolon
r_void
id|sync_inodes
c_func
(paren
r_int
id|wait
)paren
suffix:semicolon
multiline_comment|/* writeback.h requires fs.h; it, too, is not included from here. */
DECL|function|wait_on_inode
r_static
r_inline
r_void
id|wait_on_inode
c_func
(paren
r_struct
id|inode
op_star
id|inode
)paren
(brace
r_if
c_cond
(paren
id|inode-&gt;i_state
op_amp
id|I_LOCK
)paren
id|__wait_on_inode
c_func
(paren
id|inode
)paren
suffix:semicolon
)brace
multiline_comment|/*&n; * mm/page-writeback.c&n; */
multiline_comment|/* These 5 are exported to sysctl. */
r_extern
r_int
id|dirty_background_ratio
suffix:semicolon
r_extern
r_int
id|dirty_async_ratio
suffix:semicolon
r_extern
r_int
id|dirty_sync_ratio
suffix:semicolon
r_extern
r_int
id|dirty_writeback_centisecs
suffix:semicolon
r_extern
r_int
id|dirty_expire_centisecs
suffix:semicolon
r_void
id|balance_dirty_pages
c_func
(paren
r_struct
id|address_space
op_star
id|mapping
)paren
suffix:semicolon
r_void
id|balance_dirty_pages_ratelimited
c_func
(paren
r_struct
id|address_space
op_star
id|mapping
)paren
suffix:semicolon
r_int
id|pdflush_operation
c_func
(paren
r_void
(paren
op_star
id|fn
)paren
(paren
r_int
r_int
)paren
comma
r_int
r_int
id|arg0
)paren
suffix:semicolon
r_int
id|do_writepages
c_func
(paren
r_struct
id|address_space
op_star
id|mapping
comma
r_int
op_star
id|nr_to_write
)paren
suffix:semicolon
multiline_comment|/* pdflush.c */
r_extern
r_int
id|nr_pdflush_threads
suffix:semicolon
multiline_comment|/* Global so it can be exported to sysctl&n;&t;&t;&t;&t;   read-only. */
macro_line|#endif&t;&t;/* WRITEBACK_H */
eof
