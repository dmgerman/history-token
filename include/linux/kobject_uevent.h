multiline_comment|/*&n; * kobject_uevent.h - list of kobject user events that can be generated&n; *&n; * Copyright (C) 2004 IBM Corp.&n; * Copyright (C) 2004 Greg Kroah-Hartman &lt;greg@kroah.com&gt;&n; *&n; * This file is released under the GPLv2.&n; *&n; */
macro_line|#ifndef _KOBJECT_EVENT_H_
DECL|macro|_KOBJECT_EVENT_H_
mdefine_line|#define _KOBJECT_EVENT_H_
DECL|macro|HOTPLUG_PATH_LEN
mdefine_line|#define HOTPLUG_PATH_LEN&t;256
multiline_comment|/* path to the hotplug userspace helper executed on an event */
r_extern
r_char
id|hotplug_path
(braket
)braket
suffix:semicolon
multiline_comment|/*&n; * If you add an action here, you must also add the proper string to the&n; * lib/kobject_uevent.c file.&n; */
DECL|typedef|kobject_action_t
r_typedef
r_int
id|__bitwise
id|kobject_action_t
suffix:semicolon
DECL|enum|kobject_action
r_enum
id|kobject_action
(brace
DECL|enumerator|KOBJ_ADD
id|KOBJ_ADD
op_assign
(paren
id|__force
id|kobject_action_t
)paren
l_int|0x01
comma
multiline_comment|/* add event, for hotplug */
DECL|enumerator|KOBJ_REMOVE
id|KOBJ_REMOVE
op_assign
(paren
id|__force
id|kobject_action_t
)paren
l_int|0x02
comma
multiline_comment|/* remove event, for hotplug */
DECL|enumerator|KOBJ_CHANGE
id|KOBJ_CHANGE
op_assign
(paren
id|__force
id|kobject_action_t
)paren
l_int|0x03
comma
multiline_comment|/* a sysfs attribute file has changed */
DECL|enumerator|KOBJ_MOUNT
id|KOBJ_MOUNT
op_assign
(paren
id|__force
id|kobject_action_t
)paren
l_int|0x04
comma
multiline_comment|/* mount event for block devices */
DECL|enumerator|KOBJ_UMOUNT
id|KOBJ_UMOUNT
op_assign
(paren
id|__force
id|kobject_action_t
)paren
l_int|0x05
comma
multiline_comment|/* umount event for block devices */
DECL|enumerator|KOBJ_OFFLINE
id|KOBJ_OFFLINE
op_assign
(paren
id|__force
id|kobject_action_t
)paren
l_int|0x06
comma
multiline_comment|/* offline event for hotplug devices */
)brace
suffix:semicolon
macro_line|#ifdef CONFIG_KOBJECT_UEVENT
r_int
id|kobject_uevent
c_func
(paren
r_struct
id|kobject
op_star
id|kobj
comma
r_enum
id|kobject_action
id|action
comma
r_struct
id|attribute
op_star
id|attr
)paren
suffix:semicolon
r_int
id|kobject_uevent_atomic
c_func
(paren
r_struct
id|kobject
op_star
id|kobj
comma
r_enum
id|kobject_action
id|action
comma
r_struct
id|attribute
op_star
id|attr
)paren
suffix:semicolon
macro_line|#else
DECL|function|kobject_uevent
r_static
r_inline
r_int
id|kobject_uevent
c_func
(paren
r_struct
id|kobject
op_star
id|kobj
comma
r_enum
id|kobject_action
id|action
comma
r_struct
id|attribute
op_star
id|attr
)paren
(brace
r_return
l_int|0
suffix:semicolon
)brace
DECL|function|kobject_uevent_atomic
r_static
r_inline
r_int
id|kobject_uevent_atomic
c_func
(paren
r_struct
id|kobject
op_star
id|kobj
comma
r_enum
id|kobject_action
id|action
comma
r_struct
id|attribute
op_star
id|attr
)paren
(brace
r_return
l_int|0
suffix:semicolon
)brace
macro_line|#endif
macro_line|#endif
eof
