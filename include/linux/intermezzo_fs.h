multiline_comment|/*&n; *&n; *  This program is free software; you can redistribute it and/or&n; *  modify it under the terms of the GNU General Public License as&n; *  published by the Free Software Foundation; either version 2 of the&n; *  License, or (at your option) any later version.&n; *&n; *  Copyright (C) 2000 Stelias Computing, Inc.&n; *  Copyright (C) 2000 Red Hat, Inc.&n; *  Copyright (C) 2000 TurboLinux, Inc.&n; *  Copyright (C) 2000 Los Alamos National Laboratory.&n; *  Copyright (C) 2001 Tacitus Systems, Inc.&n; *  Copyright (C) 2001 Cluster File Systems, Inc. &n; */
macro_line|#ifndef __INTERMEZZO_FS_H_
DECL|macro|__INTERMEZZO_FS_H_
mdefine_line|#define __INTERMEZZO_FS_H_ 1
macro_line|#ifdef __KERNEL__
macro_line|#include &lt;linux/smp.h&gt;
macro_line|#include &lt;linux/fsfilter.h&gt;
macro_line|#include &lt;linux/namei.h&gt;
multiline_comment|/* fixups for fs.h */
macro_line|#ifndef fs_down
DECL|macro|fs_down
mdefine_line|#define fs_down(sem) down(sem)
macro_line|#endif
macro_line|#ifndef fs_up
DECL|macro|fs_up
mdefine_line|#define fs_up(sem) up(sem)
macro_line|#endif
multiline_comment|/* We will be more tolerant than the default ea patch with attr name sizes and&n; * the size of value. If these come via VFS from the default ea patches, the&n; * corresponding character strings will be truncated anyway. During journalling- * we journal length for both name and value. See journal_set_ext_attr.&n; */
DECL|macro|PRESTO_EXT_ATTR_NAME_MAX
mdefine_line|#define PRESTO_EXT_ATTR_NAME_MAX 128
DECL|macro|PRESTO_EXT_ATTR_VALUE_MAX
mdefine_line|#define PRESTO_EXT_ATTR_VALUE_MAX 8192
DECL|macro|KML_IDLE
mdefine_line|#define KML_IDLE                        0
DECL|macro|KML_DECODE
mdefine_line|#define KML_DECODE                      1
DECL|macro|KML_OPTIMIZE
mdefine_line|#define KML_OPTIMIZE                    2
DECL|macro|KML_REINT
mdefine_line|#define KML_REINT                       3
DECL|macro|KML_OPEN_REINT
mdefine_line|#define KML_OPEN_REINT                  0x0100
DECL|macro|KML_REINT_BEGIN
mdefine_line|#define KML_REINT_BEGIN                 0x0200
DECL|macro|KML_BACKFETCH
mdefine_line|#define KML_BACKFETCH                   0x0400
DECL|macro|KML_REINT_END
mdefine_line|#define KML_REINT_END                   0x0800
DECL|macro|KML_CLOSE_REINT
mdefine_line|#define KML_CLOSE_REINT                 0x1000
DECL|macro|FSET_GET_KMLDATA
mdefine_line|#define FSET_GET_KMLDATA(fset)          fset-&gt;fset_kmldata
DECL|macro|KML_REINT_MAXBUF
mdefine_line|#define KML_REINT_MAXBUF              &t;(64 * 1024)
DECL|struct|kml_fsdata
r_struct
id|kml_fsdata
(brace
DECL|member|kml_state
r_int
id|kml_state
suffix:semicolon
multiline_comment|/* kml optimize support */
DECL|member|kml_kop_cache
r_struct
id|list_head
id|kml_kop_cache
suffix:semicolon
multiline_comment|/* kml reint support */
DECL|member|kml_reint_state
r_int
id|kml_reint_state
suffix:semicolon
DECL|member|kml_reint_cache
r_struct
id|list_head
id|kml_reint_cache
suffix:semicolon
DECL|member|kml_reint_current
r_struct
id|list_head
op_star
id|kml_reint_current
suffix:semicolon
DECL|member|kml_maxsize
r_int
id|kml_maxsize
suffix:semicolon
multiline_comment|/* max buffer */
DECL|member|kml_len
r_int
id|kml_len
suffix:semicolon
DECL|member|kml_buf
r_char
op_star
id|kml_buf
suffix:semicolon
DECL|member|kml_reintpos
id|loff_t
id|kml_reintpos
suffix:semicolon
DECL|member|kml_count
r_int
id|kml_count
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* super.c */
r_struct
id|presto_cache
op_star
id|presto_find_cache
c_func
(paren
r_struct
id|super_block
op_star
id|sb
)paren
suffix:semicolon
r_extern
r_struct
id|file_system_type
id|presto_fs_type
suffix:semicolon
r_extern
r_int
id|init_intermezzo_fs
c_func
(paren
r_void
)paren
suffix:semicolon
DECL|macro|CACHE_TYPE_LENGTH
mdefine_line|#define CACHE_TYPE_LENGTH       16
r_int
id|presto_ispresto
c_func
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
DECL|macro|CACHE_CLIENT_RO
mdefine_line|#define CACHE_CLIENT_RO       0x4
DECL|macro|CACHE_LENTO_RO
mdefine_line|#define CACHE_LENTO_RO        0x8
DECL|macro|CACHE_FSETROOT_SET
mdefine_line|#define CACHE_FSETROOT_SET     0x10
DECL|struct|presto_cache
r_struct
id|presto_cache
(brace
DECL|member|cache_lock
id|spinlock_t
id|cache_lock
suffix:semicolon
DECL|member|cache_reserved
id|loff_t
id|cache_reserved
suffix:semicolon
DECL|member|cache_chain
r_struct
id|list_head
id|cache_chain
suffix:semicolon
multiline_comment|/* for the dev/cache hash */
DECL|member|cache_flags
r_int
id|cache_flags
suffix:semicolon
DECL|member|cache_root_fileset
r_char
op_star
id|cache_root_fileset
suffix:semicolon
multiline_comment|/* fileset mounted on cache &quot;/&quot;  */
DECL|member|cache_sb
r_struct
id|super_block
op_star
id|cache_sb
suffix:semicolon
DECL|member|cache_mtde
r_struct
id|dentry
op_star
id|cache_mtde
suffix:semicolon
multiline_comment|/* unix mtpt of cache XXX NOT VALID XXX */
DECL|member|cache_mtpt
r_char
op_star
id|cache_mtpt
suffix:semicolon
multiline_comment|/*  again */
DECL|member|cache_type
r_char
op_star
id|cache_type
suffix:semicolon
multiline_comment|/* filesystem type of cache */
DECL|member|cache_filter
r_struct
id|filter_fs
op_star
id|cache_filter
suffix:semicolon
DECL|member|cache_psdev
r_struct
id|upc_comm
op_star
id|cache_psdev
suffix:semicolon
multiline_comment|/* points to /dev/intermezzo? we use */
DECL|member|cache_psdev_chain
r_struct
id|list_head
id|cache_psdev_chain
suffix:semicolon
DECL|member|cache_fset_list
r_struct
id|list_head
id|cache_fset_list
suffix:semicolon
multiline_comment|/* filesets mounted in cache */
)brace
suffix:semicolon
multiline_comment|/* file sets */
DECL|macro|CHUNK_BITS
mdefine_line|#define CHUNK_BITS  16
DECL|struct|presto_log_fd
r_struct
id|presto_log_fd
(brace
DECL|member|fd_lock
id|rwlock_t
id|fd_lock
suffix:semicolon
DECL|member|fd_offset
id|loff_t
id|fd_offset
suffix:semicolon
multiline_comment|/* offset where next record should go */
DECL|member|fd_file
r_struct
id|file
op_star
id|fd_file
suffix:semicolon
DECL|member|fd_truncating
r_int
id|fd_truncating
suffix:semicolon
DECL|member|fd_recno
r_int
r_int
id|fd_recno
suffix:semicolon
multiline_comment|/* last recno written */
DECL|member|fd_reservations
r_struct
id|list_head
id|fd_reservations
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|presto_file_set
r_struct
id|presto_file_set
(brace
DECL|member|fset_list
r_struct
id|list_head
id|fset_list
suffix:semicolon
DECL|member|fset_kml
r_struct
id|presto_log_fd
id|fset_kml
suffix:semicolon
DECL|member|fset_lml
r_struct
id|presto_log_fd
id|fset_lml
suffix:semicolon
DECL|member|fset_last_rcvd
r_struct
id|file
op_star
id|fset_last_rcvd
suffix:semicolon
DECL|member|fset_mtpt
r_struct
id|dentry
op_star
id|fset_mtpt
suffix:semicolon
DECL|member|fset_nd
r_struct
id|nameidata
id|fset_nd
suffix:semicolon
DECL|member|fset_cache
r_struct
id|presto_cache
op_star
id|fset_cache
suffix:semicolon
DECL|member|fset_lento_recno
r_int
r_int
id|fset_lento_recno
suffix:semicolon
multiline_comment|/* last recno mentioned to lento */
DECL|member|fset_lento_off
id|loff_t
id|fset_lento_off
suffix:semicolon
multiline_comment|/* last offset mentioned to lento */
DECL|member|fset_name
r_char
op_star
id|fset_name
suffix:semicolon
DECL|member|fset_flags
r_int
id|fset_flags
suffix:semicolon
DECL|member|fset_permit_count
r_int
id|fset_permit_count
suffix:semicolon
DECL|member|fset_permit_cookie
r_int
id|fset_permit_cookie
suffix:semicolon
DECL|member|fset_chunkbits
r_int
id|fset_chunkbits
suffix:semicolon
DECL|member|fset_kmldata
r_struct
id|kml_fsdata
op_star
id|fset_kmldata
suffix:semicolon
DECL|member|fset_file_maxio
id|loff_t
id|fset_file_maxio
suffix:semicolon
multiline_comment|/* writing more than this causes a close */
)brace
suffix:semicolon
multiline_comment|/* This is the default number of bytes written before a close is recorded*/
DECL|macro|FSET_DEFAULT_MAX_FILEIO
mdefine_line|#define FSET_DEFAULT_MAX_FILEIO (1024&lt;&lt;10)
DECL|struct|journal_ops
r_struct
id|journal_ops
(brace
DECL|member|tr_avail
id|loff_t
(paren
op_star
id|tr_avail
)paren
(paren
r_struct
id|presto_cache
op_star
id|fset
comma
r_struct
id|super_block
op_star
)paren
suffix:semicolon
DECL|member|tr_start
r_void
op_star
(paren
op_star
id|tr_start
)paren
(paren
r_struct
id|presto_file_set
op_star
comma
r_struct
id|inode
op_star
comma
r_int
id|op
)paren
suffix:semicolon
DECL|member|tr_commit
r_void
(paren
op_star
id|tr_commit
)paren
(paren
r_struct
id|presto_file_set
op_star
comma
r_void
op_star
id|handle
)paren
suffix:semicolon
DECL|member|tr_journal_data
r_void
(paren
op_star
id|tr_journal_data
)paren
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_struct
id|journal_ops
id|presto_ext2_journal_ops
suffix:semicolon
r_extern
r_struct
id|journal_ops
id|presto_ext3_journal_ops
suffix:semicolon
r_extern
r_struct
id|journal_ops
id|presto_xfs_journal_ops
suffix:semicolon
r_extern
r_struct
id|journal_ops
id|presto_reiserfs_journal_ops
suffix:semicolon
r_extern
r_struct
id|journal_ops
id|presto_obdfs_journal_ops
suffix:semicolon
DECL|struct|lento_vfs_context
r_struct
id|lento_vfs_context
(brace
DECL|member|slot_offset
id|__u32
id|slot_offset
suffix:semicolon
DECL|member|recno
id|__u32
id|recno
suffix:semicolon
DECL|member|kml_offset
id|__u64
id|kml_offset
suffix:semicolon
DECL|member|flags
id|__u32
id|flags
suffix:semicolon
DECL|member|updated_time
id|__u32
id|updated_time
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|LENTO_FL_KML
mdefine_line|#define LENTO_FL_KML            0x0001
DECL|macro|LENTO_FL_EXPECT
mdefine_line|#define LENTO_FL_EXPECT         0x0002
DECL|macro|LENTO_FL_VFSCHECK
mdefine_line|#define LENTO_FL_VFSCHECK       0x0004
DECL|macro|LENTO_FL_JUSTLOG
mdefine_line|#define LENTO_FL_JUSTLOG        0x0008
DECL|macro|LENTO_FL_WRITE_KML
mdefine_line|#define LENTO_FL_WRITE_KML      0x0010
DECL|macro|LENTO_FL_CANCEL_LML
mdefine_line|#define LENTO_FL_CANCEL_LML     0x0020
DECL|macro|LENTO_FL_WRITE_EXPECT
mdefine_line|#define LENTO_FL_WRITE_EXPECT   0x0040
DECL|macro|LENTO_FL_IGNORE_TIME
mdefine_line|#define LENTO_FL_IGNORE_TIME    0x0080
r_struct
id|presto_cache
op_star
id|presto_get_cache
c_func
(paren
r_struct
id|inode
op_star
id|inode
)paren
suffix:semicolon
r_int
id|presto_sprint_mounts
c_func
(paren
r_char
op_star
id|buf
comma
r_int
id|buflen
comma
r_int
id|minor
)paren
suffix:semicolon
r_struct
id|presto_file_set
op_star
id|presto_fset
c_func
(paren
r_struct
id|dentry
op_star
id|de
)paren
suffix:semicolon
r_int
id|presto_journal
c_func
(paren
r_struct
id|dentry
op_star
id|dentry
comma
r_char
op_star
id|buf
comma
r_int
id|size
)paren
suffix:semicolon
r_int
id|presto_fwrite
c_func
(paren
r_struct
id|file
op_star
id|file
comma
r_const
r_char
op_star
id|str
comma
r_int
id|len
comma
id|loff_t
op_star
id|off
)paren
suffix:semicolon
multiline_comment|/* psdev.c */
r_int
id|presto_psdev_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|presto_psdev_cleanup
c_func
(paren
r_void
)paren
suffix:semicolon
r_inline
r_int
id|presto_lento_up
c_func
(paren
r_int
id|minor
)paren
suffix:semicolon
multiline_comment|/* inode.c */
r_extern
r_struct
id|super_operations
id|presto_super_ops
suffix:semicolon
r_extern
r_int
id|presto_excluded_gid
suffix:semicolon
DECL|macro|PRESTO_EXCL_GID
mdefine_line|#define PRESTO_EXCL_GID 4711
r_void
id|presto_set_ops
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|filter_fs
op_star
id|filter
)paren
suffix:semicolon
r_void
id|presto_read_inode
c_func
(paren
r_struct
id|inode
op_star
id|inode
)paren
suffix:semicolon
r_void
id|presto_put_super
c_func
(paren
r_struct
id|super_block
op_star
)paren
suffix:semicolon
multiline_comment|/* journal.c */
r_void
id|presto_trans_commit
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_void
op_star
id|handle
)paren
suffix:semicolon
r_void
op_star
id|presto_trans_start
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|inode
op_star
id|inode
comma
r_int
id|op
)paren
suffix:semicolon
multiline_comment|/* dcache.c */
r_void
id|presto_frob_dop
c_func
(paren
r_struct
id|dentry
op_star
id|de
)paren
suffix:semicolon
r_char
op_star
id|presto_path
c_func
(paren
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|dentry
op_star
id|root
comma
r_char
op_star
id|buffer
comma
r_int
id|buflen
)paren
suffix:semicolon
r_void
id|presto_set_dd
c_func
(paren
r_struct
id|dentry
op_star
)paren
suffix:semicolon
r_void
id|presto_init_ddata_cache
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|presto_cleanup_ddata_cache
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_struct
id|dentry_operations
id|presto_dentry_ops
suffix:semicolon
multiline_comment|/* dir.c */
r_extern
r_struct
id|inode_operations
id|presto_dir_iops
suffix:semicolon
r_extern
r_struct
id|inode_operations
id|presto_file_iops
suffix:semicolon
r_extern
r_struct
id|inode_operations
id|presto_sym_iops
suffix:semicolon
r_extern
r_struct
id|file_operations
id|presto_dir_fops
suffix:semicolon
r_extern
r_struct
id|file_operations
id|presto_file_fops
suffix:semicolon
r_extern
r_struct
id|file_operations
id|presto_sym_fops
suffix:semicolon
r_int
id|presto_setattr
c_func
(paren
r_struct
id|dentry
op_star
id|de
comma
r_struct
id|iattr
op_star
id|iattr
)paren
suffix:semicolon
r_extern
r_int
id|presto_ilookup_uid
suffix:semicolon
DECL|macro|PRESTO_ILOOKUP_MAGIC
mdefine_line|#define PRESTO_ILOOKUP_MAGIC &quot;...ino:&quot;
DECL|macro|PRESTO_ILOOKUP_SEP
mdefine_line|#define PRESTO_ILOOKUP_SEP &squot;:&squot;
r_struct
id|dentry
op_star
id|presto_lookup
c_func
(paren
r_struct
id|inode
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|dentry
)paren
suffix:semicolon
multiline_comment|/* file.c */
DECL|struct|presto_reservation_data
r_struct
id|presto_reservation_data
(brace
DECL|member|ri_recno
r_int
r_int
id|ri_recno
suffix:semicolon
DECL|member|ri_offset
id|loff_t
id|ri_offset
suffix:semicolon
DECL|member|ri_size
id|loff_t
id|ri_size
suffix:semicolon
DECL|member|ri_list
r_struct
id|list_head
id|ri_list
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|presto_dentry_data
r_struct
id|presto_dentry_data
(brace
DECL|member|dd_count
r_int
id|dd_count
suffix:semicolon
multiline_comment|/* how mnay dentries are using this dentry */
DECL|member|dd_fset
r_struct
id|presto_file_set
op_star
id|dd_fset
suffix:semicolon
DECL|member|dd_kml_offset
id|loff_t
id|dd_kml_offset
suffix:semicolon
DECL|member|dd_flags
r_int
id|dd_flags
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|presto_file_data
r_struct
id|presto_file_data
(brace
DECL|member|fd_do_lml
r_int
id|fd_do_lml
suffix:semicolon
DECL|member|fd_lml_offset
id|loff_t
id|fd_lml_offset
suffix:semicolon
DECL|member|fd_fsuid
id|uid_t
id|fd_fsuid
suffix:semicolon
DECL|member|fd_fsgid
id|gid_t
id|fd_fsgid
suffix:semicolon
DECL|member|fd_uid
id|uid_t
id|fd_uid
suffix:semicolon
DECL|member|fd_gid
id|gid_t
id|fd_gid
suffix:semicolon
DECL|member|fd_mode
id|mode_t
id|fd_mode
suffix:semicolon
DECL|member|fd_ngroups
r_int
id|fd_ngroups
suffix:semicolon
DECL|member|fd_bytes_written
r_int
id|fd_bytes_written
suffix:semicolon
multiline_comment|/* Number of bytes written so far on this fd*/
DECL|member|fd_groups
id|gid_t
id|fd_groups
(braket
id|NGROUPS_MAX
)braket
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* presto.c and Lento::Downcall */
DECL|struct|presto_version
r_struct
id|presto_version
(brace
DECL|member|pv_mtime
id|__u64
id|pv_mtime
suffix:semicolon
DECL|member|pv_ctime
id|__u64
id|pv_ctime
suffix:semicolon
DECL|member|pv_size
id|__u64
id|pv_size
suffix:semicolon
)brace
suffix:semicolon
r_inline
r_struct
id|presto_dentry_data
op_star
id|presto_d2d
c_func
(paren
r_struct
id|dentry
op_star
)paren
suffix:semicolon
r_int
id|presto_walk
c_func
(paren
r_const
r_char
op_star
id|name
comma
r_struct
id|nameidata
op_star
id|nd
)paren
suffix:semicolon
r_int
id|presto_clear_fsetroot
c_func
(paren
r_char
op_star
id|path
)paren
suffix:semicolon
r_int
id|presto_clear_all_fsetroots
c_func
(paren
r_char
op_star
id|path
)paren
suffix:semicolon
r_int
id|presto_get_kmlsize
c_func
(paren
r_char
op_star
id|path
comma
r_int
op_star
id|size
)paren
suffix:semicolon
r_int
id|presto_get_lastrecno
c_func
(paren
r_char
op_star
id|path
comma
id|off_t
op_star
id|size
)paren
suffix:semicolon
r_int
id|presto_set_fsetroot
c_func
(paren
r_char
op_star
id|path
comma
r_char
op_star
id|fsetname
comma
r_int
r_int
id|fsetid
comma
r_int
r_int
id|flags
)paren
suffix:semicolon
r_int
id|presto_has_all_data
c_func
(paren
r_struct
id|inode
op_star
id|inode
)paren
suffix:semicolon
r_inline
r_int
id|presto_is_read_only
c_func
(paren
r_struct
id|presto_file_set
op_star
)paren
suffix:semicolon
r_int
id|presto_truncate_lml
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
)paren
suffix:semicolon
r_int
id|lento_write_lml
c_func
(paren
r_char
op_star
id|path
comma
id|__u64
id|remote_ino
comma
id|__u32
id|remote_generation
comma
id|__u32
id|remote_version
comma
r_struct
id|presto_version
op_star
id|remote_file_version
)paren
suffix:semicolon
r_int
id|lento_reset_fset
c_func
(paren
r_char
op_star
id|path
comma
id|__u64
id|offset
comma
id|__u32
id|recno
)paren
suffix:semicolon
r_int
id|lento_complete_closes
c_func
(paren
r_char
op_star
id|path
)paren
suffix:semicolon
r_int
id|lento_cancel_lml
c_func
(paren
r_char
op_star
id|path
comma
id|__u64
id|lml_offset
comma
id|__u64
id|remote_ino
comma
id|__u32
id|remote_generation
comma
id|__u32
id|remote_version
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_inline
r_int
id|presto_f2m
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
)paren
suffix:semicolon
multiline_comment|/* cache.c */
DECL|macro|PRESTO_REQLOW
mdefine_line|#define PRESTO_REQLOW  (3 * 4096)
DECL|macro|PRESTO_REQHIGH
mdefine_line|#define PRESTO_REQHIGH (6 * 4096)
r_void
id|presto_release_space
c_func
(paren
r_struct
id|presto_cache
op_star
id|cache
comma
id|loff_t
id|req
)paren
suffix:semicolon
r_int
id|presto_reserve_space
c_func
(paren
r_struct
id|presto_cache
op_star
id|cache
comma
id|loff_t
id|req
)paren
suffix:semicolon
multiline_comment|/* NOTE: PRESTO_FSETROOT MUST be 0x1:&n;   - if this bit is set dentry-&gt;d_fsdata points to a file_set&n;   - the address of the file_set if d_fsdata - 1&n;*/
DECL|macro|PRESTO_FSETROOT
mdefine_line|#define PRESTO_FSETROOT         0x00000001 /* dentry is fileset root */
DECL|macro|PRESTO_DATA
mdefine_line|#define PRESTO_DATA             0x00000002 /* cached data is valid */
DECL|macro|PRESTO_ATTR
mdefine_line|#define PRESTO_ATTR             0x00000004 /* attributes cached */
DECL|macro|EISFSETROOT
mdefine_line|#define EISFSETROOT             0x2001
r_struct
id|presto_file_set
op_star
id|presto_path2fileset
c_func
(paren
r_const
r_char
op_star
id|name
)paren
suffix:semicolon
r_int
id|presto_permit_downcall
c_func
(paren
r_const
r_char
op_star
id|path
comma
r_int
op_star
id|cookie
)paren
suffix:semicolon
r_int
id|presto_chk
c_func
(paren
r_struct
id|dentry
op_star
id|dentry
comma
r_int
id|flag
)paren
suffix:semicolon
r_void
id|presto_set
c_func
(paren
r_struct
id|dentry
op_star
id|dentry
comma
r_int
id|flag
)paren
suffix:semicolon
r_int
id|presto_get_permit
c_func
(paren
r_struct
id|inode
op_star
id|inode
)paren
suffix:semicolon
r_int
id|presto_put_permit
c_func
(paren
r_struct
id|inode
op_star
id|inode
)paren
suffix:semicolon
r_int
id|presto_mark_dentry
c_func
(paren
r_const
r_char
op_star
id|path
comma
r_int
op_logical_and
comma
r_int
op_logical_or
comma
r_int
op_star
id|res
)paren
suffix:semicolon
r_int
id|presto_mark_cache
c_func
(paren
r_const
r_char
op_star
id|path
comma
r_int
id|and_bits
comma
r_int
id|or_bits
comma
r_int
op_star
)paren
suffix:semicolon
r_int
id|presto_mark_fset
c_func
(paren
r_const
r_char
op_star
id|path
comma
r_int
id|and_bits
comma
r_int
id|or_bits
comma
r_int
op_star
)paren
suffix:semicolon
r_void
id|presto_getversion
c_func
(paren
r_struct
id|presto_version
op_star
id|pv
comma
r_struct
id|inode
op_star
id|inode
)paren
suffix:semicolon
r_int
id|presto_i2m
c_func
(paren
r_struct
id|inode
op_star
id|inode
)paren
suffix:semicolon
r_int
id|presto_c2m
c_func
(paren
r_struct
id|presto_cache
op_star
id|cache
)paren
suffix:semicolon
multiline_comment|/* journal.c */
DECL|struct|rec_info
r_struct
id|rec_info
(brace
DECL|member|offset
id|loff_t
id|offset
suffix:semicolon
DECL|member|size
r_int
id|size
suffix:semicolon
DECL|member|recno
r_int
id|recno
suffix:semicolon
DECL|member|is_kml
r_int
id|is_kml
suffix:semicolon
)brace
suffix:semicolon
r_void
id|presto_trans_commit
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_void
op_star
id|handle
)paren
suffix:semicolon
r_void
op_star
id|presto_trans_start
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|inode
op_star
id|inode
comma
r_int
id|op
)paren
suffix:semicolon
r_int
id|presto_clear_lml_close
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
id|loff_t
id|lml_offset
)paren
suffix:semicolon
r_int
id|presto_write_lml_close
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|file
op_star
id|file
comma
id|__u64
id|remote_ino
comma
id|__u32
id|remote_generation
comma
id|__u32
id|remote_version
comma
r_struct
id|presto_version
op_star
id|new_file_ver
)paren
suffix:semicolon
r_int
id|presto_complete_lml
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
)paren
suffix:semicolon
multiline_comment|/* vfs.c */
r_int
id|presto_do_setattr
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|iattr
op_star
id|iattr
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|presto_do_create
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_int
id|mode
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|presto_do_link
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|old_dentry
comma
r_struct
id|dentry
op_star
id|new_dentry
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|presto_do_unlink
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|presto_do_symlink
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_const
r_char
op_star
id|name
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|presto_do_mkdir
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_int
id|mode
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|presto_do_rmdir
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|presto_do_mknod
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_int
id|mode
comma
id|dev_t
id|dev
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|presto_do_rename
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|old_dir
comma
r_struct
id|dentry
op_star
id|old_dentry
comma
r_struct
id|dentry
op_star
id|new_dir
comma
r_struct
id|dentry
op_star
id|new_dentry
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_setattr
c_func
(paren
r_const
r_char
op_star
id|name
comma
r_struct
id|iattr
op_star
id|iattr
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_create
c_func
(paren
r_const
r_char
op_star
id|name
comma
r_int
id|mode
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_link
c_func
(paren
r_const
r_char
op_star
id|oldname
comma
r_const
r_char
op_star
id|newname
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_unlink
c_func
(paren
r_const
r_char
op_star
id|name
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_symlink
c_func
(paren
r_const
r_char
op_star
id|oldname
comma
r_const
r_char
op_star
id|newname
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_mkdir
c_func
(paren
r_const
r_char
op_star
id|name
comma
r_int
id|mode
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_rmdir
c_func
(paren
r_const
r_char
op_star
id|name
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_mknod
c_func
(paren
r_const
r_char
op_star
id|name
comma
r_int
id|mode
comma
id|dev_t
id|dev
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_rename
c_func
(paren
r_const
r_char
op_star
id|oldname
comma
r_const
r_char
op_star
id|newname
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_iopen
c_func
(paren
r_const
r_char
op_star
id|name
comma
id|ino_t
id|ino
comma
r_int
r_int
id|generation
comma
r_int
id|flags
)paren
suffix:semicolon
r_int
id|lento_close
c_func
(paren
r_int
r_int
id|fd
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
multiline_comment|/* journal.c */
DECL|macro|JOURNAL_PAGE_SZ
mdefine_line|#define JOURNAL_PAGE_SZ  PAGE_SIZE
id|__inline__
r_int
id|presto_no_journal
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
)paren
suffix:semicolon
r_int
id|journal_fetch
c_func
(paren
r_int
id|minor
)paren
suffix:semicolon
r_int
id|presto_journal_write
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|file
op_star
id|file
)paren
suffix:semicolon
r_int
id|presto_journal_setattr
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|presto_version
op_star
id|old_ver
comma
r_struct
id|iattr
op_star
id|iattr
)paren
suffix:semicolon
r_int
id|presto_journal_create
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|presto_version
op_star
id|tgt_dir_ver
comma
r_struct
id|presto_version
op_star
id|new_file_ver
comma
r_int
id|mode
)paren
suffix:semicolon
r_int
id|presto_journal_link
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|src
comma
r_struct
id|dentry
op_star
id|tgt
comma
r_struct
id|presto_version
op_star
id|tgt_dir_ver
comma
r_struct
id|presto_version
op_star
id|new_link_ver
)paren
suffix:semicolon
r_int
id|presto_journal_unlink
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|presto_version
op_star
id|tgt_dir_ver
comma
r_struct
id|presto_version
op_star
id|old_file_ver
comma
r_int
id|len
comma
r_const
r_char
op_star
id|name
)paren
suffix:semicolon
r_int
id|presto_journal_symlink
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_const
r_char
op_star
id|target
comma
r_struct
id|presto_version
op_star
id|tgt_dir_ver
comma
r_struct
id|presto_version
op_star
id|new_link_ver
)paren
suffix:semicolon
r_int
id|presto_journal_mkdir
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|presto_version
op_star
id|tgt_dir_ver
comma
r_struct
id|presto_version
op_star
id|new_dir_ver
comma
r_int
id|mode
)paren
suffix:semicolon
r_int
id|presto_journal_rmdir
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|presto_version
op_star
id|tgt_dir_ver
comma
r_struct
id|presto_version
op_star
id|old_dir_ver
comma
r_int
id|len
comma
r_const
r_char
op_star
id|name
)paren
suffix:semicolon
r_int
id|presto_journal_mknod
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|presto_version
op_star
id|tgt_dir_ver
comma
r_struct
id|presto_version
op_star
id|new_node_ver
comma
r_int
id|mode
comma
r_int
id|dmajor
comma
r_int
id|dminor
)paren
suffix:semicolon
r_int
id|presto_journal_rename
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|src
comma
r_struct
id|dentry
op_star
id|tgt
comma
r_struct
id|presto_version
op_star
id|src_dir_ver
comma
r_struct
id|presto_version
op_star
id|tgt_dir_ver
)paren
suffix:semicolon
r_int
id|presto_journal_open
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|presto_version
op_star
id|old_ver
)paren
suffix:semicolon
r_int
id|presto_journal_close
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|file
op_star
id|file
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|presto_version
op_star
id|new_ver
)paren
suffix:semicolon
r_int
id|presto_close_journal_file
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
)paren
suffix:semicolon
r_void
id|presto_log_op
c_func
(paren
r_void
op_star
id|data
comma
r_int
id|len
)paren
suffix:semicolon
r_int
id|presto_write_last_rcvd
c_func
(paren
r_struct
id|rec_info
op_star
id|recinfo
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
multiline_comment|/* journal_ext3.c */
DECL|struct|ext3_journal_data
r_struct
id|ext3_journal_data
(brace
DECL|member|jd_file
r_struct
id|file
op_star
id|jd_file
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_struct
id|ext3_journal_data
id|e3jd
suffix:semicolon
multiline_comment|/* sysctl.c */
r_int
id|init_intermezzo_sysctl
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|cleanup_intermezzo_sysctl
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* ext_attr.c */
macro_line|#ifdef CONFIG_FS_EXT_ATTR
multiline_comment|/* XXX: Borrowed from vfs.c. Once the ea patch is into CVS &n; * move this prototype -SHP&n; */
r_int
id|presto_do_set_ext_attr
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_const
r_char
op_star
id|name
comma
r_void
op_star
id|buffer
comma
r_int
id|buffer_len
comma
r_int
id|flags
comma
id|mode_t
op_star
id|mode
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|presto_set_ext_attr
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_const
r_char
op_star
id|name
comma
r_void
op_star
id|buffer
comma
r_int
id|buffer_len
comma
r_int
id|flags
)paren
suffix:semicolon
r_int
id|lento_set_ext_attr
c_func
(paren
r_const
r_char
op_star
id|path
comma
r_const
r_char
op_star
id|name
comma
r_void
op_star
id|buffer
comma
r_int
id|buffer_len
comma
r_int
id|flags
comma
id|mode_t
id|mode
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
multiline_comment|/* XXX: Borrowed from journal.c. Once the ea patch is into CVS &n; * move this prototype -SHP&n; */
r_int
id|presto_journal_set_ext_attr
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|presto_version
op_star
id|ver
comma
r_const
r_char
op_star
id|name
comma
r_const
r_char
op_star
id|buffer
comma
r_int
id|buffer_len
comma
r_int
id|flags
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/* global variables */
r_extern
r_int
id|presto_debug
suffix:semicolon
r_extern
r_int
id|presto_print_entry
suffix:semicolon
DECL|macro|PRESTO_DEBUG
mdefine_line|#define PRESTO_DEBUG
macro_line|#ifdef PRESTO_DEBUG
multiline_comment|/* debugging masks */
DECL|macro|D_SUPER
mdefine_line|#define D_SUPER     1   /* print results returned by Venus */
DECL|macro|D_INODE
mdefine_line|#define D_INODE     2   /* print entry and exit into procedure */
DECL|macro|D_FILE
mdefine_line|#define D_FILE      4
DECL|macro|D_CACHE
mdefine_line|#define D_CACHE     8   /* cache debugging */
DECL|macro|D_MALLOC
mdefine_line|#define D_MALLOC    16  /* print malloc, de-alloc information */
DECL|macro|D_JOURNAL
mdefine_line|#define D_JOURNAL   32
DECL|macro|D_UPCALL
mdefine_line|#define D_UPCALL    64  /* up and downcall debugging */
DECL|macro|D_PSDEV
mdefine_line|#define D_PSDEV    128
DECL|macro|D_PIOCTL
mdefine_line|#define D_PIOCTL   256
DECL|macro|D_SPECIAL
mdefine_line|#define D_SPECIAL  512
DECL|macro|D_TIMING
mdefine_line|#define D_TIMING  1024
DECL|macro|D_DOWNCALL
mdefine_line|#define D_DOWNCALL 2048
DECL|macro|D_KML
mdefine_line|#define D_KML      4096
DECL|macro|CDEBUG
mdefine_line|#define CDEBUG(mask, format, a...)                                      &bslash;&n;        do {                                                            &bslash;&n;                if (presto_debug &amp; mask) {                              &bslash;&n;                        printk(&quot;(%s:%s,l. %d %d): &quot;, __FILE__, __FUNCTION__, __LINE__, current-&gt;pid);   &bslash;&n;                        printk(format, ##a); }                          &bslash;&n;        } while (0)
DECL|macro|ENTRY
mdefine_line|#define ENTRY                                                           &bslash;&n;        if(presto_print_entry)                                          &bslash;&n;                printk(&quot;Process %d entered %s&bslash;n&quot;, current-&gt;pid, __FUNCTION__)
DECL|macro|EXIT
mdefine_line|#define EXIT                                                            &bslash;&n;        if(presto_print_entry)                                          &bslash;&n;                printk(&quot;Process %d leaving %s at %d&bslash;n&quot;, current-&gt;pid,   &bslash;&n;                       __FUNCTION__,__LINE__)
r_extern
r_int
id|presto_kmemory
suffix:semicolon
r_extern
r_int
id|presto_vmemory
suffix:semicolon
DECL|macro|presto_kmem_inc
mdefine_line|#define presto_kmem_inc(ptr, size) presto_kmemory += (size)
DECL|macro|presto_kmem_dec
mdefine_line|#define presto_kmem_dec(ptr, size) presto_kmemory -= (size)
DECL|macro|presto_vmem_inc
mdefine_line|#define presto_vmem_inc(ptr, size) presto_vmemory += (size)
DECL|macro|presto_vmem_dec
mdefine_line|#define presto_vmem_dec(ptr, size) presto_vmemory -= (size)
macro_line|#else /* !PRESTO_DEBUG */
DECL|macro|CDEBUG
mdefine_line|#define CDEBUG(mask, format, a...) do {} while (0)
DECL|macro|ENTRY
mdefine_line|#define ENTRY do {} while (0)
DECL|macro|EXIT
mdefine_line|#define EXIT do {} while (0)
DECL|macro|presto_kmem_inc
mdefine_line|#define presto_kmem_inc(ptr, size) do {} while (0)
DECL|macro|presto_kmem_dec
mdefine_line|#define presto_kmem_dec(ptr, size) do {} while (0)
DECL|macro|presto_vmem_inc
mdefine_line|#define presto_vmem_inc(ptr, size) do {} while (0)
DECL|macro|presto_vmem_dec
mdefine_line|#define presto_vmem_dec(ptr, size) do {} while (0)
macro_line|#endif /* PRESTO_DEBUG */
DECL|macro|PRESTO_ALLOC
mdefine_line|#define PRESTO_ALLOC(ptr, cast, size)                                   &bslash;&n;do {                                                                    &bslash;&n;    if (size &lt;= 4096) {                                                 &bslash;&n;        ptr = (cast)kmalloc((unsigned long) size, GFP_KERNEL);          &bslash;&n;        CDEBUG(D_MALLOC, &quot;kmalloced: %ld at %p.&bslash;n&quot;, (long)size, ptr);   &bslash;&n;        presto_kmem_inc(ptr, size);                                     &bslash;&n;    } else {                                                            &bslash;&n;        ptr = (cast)vmalloc((unsigned long) size);                      &bslash;&n;        CDEBUG(D_MALLOC, &quot;vmalloced: %ld at %p.&bslash;n&quot;, (long)size, ptr);   &bslash;&n;        presto_vmem_inc(ptr, size);                                     &bslash;&n;    }                                                                   &bslash;&n;    if ((ptr) == 0)                                                     &bslash;&n;        printk(&quot;PRESTO: out of memory at %s:%d&bslash;n&quot;, __FILE__, __LINE__); &bslash;&n;    else                                                                &bslash;&n;        memset( ptr, 0, size );                                         &bslash;&n;} while (0)
DECL|macro|PRESTO_FREE
mdefine_line|#define PRESTO_FREE(ptr,size)                                           &bslash;&n;do {                                                                    &bslash;&n;    if (!ptr) {                                                         &bslash;&n;        printk(&quot;PRESTO: free NULL pointer (%ld bytes) at %s:%d&bslash;n&quot;,      &bslash;&n;               (long)size, __FILE__, __LINE__);                         &bslash;&n;        break;                                                          &bslash;&n;    }                                                                   &bslash;&n;    if (size &lt;= 4096) {                                                 &bslash;&n;        CDEBUG(D_MALLOC, &quot;kfreed: %ld at %p.&bslash;n&quot;, (long)size, ptr);      &bslash;&n;        presto_kmem_dec(ptr, size);                                     &bslash;&n;        kfree((ptr));                                         &bslash;&n;    } else {                                                            &bslash;&n;        CDEBUG(D_MALLOC, &quot;vfreed: %ld at %p.&bslash;n&quot;, (long)size, ptr);      &bslash;&n;        presto_vmem_dec(ptr, size);                                     &bslash;&n;        vfree((ptr));                                                   &bslash;&n;    }                                                                   &bslash;&n;} while (0)
DECL|macro|MYPATHLEN
mdefine_line|#define MYPATHLEN(buffer,path) (buffer + PAGE_SIZE - path - 1)
macro_line|#else /* __KERNEL__ */
macro_line|#include &lt;asm/types.h&gt;
macro_line|#include &lt;sys/ioctl.h&gt;
DECL|struct|lento_vfs_context
r_struct
id|lento_vfs_context
(brace
DECL|member|slot_offset
id|__u32
id|slot_offset
suffix:semicolon
DECL|member|recno
id|__u32
id|recno
suffix:semicolon
DECL|member|kml_offset
id|__u64
id|kml_offset
suffix:semicolon
DECL|member|flags
id|__u32
id|flags
suffix:semicolon
DECL|member|updated_time
id|__u32
id|updated_time
suffix:semicolon
)brace
suffix:semicolon
macro_line|#endif /* __KERNEL__*/
multiline_comment|/* marking flags for fsets */
DECL|macro|FSET_CLIENT_RO
mdefine_line|#define FSET_CLIENT_RO 0x00000001
DECL|macro|FSET_LENTO_RO
mdefine_line|#define FSET_LENTO_RO  0x00000002
DECL|macro|FSET_HASPERMIT
mdefine_line|#define FSET_HASPERMIT  0x00000004 /* we have a permit to WB */
DECL|macro|FSET_INSYNC
mdefine_line|#define FSET_INSYNC     0x00000008 /* this fileset is in sync */
DECL|macro|FSET_PERMIT_WAITING
mdefine_line|#define FSET_PERMIT_WAITING 0x00000010 /* Lento is waiting for permit */
DECL|macro|FSET_STEAL_PERMIT
mdefine_line|#define FSET_STEAL_PERMIT 0x00000020 /* take permit if Lento is dead */
DECL|macro|FSET_JCLOSE_ON_WRITE
mdefine_line|#define FSET_JCLOSE_ON_WRITE 0x00000040 /* Journal closes on writes */
multiline_comment|/* what to mark indicator (ioctl parameter) */
DECL|macro|MARK_DENTRY
mdefine_line|#define MARK_DENTRY   101
DECL|macro|MARK_FSET
mdefine_line|#define MARK_FSET     102
DECL|macro|MARK_CACHE
mdefine_line|#define MARK_CACHE    103
DECL|macro|MARK_GETFL
mdefine_line|#define MARK_GETFL    104
DECL|struct|readmount
r_struct
id|readmount
(brace
DECL|member|io_len
r_int
id|io_len
suffix:semicolon
multiline_comment|/* this is IN &amp; OUT: true length of str is returned */
DECL|member|io_string
r_char
op_star
id|io_string
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* modeled after setsockopt */
multiline_comment|/* so if you have no /proc, oh well. */
multiline_comment|/* for now it&squot;s all ints. We may grow this later for non-ints. */
DECL|struct|psdev_opt
r_struct
id|psdev_opt
(brace
DECL|member|optname
r_int
id|optname
suffix:semicolon
DECL|member|optval
r_int
id|optval
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|lento_input
r_struct
id|lento_input
(brace
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
DECL|member|info
r_struct
id|lento_vfs_context
id|info
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|lento_input_attr
r_struct
id|lento_input_attr
(brace
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
macro_line|#if BITS_PER_LONG &lt; 64
DECL|member|dummy
id|__u32
id|dummy
suffix:semicolon
multiline_comment|/* XXX on 64-bit platforms, this is not needed */
macro_line|#endif
DECL|member|valid
id|__u32
id|valid
suffix:semicolon
DECL|member|mode
id|__u32
id|mode
suffix:semicolon
DECL|member|uid
id|__u32
id|uid
suffix:semicolon
DECL|member|gid
id|__u32
id|gid
suffix:semicolon
DECL|member|size
id|__u64
id|size
suffix:semicolon
DECL|member|atime
id|__s64
id|atime
suffix:semicolon
DECL|member|mtime
id|__s64
id|mtime
suffix:semicolon
DECL|member|ctime
id|__s64
id|ctime
suffix:semicolon
DECL|member|attr_flags
id|__u32
id|attr_flags
suffix:semicolon
DECL|member|info
r_struct
id|lento_vfs_context
id|info
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|lento_input_mode
r_struct
id|lento_input_mode
(brace
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
DECL|member|mode
id|__u32
id|mode
suffix:semicolon
DECL|member|info
r_struct
id|lento_vfs_context
id|info
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|lento_input_old_new
r_struct
id|lento_input_old_new
(brace
DECL|member|oldname
r_char
op_star
id|oldname
suffix:semicolon
DECL|member|newname
r_char
op_star
id|newname
suffix:semicolon
DECL|member|info
r_struct
id|lento_vfs_context
id|info
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|lento_input_dev
r_struct
id|lento_input_dev
(brace
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
DECL|member|mode
id|__u32
id|mode
suffix:semicolon
DECL|member|major
id|__u32
id|major
suffix:semicolon
DECL|member|minor
id|__u32
id|minor
suffix:semicolon
DECL|member|info
r_struct
id|lento_vfs_context
id|info
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|lento_input_iopen
r_struct
id|lento_input_iopen
(brace
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
macro_line|#if BITS_PER_LONG &lt; 64
DECL|member|dummy
id|__u32
id|dummy
suffix:semicolon
multiline_comment|/* XXX on 64-bit platforms, this is not needed */
macro_line|#endif
DECL|member|ino
id|__u64
id|ino
suffix:semicolon
DECL|member|generation
id|__u32
id|generation
suffix:semicolon
DECL|member|flags
id|__u32
id|flags
suffix:semicolon
DECL|member|fd
id|__s32
id|fd
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|lento_input_close
r_struct
id|lento_input_close
(brace
DECL|member|fd
id|__u32
id|fd
suffix:semicolon
DECL|member|info
r_struct
id|lento_vfs_context
id|info
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* XXX: check for alignment */
DECL|struct|lento_input_ext_attr
r_struct
id|lento_input_ext_attr
(brace
DECL|member|path
r_char
op_star
id|path
suffix:semicolon
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
DECL|member|name_len
id|__u32
id|name_len
suffix:semicolon
DECL|member|buffer
r_char
op_star
id|buffer
suffix:semicolon
DECL|member|buffer_len
id|__u32
id|buffer_len
suffix:semicolon
DECL|member|flags
id|__u32
id|flags
suffix:semicolon
DECL|member|mode
id|__u32
id|mode
suffix:semicolon
DECL|member|info
r_struct
id|lento_vfs_context
id|info
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* XXX should PRESTO_GET_* actually be of type _IOR, since we are reading? */
DECL|macro|PRESTO_GETMOUNT
mdefine_line|#define PRESTO_GETMOUNT         _IOW (&squot;p&squot;,0x03, struct readmount *)
DECL|macro|PRESTO_SETPID
mdefine_line|#define PRESTO_SETPID           _IOW (&squot;p&squot;,0x04, struct readmount *)
DECL|macro|PRESTO_CLOSE_JOURNALF
mdefine_line|#define PRESTO_CLOSE_JOURNALF   _IOW (&squot;p&squot;,0x06, struct readmount *)
DECL|macro|PRESTO_SET_FSETROOT
mdefine_line|#define PRESTO_SET_FSETROOT     _IOW (&squot;p&squot;,0x07, struct readmount *)
DECL|macro|PRESTO_CLEAR_FSETROOT
mdefine_line|#define PRESTO_CLEAR_FSETROOT   _IOW (&squot;p&squot;,0x08, struct readmount *)
DECL|macro|PRESTO_SETOPT
mdefine_line|#define PRESTO_SETOPT           _IOW (&squot;p&squot;,0x09, struct psdev_opt *)
DECL|macro|PRESTO_GETOPT
mdefine_line|#define PRESTO_GETOPT           _IOW (&squot;p&squot;,0x0a, struct psdev_opt *)
DECL|macro|PRESTO_GET_KMLSIZE
mdefine_line|#define PRESTO_GET_KMLSIZE      _IOW (&squot;p&squot;,0x0b, struct psdev_opt *)
DECL|macro|PRESTO_GET_RECNO
mdefine_line|#define PRESTO_GET_RECNO        _IOW (&squot;p&squot;,0x0c, struct psdev_opt *)
DECL|macro|PRESTO_VFS_SETATTR
mdefine_line|#define PRESTO_VFS_SETATTR      _IOW (&squot;p&squot;,0x10, struct lento_input_attr *)
DECL|macro|PRESTO_VFS_CREATE
mdefine_line|#define PRESTO_VFS_CREATE       _IOW (&squot;p&squot;,0x11, struct lento_input_mode *)
DECL|macro|PRESTO_VFS_LINK
mdefine_line|#define PRESTO_VFS_LINK         _IOW (&squot;p&squot;,0x12, struct lento_input_old_new *)
DECL|macro|PRESTO_VFS_UNLINK
mdefine_line|#define PRESTO_VFS_UNLINK       _IOW (&squot;p&squot;,0x13, struct lento_input *)
DECL|macro|PRESTO_VFS_SYMLINK
mdefine_line|#define PRESTO_VFS_SYMLINK      _IOW (&squot;p&squot;,0x14, struct lento_input_old_new *)
DECL|macro|PRESTO_VFS_MKDIR
mdefine_line|#define PRESTO_VFS_MKDIR        _IOW (&squot;p&squot;,0x15, struct lento_input_mode *)
DECL|macro|PRESTO_VFS_RMDIR
mdefine_line|#define PRESTO_VFS_RMDIR        _IOW (&squot;p&squot;,0x16, struct lento_input *)
DECL|macro|PRESTO_VFS_MKNOD
mdefine_line|#define PRESTO_VFS_MKNOD        _IOW (&squot;p&squot;,0x17, struct lento_input_dev *)
DECL|macro|PRESTO_VFS_RENAME
mdefine_line|#define PRESTO_VFS_RENAME       _IOW (&squot;p&squot;,0x18, struct lento_input_old_new *)
DECL|macro|PRESTO_VFS_CLOSE
mdefine_line|#define PRESTO_VFS_CLOSE        _IOW (&squot;p&squot;,0x1a, struct lento_input_close *)
DECL|macro|PRESTO_VFS_IOPEN
mdefine_line|#define PRESTO_VFS_IOPEN        _IOW (&squot;p&squot;,0x1b, struct lento_input_iopen *)
DECL|macro|PRESTO_VFS_SETEXTATTR
mdefine_line|#define PRESTO_VFS_SETEXTATTR   _IOW (&squot;p&squot;,0x1c, struct lento_input_ext_attr *)
DECL|macro|PRESTO_VFS_DELEXTATTR
mdefine_line|#define PRESTO_VFS_DELEXTATTR   _IOW (&squot;p&squot;,0x1d, struct lento_input_ext_attr *)
DECL|macro|PRESTO_MARK
mdefine_line|#define PRESTO_MARK             _IOW (&squot;p&squot;,0x20, struct lento_input_open *)
DECL|macro|PRESTO_RELEASE_PERMIT
mdefine_line|#define PRESTO_RELEASE_PERMIT   _IOW (&squot;p&squot;,0x21, struct lento_input_open *)
DECL|macro|PRESTO_CLEAR_ALL_FSETROOTS
mdefine_line|#define PRESTO_CLEAR_ALL_FSETROOTS  _IOW (&squot;p&squot;,0x22, struct readmount *)
DECL|macro|PRESTO_BACKFETCH_LML
mdefine_line|#define PRESTO_BACKFETCH_LML    _IOW (&squot;p&squot;,0x23, struct readmount *)
DECL|macro|PRESTO_REINT
mdefine_line|#define PRESTO_REINT            _IOW (&squot;p&squot;,0x24, struct readmount *)
DECL|macro|PRESTO_CANCEL_LML
mdefine_line|#define PRESTO_CANCEL_LML       _IOW (&squot;p&squot;,0x25, struct readmount *)
DECL|macro|PRESTO_RESET_FSET
mdefine_line|#define PRESTO_RESET_FSET       _IOW (&squot;p&squot;,0x26, struct readmount *)
DECL|macro|PRESTO_COMPLETE_CLOSES
mdefine_line|#define PRESTO_COMPLETE_CLOSES  _IOW (&squot;p&squot;,0x27, struct readmount *)
DECL|macro|PRESTO_REINT_BEGIN
mdefine_line|#define PRESTO_REINT_BEGIN      _IOW (&squot;p&squot;,0x30, struct readmount *)
DECL|macro|PRESTO_DO_REINT
mdefine_line|#define PRESTO_DO_REINT         _IOW (&squot;p&squot;,0x31, struct readmount *)
DECL|macro|PRESTO_REINT_END
mdefine_line|#define PRESTO_REINT_END        _IOW (&squot;p&squot;,0x32, struct readmount *)
macro_line|#endif
eof
