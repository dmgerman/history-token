multiline_comment|/*&n; * FILE NAME ite_gpio.h&n; *&n; * BRIEF MODULE DESCRIPTION&n; *&t;Generic gpio.&n; *&n; *  Author: MontaVista Software, Inc.  &lt;source@mvista.com&gt;&n; *          Hai-Pao Fan &lt;haipao@mvista.com&gt;&n; *&n; * Copyright 2001 MontaVista Software Inc.&n; *&n; *  This program is free software; you can redistribute  it and/or modify it&n; *  under  the terms of  the GNU General  Public License as published by the&n; *  Free Software Foundation;  either version 2 of the  License, or (at your&n; *  option) any later version.&n; *&n; *  THIS  SOFTWARE  IS PROVIDED   ``AS  IS&squot;&squot; AND   ANY  EXPRESS OR IMPLIED&n; *  WARRANTIES,   INCLUDING, BUT NOT  LIMITED  TO, THE IMPLIED WARRANTIES OF&n; *  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN&n; *  NO  EVENT  SHALL   THE AUTHOR  BE    LIABLE FOR ANY   DIRECT, INDIRECT,&n; *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT&n; *  NOT LIMITED   TO, PROCUREMENT OF  SUBSTITUTE GOODS  OR SERVICES; LOSS OF&n; *  USE, DATA,  OR PROFITS; OR  BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON&n; *  ANY THEORY OF LIABILITY, WHETHER IN  CONTRACT, STRICT LIABILITY, OR TORT&n; *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF&n; *  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&n; *&n; *  You should have received a copy of the  GNU General Public License along&n; *  with this program; if not, write  to the Free Software Foundation, Inc.,&n; *  675 Mass Ave, Cambridge, MA 02139, USA.&n; */
macro_line|#ifndef __ITE_GPIO_H
DECL|macro|__ITE_GPIO_H
mdefine_line|#define __ITE_GPIO_H
macro_line|#include &lt;linux/ioctl.h&gt;
DECL|struct|ite_gpio_ioctl_data
r_struct
id|ite_gpio_ioctl_data
(brace
DECL|member|device
id|__u32
id|device
suffix:semicolon
DECL|member|mask
id|__u32
id|mask
suffix:semicolon
DECL|member|data
id|__u32
id|data
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|ITE_GPIO_IOCTL_BASE
mdefine_line|#define ITE_GPIO_IOCTL_BASE&t;&squot;Z&squot;
DECL|macro|ITE_GPIO_IN
mdefine_line|#define ITE_GPIO_IN&t;&t;_IOWR(ITE_GPIO_IOCTL_BASE, 0, struct ite_gpio_ioctl_data)
DECL|macro|ITE_GPIO_OUT
mdefine_line|#define ITE_GPIO_OUT&t;&t;_IOW (ITE_GPIO_IOCTL_BASE, 1, struct ite_gpio_ioctl_data)
DECL|macro|ITE_GPIO_INT_CTRL
mdefine_line|#define&t;ITE_GPIO_INT_CTRL&t;_IOW (ITE_GPIO_IOCTL_BASE, 2, struct ite_gpio_ioctl_data)
DECL|macro|ITE_GPIO_IN_STATUS
mdefine_line|#define&t;ITE_GPIO_IN_STATUS&t;_IOW (ITE_GPIO_IOCTL_BASE, 3, struct ite_gpio_ioctl_data)
DECL|macro|ITE_GPIO_OUT_STATUS
mdefine_line|#define&t;ITE_GPIO_OUT_STATUS&t;_IOW (ITE_GPIO_IOCTL_BASE, 4, struct ite_gpio_ioctl_data)
DECL|macro|ITE_GPIO_GEN_CTRL
mdefine_line|#define ITE_GPIO_GEN_CTRL&t;_IOW (ITE_GPIO_IOCTL_BASE, 5, struct ite_gpio_ioctl_data)
DECL|macro|ITE_GPIO_INT_WAIT
mdefine_line|#define ITE_GPIO_INT_WAIT&t;_IOW (ITE_GPIO_IOCTL_BASE, 6, struct ite_gpio_ioctl_data)
DECL|macro|ITE_GPIO_PORTA
mdefine_line|#define&t;ITE_GPIO_PORTA&t;0x01
DECL|macro|ITE_GPIO_PORTB
mdefine_line|#define&t;ITE_GPIO_PORTB&t;0x02
DECL|macro|ITE_GPIO_PORTC
mdefine_line|#define&t;ITE_GPIO_PORTC&t;0x04
r_extern
r_int
id|ite_gpio_in
c_func
(paren
id|__u32
id|device
comma
id|__u32
id|mask
comma
r_volatile
id|__u32
op_star
id|data
)paren
suffix:semicolon
r_extern
r_int
id|ite_gpio_out
c_func
(paren
id|__u32
id|device
comma
id|__u32
id|mask
comma
id|__u32
id|data
)paren
suffix:semicolon
r_extern
r_int
id|ite_gpio_int_ctrl
c_func
(paren
id|__u32
id|device
comma
id|__u32
id|mask
comma
id|__u32
id|data
)paren
suffix:semicolon
r_extern
r_int
id|ite_gpio_in_status
c_func
(paren
id|__u32
id|device
comma
id|__u32
id|mask
comma
r_volatile
id|__u32
op_star
id|data
)paren
suffix:semicolon
r_extern
r_int
id|ite_gpio_out_status
c_func
(paren
id|__u32
id|device
comma
id|__u32
id|mask
comma
id|__u32
id|data
)paren
suffix:semicolon
r_extern
r_int
id|ite_gpio_gen_ctrl
c_func
(paren
id|__u32
id|device
comma
id|__u32
id|mask
comma
id|__u32
id|data
)paren
suffix:semicolon
r_extern
r_int
id|ite_gpio_int_wait
c_func
(paren
id|__u32
id|device
comma
id|__u32
id|mask
comma
id|__u32
id|data
)paren
suffix:semicolon
macro_line|#endif
eof
