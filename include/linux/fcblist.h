multiline_comment|/*&n; *  include/linux/fcblist.h ( File event callbacks handling )&n; *  Copyright (C) 2001,...,2002  Davide Libenzi&n; *&n; *  This program is free software; you can redistribute it and/or modify&n; *  it under the terms of the GNU General Public License as published by&n; *  the Free Software Foundation; either version 2 of the License, or&n; *  (at your option) any later version.&n; *&n; *  Davide Libenzi &lt;davidel@xmailserver.org&gt;&n; *&n; */
macro_line|#ifndef __LINUX_FCBLIST_H
DECL|macro|__LINUX_FCBLIST_H
mdefine_line|#define __LINUX_FCBLIST_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/list.h&gt;
macro_line|#include &lt;linux/spinlock.h&gt;
macro_line|#include &lt;linux/fs.h&gt;
macro_line|#include &lt;linux/file.h&gt;
multiline_comment|/* file callback notification events */
DECL|macro|ION_IN
mdefine_line|#define ION_IN&t;&t;1
DECL|macro|ION_OUT
mdefine_line|#define ION_OUT&t;&t;2
DECL|macro|ION_HUP
mdefine_line|#define ION_HUP&t;&t;3
DECL|macro|ION_ERR
mdefine_line|#define ION_ERR&t;&t;4
DECL|macro|FCB_LOCAL_SIZE
mdefine_line|#define FCB_LOCAL_SIZE&t;4
DECL|struct|fcb_struct
r_struct
id|fcb_struct
(brace
DECL|member|llink
r_struct
id|list_head
id|llink
suffix:semicolon
DECL|member|cbproc
r_void
(paren
op_star
id|cbproc
)paren
(paren
r_struct
id|file
op_star
comma
r_void
op_star
comma
r_int
r_int
op_star
comma
r_int
op_star
)paren
suffix:semicolon
DECL|member|data
r_void
op_star
id|data
suffix:semicolon
DECL|member|local
r_int
r_int
id|local
(braket
id|FCB_LOCAL_SIZE
)braket
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_int
id|ion_band_table
(braket
)braket
suffix:semicolon
r_extern
r_int
id|poll_band_table
(braket
)braket
suffix:semicolon
r_void
id|file_notify_event
c_func
(paren
r_struct
id|file
op_star
id|filep
comma
r_int
op_star
id|event
)paren
suffix:semicolon
r_int
id|file_notify_addcb
c_func
(paren
r_struct
id|file
op_star
id|filep
comma
r_void
(paren
op_star
id|cbproc
)paren
(paren
r_struct
id|file
op_star
comma
r_void
op_star
comma
r_int
r_int
op_star
comma
r_int
op_star
)paren
comma
r_void
op_star
id|data
)paren
suffix:semicolon
r_int
id|file_notify_delcb
c_func
(paren
r_struct
id|file
op_star
id|filep
comma
r_void
(paren
op_star
id|cbproc
)paren
(paren
r_struct
id|file
op_star
comma
r_void
op_star
comma
r_int
r_int
op_star
comma
r_int
op_star
)paren
)paren
suffix:semicolon
r_void
id|file_notify_cleanup
c_func
(paren
r_struct
id|file
op_star
id|filep
)paren
suffix:semicolon
DECL|function|file_notify_init
r_static
r_inline
r_void
id|file_notify_init
c_func
(paren
r_struct
id|file
op_star
id|filep
)paren
(brace
id|rwlock_init
c_func
(paren
op_amp
id|filep-&gt;f_cblock
)paren
suffix:semicolon
id|INIT_LIST_HEAD
c_func
(paren
op_amp
id|filep-&gt;f_cblist
)paren
suffix:semicolon
)brace
DECL|function|file_send_notify
r_static
r_inline
r_void
id|file_send_notify
c_func
(paren
r_struct
id|file
op_star
id|filep
comma
r_int
id|ioevt
comma
r_int
id|plevt
)paren
(brace
r_int
id|event
(braket
)braket
op_assign
(brace
id|ioevt
comma
id|plevt
comma
op_minus
l_int|1
)brace
suffix:semicolon
id|file_notify_event
c_func
(paren
id|filep
comma
id|event
)paren
suffix:semicolon
)brace
macro_line|#endif
eof
