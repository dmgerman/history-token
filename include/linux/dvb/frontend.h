multiline_comment|/*&n; * frontend.h&n; *&n; * Copyright (C) 2000 Marcus Metzler &lt;marcus@convergence.de&gt;&n; *                    Ralph  Metzler &lt;ralph@convergence.de&gt;&n; *                    Holger Waechtler &lt;holger@convergence.de&gt;&n; *                    Andre Draszik &lt;ad@convergence.de&gt;&n; *                    for convergence integrated media GmbH&n; *&n; * This program is free software; you can redistribute it and/or&n; * modify it under the terms of the GNU Lesser General Public License&n; * as published by the Free Software Foundation; either version 2.1&n; * of the License, or (at your option) any later version.&n; *&n; * This program is distributed in the hope that it will be useful,&n; * but WITHOUT ANY WARRANTY; without even the implied warranty of&n; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; * GNU General Public License for more details.&n; *&n; * You should have received a copy of the GNU Lesser General Public License&n; * along with this program; if not, write to the Free Software&n; * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.&n; *&n; */
macro_line|#ifndef _DVBFRONTEND_H_
DECL|macro|_DVBFRONTEND_H_
mdefine_line|#define _DVBFRONTEND_H_
macro_line|#include &lt;asm/types.h&gt;
DECL|enum|fe_type
r_typedef
r_enum
id|fe_type
(brace
DECL|enumerator|FE_QPSK
id|FE_QPSK
comma
DECL|enumerator|FE_QAM
id|FE_QAM
comma
DECL|enumerator|FE_OFDM
id|FE_OFDM
comma
DECL|enumerator|FE_ATSC
id|FE_ATSC
DECL|typedef|fe_type_t
)brace
id|fe_type_t
suffix:semicolon
DECL|enum|fe_caps
r_typedef
r_enum
id|fe_caps
(brace
DECL|enumerator|FE_IS_STUPID
id|FE_IS_STUPID
op_assign
l_int|0
comma
DECL|enumerator|FE_CAN_INVERSION_AUTO
id|FE_CAN_INVERSION_AUTO
op_assign
l_int|0x1
comma
DECL|enumerator|FE_CAN_FEC_1_2
id|FE_CAN_FEC_1_2
op_assign
l_int|0x2
comma
DECL|enumerator|FE_CAN_FEC_2_3
id|FE_CAN_FEC_2_3
op_assign
l_int|0x4
comma
DECL|enumerator|FE_CAN_FEC_3_4
id|FE_CAN_FEC_3_4
op_assign
l_int|0x8
comma
DECL|enumerator|FE_CAN_FEC_4_5
id|FE_CAN_FEC_4_5
op_assign
l_int|0x10
comma
DECL|enumerator|FE_CAN_FEC_5_6
id|FE_CAN_FEC_5_6
op_assign
l_int|0x20
comma
DECL|enumerator|FE_CAN_FEC_6_7
id|FE_CAN_FEC_6_7
op_assign
l_int|0x40
comma
DECL|enumerator|FE_CAN_FEC_7_8
id|FE_CAN_FEC_7_8
op_assign
l_int|0x80
comma
DECL|enumerator|FE_CAN_FEC_8_9
id|FE_CAN_FEC_8_9
op_assign
l_int|0x100
comma
DECL|enumerator|FE_CAN_FEC_AUTO
id|FE_CAN_FEC_AUTO
op_assign
l_int|0x200
comma
DECL|enumerator|FE_CAN_QPSK
id|FE_CAN_QPSK
op_assign
l_int|0x400
comma
DECL|enumerator|FE_CAN_QAM_16
id|FE_CAN_QAM_16
op_assign
l_int|0x800
comma
DECL|enumerator|FE_CAN_QAM_32
id|FE_CAN_QAM_32
op_assign
l_int|0x1000
comma
DECL|enumerator|FE_CAN_QAM_64
id|FE_CAN_QAM_64
op_assign
l_int|0x2000
comma
DECL|enumerator|FE_CAN_QAM_128
id|FE_CAN_QAM_128
op_assign
l_int|0x4000
comma
DECL|enumerator|FE_CAN_QAM_256
id|FE_CAN_QAM_256
op_assign
l_int|0x8000
comma
DECL|enumerator|FE_CAN_QAM_AUTO
id|FE_CAN_QAM_AUTO
op_assign
l_int|0x10000
comma
DECL|enumerator|FE_CAN_TRANSMISSION_MODE_AUTO
id|FE_CAN_TRANSMISSION_MODE_AUTO
op_assign
l_int|0x20000
comma
DECL|enumerator|FE_CAN_BANDWIDTH_AUTO
id|FE_CAN_BANDWIDTH_AUTO
op_assign
l_int|0x40000
comma
DECL|enumerator|FE_CAN_GUARD_INTERVAL_AUTO
id|FE_CAN_GUARD_INTERVAL_AUTO
op_assign
l_int|0x80000
comma
DECL|enumerator|FE_CAN_HIERARCHY_AUTO
id|FE_CAN_HIERARCHY_AUTO
op_assign
l_int|0x100000
comma
DECL|enumerator|FE_CAN_8VSB
id|FE_CAN_8VSB
op_assign
l_int|0x200000
comma
DECL|enumerator|FE_CAN_16VSB
id|FE_CAN_16VSB
op_assign
l_int|0x400000
comma
DECL|enumerator|FE_NEEDS_BENDING
id|FE_NEEDS_BENDING
op_assign
l_int|0x20000000
comma
singleline_comment|// not supported anymore, don&squot;t use (frontend requires frequency bending)
DECL|enumerator|FE_CAN_RECOVER
id|FE_CAN_RECOVER
op_assign
l_int|0x40000000
comma
singleline_comment|// frontend can recover from a cable unplug automatically
DECL|enumerator|FE_CAN_MUTE_TS
id|FE_CAN_MUTE_TS
op_assign
l_int|0x80000000
singleline_comment|// frontend can stop spurious TS data output
DECL|typedef|fe_caps_t
)brace
id|fe_caps_t
suffix:semicolon
DECL|struct|dvb_frontend_info
r_struct
id|dvb_frontend_info
(brace
DECL|member|name
r_char
id|name
(braket
l_int|128
)braket
suffix:semicolon
DECL|member|type
id|fe_type_t
id|type
suffix:semicolon
DECL|member|frequency_min
id|__u32
id|frequency_min
suffix:semicolon
DECL|member|frequency_max
id|__u32
id|frequency_max
suffix:semicolon
DECL|member|frequency_stepsize
id|__u32
id|frequency_stepsize
suffix:semicolon
DECL|member|frequency_tolerance
id|__u32
id|frequency_tolerance
suffix:semicolon
DECL|member|symbol_rate_min
id|__u32
id|symbol_rate_min
suffix:semicolon
DECL|member|symbol_rate_max
id|__u32
id|symbol_rate_max
suffix:semicolon
DECL|member|symbol_rate_tolerance
id|__u32
id|symbol_rate_tolerance
suffix:semicolon
multiline_comment|/* ppm */
DECL|member|notifier_delay
id|__u32
id|notifier_delay
suffix:semicolon
multiline_comment|/* DEPRECATED */
DECL|member|caps
id|fe_caps_t
id|caps
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/**&n; *  Check out the DiSEqC bus spec available on http://www.eutelsat.org/ for&n; *  the meaning of this struct...&n; */
DECL|struct|dvb_diseqc_master_cmd
r_struct
id|dvb_diseqc_master_cmd
(brace
DECL|member|msg
id|__u8
id|msg
(braket
l_int|6
)braket
suffix:semicolon
multiline_comment|/*  { framing, address, command, data [3] } */
DECL|member|msg_len
id|__u8
id|msg_len
suffix:semicolon
multiline_comment|/*  valid values are 3...6  */
)brace
suffix:semicolon
DECL|struct|dvb_diseqc_slave_reply
r_struct
id|dvb_diseqc_slave_reply
(brace
DECL|member|msg
id|__u8
id|msg
(braket
l_int|4
)braket
suffix:semicolon
multiline_comment|/*  { framing, data [3] } */
DECL|member|msg_len
id|__u8
id|msg_len
suffix:semicolon
multiline_comment|/*  valid values are 0...4, 0 means no msg  */
DECL|member|timeout
r_int
id|timeout
suffix:semicolon
multiline_comment|/*  return from ioctl after timeout ms with */
)brace
suffix:semicolon
multiline_comment|/*  errorcode when no message was received  */
DECL|enum|fe_sec_voltage
r_typedef
r_enum
id|fe_sec_voltage
(brace
DECL|enumerator|SEC_VOLTAGE_13
id|SEC_VOLTAGE_13
comma
DECL|enumerator|SEC_VOLTAGE_18
id|SEC_VOLTAGE_18
comma
DECL|enumerator|SEC_VOLTAGE_OFF
id|SEC_VOLTAGE_OFF
DECL|typedef|fe_sec_voltage_t
)brace
id|fe_sec_voltage_t
suffix:semicolon
DECL|enum|fe_sec_tone_mode
r_typedef
r_enum
id|fe_sec_tone_mode
(brace
DECL|enumerator|SEC_TONE_ON
id|SEC_TONE_ON
comma
DECL|enumerator|SEC_TONE_OFF
id|SEC_TONE_OFF
DECL|typedef|fe_sec_tone_mode_t
)brace
id|fe_sec_tone_mode_t
suffix:semicolon
DECL|enum|fe_sec_mini_cmd
r_typedef
r_enum
id|fe_sec_mini_cmd
(brace
DECL|enumerator|SEC_MINI_A
id|SEC_MINI_A
comma
DECL|enumerator|SEC_MINI_B
id|SEC_MINI_B
DECL|typedef|fe_sec_mini_cmd_t
)brace
id|fe_sec_mini_cmd_t
suffix:semicolon
DECL|enum|fe_status
r_typedef
r_enum
id|fe_status
(brace
DECL|enumerator|FE_HAS_SIGNAL
id|FE_HAS_SIGNAL
op_assign
l_int|0x01
comma
multiline_comment|/*  found something above the noise level */
DECL|enumerator|FE_HAS_CARRIER
id|FE_HAS_CARRIER
op_assign
l_int|0x02
comma
multiline_comment|/*  found a DVB signal  */
DECL|enumerator|FE_HAS_VITERBI
id|FE_HAS_VITERBI
op_assign
l_int|0x04
comma
multiline_comment|/*  FEC is stable  */
DECL|enumerator|FE_HAS_SYNC
id|FE_HAS_SYNC
op_assign
l_int|0x08
comma
multiline_comment|/*  found sync bytes  */
DECL|enumerator|FE_HAS_LOCK
id|FE_HAS_LOCK
op_assign
l_int|0x10
comma
multiline_comment|/*  everything&squot;s working... */
DECL|enumerator|FE_TIMEDOUT
id|FE_TIMEDOUT
op_assign
l_int|0x20
comma
multiline_comment|/*  no lock within the last ~2 seconds */
DECL|enumerator|FE_REINIT
id|FE_REINIT
op_assign
l_int|0x40
multiline_comment|/*  frontend was reinitialized,  */
DECL|typedef|fe_status_t
)brace
id|fe_status_t
suffix:semicolon
multiline_comment|/*  application is recommended to reset */
multiline_comment|/*  DiSEqC, tone and parameters */
DECL|enum|fe_spectral_inversion
r_typedef
r_enum
id|fe_spectral_inversion
(brace
DECL|enumerator|INVERSION_OFF
id|INVERSION_OFF
comma
DECL|enumerator|INVERSION_ON
id|INVERSION_ON
comma
DECL|enumerator|INVERSION_AUTO
id|INVERSION_AUTO
DECL|typedef|fe_spectral_inversion_t
)brace
id|fe_spectral_inversion_t
suffix:semicolon
DECL|enum|fe_code_rate
r_typedef
r_enum
id|fe_code_rate
(brace
DECL|enumerator|FEC_NONE
id|FEC_NONE
op_assign
l_int|0
comma
DECL|enumerator|FEC_1_2
id|FEC_1_2
comma
DECL|enumerator|FEC_2_3
id|FEC_2_3
comma
DECL|enumerator|FEC_3_4
id|FEC_3_4
comma
DECL|enumerator|FEC_4_5
id|FEC_4_5
comma
DECL|enumerator|FEC_5_6
id|FEC_5_6
comma
DECL|enumerator|FEC_6_7
id|FEC_6_7
comma
DECL|enumerator|FEC_7_8
id|FEC_7_8
comma
DECL|enumerator|FEC_8_9
id|FEC_8_9
comma
DECL|enumerator|FEC_AUTO
id|FEC_AUTO
DECL|typedef|fe_code_rate_t
)brace
id|fe_code_rate_t
suffix:semicolon
DECL|enum|fe_modulation
r_typedef
r_enum
id|fe_modulation
(brace
DECL|enumerator|QPSK
id|QPSK
comma
DECL|enumerator|QAM_16
id|QAM_16
comma
DECL|enumerator|QAM_32
id|QAM_32
comma
DECL|enumerator|QAM_64
id|QAM_64
comma
DECL|enumerator|QAM_128
id|QAM_128
comma
DECL|enumerator|QAM_256
id|QAM_256
comma
DECL|enumerator|QAM_AUTO
id|QAM_AUTO
comma
DECL|enumerator|VSB_8
id|VSB_8
comma
DECL|enumerator|VSB_16
id|VSB_16
DECL|typedef|fe_modulation_t
)brace
id|fe_modulation_t
suffix:semicolon
DECL|enum|fe_transmit_mode
r_typedef
r_enum
id|fe_transmit_mode
(brace
DECL|enumerator|TRANSMISSION_MODE_2K
id|TRANSMISSION_MODE_2K
comma
DECL|enumerator|TRANSMISSION_MODE_8K
id|TRANSMISSION_MODE_8K
comma
DECL|enumerator|TRANSMISSION_MODE_AUTO
id|TRANSMISSION_MODE_AUTO
DECL|typedef|fe_transmit_mode_t
)brace
id|fe_transmit_mode_t
suffix:semicolon
DECL|enum|fe_bandwidth
r_typedef
r_enum
id|fe_bandwidth
(brace
DECL|enumerator|BANDWIDTH_8_MHZ
id|BANDWIDTH_8_MHZ
comma
DECL|enumerator|BANDWIDTH_7_MHZ
id|BANDWIDTH_7_MHZ
comma
DECL|enumerator|BANDWIDTH_6_MHZ
id|BANDWIDTH_6_MHZ
comma
DECL|enumerator|BANDWIDTH_AUTO
id|BANDWIDTH_AUTO
DECL|typedef|fe_bandwidth_t
)brace
id|fe_bandwidth_t
suffix:semicolon
DECL|enum|fe_guard_interval
r_typedef
r_enum
id|fe_guard_interval
(brace
DECL|enumerator|GUARD_INTERVAL_1_32
id|GUARD_INTERVAL_1_32
comma
DECL|enumerator|GUARD_INTERVAL_1_16
id|GUARD_INTERVAL_1_16
comma
DECL|enumerator|GUARD_INTERVAL_1_8
id|GUARD_INTERVAL_1_8
comma
DECL|enumerator|GUARD_INTERVAL_1_4
id|GUARD_INTERVAL_1_4
comma
DECL|enumerator|GUARD_INTERVAL_AUTO
id|GUARD_INTERVAL_AUTO
DECL|typedef|fe_guard_interval_t
)brace
id|fe_guard_interval_t
suffix:semicolon
DECL|enum|fe_hierarchy
r_typedef
r_enum
id|fe_hierarchy
(brace
DECL|enumerator|HIERARCHY_NONE
id|HIERARCHY_NONE
comma
DECL|enumerator|HIERARCHY_1
id|HIERARCHY_1
comma
DECL|enumerator|HIERARCHY_2
id|HIERARCHY_2
comma
DECL|enumerator|HIERARCHY_4
id|HIERARCHY_4
comma
DECL|enumerator|HIERARCHY_AUTO
id|HIERARCHY_AUTO
DECL|typedef|fe_hierarchy_t
)brace
id|fe_hierarchy_t
suffix:semicolon
DECL|struct|dvb_qpsk_parameters
r_struct
id|dvb_qpsk_parameters
(brace
DECL|member|symbol_rate
id|__u32
id|symbol_rate
suffix:semicolon
multiline_comment|/* symbol rate in Symbols per second */
DECL|member|fec_inner
id|fe_code_rate_t
id|fec_inner
suffix:semicolon
multiline_comment|/* forward error correction (see above) */
)brace
suffix:semicolon
DECL|struct|dvb_qam_parameters
r_struct
id|dvb_qam_parameters
(brace
DECL|member|symbol_rate
id|__u32
id|symbol_rate
suffix:semicolon
multiline_comment|/* symbol rate in Symbols per second */
DECL|member|fec_inner
id|fe_code_rate_t
id|fec_inner
suffix:semicolon
multiline_comment|/* forward error correction (see above) */
DECL|member|modulation
id|fe_modulation_t
id|modulation
suffix:semicolon
multiline_comment|/* modulation type (see above) */
)brace
suffix:semicolon
DECL|struct|dvb_vsb_parameters
r_struct
id|dvb_vsb_parameters
(brace
DECL|member|modulation
id|fe_modulation_t
id|modulation
suffix:semicolon
multiline_comment|/* modulation type (see above) */
)brace
suffix:semicolon
DECL|struct|dvb_ofdm_parameters
r_struct
id|dvb_ofdm_parameters
(brace
DECL|member|bandwidth
id|fe_bandwidth_t
id|bandwidth
suffix:semicolon
DECL|member|code_rate_HP
id|fe_code_rate_t
id|code_rate_HP
suffix:semicolon
multiline_comment|/* high priority stream code rate */
DECL|member|code_rate_LP
id|fe_code_rate_t
id|code_rate_LP
suffix:semicolon
multiline_comment|/* low priority stream code rate */
DECL|member|constellation
id|fe_modulation_t
id|constellation
suffix:semicolon
multiline_comment|/* modulation type (see above) */
DECL|member|transmission_mode
id|fe_transmit_mode_t
id|transmission_mode
suffix:semicolon
DECL|member|guard_interval
id|fe_guard_interval_t
id|guard_interval
suffix:semicolon
DECL|member|hierarchy_information
id|fe_hierarchy_t
id|hierarchy_information
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|dvb_frontend_parameters
r_struct
id|dvb_frontend_parameters
(brace
DECL|member|frequency
id|__u32
id|frequency
suffix:semicolon
multiline_comment|/* (absolute) frequency in Hz for QAM/OFDM/ATSC */
multiline_comment|/* intermediate frequency in kHz for QPSK */
DECL|member|inversion
id|fe_spectral_inversion_t
id|inversion
suffix:semicolon
r_union
(brace
DECL|member|qpsk
r_struct
id|dvb_qpsk_parameters
id|qpsk
suffix:semicolon
DECL|member|qam
r_struct
id|dvb_qam_parameters
id|qam
suffix:semicolon
DECL|member|ofdm
r_struct
id|dvb_ofdm_parameters
id|ofdm
suffix:semicolon
DECL|member|vsb
r_struct
id|dvb_vsb_parameters
id|vsb
suffix:semicolon
DECL|member|u
)brace
id|u
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|dvb_frontend_event
r_struct
id|dvb_frontend_event
(brace
DECL|member|status
id|fe_status_t
id|status
suffix:semicolon
DECL|member|parameters
r_struct
id|dvb_frontend_parameters
id|parameters
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|FE_GET_INFO
mdefine_line|#define FE_GET_INFO                _IOR(&squot;o&squot;, 61, struct dvb_frontend_info)
DECL|macro|FE_DISEQC_RESET_OVERLOAD
mdefine_line|#define FE_DISEQC_RESET_OVERLOAD   _IO(&squot;o&squot;, 62)
DECL|macro|FE_DISEQC_SEND_MASTER_CMD
mdefine_line|#define FE_DISEQC_SEND_MASTER_CMD  _IOW(&squot;o&squot;, 63, struct dvb_diseqc_master_cmd)
DECL|macro|FE_DISEQC_RECV_SLAVE_REPLY
mdefine_line|#define FE_DISEQC_RECV_SLAVE_REPLY _IOR(&squot;o&squot;, 64, struct dvb_diseqc_slave_reply)
DECL|macro|FE_DISEQC_SEND_BURST
mdefine_line|#define FE_DISEQC_SEND_BURST       _IO(&squot;o&squot;, 65)  /* fe_sec_mini_cmd_t */
DECL|macro|FE_SET_TONE
mdefine_line|#define FE_SET_TONE                _IO(&squot;o&squot;, 66)  /* fe_sec_tone_mode_t */
DECL|macro|FE_SET_VOLTAGE
mdefine_line|#define FE_SET_VOLTAGE             _IO(&squot;o&squot;, 67)  /* fe_sec_voltage_t */
DECL|macro|FE_ENABLE_HIGH_LNB_VOLTAGE
mdefine_line|#define FE_ENABLE_HIGH_LNB_VOLTAGE _IO(&squot;o&squot;, 68)  /* int */
DECL|macro|FE_READ_STATUS
mdefine_line|#define FE_READ_STATUS             _IOR(&squot;o&squot;, 69, fe_status_t)
DECL|macro|FE_READ_BER
mdefine_line|#define FE_READ_BER                _IOR(&squot;o&squot;, 70, __u32)
DECL|macro|FE_READ_SIGNAL_STRENGTH
mdefine_line|#define FE_READ_SIGNAL_STRENGTH    _IOR(&squot;o&squot;, 71, __u16)
DECL|macro|FE_READ_SNR
mdefine_line|#define FE_READ_SNR                _IOR(&squot;o&squot;, 72, __u16)
DECL|macro|FE_READ_UNCORRECTED_BLOCKS
mdefine_line|#define FE_READ_UNCORRECTED_BLOCKS _IOR(&squot;o&squot;, 73, __u32)
DECL|macro|FE_SET_FRONTEND
mdefine_line|#define FE_SET_FRONTEND            _IOW(&squot;o&squot;, 76, struct dvb_frontend_parameters)
DECL|macro|FE_GET_FRONTEND
mdefine_line|#define FE_GET_FRONTEND            _IOR(&squot;o&squot;, 77, struct dvb_frontend_parameters)
DECL|macro|FE_GET_EVENT
mdefine_line|#define FE_GET_EVENT               _IOR(&squot;o&squot;, 78, struct dvb_frontend_event)
DECL|macro|FE_DISHNETWORK_SEND_LEGACY_CMD
mdefine_line|#define FE_DISHNETWORK_SEND_LEGACY_CMD _IO(&squot;o&squot;, 80) /* unsigned int */
macro_line|#endif /*_DVBFRONTEND_H_*/
eof
