macro_line|#ifndef _LINUX_KDEV_T_H
DECL|macro|_LINUX_KDEV_T_H
mdefine_line|#define _LINUX_KDEV_T_H
macro_line|#ifdef __KERNEL__
DECL|macro|MINORBITS
mdefine_line|#define MINORBITS&t;20
DECL|macro|MINORMASK
mdefine_line|#define MINORMASK&t;((1U &lt;&lt; MINORBITS) - 1)
DECL|macro|MAJOR
mdefine_line|#define MAJOR(dev)&t;((unsigned int) ((dev) &gt;&gt; MINORBITS))
DECL|macro|MINOR
mdefine_line|#define MINOR(dev)&t;((unsigned int) ((dev) &amp; MINORMASK))
DECL|macro|MKDEV
mdefine_line|#define MKDEV(ma,mi)&t;(((ma) &lt;&lt; MINORBITS) | (mi))
DECL|macro|print_dev_t
mdefine_line|#define print_dev_t(buffer, dev)&t;&t;&t;&t;&t;&bslash;&n;&t;sprintf((buffer), &quot;%u:%u&bslash;n&quot;, MAJOR(dev), MINOR(dev))
DECL|macro|format_dev_t
mdefine_line|#define format_dev_t(buffer, dev)&t;&t;&t;&t;&t;&bslash;&n;&t;({&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;&t;sprintf(buffer, &quot;%u:%u&quot;, MAJOR(dev), MINOR(dev));&t;&bslash;&n;&t;&t;buffer;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;})
multiline_comment|/* acceptable for old filesystems */
DECL|function|old_valid_dev
r_static
r_inline
r_int
id|old_valid_dev
c_func
(paren
id|dev_t
id|dev
)paren
(brace
r_return
id|MAJOR
c_func
(paren
id|dev
)paren
OL
l_int|256
op_logical_and
id|MINOR
c_func
(paren
id|dev
)paren
OL
l_int|256
suffix:semicolon
)brace
DECL|function|old_encode_dev
r_static
r_inline
id|u16
id|old_encode_dev
c_func
(paren
id|dev_t
id|dev
)paren
(brace
r_return
(paren
id|MAJOR
c_func
(paren
id|dev
)paren
op_lshift
l_int|8
)paren
op_or
id|MINOR
c_func
(paren
id|dev
)paren
suffix:semicolon
)brace
DECL|function|old_decode_dev
r_static
r_inline
id|dev_t
id|old_decode_dev
c_func
(paren
id|u16
id|val
)paren
(brace
r_return
id|MKDEV
c_func
(paren
(paren
id|val
op_rshift
l_int|8
)paren
op_amp
l_int|255
comma
id|val
op_amp
l_int|255
)paren
suffix:semicolon
)brace
DECL|function|new_valid_dev
r_static
r_inline
r_int
id|new_valid_dev
c_func
(paren
id|dev_t
id|dev
)paren
(brace
r_return
l_int|1
suffix:semicolon
)brace
DECL|function|new_encode_dev
r_static
r_inline
id|u32
id|new_encode_dev
c_func
(paren
id|dev_t
id|dev
)paren
(brace
r_int
id|major
op_assign
id|MAJOR
c_func
(paren
id|dev
)paren
suffix:semicolon
r_int
id|minor
op_assign
id|MINOR
c_func
(paren
id|dev
)paren
suffix:semicolon
r_return
(paren
id|minor
op_amp
l_int|0xff
)paren
op_or
(paren
id|major
op_lshift
l_int|8
)paren
op_or
(paren
(paren
id|minor
op_amp
op_complement
l_int|0xff
)paren
op_lshift
l_int|12
)paren
suffix:semicolon
)brace
DECL|function|new_decode_dev
r_static
r_inline
id|dev_t
id|new_decode_dev
c_func
(paren
id|u32
id|dev
)paren
(brace
r_int
id|major
op_assign
(paren
id|dev
op_amp
l_int|0xfff00
)paren
op_rshift
l_int|8
suffix:semicolon
r_int
id|minor
op_assign
(paren
id|dev
op_amp
l_int|0xff
)paren
op_or
(paren
(paren
id|dev
op_rshift
l_int|12
)paren
op_amp
l_int|0xfff00
)paren
suffix:semicolon
r_return
id|MKDEV
c_func
(paren
id|major
comma
id|minor
)paren
suffix:semicolon
)brace
DECL|function|huge_valid_dev
r_static
r_inline
r_int
id|huge_valid_dev
c_func
(paren
id|dev_t
id|dev
)paren
(brace
r_return
l_int|1
suffix:semicolon
)brace
DECL|function|huge_encode_dev
r_static
r_inline
id|u64
id|huge_encode_dev
c_func
(paren
id|dev_t
id|dev
)paren
(brace
r_return
id|new_encode_dev
c_func
(paren
id|dev
)paren
suffix:semicolon
)brace
DECL|function|huge_decode_dev
r_static
r_inline
id|dev_t
id|huge_decode_dev
c_func
(paren
id|u64
id|dev
)paren
(brace
r_return
id|new_decode_dev
c_func
(paren
id|dev
)paren
suffix:semicolon
)brace
DECL|function|sysv_valid_dev
r_static
r_inline
r_int
id|sysv_valid_dev
c_func
(paren
id|dev_t
id|dev
)paren
(brace
r_return
id|MAJOR
c_func
(paren
id|dev
)paren
OL
(paren
l_int|1
op_lshift
l_int|14
)paren
op_logical_and
id|MINOR
c_func
(paren
id|dev
)paren
OL
(paren
l_int|1
op_lshift
l_int|18
)paren
suffix:semicolon
)brace
DECL|function|sysv_encode_dev
r_static
r_inline
id|u32
id|sysv_encode_dev
c_func
(paren
id|dev_t
id|dev
)paren
(brace
r_return
id|MINOR
c_func
(paren
id|dev
)paren
op_or
(paren
id|MAJOR
c_func
(paren
id|dev
)paren
op_lshift
l_int|18
)paren
suffix:semicolon
)brace
DECL|function|sysv_major
r_static
r_inline
r_int
id|sysv_major
c_func
(paren
id|u32
id|dev
)paren
(brace
r_return
(paren
id|dev
op_rshift
l_int|18
)paren
op_amp
l_int|0x3fff
suffix:semicolon
)brace
DECL|function|sysv_minor
r_static
r_inline
r_int
id|sysv_minor
c_func
(paren
id|u32
id|dev
)paren
(brace
r_return
id|dev
op_amp
l_int|0x3ffff
suffix:semicolon
)brace
macro_line|#else /* __KERNEL__ */
multiline_comment|/*&n;Some programs want their definitions of MAJOR and MINOR and MKDEV&n;from the kernel sources. These must be the externally visible ones.&n;*/
DECL|macro|MAJOR
mdefine_line|#define MAJOR(dev)&t;((dev)&gt;&gt;8)
DECL|macro|MINOR
mdefine_line|#define MINOR(dev)&t;((dev) &amp; 0xff)
DECL|macro|MKDEV
mdefine_line|#define MKDEV(ma,mi)&t;((ma)&lt;&lt;8 | (mi))
macro_line|#endif /* __KERNEL__ */
macro_line|#endif
eof
