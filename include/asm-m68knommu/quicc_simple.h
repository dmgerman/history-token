multiline_comment|/***********************************&n; * $Id: quicc_simple.h,v 1.1 2002/03/02 15:01:10 gerg Exp $&n; ***********************************&n; *&n; ***************************************&n; * Simple drivers common header&n; ***************************************&n; */
macro_line|#ifndef __SIMPLE_H
DECL|macro|__SIMPLE_H
mdefine_line|#define __SIMPLE_H
multiline_comment|/* #include &quot;quicc.h&quot; */
DECL|macro|GLB_SCC_0
mdefine_line|#define GLB_SCC_0   0
DECL|macro|GLB_SCC_1
mdefine_line|#define GLB_SCC_1   1
DECL|macro|GLB_SCC_2
mdefine_line|#define GLB_SCC_2   2
DECL|macro|GLB_SCC_3
mdefine_line|#define GLB_SCC_3   3
DECL|typedef|int_routine
r_typedef
r_void
(paren
id|int_routine
)paren
(paren
r_int
r_int
id|interrupt_event
)paren
suffix:semicolon
DECL|typedef|int_routine_ptr
r_typedef
id|int_routine
op_star
id|int_routine_ptr
suffix:semicolon
DECL|typedef|alloc_routine
r_typedef
r_void
op_star
(paren
id|alloc_routine
)paren
(paren
r_int
id|length
)paren
suffix:semicolon
DECL|typedef|free_routine
r_typedef
r_void
(paren
id|free_routine
)paren
(paren
r_int
id|scc_num
comma
r_int
id|channel_num
comma
r_void
op_star
id|buf
)paren
suffix:semicolon
DECL|typedef|store_rx_buffer_routine
r_typedef
r_void
(paren
id|store_rx_buffer_routine
)paren
(paren
r_int
id|scc_num
comma
r_int
id|channel_num
comma
r_void
op_star
id|buff
comma
r_int
id|length
)paren
suffix:semicolon
DECL|typedef|handle_tx_error_routine
r_typedef
r_int
(paren
id|handle_tx_error_routine
)paren
(paren
r_int
id|scc_num
comma
r_int
id|channel_num
comma
id|QUICC_BD
op_star
id|tbd
)paren
suffix:semicolon
DECL|typedef|handle_rx_error_routine
r_typedef
r_void
(paren
id|handle_rx_error_routine
)paren
(paren
r_int
id|scc_num
comma
r_int
id|channel_num
comma
id|QUICC_BD
op_star
id|rbd
)paren
suffix:semicolon
DECL|typedef|handle_lost_error_routine
r_typedef
r_void
(paren
id|handle_lost_error_routine
)paren
(paren
r_int
id|scc_num
comma
r_int
id|channel_num
)paren
suffix:semicolon
multiline_comment|/* user defined functions for global errors */
DECL|typedef|handle_glob_overrun_routine
r_typedef
r_void
(paren
id|handle_glob_overrun_routine
)paren
(paren
r_int
id|scc_number
)paren
suffix:semicolon
DECL|typedef|handle_glob_underrun_routine
r_typedef
r_void
(paren
id|handle_glob_underrun_routine
)paren
(paren
r_int
id|scc_number
)paren
suffix:semicolon
DECL|typedef|glob_intr_q_overflow_routine
r_typedef
r_void
(paren
id|glob_intr_q_overflow_routine
)paren
(paren
r_int
id|scc_number
)paren
suffix:semicolon
multiline_comment|/*&n; * General initialization and command routines&n; */
r_void
id|quicc_issue_cmd
(paren
r_int
r_int
id|cmd
comma
r_int
id|scc_num
)paren
suffix:semicolon
r_void
id|quicc_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|quicc_scc_init
c_func
(paren
r_int
id|scc_number
comma
r_int
id|number_of_rx_buf
comma
r_int
id|number_of_tx_buf
)paren
suffix:semicolon
r_void
id|quicc_smc_init
c_func
(paren
r_int
id|smc_number
comma
r_int
id|number_of_rx_buf
comma
r_int
id|number_of_tx_buf
)paren
suffix:semicolon
r_void
id|quicc_scc_start
c_func
(paren
r_int
id|scc_num
)paren
suffix:semicolon
r_void
id|quicc_scc_loopback
c_func
(paren
r_int
id|scc_num
)paren
suffix:semicolon
multiline_comment|/* Interrupt enable/disable routines for critical pieces of code*/
r_int
r_int
id|IntrDis
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|IntrEna
c_func
(paren
r_int
r_int
id|old_sr
)paren
suffix:semicolon
multiline_comment|/* For debugging */
r_void
id|print_rbd
c_func
(paren
r_int
id|scc_num
)paren
suffix:semicolon
r_void
id|print_tbd
c_func
(paren
r_int
id|scc_num
)paren
suffix:semicolon
macro_line|#endif
eof
