multiline_comment|/****************************************************************************/
multiline_comment|/*&n; *&t;mcfpci.h -- PCI bridge on ColdFire eval boards.&n; *&n; *&t;(C) Copyright 2000, Greg Ungerer (gerg@snapgear.com)&n; *&t;(C) Copyright 2000, Lineo Inc. (www.lineo.com)&n; */
multiline_comment|/****************************************************************************/
macro_line|#ifndef&t;mcfpci_h
DECL|macro|mcfpci_h
mdefine_line|#define&t;mcfpci_h
multiline_comment|/****************************************************************************/
macro_line|#include &lt;linux/config.h&gt;
macro_line|#ifdef CONFIG_PCI
multiline_comment|/*&n; *&t;Address regions in the PCI addres space are not mapped into the&n; *&t;normal memory space of the ColdFire. They must be accessed via&n; *&t;handler routines. This is easy for I/O space (inb/outb/etc) but&n; *&t;needs some code changes to support ordinary memory. Interrupts&n; *&t;also need to be vectored through the PCI handler first, then it&n; *&t;will call the actual driver sub-handlers.&n; */
multiline_comment|/*&n; *&t;Un-define all the standard I/O access routines.&n; */
DECL|macro|inb
macro_line|#undef&t;inb
DECL|macro|inw
macro_line|#undef&t;inw
DECL|macro|inl
macro_line|#undef&t;inl
DECL|macro|inb_p
macro_line|#undef&t;inb_p
DECL|macro|inw_p
macro_line|#undef&t;inw_p
DECL|macro|insb
macro_line|#undef&t;insb
DECL|macro|insw
macro_line|#undef&t;insw
DECL|macro|insl
macro_line|#undef&t;insl
DECL|macro|outb
macro_line|#undef&t;outb
DECL|macro|outw
macro_line|#undef&t;outw
DECL|macro|outl
macro_line|#undef&t;outl
DECL|macro|outb_p
macro_line|#undef&t;outb_p
DECL|macro|outw_p
macro_line|#undef&t;outw_p
DECL|macro|outsb
macro_line|#undef&t;outsb
DECL|macro|outsw
macro_line|#undef&t;outsw
DECL|macro|outsl
macro_line|#undef&t;outsl
DECL|macro|request_irq
macro_line|#undef&t;request_irq
DECL|macro|free_irq
macro_line|#undef&t;free_irq
DECL|macro|bus_to_virt
macro_line|#undef&t;bus_to_virt
DECL|macro|virt_to_bus
macro_line|#undef&t;virt_to_bus
multiline_comment|/*&n; *&t;Re-direct all I/O memory accesses functions to PCI specific ones.&n; */
DECL|macro|inb
mdefine_line|#define&t;inb&t;pci_inb
DECL|macro|inw
mdefine_line|#define&t;inw&t;pci_inw
DECL|macro|inl
mdefine_line|#define&t;inl&t;pci_inl
DECL|macro|inb_p
mdefine_line|#define&t;inb_p&t;pci_inb
DECL|macro|inw_p
mdefine_line|#define&t;inw_p&t;pci_inw
DECL|macro|insb
mdefine_line|#define&t;insb&t;pci_insb
DECL|macro|insw
mdefine_line|#define&t;insw&t;pci_insw
DECL|macro|insl
mdefine_line|#define&t;insl&t;pci_insl
DECL|macro|outb
mdefine_line|#define&t;outb&t;pci_outb
DECL|macro|outw
mdefine_line|#define&t;outw&t;pci_outw
DECL|macro|outl
mdefine_line|#define&t;outl&t;pci_outl
DECL|macro|outb_p
mdefine_line|#define&t;outb_p&t;pci_outb
DECL|macro|outw_p
mdefine_line|#define&t;outw_p&t;pci_outw
DECL|macro|outsb
mdefine_line|#define&t;outsb&t;pci_outsb
DECL|macro|outsw
mdefine_line|#define&t;outsw&t;pci_outsw
DECL|macro|outsl
mdefine_line|#define&t;outsl&t;pci_outsl
DECL|macro|request_irq
mdefine_line|#define&t;request_irq&t;pci_request_irq
DECL|macro|free_irq
mdefine_line|#define&t;free_irq&t;pci_free_irq
DECL|macro|virt_to_bus
mdefine_line|#define&t;virt_to_bus&t;pci_virt_to_bus
DECL|macro|bus_to_virt
mdefine_line|#define&t;bus_to_virt&t;pci_bus_to_virt
DECL|macro|CONFIG_COMEMPCI
mdefine_line|#define&t;CONFIG_COMEMPCI&t;1
multiline_comment|/*&n; *&t;Prototypes of the real PCI functions (defined in bios32.c).&n; */
r_int
r_char
id|pci_inb
c_func
(paren
r_int
r_int
id|addr
)paren
suffix:semicolon
r_int
r_int
id|pci_inw
c_func
(paren
r_int
r_int
id|addr
)paren
suffix:semicolon
r_int
r_int
id|pci_inl
c_func
(paren
r_int
r_int
id|addr
)paren
suffix:semicolon
r_void
id|pci_insb
c_func
(paren
r_void
op_star
id|addr
comma
r_void
op_star
id|buf
comma
r_int
id|len
)paren
suffix:semicolon
r_void
id|pci_insw
c_func
(paren
r_void
op_star
id|addr
comma
r_void
op_star
id|buf
comma
r_int
id|len
)paren
suffix:semicolon
r_void
id|pci_insl
c_func
(paren
r_void
op_star
id|addr
comma
r_void
op_star
id|buf
comma
r_int
id|len
)paren
suffix:semicolon
r_void
id|pci_outb
c_func
(paren
r_int
r_char
id|val
comma
r_int
r_int
id|addr
)paren
suffix:semicolon
r_void
id|pci_outw
c_func
(paren
r_int
r_int
id|val
comma
r_int
r_int
id|addr
)paren
suffix:semicolon
r_void
id|pci_outl
c_func
(paren
r_int
r_int
id|val
comma
r_int
r_int
id|addr
)paren
suffix:semicolon
r_void
id|pci_outsb
c_func
(paren
r_void
op_star
id|addr
comma
r_void
op_star
id|buf
comma
r_int
id|len
)paren
suffix:semicolon
r_void
id|pci_outsw
c_func
(paren
r_void
op_star
id|addr
comma
r_void
op_star
id|buf
comma
r_int
id|len
)paren
suffix:semicolon
r_void
id|pci_outsl
c_func
(paren
r_void
op_star
id|addr
comma
r_void
op_star
id|buf
comma
r_int
id|len
)paren
suffix:semicolon
r_int
id|pci_request_irq
c_func
(paren
r_int
r_int
id|irq
comma
r_void
(paren
op_star
id|handler
)paren
(paren
r_int
comma
r_void
op_star
comma
r_struct
id|pt_regs
op_star
)paren
comma
r_int
r_int
id|flags
comma
r_const
r_char
op_star
id|device
comma
r_void
op_star
id|dev_id
)paren
suffix:semicolon
r_void
id|pci_free_irq
c_func
(paren
r_int
r_int
id|irq
comma
r_void
op_star
id|dev_id
)paren
suffix:semicolon
r_void
op_star
id|pci_bmalloc
c_func
(paren
r_int
id|size
)paren
suffix:semicolon
r_void
id|pci_bmfree
c_func
(paren
r_void
op_star
id|bmp
comma
r_int
id|len
)paren
suffix:semicolon
r_void
id|pci_copytoshmem
c_func
(paren
r_int
r_int
id|bmp
comma
r_void
op_star
id|src
comma
r_int
id|size
)paren
suffix:semicolon
r_void
id|pci_copyfromshmem
c_func
(paren
r_void
op_star
id|dst
comma
r_int
r_int
id|bmp
comma
r_int
id|size
)paren
suffix:semicolon
r_int
r_int
id|pci_virt_to_bus
c_func
(paren
r_volatile
r_void
op_star
id|address
)paren
suffix:semicolon
r_void
op_star
id|pci_bus_to_virt
c_func
(paren
r_int
r_int
id|address
)paren
suffix:semicolon
r_void
id|pci_bmcpyto
c_func
(paren
r_void
op_star
id|dst
comma
r_void
op_star
id|src
comma
r_int
id|len
)paren
suffix:semicolon
r_void
id|pci_bmcpyfrom
c_func
(paren
r_void
op_star
id|dst
comma
r_void
op_star
id|src
comma
r_int
id|len
)paren
suffix:semicolon
macro_line|#endif /* CONFIG_PCI */
multiline_comment|/****************************************************************************/
macro_line|#endif&t;/* mcfpci_h */
eof
