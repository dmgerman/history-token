multiline_comment|/*&n; * This file is subject to the terms and conditions of the GNU General Public&n; * License.  See the file &quot;COPYING&quot; in the main directory of this archive&n; * for more details.&n; *&n; * Copyright (C) 1992 - 1997, 2000-2003 Silicon Graphics, Inc. All rights reserved.&n; */
macro_line|#ifndef _ASM_IA64_SN_SN2_SN_PRIVATE_H
DECL|macro|_ASM_IA64_SN_SN2_SN_PRIVATE_H
mdefine_line|#define _ASM_IA64_SN_SN2_SN_PRIVATE_H
macro_line|#include &lt;linux/wait.h&gt;
macro_line|#include &lt;asm/sn/nodepda.h&gt;
macro_line|#include &lt;asm/sn/io.h&gt;
macro_line|#include &lt;asm/sn/xtalk/xwidget.h&gt;
macro_line|#include &lt;asm/sn/xtalk/xtalk_private.h&gt;
r_extern
id|nasid_t
id|master_nasid
suffix:semicolon
multiline_comment|/* promif.c */
r_extern
r_void
id|he_arcs_set_vectors
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|mem_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|cpu_unenable
c_func
(paren
id|cpuid_t
)paren
suffix:semicolon
r_extern
id|nasid_t
id|get_lowest_nasid
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
r_int
id|get_master_bridge_base
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|check_nasid_equiv
c_func
(paren
id|nasid_t
comma
id|nasid_t
)paren
suffix:semicolon
r_extern
r_char
id|get_console_pcislot
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|is_master_baseio_nasid_widget
c_func
(paren
id|nasid_t
id|test_nasid
comma
id|xwidgetnum_t
id|test_wid
)paren
suffix:semicolon
multiline_comment|/* memsupport.c */
r_extern
r_void
id|poison_state_alter_range
c_func
(paren
r_int
r_int
id|start
comma
r_int
id|len
comma
r_int
id|poison
)paren
suffix:semicolon
r_extern
r_int
id|memory_present
c_func
(paren
id|paddr_t
)paren
suffix:semicolon
r_extern
r_int
id|memory_read_accessible
c_func
(paren
id|paddr_t
)paren
suffix:semicolon
r_extern
r_int
id|memory_write_accessible
c_func
(paren
id|paddr_t
)paren
suffix:semicolon
r_extern
r_void
id|memory_set_access
c_func
(paren
id|paddr_t
comma
r_int
comma
r_int
)paren
suffix:semicolon
r_extern
r_void
id|show_dir_state
c_func
(paren
id|paddr_t
comma
r_void
(paren
op_star
)paren
(paren
r_char
op_star
comma
dot
dot
dot
)paren
)paren
suffix:semicolon
r_extern
r_void
id|check_dir_state
c_func
(paren
id|nasid_t
comma
r_int
comma
r_void
(paren
op_star
)paren
(paren
r_char
op_star
comma
dot
dot
dot
)paren
)paren
suffix:semicolon
r_extern
r_void
id|set_dir_owner
c_func
(paren
id|paddr_t
comma
r_int
)paren
suffix:semicolon
r_extern
r_void
id|set_dir_state
c_func
(paren
id|paddr_t
comma
r_int
)paren
suffix:semicolon
r_extern
r_void
id|set_dir_state_POISONED
c_func
(paren
id|paddr_t
)paren
suffix:semicolon
r_extern
r_void
id|set_dir_state_UNOWNED
c_func
(paren
id|paddr_t
)paren
suffix:semicolon
r_extern
r_int
id|is_POISONED_dir_state
c_func
(paren
id|paddr_t
)paren
suffix:semicolon
r_extern
r_int
id|is_UNOWNED_dir_state
c_func
(paren
id|paddr_t
)paren
suffix:semicolon
macro_line|#ifdef LATER
r_extern
r_void
id|get_dir_ent
c_func
(paren
id|paddr_t
id|paddr
comma
r_int
op_star
id|state
comma
r_uint64
op_star
id|vec_ptr
comma
id|hubreg_t
op_star
id|elo
)paren
suffix:semicolon
macro_line|#endif
multiline_comment|/* intr.c */
r_extern
r_void
id|intr_unreserve_level
c_func
(paren
id|cpuid_t
id|cpu
comma
r_int
id|level
)paren
suffix:semicolon
r_extern
r_int
id|intr_connect_level
c_func
(paren
id|cpuid_t
id|cpu
comma
r_int
id|bit
)paren
suffix:semicolon
r_extern
r_int
id|intr_disconnect_level
c_func
(paren
id|cpuid_t
id|cpu
comma
r_int
id|bit
)paren
suffix:semicolon
r_extern
id|cpuid_t
id|intr_heuristic
c_func
(paren
id|vertex_hdl_t
id|dev
comma
r_int
id|req_bit
comma
r_int
op_star
id|resp_bit
)paren
suffix:semicolon
r_extern
r_void
id|intr_block_bit
c_func
(paren
id|cpuid_t
id|cpu
comma
r_int
id|bit
)paren
suffix:semicolon
r_extern
r_void
id|intr_unblock_bit
c_func
(paren
id|cpuid_t
id|cpu
comma
r_int
id|bit
)paren
suffix:semicolon
r_extern
r_void
id|setrtvector
c_func
(paren
id|intr_func_t
)paren
suffix:semicolon
r_extern
r_void
id|install_cpuintr
c_func
(paren
id|cpuid_t
id|cpu
)paren
suffix:semicolon
r_extern
r_void
id|install_dbgintr
c_func
(paren
id|cpuid_t
id|cpu
)paren
suffix:semicolon
r_extern
r_void
id|install_tlbintr
c_func
(paren
id|cpuid_t
id|cpu
)paren
suffix:semicolon
r_extern
r_void
id|hub_migrintr_init
c_func
(paren
id|cnodeid_t
multiline_comment|/*cnode */
)paren
suffix:semicolon
r_extern
r_int
id|cause_intr_connect
c_func
(paren
r_int
id|level
comma
id|intr_func_t
id|handler
comma
r_int
r_int
id|intr_spl_mask
)paren
suffix:semicolon
r_extern
r_int
id|cause_intr_disconnect
c_func
(paren
r_int
id|level
)paren
suffix:semicolon
r_extern
r_void
id|intr_dumpvec
c_func
(paren
id|cnodeid_t
id|cnode
comma
r_void
(paren
op_star
id|pf
)paren
(paren
r_char
op_star
comma
dot
dot
dot
)paren
)paren
suffix:semicolon
multiline_comment|/* error_dump.c */
r_extern
r_char
op_star
id|hub_rrb_err_type
(braket
)braket
suffix:semicolon
r_extern
r_char
op_star
id|hub_wrb_err_type
(braket
)braket
suffix:semicolon
r_void
id|nmi_dump
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|install_cpu_nmi_handler
c_func
(paren
r_int
id|slice
)paren
suffix:semicolon
multiline_comment|/* klclock.c */
r_extern
r_void
id|hub_rtc_init
c_func
(paren
id|cnodeid_t
)paren
suffix:semicolon
multiline_comment|/* bte.c */
r_void
id|bte_lateinit
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|bte_wait_for_xfer_completion
c_func
(paren
r_void
op_star
)paren
suffix:semicolon
multiline_comment|/* klgraph.c */
r_void
id|klhwg_add_all_nodes
c_func
(paren
id|vertex_hdl_t
)paren
suffix:semicolon
r_void
id|klhwg_add_all_modules
c_func
(paren
id|vertex_hdl_t
)paren
suffix:semicolon
multiline_comment|/* klidbg.c */
r_void
id|install_klidbg_functions
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* klnuma.c */
r_extern
r_void
id|replicate_kernel_text
c_func
(paren
r_int
id|numnodes
)paren
suffix:semicolon
r_extern
r_int
r_int
id|get_freemem_start
c_func
(paren
id|cnodeid_t
id|cnode
)paren
suffix:semicolon
r_extern
r_void
id|setup_replication_mask
c_func
(paren
r_int
id|maxnodes
)paren
suffix:semicolon
multiline_comment|/* init.c */
r_extern
id|cnodeid_t
id|get_compact_nodeid
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* get compact node id */
r_extern
r_void
id|init_platform_nodepda
c_func
(paren
id|nodepda_t
op_star
id|npda
comma
id|cnodeid_t
id|node
)paren
suffix:semicolon
r_extern
r_int
id|is_fine_dirmode
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|update_node_information
c_func
(paren
id|cnodeid_t
)paren
suffix:semicolon
multiline_comment|/* shubio.c */
r_extern
r_void
id|hubio_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|hub_merge_clean
c_func
(paren
id|nasid_t
id|nasid
)paren
suffix:semicolon
r_extern
r_void
id|hub_set_piomode
c_func
(paren
id|nasid_t
id|nasid
comma
r_int
id|conveyor
)paren
suffix:semicolon
multiline_comment|/* shuberror.c */
r_extern
r_void
id|hub_error_init
c_func
(paren
id|cnodeid_t
)paren
suffix:semicolon
r_extern
r_void
id|dump_error_spool
c_func
(paren
id|cpuid_t
id|cpu
comma
r_void
(paren
op_star
id|pf
)paren
(paren
r_char
op_star
comma
dot
dot
dot
)paren
)paren
suffix:semicolon
r_extern
r_void
id|hubni_error_handler
c_func
(paren
r_char
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|check_ni_errors
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* Used for debugger to signal upper software a breakpoint has taken place */
r_extern
r_void
op_star
id|debugger_update
suffix:semicolon
r_extern
r_int
r_int
id|debugger_stopped
suffix:semicolon
multiline_comment|/* &n; * piomap, created by shub_pio_alloc.&n; * xtalk_info MUST BE FIRST, since this structure is cast to a&n; * xtalk_piomap_s by generic xtalk routines.&n; */
DECL|struct|hub_piomap_s
r_struct
id|hub_piomap_s
(brace
DECL|member|hpio_xtalk_info
r_struct
id|xtalk_piomap_s
id|hpio_xtalk_info
suffix:semicolon
multiline_comment|/* standard crosstalk pio info */
DECL|member|hpio_hub
id|vertex_hdl_t
id|hpio_hub
suffix:semicolon
multiline_comment|/* which shub&squot;s mapping registers are set up */
DECL|member|hpio_holdcnt
r_int
id|hpio_holdcnt
suffix:semicolon
multiline_comment|/* count of current users of bigwin mapping */
DECL|member|hpio_bigwin_num
r_char
id|hpio_bigwin_num
suffix:semicolon
multiline_comment|/* if big window map, which one */
DECL|member|hpio_flags
r_int
id|hpio_flags
suffix:semicolon
multiline_comment|/* defined below */
)brace
suffix:semicolon
multiline_comment|/* hub_piomap flags */
DECL|macro|HUB_PIOMAP_IS_VALID
mdefine_line|#define HUB_PIOMAP_IS_VALID&t;&t;0x1
DECL|macro|HUB_PIOMAP_IS_BIGWINDOW
mdefine_line|#define HUB_PIOMAP_IS_BIGWINDOW&t;&t;0x2
DECL|macro|HUB_PIOMAP_IS_FIXED
mdefine_line|#define HUB_PIOMAP_IS_FIXED&t;&t;0x4
DECL|macro|hub_piomap_xt_piomap
mdefine_line|#define&t;hub_piomap_xt_piomap(hp)&t;(&amp;hp-&gt;hpio_xtalk_info)
DECL|macro|hub_piomap_hub_v
mdefine_line|#define&t;hub_piomap_hub_v(hp)&t;(hp-&gt;hpio_hub)
DECL|macro|hub_piomap_winnum
mdefine_line|#define&t;hub_piomap_winnum(hp)&t;(hp-&gt;hpio_bigwin_num)
multiline_comment|/* &n; * dmamap, created by shub_pio_alloc.&n; * xtalk_info MUST BE FIRST, since this structure is cast to a&n; * xtalk_dmamap_s by generic xtalk routines.&n; */
DECL|struct|hub_dmamap_s
r_struct
id|hub_dmamap_s
(brace
DECL|member|hdma_xtalk_info
r_struct
id|xtalk_dmamap_s
id|hdma_xtalk_info
suffix:semicolon
multiline_comment|/* standard crosstalk dma info */
DECL|member|hdma_hub
id|vertex_hdl_t
id|hdma_hub
suffix:semicolon
multiline_comment|/* which shub we go through */
DECL|member|hdma_flags
r_int
id|hdma_flags
suffix:semicolon
multiline_comment|/* defined below */
)brace
suffix:semicolon
multiline_comment|/* shub_dmamap flags */
DECL|macro|HUB_DMAMAP_IS_VALID
mdefine_line|#define HUB_DMAMAP_IS_VALID&t;&t;0x1
DECL|macro|HUB_DMAMAP_USED
mdefine_line|#define HUB_DMAMAP_USED&t;&t;&t;0x2
DECL|macro|HUB_DMAMAP_IS_FIXED
mdefine_line|#define&t;HUB_DMAMAP_IS_FIXED&t;&t;0x4
multiline_comment|/* &n; * interrupt handle, created by shub_intr_alloc.&n; * xtalk_info MUST BE FIRST, since this structure is cast to a&n; * xtalk_intr_s by generic xtalk routines.&n; */
DECL|struct|hub_intr_s
r_struct
id|hub_intr_s
(brace
DECL|member|i_xtalk_info
r_struct
id|xtalk_intr_s
id|i_xtalk_info
suffix:semicolon
multiline_comment|/* standard crosstalk intr info */
DECL|member|i_cpuid
id|cpuid_t
id|i_cpuid
suffix:semicolon
multiline_comment|/* which cpu */
DECL|member|i_bit
r_int
id|i_bit
suffix:semicolon
multiline_comment|/* which bit */
DECL|member|i_flags
r_int
id|i_flags
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* flag values */
DECL|macro|HUB_INTR_IS_ALLOCED
mdefine_line|#define HUB_INTR_IS_ALLOCED&t;0x1&t;/* for debug: allocated */
DECL|macro|HUB_INTR_IS_CONNECTED
mdefine_line|#define HUB_INTR_IS_CONNECTED&t;0x4&t;/* for debug: connected to a software driver */
DECL|struct|hubinfo_s
r_typedef
r_struct
id|hubinfo_s
(brace
DECL|member|h_nodepda
id|nodepda_t
op_star
id|h_nodepda
suffix:semicolon
multiline_comment|/* pointer to node&squot;s private data area */
DECL|member|h_cnodeid
id|cnodeid_t
id|h_cnodeid
suffix:semicolon
multiline_comment|/* compact nodeid */
DECL|member|h_nasid
id|nasid_t
id|h_nasid
suffix:semicolon
multiline_comment|/* nasid */
multiline_comment|/* structures for PIO management */
DECL|member|h_widgetid
id|xwidgetnum_t
id|h_widgetid
suffix:semicolon
multiline_comment|/* my widget # (as viewed from xbow) */
DECL|member|h_small_window_piomap
r_struct
id|hub_piomap_s
id|h_small_window_piomap
(braket
id|HUB_WIDGET_ID_MAX
op_plus
l_int|1
)braket
suffix:semicolon
DECL|member|h_bwwait
id|wait_queue_head_t
id|h_bwwait
suffix:semicolon
multiline_comment|/* wait for big window to free */
DECL|member|h_bwlock
id|spinlock_t
id|h_bwlock
suffix:semicolon
multiline_comment|/* guard big window piomap&squot;s */
DECL|member|h_crblock
id|spinlock_t
id|h_crblock
suffix:semicolon
multiline_comment|/* gaurd CRB error handling */
DECL|member|h_num_big_window_fixed
r_int
id|h_num_big_window_fixed
suffix:semicolon
multiline_comment|/* count number of FIXED maps */
DECL|member|h_big_window_piomap
r_struct
id|hub_piomap_s
id|h_big_window_piomap
(braket
id|HUB_NUM_BIG_WINDOW
)braket
suffix:semicolon
DECL|member|hub_ii_errintr
id|hub_intr_t
id|hub_ii_errintr
suffix:semicolon
DECL|typedef|hubinfo_t
)brace
op_star
id|hubinfo_t
suffix:semicolon
DECL|macro|hubinfo_get
mdefine_line|#define hubinfo_get(vhdl, infoptr) ((void)hwgraph_info_get_LBL &bslash;&n;&t;(vhdl, INFO_LBL_NODE_INFO, (arbitrary_info_t *)infoptr))
DECL|macro|hubinfo_set
mdefine_line|#define hubinfo_set(vhdl, infoptr) (void)hwgraph_info_add_LBL &bslash;&n;&t;(vhdl, INFO_LBL_NODE_INFO, (arbitrary_info_t)infoptr)
DECL|macro|hubinfo_to_hubv
mdefine_line|#define&t;hubinfo_to_hubv(hinfo, hub_v)&t;(hinfo-&gt;h_nodepda-&gt;node_vertex)
multiline_comment|/*&n; * Hub info PIO map access functions.&n; */
DECL|macro|hubinfo_bwin_piomap_get
mdefine_line|#define&t;hubinfo_bwin_piomap_get(hinfo, win) &t;&bslash;&n;&t;&t;&t;(&amp;hinfo-&gt;h_big_window_piomap[win])
DECL|macro|hubinfo_swin_piomap_get
mdefine_line|#define&t;hubinfo_swin_piomap_get(hinfo, win)&t;&bslash;&n;&t;&t;&t;(&amp;hinfo-&gt;h_small_window_piomap[win])
multiline_comment|/* cpu-specific information stored under INFO_LBL_CPU_INFO */
DECL|struct|cpuinfo_s
r_typedef
r_struct
id|cpuinfo_s
(brace
DECL|member|ci_cpuid
id|cpuid_t
id|ci_cpuid
suffix:semicolon
multiline_comment|/* CPU ID */
DECL|typedef|cpuinfo_t
)brace
op_star
id|cpuinfo_t
suffix:semicolon
DECL|macro|cpuinfo_get
mdefine_line|#define cpuinfo_get(vhdl, infoptr) ((void)hwgraph_info_get_LBL &bslash;&n;&t;(vhdl, INFO_LBL_CPU_INFO, (arbitrary_info_t *)infoptr))
DECL|macro|cpuinfo_set
mdefine_line|#define cpuinfo_set(vhdl, infoptr) (void)hwgraph_info_add_LBL &bslash;&n;&t;(vhdl, INFO_LBL_CPU_INFO, (arbitrary_info_t)infoptr)
multiline_comment|/* Special initialization function for xswitch vertices created during startup. */
r_extern
r_void
id|xswitch_vertex_init
c_func
(paren
id|vertex_hdl_t
id|xswitch
)paren
suffix:semicolon
r_extern
id|xtalk_provider_t
id|hub_provider
suffix:semicolon
r_extern
r_int
id|numionodes
suffix:semicolon
multiline_comment|/* du.c */
r_int
id|ducons_write
c_func
(paren
r_char
op_star
id|buf
comma
r_int
id|len
)paren
suffix:semicolon
multiline_comment|/* memerror.c */
r_extern
r_void
id|install_eccintr
c_func
(paren
id|cpuid_t
id|cpu
)paren
suffix:semicolon
r_extern
r_void
id|memerror_get_stats
c_func
(paren
id|cnodeid_t
id|cnode
comma
r_int
op_star
id|bank_stats
comma
r_int
op_star
id|bank_stats_max
)paren
suffix:semicolon
r_extern
r_void
id|probe_md_errors
c_func
(paren
id|nasid_t
)paren
suffix:semicolon
multiline_comment|/* sysctlr.c */
r_extern
r_void
id|sysctlr_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|sysctlr_power_off
c_func
(paren
r_int
id|sdonly
)paren
suffix:semicolon
r_extern
r_void
id|sysctlr_keepalive
c_func
(paren
r_void
)paren
suffix:semicolon
DECL|macro|valid_cpuid
mdefine_line|#define valid_cpuid(_x)&t;&t;(((_x) &gt;= 0) &amp;&amp; ((_x) &lt; maxcpus))
multiline_comment|/* Useful definitions to get the memory dimm given a physical&n; * address.&n; */
DECL|macro|paddr_dimm
mdefine_line|#define paddr_dimm(_pa)&t;&t;((_pa &amp; MD_BANK_MASK) &gt;&gt; MD_BANK_SHFT)
DECL|macro|paddr_cnode
mdefine_line|#define paddr_cnode(_pa)&t;(NASID_TO_COMPACT_NODEID(NASID_GET(_pa)))
r_extern
r_void
id|membank_pathname_get
c_func
(paren
id|paddr_t
comma
r_char
op_star
)paren
suffix:semicolon
r_extern
r_void
id|crbx
c_func
(paren
id|nasid_t
id|nasid
comma
r_void
(paren
op_star
id|pf
)paren
(paren
r_char
op_star
comma
dot
dot
dot
)paren
)paren
suffix:semicolon
r_void
id|bootstrap
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* sndrv.c */
r_extern
r_int
id|sndrv_attach
c_func
(paren
id|vertex_hdl_t
id|vertex
)paren
suffix:semicolon
macro_line|#endif&t;&t;&t;&t;/* _ASM_IA64_SN_SN2_SN_PRIVATE_H */
eof
