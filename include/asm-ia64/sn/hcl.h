multiline_comment|/*&n; * This file is subject to the terms and conditions of the GNU General Public&n; * License.  See the file &quot;COPYING&quot; in the main directory of this archive&n; * for more details.&n; *&n; * Copyright (C) 1992-1997,2000-2003 Silicon Graphics, Inc. All rights reserved.&n; */
macro_line|#ifndef _ASM_IA64_SN_HCL_H
DECL|macro|_ASM_IA64_SN_HCL_H
mdefine_line|#define _ASM_IA64_SN_HCL_H
macro_line|#include &lt;asm/sn/sgi.h&gt;
r_extern
id|vertex_hdl_t
id|hwgraph_root
suffix:semicolon
r_extern
id|vertex_hdl_t
id|linux_busnum
suffix:semicolon
r_void
id|hwgraph_debug
c_func
(paren
r_char
op_star
comma
r_char
op_star
comma
r_int
comma
id|vertex_hdl_t
comma
id|vertex_hdl_t
comma
r_char
op_star
comma
dot
dot
dot
)paren
suffix:semicolon
macro_line|#if 1
DECL|macro|HWGRAPH_DEBUG
mdefine_line|#define HWGRAPH_DEBUG(args) hwgraph_debug args ;
macro_line|#else   
DECL|macro|HWGRAPH_DEBUG
mdefine_line|#define HWGRAPH_DEBUG(args)
macro_line|#endif  
DECL|typedef|labelcl_info_place_t
r_typedef
r_int
id|labelcl_info_place_t
suffix:semicolon
DECL|typedef|arbitrary_info_t
r_typedef
r_int
id|arbitrary_info_t
suffix:semicolon
DECL|typedef|arb_info_desc_t
r_typedef
r_int
id|arb_info_desc_t
suffix:semicolon
multiline_comment|/* &n; * Reserve room in every vertex for 2 pieces of fast access indexed information &n; * Note that we do not save a pointer to the bdevsw or cdevsw[] tables anymore.&n; */
DECL|macro|HWGRAPH_NUM_INDEX_INFO
mdefine_line|#define HWGRAPH_NUM_INDEX_INFO&t;2&t;/* MAX Entries */
DECL|macro|HWGRAPH_CONNECTPT
mdefine_line|#define HWGRAPH_CONNECTPT&t;0&t;/* connect point (aprent) */
DECL|macro|HWGRAPH_FASTINFO
mdefine_line|#define HWGRAPH_FASTINFO&t;1&t;/* callee&squot;s private handle */
multiline_comment|/*&n; * Reserved edge_place_t values, used as the &quot;place&quot; parameter to edge_get_next.&n; * Every vertex in the hwgraph has up to 2 *implicit* edges.  There is an implicit&n; * edge called &quot;.&quot; that points to the current vertex.  There is an implicit edge&n; * called &quot;..&quot; that points to the vertex&squot; connect point.&n; */
DECL|macro|EDGE_PLACE_WANT_CURRENT
mdefine_line|#define EDGE_PLACE_WANT_CURRENT 0&t;/* &quot;.&quot; */
DECL|macro|EDGE_PLACE_WANT_CONNECTPT
mdefine_line|#define EDGE_PLACE_WANT_CONNECTPT 1&t;/* &quot;..&quot; */
DECL|macro|EDGE_PLACE_WANT_REAL_EDGES
mdefine_line|#define EDGE_PLACE_WANT_REAL_EDGES 2&t;/* Get the first real edge */
DECL|macro|HWGRAPH_RESERVED_PLACES
mdefine_line|#define HWGRAPH_RESERVED_PLACES 2
multiline_comment|/*&n; * Special pre-defined edge labels.&n; */
DECL|macro|HWGRAPH_EDGELBL_HW
mdefine_line|#define HWGRAPH_EDGELBL_HW &t;&quot;hw&quot;
DECL|macro|HWGRAPH_EDGELBL_DOT
mdefine_line|#define HWGRAPH_EDGELBL_DOT &t;&quot;.&quot;
DECL|macro|HWGRAPH_EDGELBL_DOTDOT
mdefine_line|#define HWGRAPH_EDGELBL_DOTDOT &t;&quot;..&quot;
macro_line|#include &lt;asm/sn/labelcl.h&gt;
DECL|macro|hwgraph_fastinfo_set
mdefine_line|#define hwgraph_fastinfo_set(a,b) labelcl_info_replace_IDX(a, HWGRAPH_FASTINFO, b, NULL)
DECL|macro|hwgraph_connectpt_set
mdefine_line|#define hwgraph_connectpt_set labelcl_info_connectpt_set
DECL|macro|hwgraph_generate_path
mdefine_line|#define hwgraph_generate_path hwgfs_generate_path
DECL|macro|hwgraph_path_to_vertex
mdefine_line|#define hwgraph_path_to_vertex(a) hwgfs_find_handle(NULL, a, 0, 0, 0, 1)
DECL|macro|hwgraph_edge_remove
mdefine_line|#define hwgraph_edge_remove(a,b,c)
DECL|macro|hwgraph_vertex_unref
mdefine_line|#define hwgraph_vertex_unref(a)
multiline_comment|/*&n; * External declarations of EXPORTED SYMBOLS in hcl.c&n; */
r_extern
id|vertex_hdl_t
id|hwgraph_register
c_func
(paren
id|vertex_hdl_t
comma
r_const
r_char
op_star
comma
r_int
r_int
comma
r_int
r_int
comma
r_int
r_int
comma
r_int
r_int
comma
id|umode_t
comma
id|uid_t
comma
id|gid_t
comma
r_struct
id|file_operations
op_star
comma
r_void
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_mk_symlink
c_func
(paren
id|vertex_hdl_t
comma
r_const
r_char
op_star
comma
r_int
r_int
comma
r_int
r_int
comma
r_const
r_char
op_star
comma
r_int
r_int
comma
id|vertex_hdl_t
op_star
comma
r_void
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_vertex_destroy
c_func
(paren
id|vertex_hdl_t
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_edge_add
c_func
(paren
id|vertex_hdl_t
comma
id|vertex_hdl_t
comma
r_char
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_edge_get
c_func
(paren
id|vertex_hdl_t
comma
r_char
op_star
comma
id|vertex_hdl_t
op_star
)paren
suffix:semicolon
r_extern
id|arbitrary_info_t
id|hwgraph_fastinfo_get
c_func
(paren
id|vertex_hdl_t
)paren
suffix:semicolon
r_extern
id|vertex_hdl_t
id|hwgraph_mk_dir
c_func
(paren
id|vertex_hdl_t
comma
r_const
r_char
op_star
comma
r_int
r_int
comma
r_void
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_connectpt_set
c_func
(paren
id|vertex_hdl_t
comma
id|vertex_hdl_t
)paren
suffix:semicolon
r_extern
id|vertex_hdl_t
id|hwgraph_connectpt_get
c_func
(paren
id|vertex_hdl_t
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_edge_get_next
c_func
(paren
id|vertex_hdl_t
comma
r_char
op_star
comma
id|vertex_hdl_t
op_star
comma
r_int
r_int
op_star
)paren
suffix:semicolon
r_extern
id|graph_error_t
id|hwgraph_traverse
c_func
(paren
id|vertex_hdl_t
comma
r_char
op_star
comma
id|vertex_hdl_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_vertex_get_next
c_func
(paren
id|vertex_hdl_t
op_star
comma
id|vertex_hdl_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_path_add
c_func
(paren
id|vertex_hdl_t
comma
r_char
op_star
comma
id|vertex_hdl_t
op_star
)paren
suffix:semicolon
r_extern
id|vertex_hdl_t
id|hwgraph_path_to_dev
c_func
(paren
r_char
op_star
)paren
suffix:semicolon
r_extern
id|vertex_hdl_t
id|hwgraph_block_device_get
c_func
(paren
id|vertex_hdl_t
)paren
suffix:semicolon
r_extern
id|vertex_hdl_t
id|hwgraph_char_device_get
c_func
(paren
id|vertex_hdl_t
)paren
suffix:semicolon
r_extern
id|graph_error_t
id|hwgraph_char_device_add
c_func
(paren
id|vertex_hdl_t
comma
r_char
op_star
comma
r_char
op_star
comma
id|vertex_hdl_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_path_add
c_func
(paren
id|vertex_hdl_t
comma
r_char
op_star
comma
id|vertex_hdl_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_info_add_LBL
c_func
(paren
id|vertex_hdl_t
comma
r_char
op_star
comma
id|arbitrary_info_t
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_info_get_LBL
c_func
(paren
id|vertex_hdl_t
comma
r_char
op_star
comma
id|arbitrary_info_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_info_replace_LBL
c_func
(paren
id|vertex_hdl_t
comma
r_char
op_star
comma
id|arbitrary_info_t
comma
id|arbitrary_info_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_info_get_exported_LBL
c_func
(paren
id|vertex_hdl_t
comma
r_char
op_star
comma
r_int
op_star
comma
id|arbitrary_info_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_info_get_next_LBL
c_func
(paren
id|vertex_hdl_t
comma
r_char
op_star
comma
id|arbitrary_info_t
op_star
comma
id|labelcl_info_place_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_path_lookup
c_func
(paren
id|vertex_hdl_t
comma
r_char
op_star
comma
id|vertex_hdl_t
op_star
comma
r_char
op_star
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_info_export_LBL
c_func
(paren
id|vertex_hdl_t
comma
r_char
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_info_unexport_LBL
c_func
(paren
id|vertex_hdl_t
comma
r_char
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_info_remove_LBL
c_func
(paren
id|vertex_hdl_t
comma
r_char
op_star
comma
id|arbitrary_info_t
op_star
)paren
suffix:semicolon
r_extern
r_char
op_star
id|vertex_to_name
c_func
(paren
id|vertex_hdl_t
comma
r_char
op_star
comma
id|uint
)paren
suffix:semicolon
r_extern
r_int
id|init_hcl
c_func
(paren
r_void
)paren
suffix:semicolon
macro_line|#endif /* _ASM_IA64_SN_HCL_H */
eof
