multiline_comment|/* $Id$&n; *&n; * This file is subject to the terms and conditions of the GNU General Public&n; * License.  See the file &quot;COPYING&quot; in the main directory of this archive&n; * for more details.&n; *&n; * Copyright (C) 1992 - 1997, 2000 Silicon Graphics, Inc.&n; * Copyright (C) 2000 by Colin Ngam&n; */
macro_line|#ifndef _ASM_SN_HCL_H
DECL|macro|_ASM_SN_HCL_H
mdefine_line|#define _ASM_SN_HCL_H
r_extern
id|spinlock_t
id|hcl_spinlock
suffix:semicolon
r_extern
id|devfs_handle_t
id|hcl_handle
suffix:semicolon
multiline_comment|/* HCL driver */
r_extern
id|devfs_handle_t
id|hwgraph_root
suffix:semicolon
r_extern
id|devfs_handle_t
id|linux_busnum
suffix:semicolon
DECL|typedef|labelcl_info_place_t
r_typedef
r_int
id|labelcl_info_place_t
suffix:semicolon
DECL|typedef|arbitrary_info_t
r_typedef
r_int
id|arbitrary_info_t
suffix:semicolon
DECL|typedef|arb_info_desc_t
r_typedef
r_int
id|arb_info_desc_t
suffix:semicolon
multiline_comment|/* Support for INVENTORY */
r_struct
id|inventory_s
suffix:semicolon
r_struct
id|invplace_s
suffix:semicolon
multiline_comment|/* &n; * Reserve room in every vertex for 2 pieces of fast access indexed information &n; * Note that we do not save a pointer to the bdevsw or cdevsw[] tables anymore.&n; */
DECL|macro|HWGRAPH_NUM_INDEX_INFO
mdefine_line|#define HWGRAPH_NUM_INDEX_INFO&t;2&t;/* MAX Entries */
DECL|macro|HWGRAPH_CONNECTPT
mdefine_line|#define HWGRAPH_CONNECTPT&t;0&t;/* connect point (aprent) */
DECL|macro|HWGRAPH_FASTINFO
mdefine_line|#define HWGRAPH_FASTINFO&t;1&t;/* callee&squot;s private handle */
multiline_comment|/*&n; * Reserved edge_place_t values, used as the &quot;place&quot; parameter to edge_get_next.&n; * Every vertex in the hwgraph has up to 2 *implicit* edges.  There is an implicit&n; * edge called &quot;.&quot; that points to the current vertex.  There is an implicit edge&n; * called &quot;..&quot; that points to the vertex&squot; connect point.&n; */
DECL|macro|EDGE_PLACE_WANT_CURRENT
mdefine_line|#define EDGE_PLACE_WANT_CURRENT 0&t;/* &quot;.&quot; */
DECL|macro|EDGE_PLACE_WANT_CONNECTPT
mdefine_line|#define EDGE_PLACE_WANT_CONNECTPT 1&t;/* &quot;..&quot; */
DECL|macro|EDGE_PLACE_WANT_REAL_EDGES
mdefine_line|#define EDGE_PLACE_WANT_REAL_EDGES 2&t;/* Get the first real edge */
DECL|macro|HWGRAPH_RESERVED_PLACES
mdefine_line|#define HWGRAPH_RESERVED_PLACES 2
multiline_comment|/*&n; * Special pre-defined edge labels.&n; */
DECL|macro|HWGRAPH_EDGELBL_HW
mdefine_line|#define HWGRAPH_EDGELBL_HW &t;&quot;hw&quot;
DECL|macro|HWGRAPH_EDGELBL_DOT
mdefine_line|#define HWGRAPH_EDGELBL_DOT &t;&quot;.&quot;
DECL|macro|HWGRAPH_EDGELBL_DOTDOT
mdefine_line|#define HWGRAPH_EDGELBL_DOTDOT &t;&quot;..&quot;
DECL|macro|graph_edge_place_t
mdefine_line|#define graph_edge_place_t uint
multiline_comment|/*&n; * External declarations of EXPORTED SYMBOLS in hcl.c&n; */
r_extern
id|devfs_handle_t
id|hwgraph_register
c_func
(paren
id|devfs_handle_t
comma
r_const
r_char
op_star
comma
r_int
r_int
comma
r_int
r_int
comma
r_int
r_int
comma
r_int
r_int
comma
id|umode_t
comma
id|uid_t
comma
id|gid_t
comma
r_struct
id|file_operations
op_star
comma
r_void
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_mk_symlink
c_func
(paren
id|devfs_handle_t
comma
r_const
r_char
op_star
comma
r_int
r_int
comma
r_int
r_int
comma
r_const
r_char
op_star
comma
r_int
r_int
comma
id|devfs_handle_t
op_star
comma
r_void
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_vertex_destroy
c_func
(paren
id|devfs_handle_t
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_edge_add
c_func
(paren
id|devfs_handle_t
comma
id|devfs_handle_t
comma
r_char
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_edge_get
c_func
(paren
id|devfs_handle_t
comma
r_char
op_star
comma
id|devfs_handle_t
op_star
)paren
suffix:semicolon
r_extern
id|arbitrary_info_t
id|hwgraph_fastinfo_get
c_func
(paren
id|devfs_handle_t
)paren
suffix:semicolon
r_extern
r_void
id|hwgraph_fastinfo_set
c_func
(paren
id|devfs_handle_t
comma
id|arbitrary_info_t
)paren
suffix:semicolon
r_extern
id|devfs_handle_t
id|hwgraph_mk_dir
c_func
(paren
id|devfs_handle_t
comma
r_const
r_char
op_star
comma
r_int
r_int
comma
r_void
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_connectpt_set
c_func
(paren
id|devfs_handle_t
comma
id|devfs_handle_t
)paren
suffix:semicolon
r_extern
id|devfs_handle_t
id|hwgraph_connectpt_get
c_func
(paren
id|devfs_handle_t
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_edge_get_next
c_func
(paren
id|devfs_handle_t
comma
r_char
op_star
comma
id|devfs_handle_t
op_star
comma
id|uint
op_star
)paren
suffix:semicolon
r_extern
id|graph_error_t
id|hwgraph_edge_remove
c_func
(paren
id|devfs_handle_t
comma
r_char
op_star
comma
id|devfs_handle_t
op_star
)paren
suffix:semicolon
r_extern
id|graph_error_t
id|hwgraph_traverse
c_func
(paren
id|devfs_handle_t
comma
r_char
op_star
comma
id|devfs_handle_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_vertex_get_next
c_func
(paren
id|devfs_handle_t
op_star
comma
id|devfs_handle_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_inventory_get_next
c_func
(paren
id|devfs_handle_t
comma
id|invplace_t
op_star
comma
id|inventory_t
op_star
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_inventory_add
c_func
(paren
id|devfs_handle_t
comma
r_int
comma
r_int
comma
id|major_t
comma
id|minor_t
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_inventory_remove
c_func
(paren
id|devfs_handle_t
comma
r_int
comma
r_int
comma
id|major_t
comma
id|minor_t
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_controller_num_get
c_func
(paren
id|devfs_handle_t
)paren
suffix:semicolon
r_extern
r_void
id|hwgraph_controller_num_set
c_func
(paren
id|devfs_handle_t
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_path_ad
c_func
(paren
id|devfs_handle_t
comma
r_char
op_star
comma
id|devfs_handle_t
op_star
)paren
suffix:semicolon
r_extern
id|devfs_handle_t
id|hwgraph_path_to_vertex
c_func
(paren
r_char
op_star
)paren
suffix:semicolon
r_extern
id|devfs_handle_t
id|hwgraph_path_to_dev
c_func
(paren
r_char
op_star
)paren
suffix:semicolon
r_extern
id|devfs_handle_t
id|hwgraph_block_device_get
c_func
(paren
id|devfs_handle_t
)paren
suffix:semicolon
r_extern
id|devfs_handle_t
id|hwgraph_char_device_get
c_func
(paren
id|devfs_handle_t
)paren
suffix:semicolon
r_extern
id|graph_error_t
id|hwgraph_char_device_add
c_func
(paren
id|devfs_handle_t
comma
r_char
op_star
comma
r_char
op_star
comma
id|devfs_handle_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_path_add
c_func
(paren
id|devfs_handle_t
comma
r_char
op_star
comma
id|devfs_handle_t
op_star
)paren
suffix:semicolon
r_extern
r_struct
id|file_operations
op_star
id|hwgraph_bdevsw_get
c_func
(paren
id|devfs_handle_t
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_info_add_LBL
c_func
(paren
id|devfs_handle_t
comma
r_char
op_star
comma
id|arbitrary_info_t
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_info_get_LBL
c_func
(paren
id|devfs_handle_t
comma
r_char
op_star
comma
id|arbitrary_info_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_info_replace_LBL
c_func
(paren
id|devfs_handle_t
comma
r_char
op_star
comma
id|arbitrary_info_t
comma
id|arbitrary_info_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_info_get_exported_LBL
c_func
(paren
id|devfs_handle_t
comma
r_char
op_star
comma
r_int
op_star
comma
id|arbitrary_info_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_info_get_next_LBL
c_func
(paren
id|devfs_handle_t
comma
r_char
op_star
comma
id|arbitrary_info_t
op_star
comma
id|labelcl_info_place_t
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_path_lookup
c_func
(paren
id|devfs_handle_t
comma
r_char
op_star
comma
id|devfs_handle_t
op_star
comma
r_char
op_star
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_info_export_LBL
c_func
(paren
id|devfs_handle_t
comma
r_char
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_info_unexport_LBL
c_func
(paren
id|devfs_handle_t
comma
r_char
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hwgraph_info_remove_LBL
c_func
(paren
id|devfs_handle_t
comma
r_char
op_star
comma
id|arbitrary_info_t
op_star
)paren
suffix:semicolon
r_extern
r_char
op_star
id|vertex_to_name
c_func
(paren
id|devfs_handle_t
comma
r_char
op_star
comma
id|uint
)paren
suffix:semicolon
r_extern
id|graph_error_t
id|hwgraph_vertex_unref
c_func
(paren
id|devfs_handle_t
)paren
suffix:semicolon
macro_line|#endif /* _ASM_SN_HCL_H */
eof
