macro_line|#ifndef _ASM_IA64_DELAY_H
DECL|macro|_ASM_IA64_DELAY_H
mdefine_line|#define _ASM_IA64_DELAY_H
multiline_comment|/*&n; * Delay routines using a pre-computed &quot;cycles/usec&quot; value.&n; *&n; * Copyright (C) 1998, 1999 Hewlett-Packard Co&n; *&t;David Mosberger-Tang &lt;davidm@hpl.hp.com&gt;&n; * Copyright (C) 1999 VA Linux Systems&n; * Copyright (C) 1999 Walt Drummond &lt;drummond@valinux.com&gt;&n; * Copyright (C) 1999 Asit Mallick &lt;asit.k.mallick@intel.com&gt;&n; * Copyright (C) 1999 Don Dugger &lt;don.dugger@intel.com&gt;&n; */
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/kernel.h&gt;
macro_line|#include &lt;linux/sched.h&gt;
macro_line|#include &lt;linux/compiler.h&gt;
macro_line|#include &lt;asm/intrinsics.h&gt;
macro_line|#include &lt;asm/processor.h&gt;
r_static
id|__inline__
r_void
DECL|function|ia64_set_itm
id|ia64_set_itm
(paren
r_int
r_int
id|val
)paren
(brace
id|ia64_setreg
c_func
(paren
id|_IA64_REG_CR_ITM
comma
id|val
)paren
suffix:semicolon
id|ia64_srlz_d
c_func
(paren
)paren
suffix:semicolon
)brace
r_static
id|__inline__
r_int
r_int
DECL|function|ia64_get_itm
id|ia64_get_itm
(paren
r_void
)paren
(brace
r_int
r_int
id|result
suffix:semicolon
id|result
op_assign
id|ia64_getreg
c_func
(paren
id|_IA64_REG_CR_ITM
)paren
suffix:semicolon
id|ia64_srlz_d
c_func
(paren
)paren
suffix:semicolon
r_return
id|result
suffix:semicolon
)brace
r_static
id|__inline__
r_void
DECL|function|ia64_set_itv
id|ia64_set_itv
(paren
r_int
r_int
id|val
)paren
(brace
id|ia64_setreg
c_func
(paren
id|_IA64_REG_CR_ITV
comma
id|val
)paren
suffix:semicolon
id|ia64_srlz_d
c_func
(paren
)paren
suffix:semicolon
)brace
r_static
id|__inline__
r_void
DECL|function|ia64_set_itc
id|ia64_set_itc
(paren
r_int
r_int
id|val
)paren
(brace
id|ia64_setreg
c_func
(paren
id|_IA64_REG_AR_ITC
comma
id|val
)paren
suffix:semicolon
id|ia64_srlz_d
c_func
(paren
)paren
suffix:semicolon
)brace
r_static
id|__inline__
r_int
r_int
DECL|function|ia64_get_itc
id|ia64_get_itc
(paren
r_void
)paren
(brace
r_int
r_int
id|result
suffix:semicolon
id|result
op_assign
id|ia64_getreg
c_func
(paren
id|_IA64_REG_AR_ITC
)paren
suffix:semicolon
id|ia64_barrier
c_func
(paren
)paren
suffix:semicolon
macro_line|#ifdef CONFIG_ITANIUM
r_while
c_loop
(paren
id|unlikely
c_func
(paren
(paren
id|__s32
)paren
id|result
op_eq
op_minus
l_int|1
)paren
)paren
(brace
id|result
op_assign
id|ia64_getreg
c_func
(paren
id|_IA64_REG_AR_ITC
)paren
suffix:semicolon
id|ia64_barrier
c_func
(paren
)paren
suffix:semicolon
)brace
macro_line|#endif
r_return
id|result
suffix:semicolon
)brace
r_extern
r_void
id|ia64_delay_loop
(paren
r_int
r_int
id|loops
)paren
suffix:semicolon
r_static
id|__inline__
r_void
DECL|function|__delay
id|__delay
(paren
r_int
r_int
id|loops
)paren
(brace
r_if
c_cond
(paren
id|unlikely
c_func
(paren
id|loops
OL
l_int|1
)paren
)paren
r_return
suffix:semicolon
id|ia64_delay_loop
(paren
id|loops
op_minus
l_int|1
)paren
suffix:semicolon
)brace
r_static
id|__inline__
r_void
DECL|function|udelay
id|udelay
(paren
r_int
r_int
id|usecs
)paren
(brace
r_int
r_int
id|start
op_assign
id|ia64_get_itc
c_func
(paren
)paren
suffix:semicolon
r_int
r_int
id|cycles
op_assign
id|usecs
op_star
id|local_cpu_data-&gt;cyc_per_usec
suffix:semicolon
r_while
c_loop
(paren
id|ia64_get_itc
c_func
(paren
)paren
op_minus
id|start
OL
id|cycles
)paren
multiline_comment|/* skip */
suffix:semicolon
)brace
macro_line|#endif /* _ASM_IA64_DELAY_H */
eof
