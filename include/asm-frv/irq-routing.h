multiline_comment|/* irq-routing.h: multiplexed IRQ routing&n; *&n; * Copyright (C) 2004 Red Hat, Inc. All Rights Reserved.&n; * Written by David Howells (dhowells@redhat.com)&n; *&n; * This program is free software; you can redistribute it and/or&n; * modify it under the terms of the GNU General Public License&n; * as published by the Free Software Foundation; either version&n; * 2 of the License, or (at your option) any later version.&n; */
macro_line|#ifndef _ASM_IRQ_ROUTING_H
DECL|macro|_ASM_IRQ_ROUTING_H
mdefine_line|#define _ASM_IRQ_ROUTING_H
macro_line|#ifndef __ASSEMBLY__
macro_line|#include &lt;linux/spinlock.h&gt;
macro_line|#include &lt;asm/irq.h&gt;
r_struct
id|irq_source
suffix:semicolon
r_struct
id|irq_level
suffix:semicolon
multiline_comment|/*&n; * IRQ action distribution sets&n; */
DECL|struct|irq_group
r_struct
id|irq_group
(brace
DECL|member|first_irq
r_int
id|first_irq
suffix:semicolon
multiline_comment|/* first IRQ distributed here */
DECL|member|control
r_void
(paren
op_star
id|control
)paren
(paren
r_struct
id|irq_group
op_star
id|group
comma
r_int
id|index
comma
r_int
id|on
)paren
suffix:semicolon
DECL|member|actions
r_struct
id|irqaction
op_star
id|actions
(braket
id|NR_IRQ_ACTIONS_PER_GROUP
)braket
suffix:semicolon
multiline_comment|/* IRQ action chains */
DECL|member|sources
r_struct
id|irq_source
op_star
id|sources
(braket
id|NR_IRQ_ACTIONS_PER_GROUP
)braket
suffix:semicolon
multiline_comment|/* IRQ sources */
DECL|member|disable_cnt
r_int
id|disable_cnt
(braket
id|NR_IRQ_ACTIONS_PER_GROUP
)braket
suffix:semicolon
multiline_comment|/* disable counts */
)brace
suffix:semicolon
multiline_comment|/*&n; * IRQ source manager&n; */
DECL|struct|irq_source
r_struct
id|irq_source
(brace
DECL|member|next
r_struct
id|irq_source
op_star
id|next
suffix:semicolon
DECL|member|level
r_struct
id|irq_level
op_star
id|level
suffix:semicolon
DECL|member|muxname
r_const
r_char
op_star
id|muxname
suffix:semicolon
DECL|member|muxdata
r_volatile
r_void
id|__iomem
op_star
id|muxdata
suffix:semicolon
DECL|member|irqmask
r_int
r_int
id|irqmask
suffix:semicolon
DECL|member|doirq
r_void
(paren
op_star
id|doirq
)paren
(paren
r_struct
id|irq_source
op_star
id|source
)paren
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * IRQ level management (per CPU IRQ priority / entry vector)&n; */
DECL|struct|irq_level
r_struct
id|irq_level
(brace
DECL|member|usage
r_int
id|usage
suffix:semicolon
DECL|member|disable_count
r_int
id|disable_count
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
multiline_comment|/* current SA_INTERRUPT and SA_SHIRQ settings */
DECL|member|lock
id|spinlock_t
id|lock
suffix:semicolon
DECL|member|sources
r_struct
id|irq_source
op_star
id|sources
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_struct
id|irq_level
id|frv_irq_levels
(braket
l_int|16
)braket
suffix:semicolon
r_extern
r_struct
id|irq_group
op_star
id|irq_groups
(braket
id|NR_IRQ_GROUPS
)braket
suffix:semicolon
r_extern
r_void
id|frv_irq_route
c_func
(paren
r_struct
id|irq_source
op_star
id|source
comma
r_int
id|irqlevel
)paren
suffix:semicolon
r_extern
r_void
id|frv_irq_route_external
c_func
(paren
r_struct
id|irq_source
op_star
id|source
comma
r_int
id|irq
)paren
suffix:semicolon
r_extern
r_void
id|frv_irq_set_group
c_func
(paren
r_struct
id|irq_group
op_star
id|group
)paren
suffix:semicolon
r_extern
r_void
id|distribute_irqs
c_func
(paren
r_struct
id|irq_group
op_star
id|group
comma
r_int
r_int
id|irqmask
)paren
suffix:semicolon
r_extern
r_void
id|route_cpu_irqs
c_func
(paren
r_void
)paren
suffix:semicolon
macro_line|#endif /* !__ASSEMBLY__ */
macro_line|#endif /* _ASM_IRQ_ROUTING_H */
eof
