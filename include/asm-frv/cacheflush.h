multiline_comment|/* cacheflush.h: FRV cache flushing routines&n; *&n; * Copyright (C) 2004 Red Hat, Inc. All Rights Reserved.&n; * Written by David Howells (dhowells@redhat.com)&n; *&n; * This program is free software; you can redistribute it and/or&n; * modify it under the terms of the GNU General Public License&n; * as published by the Free Software Foundation; either version&n; * 2 of the License, or (at your option) any later version.&n; */
macro_line|#ifndef _ASM_CACHEFLUSH_H
DECL|macro|_ASM_CACHEFLUSH_H
mdefine_line|#define _ASM_CACHEFLUSH_H
multiline_comment|/* Keep includes the same across arches.  */
macro_line|#include &lt;linux/mm.h&gt;
multiline_comment|/*&n; * virtually-indexed cache management (our cache is physically indexed)&n; */
DECL|macro|flush_cache_all
mdefine_line|#define flush_cache_all()&t;&t;&t;do {} while(0)
DECL|macro|flush_cache_mm
mdefine_line|#define flush_cache_mm(mm)&t;&t;&t;do {} while(0)
DECL|macro|flush_cache_range
mdefine_line|#define flush_cache_range(mm, start, end)&t;do {} while(0)
DECL|macro|flush_cache_page
mdefine_line|#define flush_cache_page(vma, vmaddr)&t;&t;do {} while(0)
DECL|macro|flush_cache_vmap
mdefine_line|#define flush_cache_vmap(start, end)&t;&t;do {} while(0)
DECL|macro|flush_cache_vunmap
mdefine_line|#define flush_cache_vunmap(start, end)&t;&t;do {} while(0)
DECL|macro|flush_dcache_mmap_lock
mdefine_line|#define flush_dcache_mmap_lock(mapping)&t;&t;do {} while(0)
DECL|macro|flush_dcache_mmap_unlock
mdefine_line|#define flush_dcache_mmap_unlock(mapping)&t;do {} while(0)
multiline_comment|/*&n; * physically-indexed cache managment&n; * - see arch/frv/lib/cache.S&n; */
r_extern
r_void
id|frv_dcache_writeback
c_func
(paren
r_int
r_int
id|start
comma
r_int
r_int
id|size
)paren
suffix:semicolon
r_extern
r_void
id|frv_cache_invalidate
c_func
(paren
r_int
r_int
id|start
comma
r_int
r_int
id|size
)paren
suffix:semicolon
r_extern
r_void
id|frv_icache_invalidate
c_func
(paren
r_int
r_int
id|start
comma
r_int
r_int
id|size
)paren
suffix:semicolon
r_extern
r_void
id|frv_cache_wback_inv
c_func
(paren
r_int
r_int
id|start
comma
r_int
r_int
id|size
)paren
suffix:semicolon
DECL|function|__flush_cache_all
r_static
r_inline
r_void
id|__flush_cache_all
c_func
(paren
r_void
)paren
(brace
id|asm
r_volatile
(paren
l_string|&quot;&t;dcef&t;@(gr0,gr0),#1&t;&bslash;n&quot;
l_string|&quot;&t;icei&t;@(gr0,gr0),#1&t;&bslash;n&quot;
l_string|&quot;&t;membar&t;&t;&t;&bslash;n&quot;
suffix:colon
suffix:colon
suffix:colon
l_string|&quot;memory&quot;
)paren
suffix:semicolon
)brace
multiline_comment|/* dcache/icache coherency... */
macro_line|#ifdef CONFIG_MMU
r_extern
r_void
id|flush_dcache_page
c_func
(paren
r_struct
id|page
op_star
id|page
)paren
suffix:semicolon
macro_line|#else
DECL|function|flush_dcache_page
r_static
r_inline
r_void
id|flush_dcache_page
c_func
(paren
r_struct
id|page
op_star
id|page
)paren
(brace
r_int
r_int
id|addr
op_assign
id|page_to_phys
c_func
(paren
id|page
)paren
suffix:semicolon
id|frv_dcache_writeback
c_func
(paren
id|addr
comma
id|addr
op_plus
id|PAGE_SIZE
)paren
suffix:semicolon
)brace
macro_line|#endif
DECL|function|flush_page_to_ram
r_static
r_inline
r_void
id|flush_page_to_ram
c_func
(paren
r_struct
id|page
op_star
id|page
)paren
(brace
id|flush_dcache_page
c_func
(paren
id|page
)paren
suffix:semicolon
)brace
DECL|function|flush_icache
r_static
r_inline
r_void
id|flush_icache
c_func
(paren
r_void
)paren
(brace
id|__flush_cache_all
c_func
(paren
)paren
suffix:semicolon
)brace
DECL|function|flush_icache_range
r_static
r_inline
r_void
id|flush_icache_range
c_func
(paren
r_int
r_int
id|start
comma
r_int
r_int
id|end
)paren
(brace
id|frv_cache_wback_inv
c_func
(paren
id|start
comma
id|end
)paren
suffix:semicolon
)brace
macro_line|#ifdef CONFIG_MMU
r_extern
r_void
id|flush_icache_user_range
c_func
(paren
r_struct
id|vm_area_struct
op_star
id|vma
comma
r_struct
id|page
op_star
id|page
comma
r_int
r_int
id|start
comma
r_int
r_int
id|len
)paren
suffix:semicolon
macro_line|#else
DECL|function|flush_icache_user_range
r_static
r_inline
r_void
id|flush_icache_user_range
c_func
(paren
r_struct
id|vm_area_struct
op_star
id|vma
comma
r_struct
id|page
op_star
id|page
comma
r_int
r_int
id|start
comma
r_int
r_int
id|len
)paren
(brace
id|frv_cache_wback_inv
c_func
(paren
id|start
comma
id|start
op_plus
id|len
)paren
suffix:semicolon
)brace
macro_line|#endif
DECL|function|flush_icache_page
r_static
r_inline
r_void
id|flush_icache_page
c_func
(paren
r_struct
id|vm_area_struct
op_star
id|vma
comma
r_struct
id|page
op_star
id|page
)paren
(brace
id|flush_icache_user_range
c_func
(paren
id|vma
comma
id|page
comma
id|page_to_phys
c_func
(paren
id|page
)paren
comma
id|PAGE_SIZE
)paren
suffix:semicolon
)brace
macro_line|#endif /* _ASM_CACHEFLUSH_H */
eof
