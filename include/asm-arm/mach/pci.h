multiline_comment|/*&n; *  linux/include/asm-arm/mach/pci.h&n; *&n; *  Copyright (C) 2000 Russell King&n; *&n; * This program is free software; you can redistribute it and/or modify&n; * it under the terms of the GNU General Public License version 2 as&n; * published by the Free Software Foundation.&n; */
r_struct
id|pci_sys_data
suffix:semicolon
r_struct
id|pci_bus
suffix:semicolon
DECL|struct|hw_pci
r_struct
id|hw_pci
(brace
DECL|member|buses
r_struct
id|list_head
id|buses
suffix:semicolon
DECL|member|nr_controllers
r_int
id|nr_controllers
suffix:semicolon
DECL|member|setup
r_int
(paren
op_star
id|setup
)paren
(paren
r_int
id|nr
comma
r_struct
id|pci_sys_data
op_star
)paren
suffix:semicolon
DECL|member|scan
r_struct
id|pci_bus
op_star
(paren
op_star
id|scan
)paren
(paren
r_int
id|nr
comma
r_struct
id|pci_sys_data
op_star
)paren
suffix:semicolon
DECL|member|preinit
r_void
(paren
op_star
id|preinit
)paren
(paren
r_void
)paren
suffix:semicolon
DECL|member|postinit
r_void
(paren
op_star
id|postinit
)paren
(paren
r_void
)paren
suffix:semicolon
DECL|member|swizzle
id|u8
(paren
op_star
id|swizzle
)paren
(paren
r_struct
id|pci_dev
op_star
id|dev
comma
id|u8
op_star
id|pin
)paren
suffix:semicolon
DECL|member|map_irq
r_int
(paren
op_star
id|map_irq
)paren
(paren
r_struct
id|pci_dev
op_star
id|dev
comma
id|u8
id|slot
comma
id|u8
id|pin
)paren
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * Per-controller structure&n; */
DECL|struct|pci_sys_data
r_struct
id|pci_sys_data
(brace
DECL|member|node
r_struct
id|list_head
id|node
suffix:semicolon
DECL|member|busnr
r_int
id|busnr
suffix:semicolon
multiline_comment|/* primary bus number&t;&t;&t;*/
DECL|member|mem_offset
r_int
r_int
id|mem_offset
suffix:semicolon
multiline_comment|/* bus-&gt;cpu memory mapping offset&t;*/
DECL|member|io_offset
r_int
r_int
id|io_offset
suffix:semicolon
multiline_comment|/* bus-&gt;cpu IO mapping offset&t;&t;*/
DECL|member|bus
r_struct
id|pci_bus
op_star
id|bus
suffix:semicolon
multiline_comment|/* PCI bus&t;&t;&t;&t;*/
DECL|member|resource
r_struct
id|resource
op_star
id|resource
(braket
l_int|3
)braket
suffix:semicolon
multiline_comment|/* Primary PCI bus resources&t;&t;*/
multiline_comment|/* Bridge swizzling&t;&t;&t;*/
DECL|member|swizzle
id|u8
(paren
op_star
id|swizzle
)paren
(paren
r_struct
id|pci_dev
op_star
comma
id|u8
op_star
)paren
suffix:semicolon
multiline_comment|/* IRQ mapping&t;&t;&t;&t;*/
DECL|member|map_irq
r_int
(paren
op_star
id|map_irq
)paren
(paren
r_struct
id|pci_dev
op_star
comma
id|u8
comma
id|u8
)paren
suffix:semicolon
DECL|member|hw
r_struct
id|hw_pci
op_star
id|hw
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/*&n; * This is the standard PCI-PCI bridge swizzling algorithm.&n; */
id|u8
id|pci_std_swizzle
c_func
(paren
r_struct
id|pci_dev
op_star
id|dev
comma
id|u8
op_star
id|pinp
)paren
suffix:semicolon
multiline_comment|/*&n; * Call this with your hw_pci struct to initialise the PCI system.&n; */
r_void
id|pci_common_init
c_func
(paren
r_struct
id|hw_pci
op_star
)paren
suffix:semicolon
multiline_comment|/*&n; * PCI controllers&n; */
r_extern
r_int
id|iop321_setup
c_func
(paren
r_int
id|nr
comma
r_struct
id|pci_sys_data
op_star
)paren
suffix:semicolon
r_extern
r_struct
id|pci_bus
op_star
id|iop321_scan_bus
c_func
(paren
r_int
id|nr
comma
r_struct
id|pci_sys_data
op_star
)paren
suffix:semicolon
r_extern
r_void
id|iop321_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|iop331_setup
c_func
(paren
r_int
id|nr
comma
r_struct
id|pci_sys_data
op_star
)paren
suffix:semicolon
r_extern
r_struct
id|pci_bus
op_star
id|iop331_scan_bus
c_func
(paren
r_int
id|nr
comma
r_struct
id|pci_sys_data
op_star
)paren
suffix:semicolon
r_extern
r_void
id|iop331_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|dc21285_setup
c_func
(paren
r_int
id|nr
comma
r_struct
id|pci_sys_data
op_star
)paren
suffix:semicolon
r_extern
r_struct
id|pci_bus
op_star
id|dc21285_scan_bus
c_func
(paren
r_int
id|nr
comma
r_struct
id|pci_sys_data
op_star
)paren
suffix:semicolon
r_extern
r_void
id|dc21285_preinit
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|dc21285_postinit
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|via82c505_setup
c_func
(paren
r_int
id|nr
comma
r_struct
id|pci_sys_data
op_star
)paren
suffix:semicolon
r_extern
r_struct
id|pci_bus
op_star
id|via82c505_scan_bus
c_func
(paren
r_int
id|nr
comma
r_struct
id|pci_sys_data
op_star
)paren
suffix:semicolon
r_extern
r_void
id|via82c505_init
c_func
(paren
r_void
op_star
id|sysdata
)paren
suffix:semicolon
r_extern
r_int
id|pci_v3_setup
c_func
(paren
r_int
id|nr
comma
r_struct
id|pci_sys_data
op_star
)paren
suffix:semicolon
r_extern
r_struct
id|pci_bus
op_star
id|pci_v3_scan_bus
c_func
(paren
r_int
id|nr
comma
r_struct
id|pci_sys_data
op_star
)paren
suffix:semicolon
r_extern
r_void
id|pci_v3_preinit
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|pci_v3_postinit
c_func
(paren
r_void
)paren
suffix:semicolon
eof
