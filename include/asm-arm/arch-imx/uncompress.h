multiline_comment|/*&n; *  linux/include/asm-arm/arch-imxads/uncompress.h&n; *&n; *&n; *&n; *  Copyright (C) 1999 ARM Limited&n; *  Copyright (C) Shane Nay (shane@minirl.com)&n; *&n; * This program is free software; you can redistribute it and/or modify&n; * it under the terms of the GNU General Public License as published by&n; * the Free Software Foundation; either version 2 of the License, or&n; * (at your option) any later version.&n; *&n; * This program is distributed in the hope that it will be useful,&n; * but WITHOUT ANY WARRANTY; without even the implied warranty of&n; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; * GNU General Public License for more details.&n; *&n; * You should have received a copy of the GNU General Public License&n; * along with this program; if not, write to the Free Software&n; * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA&n; */
DECL|macro|UART
mdefine_line|#define UART(x) (*(volatile unsigned long *)(serial_port + (x)))
DECL|macro|UART1_BASE
mdefine_line|#define UART1_BASE 0x206000
DECL|macro|UART2_BASE
mdefine_line|#define UART2_BASE 0x207000
DECL|macro|USR2
mdefine_line|#define USR2 0x98
DECL|macro|USR2_TXFE
mdefine_line|#define USR2_TXFE (1&lt;&lt;14)
DECL|macro|TXR
mdefine_line|#define TXR  0x40
DECL|macro|UCR1
mdefine_line|#define UCR1 0x80
DECL|macro|UCR1_UARTEN
mdefine_line|#define UCR1_UARTEN 1
multiline_comment|/*&n; * The following code assumes the serial port has already been&n; * initialized by the bootloader.  We search for the first enabled&n; * port in the most probable order.  If you didn&squot;t setup a port in&n; * your bootloader then nothing will appear (which might be desired).&n; *&n; * This does not append a newline&n; */
r_static
r_void
DECL|function|puts
id|puts
c_func
(paren
r_const
r_char
op_star
id|s
)paren
(brace
r_int
r_int
id|serial_port
suffix:semicolon
r_do
(brace
id|serial_port
op_assign
id|UART1_BASE
suffix:semicolon
r_if
c_cond
(paren
id|UART
c_func
(paren
id|UCR1
)paren
op_amp
id|UCR1_UARTEN
)paren
r_break
suffix:semicolon
id|serial_port
op_assign
id|UART2_BASE
suffix:semicolon
r_if
c_cond
(paren
id|UART
c_func
(paren
id|UCR1
)paren
op_amp
id|UCR1_UARTEN
)paren
r_break
suffix:semicolon
r_return
suffix:semicolon
)brace
r_while
c_loop
(paren
l_int|0
)paren
(brace
suffix:semicolon
)brace
r_while
c_loop
(paren
op_star
id|s
)paren
(brace
r_while
c_loop
(paren
op_logical_neg
(paren
id|UART
c_func
(paren
id|USR2
)paren
op_amp
id|USR2_TXFE
)paren
)paren
id|barrier
c_func
(paren
)paren
suffix:semicolon
id|UART
c_func
(paren
id|TXR
)paren
op_assign
op_star
id|s
suffix:semicolon
r_if
c_cond
(paren
op_star
id|s
op_eq
l_char|&squot;&bslash;n&squot;
)paren
(brace
r_while
c_loop
(paren
op_logical_neg
(paren
id|UART
c_func
(paren
id|USR2
)paren
op_amp
id|USR2_TXFE
)paren
)paren
id|barrier
c_func
(paren
)paren
suffix:semicolon
id|UART
c_func
(paren
id|TXR
)paren
op_assign
l_char|&squot;&bslash;r&squot;
suffix:semicolon
)brace
id|s
op_increment
suffix:semicolon
)brace
)brace
multiline_comment|/*&n; * nothing to do&n; */
DECL|macro|arch_decomp_setup
mdefine_line|#define arch_decomp_setup()
DECL|macro|arch_decomp_wdog
mdefine_line|#define arch_decomp_wdog()
eof
