macro_line|#ifndef _NET_ESP_H
DECL|macro|_NET_ESP_H
mdefine_line|#define _NET_ESP_H
macro_line|#include &lt;net/xfrm.h&gt;
macro_line|#include &lt;asm/scatterlist.h&gt;
DECL|macro|ESP_NUM_FAST_SG
mdefine_line|#define ESP_NUM_FAST_SG&t;&t;4
DECL|struct|esp_data
r_struct
id|esp_data
(brace
DECL|member|sgbuf
r_struct
id|scatterlist
id|sgbuf
(braket
id|ESP_NUM_FAST_SG
)braket
suffix:semicolon
multiline_comment|/* Confidentiality */
r_struct
(brace
DECL|member|key
id|u8
op_star
id|key
suffix:semicolon
multiline_comment|/* Key */
DECL|member|key_len
r_int
id|key_len
suffix:semicolon
multiline_comment|/* Key length */
DECL|member|ivec
id|u8
op_star
id|ivec
suffix:semicolon
multiline_comment|/* ivec buffer */
multiline_comment|/* ivlen is offset from enc_data, where encrypted data start.&n;&t;&t; * It is logically different of crypto_tfm_alg_ivsize(tfm).&n;&t;&t; * We assume that it is either zero (no ivec), or&n;&t;&t; * &gt;= crypto_tfm_alg_ivsize(tfm). */
DECL|member|ivlen
r_int
id|ivlen
suffix:semicolon
DECL|member|padlen
r_int
id|padlen
suffix:semicolon
multiline_comment|/* 0..255 */
DECL|member|tfm
r_struct
id|crypto_tfm
op_star
id|tfm
suffix:semicolon
multiline_comment|/* crypto handle */
DECL|member|conf
)brace
id|conf
suffix:semicolon
multiline_comment|/* Integrity. It is active when icv_full_len != 0 */
r_struct
(brace
DECL|member|key
id|u8
op_star
id|key
suffix:semicolon
multiline_comment|/* Key */
DECL|member|key_len
r_int
id|key_len
suffix:semicolon
multiline_comment|/* Length of the key */
DECL|member|work_icv
id|u8
op_star
id|work_icv
suffix:semicolon
DECL|member|icv_full_len
r_int
id|icv_full_len
suffix:semicolon
DECL|member|icv_trunc_len
r_int
id|icv_trunc_len
suffix:semicolon
DECL|member|icv
r_void
(paren
op_star
id|icv
)paren
(paren
r_struct
id|esp_data
op_star
comma
r_struct
id|sk_buff
op_star
id|skb
comma
r_int
id|offset
comma
r_int
id|len
comma
id|u8
op_star
id|icv
)paren
suffix:semicolon
DECL|member|tfm
r_struct
id|crypto_tfm
op_star
id|tfm
suffix:semicolon
DECL|member|auth
)brace
id|auth
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_int
id|skb_to_sgvec
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_struct
id|scatterlist
op_star
id|sg
comma
r_int
id|offset
comma
r_int
id|len
)paren
suffix:semicolon
r_extern
r_int
id|skb_cow_data
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_int
id|tailbits
comma
r_struct
id|sk_buff
op_star
op_star
id|trailer
)paren
suffix:semicolon
r_extern
r_void
op_star
id|pskb_put
c_func
(paren
r_struct
id|sk_buff
op_star
id|skb
comma
r_struct
id|sk_buff
op_star
id|tail
comma
r_int
id|len
)paren
suffix:semicolon
r_static
r_inline
r_void
DECL|function|esp_hmac_digest
id|esp_hmac_digest
c_func
(paren
r_struct
id|esp_data
op_star
id|esp
comma
r_struct
id|sk_buff
op_star
id|skb
comma
r_int
id|offset
comma
r_int
id|len
comma
id|u8
op_star
id|auth_data
)paren
(brace
r_struct
id|crypto_tfm
op_star
id|tfm
op_assign
id|esp-&gt;auth.tfm
suffix:semicolon
r_char
op_star
id|icv
op_assign
id|esp-&gt;auth.work_icv
suffix:semicolon
id|memset
c_func
(paren
id|auth_data
comma
l_int|0
comma
id|esp-&gt;auth.icv_trunc_len
)paren
suffix:semicolon
id|crypto_hmac_init
c_func
(paren
id|tfm
comma
id|esp-&gt;auth.key
comma
op_amp
id|esp-&gt;auth.key_len
)paren
suffix:semicolon
id|skb_icv_walk
c_func
(paren
id|skb
comma
id|tfm
comma
id|offset
comma
id|len
comma
id|crypto_hmac_update
)paren
suffix:semicolon
id|crypto_hmac_final
c_func
(paren
id|tfm
comma
id|esp-&gt;auth.key
comma
op_amp
id|esp-&gt;auth.key_len
comma
id|icv
)paren
suffix:semicolon
id|memcpy
c_func
(paren
id|auth_data
comma
id|icv
comma
id|esp-&gt;auth.icv_trunc_len
)paren
suffix:semicolon
)brace
macro_line|#endif
eof
