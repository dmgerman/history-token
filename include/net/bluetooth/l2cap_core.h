multiline_comment|/* &n;   BlueZ - Bluetooth protocol stack for Linux&n;   Copyright (C) 2000-2001 Qualcomm Incorporated&n;&n;   Written 2000,2001 by Maxim Krasnyansky &lt;maxk@qualcomm.com&gt;&n;&n;   This program is free software; you can redistribute it and/or modify&n;   it under the terms of the GNU General Public License version 2 as&n;   published by the Free Software Foundation;&n;&n;   THE SOFTWARE IS PROVIDED &quot;AS IS&quot;, WITHOUT WARRANTY OF ANY KIND, EXPRESS&n;   OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,&n;   FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT OF THIRD PARTY RIGHTS.&n;   IN NO EVENT SHALL THE COPYRIGHT HOLDER(S) AND AUTHOR(S) BE LIABLE FOR ANY&n;   CLAIM, OR ANY SPECIAL INDIRECT OR CONSEQUENTIAL DAMAGES, OR ANY DAMAGES &n;   WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN &n;   ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF &n;   OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.&n;&n;   ALL LIABILITY, INCLUDING LIABILITY FOR INFRINGEMENT OF ANY PATENTS, &n;   COPYRIGHTS, TRADEMARKS OR OTHER RIGHTS, RELATING TO USE OF THIS &n;   SOFTWARE IS DISCLAIMED.&n;*/
multiline_comment|/*&n; *  $Id: l2cap_core.h,v 1.1 2001/06/01 08:12:11 davem Exp $&n; */
macro_line|#ifndef __L2CAP_CORE_H
DECL|macro|__L2CAP_CORE_H
mdefine_line|#define __L2CAP_CORE_H
macro_line|#ifdef __KERNEL__
multiline_comment|/* ----- L2CAP interface ----- */
DECL|struct|l2cap_iff
r_struct
id|l2cap_iff
(brace
DECL|member|list
r_struct
id|list_head
id|list
suffix:semicolon
DECL|member|hdev
r_struct
id|hci_dev
op_star
id|hdev
suffix:semicolon
DECL|member|bdaddr
id|bdaddr_t
op_star
id|bdaddr
suffix:semicolon
DECL|member|mtu
id|__u16
id|mtu
suffix:semicolon
DECL|member|lock
id|spinlock_t
id|lock
suffix:semicolon
DECL|member|conn_list
r_struct
id|list_head
id|conn_list
suffix:semicolon
)brace
suffix:semicolon
DECL|function|l2cap_iff_lock
r_static
id|__inline__
r_void
id|l2cap_iff_lock
c_func
(paren
r_struct
id|l2cap_iff
op_star
id|iff
)paren
(brace
id|spin_lock
c_func
(paren
op_amp
id|iff-&gt;lock
)paren
suffix:semicolon
)brace
DECL|function|l2cap_iff_unlock
r_static
id|__inline__
r_void
id|l2cap_iff_unlock
c_func
(paren
r_struct
id|l2cap_iff
op_star
id|iff
)paren
(brace
id|spin_unlock
c_func
(paren
op_amp
id|iff-&gt;lock
)paren
suffix:semicolon
)brace
multiline_comment|/* ----- L2CAP connections ----- */
DECL|struct|l2cap_chan_list
r_struct
id|l2cap_chan_list
(brace
DECL|member|head
r_struct
id|sock
op_star
id|head
suffix:semicolon
DECL|member|lock
id|rwlock_t
id|lock
suffix:semicolon
DECL|member|num
r_int
id|num
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|l2cap_conn
r_struct
id|l2cap_conn
(brace
DECL|member|iff
r_struct
id|l2cap_iff
op_star
id|iff
suffix:semicolon
DECL|member|list
r_struct
id|list_head
id|list
suffix:semicolon
DECL|member|hconn
r_struct
id|hci_conn
op_star
id|hconn
suffix:semicolon
DECL|member|state
id|__u16
id|state
suffix:semicolon
DECL|member|out
id|__u8
id|out
suffix:semicolon
DECL|member|src
id|bdaddr_t
id|src
suffix:semicolon
DECL|member|dst
id|bdaddr_t
id|dst
suffix:semicolon
DECL|member|lock
id|spinlock_t
id|lock
suffix:semicolon
DECL|member|refcnt
id|atomic_t
id|refcnt
suffix:semicolon
DECL|member|rx_skb
r_struct
id|sk_buff
op_star
id|rx_skb
suffix:semicolon
DECL|member|rx_len
id|__u32
id|rx_len
suffix:semicolon
DECL|member|rx_ident
id|__u8
id|rx_ident
suffix:semicolon
DECL|member|tx_ident
id|__u8
id|tx_ident
suffix:semicolon
DECL|member|chan_list
r_struct
id|l2cap_chan_list
id|chan_list
suffix:semicolon
)brace
suffix:semicolon
DECL|function|__l2cap_conn_link
r_static
id|__inline__
r_void
id|__l2cap_conn_link
c_func
(paren
r_struct
id|l2cap_iff
op_star
id|iff
comma
r_struct
id|l2cap_conn
op_star
id|c
)paren
(brace
id|list_add
c_func
(paren
op_amp
id|c-&gt;list
comma
op_amp
id|iff-&gt;conn_list
)paren
suffix:semicolon
)brace
DECL|function|__l2cap_conn_unlink
r_static
id|__inline__
r_void
id|__l2cap_conn_unlink
c_func
(paren
r_struct
id|l2cap_iff
op_star
id|iff
comma
r_struct
id|l2cap_conn
op_star
id|c
)paren
(brace
id|list_del
c_func
(paren
op_amp
id|c-&gt;list
)paren
suffix:semicolon
)brace
multiline_comment|/* ----- L2CAP channel and socket info ----- */
DECL|macro|l2cap_pi
mdefine_line|#define l2cap_pi(sk)   ((struct l2cap_pinfo *) &amp;sk-&gt;protinfo)
DECL|struct|l2cap_accept_q
r_struct
id|l2cap_accept_q
(brace
DECL|member|head
r_struct
id|sock
op_star
id|head
suffix:semicolon
DECL|member|tail
r_struct
id|sock
op_star
id|tail
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|l2cap_pinfo
r_struct
id|l2cap_pinfo
(brace
DECL|member|src
id|bdaddr_t
id|src
suffix:semicolon
DECL|member|dst
id|bdaddr_t
id|dst
suffix:semicolon
DECL|member|psm
id|__u16
id|psm
suffix:semicolon
DECL|member|dcid
id|__u16
id|dcid
suffix:semicolon
DECL|member|scid
id|__u16
id|scid
suffix:semicolon
DECL|member|flags
id|__u32
id|flags
suffix:semicolon
DECL|member|imtu
id|__u16
id|imtu
suffix:semicolon
DECL|member|omtu
id|__u16
id|omtu
suffix:semicolon
DECL|member|flush_to
id|__u16
id|flush_to
suffix:semicolon
DECL|member|conf_state
id|__u8
id|conf_state
suffix:semicolon
DECL|member|conf_mtu
id|__u16
id|conf_mtu
suffix:semicolon
DECL|member|ident
id|__u8
id|ident
suffix:semicolon
DECL|member|conn
r_struct
id|l2cap_conn
op_star
id|conn
suffix:semicolon
DECL|member|next_c
r_struct
id|sock
op_star
id|next_c
suffix:semicolon
DECL|member|prev_c
r_struct
id|sock
op_star
id|prev_c
suffix:semicolon
DECL|member|parent
r_struct
id|sock
op_star
id|parent
suffix:semicolon
DECL|member|next_q
r_struct
id|sock
op_star
id|next_q
suffix:semicolon
DECL|member|prev_q
r_struct
id|sock
op_star
id|prev_q
suffix:semicolon
DECL|member|accept_q
r_struct
id|l2cap_accept_q
id|accept_q
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|CONF_INPUT
mdefine_line|#define CONF_INPUT  0x01
DECL|macro|CONF_OUTPUT
mdefine_line|#define CONF_OUTPUT 0x02
DECL|macro|CONF_DONE
mdefine_line|#define CONF_DONE&t;(CONF_INPUT | CONF_OUTPUT)
r_extern
r_struct
id|bluez_sock_list
id|l2cap_sk_list
suffix:semicolon
r_extern
r_struct
id|list_head
id|l2cap_iff_list
suffix:semicolon
r_extern
id|rwlock_t
id|l2cap_rt_lock
suffix:semicolon
r_extern
r_void
id|l2cap_register_proc
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|l2cap_unregister_proc
c_func
(paren
r_void
)paren
suffix:semicolon
macro_line|#endif /* __KERNEL__ */
macro_line|#endif /* __L2CAP_CORE_H */
eof
