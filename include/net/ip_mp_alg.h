multiline_comment|/* ip_mp_alg.h: IPV4 multipath algorithm support.&n; *&n; * Copyright (C) 2004, 2005 Einar Lueck &lt;elueck@de.ibm.com&gt;&n; * Copyright (C) 2005 David S. Miller &lt;davem@davemloft.net&gt;&n; */
macro_line|#ifndef _NET_IP_MP_ALG_H
DECL|macro|_NET_IP_MP_ALG_H
mdefine_line|#define _NET_IP_MP_ALG_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/ip_mp_alg.h&gt;
macro_line|#include &lt;net/flow.h&gt;
macro_line|#include &lt;net/route.h&gt;
r_struct
id|fib_nh
suffix:semicolon
DECL|struct|ip_mp_alg_ops
r_struct
id|ip_mp_alg_ops
(brace
DECL|member|mp_alg_select_route
r_void
(paren
op_star
id|mp_alg_select_route
)paren
(paren
r_const
r_struct
id|flowi
op_star
id|flp
comma
r_struct
id|rtable
op_star
id|rth
comma
r_struct
id|rtable
op_star
op_star
id|rp
)paren
suffix:semicolon
DECL|member|mp_alg_flush
r_void
(paren
op_star
id|mp_alg_flush
)paren
(paren
r_void
)paren
suffix:semicolon
DECL|member|mp_alg_set_nhinfo
r_void
(paren
op_star
id|mp_alg_set_nhinfo
)paren
(paren
id|__u32
id|network
comma
id|__u32
id|netmask
comma
r_int
r_char
id|prefixlen
comma
r_const
r_struct
id|fib_nh
op_star
id|nh
)paren
suffix:semicolon
DECL|member|mp_alg_remove
r_void
(paren
op_star
id|mp_alg_remove
)paren
(paren
r_struct
id|rtable
op_star
id|rth
)paren
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_int
id|multipath_alg_register
c_func
(paren
r_struct
id|ip_mp_alg_ops
op_star
comma
r_enum
id|ip_mp_alg
)paren
suffix:semicolon
r_extern
r_void
id|multipath_alg_unregister
c_func
(paren
r_struct
id|ip_mp_alg_ops
op_star
comma
r_enum
id|ip_mp_alg
)paren
suffix:semicolon
r_extern
r_struct
id|ip_mp_alg_ops
op_star
id|ip_mp_alg_table
(braket
)braket
suffix:semicolon
DECL|function|multipath_select_route
r_static
r_inline
r_int
id|multipath_select_route
c_func
(paren
r_const
r_struct
id|flowi
op_star
id|flp
comma
r_struct
id|rtable
op_star
id|rth
comma
r_struct
id|rtable
op_star
op_star
id|rp
)paren
(brace
macro_line|#ifdef CONFIG_IP_ROUTE_MULTIPATH_CACHED
r_struct
id|ip_mp_alg_ops
op_star
id|ops
op_assign
id|ip_mp_alg_table
(braket
id|rth-&gt;rt_multipath_alg
)braket
suffix:semicolon
multiline_comment|/* mp_alg_select_route _MUST_ be implemented */
r_if
c_cond
(paren
id|ops
op_logical_and
(paren
id|rth-&gt;u.dst.flags
op_amp
id|DST_BALANCED
)paren
)paren
(brace
id|ops
op_member_access_from_pointer
id|mp_alg_select_route
c_func
(paren
id|flp
comma
id|rth
comma
id|rp
)paren
suffix:semicolon
r_return
l_int|1
suffix:semicolon
)brace
macro_line|#endif
r_return
l_int|0
suffix:semicolon
)brace
DECL|function|multipath_flush
r_static
r_inline
r_void
id|multipath_flush
c_func
(paren
r_void
)paren
(brace
macro_line|#ifdef CONFIG_IP_ROUTE_MULTIPATH_CACHED
r_int
id|i
suffix:semicolon
r_for
c_loop
(paren
id|i
op_assign
id|IP_MP_ALG_NONE
suffix:semicolon
id|i
op_le
id|IP_MP_ALG_MAX
suffix:semicolon
id|i
op_increment
)paren
(brace
r_struct
id|ip_mp_alg_ops
op_star
id|ops
op_assign
id|ip_mp_alg_table
(braket
id|i
)braket
suffix:semicolon
r_if
c_cond
(paren
id|ops
op_logical_and
id|ops-&gt;mp_alg_flush
)paren
id|ops
op_member_access_from_pointer
id|mp_alg_flush
c_func
(paren
)paren
suffix:semicolon
)brace
macro_line|#endif
)brace
DECL|function|multipath_set_nhinfo
r_static
r_inline
r_void
id|multipath_set_nhinfo
c_func
(paren
r_struct
id|rtable
op_star
id|rth
comma
id|__u32
id|network
comma
id|__u32
id|netmask
comma
r_int
r_char
id|prefixlen
comma
r_const
r_struct
id|fib_nh
op_star
id|nh
)paren
(brace
macro_line|#ifdef CONFIG_IP_ROUTE_MULTIPATH_CACHED
r_struct
id|ip_mp_alg_ops
op_star
id|ops
op_assign
id|ip_mp_alg_table
(braket
id|rth-&gt;rt_multipath_alg
)braket
suffix:semicolon
r_if
c_cond
(paren
id|ops
op_logical_and
id|ops-&gt;mp_alg_set_nhinfo
)paren
id|ops
op_member_access_from_pointer
id|mp_alg_set_nhinfo
c_func
(paren
id|network
comma
id|netmask
comma
id|prefixlen
comma
id|nh
)paren
suffix:semicolon
macro_line|#endif
)brace
DECL|function|multipath_remove
r_static
r_inline
r_void
id|multipath_remove
c_func
(paren
r_struct
id|rtable
op_star
id|rth
)paren
(brace
macro_line|#ifdef CONFIG_IP_ROUTE_MULTIPATH_CACHED
r_struct
id|ip_mp_alg_ops
op_star
id|ops
op_assign
id|ip_mp_alg_table
(braket
id|rth-&gt;rt_multipath_alg
)braket
suffix:semicolon
r_if
c_cond
(paren
id|ops
op_logical_and
id|ops-&gt;mp_alg_remove
op_logical_and
(paren
id|rth-&gt;u.dst.flags
op_amp
id|DST_BALANCED
)paren
)paren
id|ops
op_member_access_from_pointer
id|mp_alg_remove
c_func
(paren
id|rth
)paren
suffix:semicolon
macro_line|#endif
)brace
DECL|function|multipath_comparekeys
r_static
r_inline
r_int
id|multipath_comparekeys
c_func
(paren
r_const
r_struct
id|flowi
op_star
id|flp1
comma
r_const
r_struct
id|flowi
op_star
id|flp2
)paren
(brace
r_return
id|flp1-&gt;fl4_dst
op_eq
id|flp2-&gt;fl4_dst
op_logical_and
id|flp1-&gt;fl4_src
op_eq
id|flp2-&gt;fl4_src
op_logical_and
id|flp1-&gt;oif
op_eq
id|flp2-&gt;oif
op_logical_and
macro_line|#ifdef CONFIG_IP_ROUTE_FWMARK
id|flp1-&gt;fl4_fwmark
op_eq
id|flp2-&gt;fl4_fwmark
op_logical_and
macro_line|#endif
op_logical_neg
(paren
(paren
id|flp1-&gt;fl4_tos
op_xor
id|flp2-&gt;fl4_tos
)paren
op_amp
(paren
id|IPTOS_RT_MASK
op_or
id|RTO_ONLINK
)paren
)paren
suffix:semicolon
)brace
macro_line|#endif /* _NET_IP_MP_ALG_H */
eof
