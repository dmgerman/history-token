multiline_comment|/*&n; * BRIEF MODULE DESCRIPTION&n; *&t;Au1000 USB Device-Side Driver&n; *&n; * Copyright 2001 MontaVista Software Inc.&n; * Author: MontaVista Software, Inc.&n; *&t;&t;stevel@mvista.com or source@mvista.com&n; *&n; *  This program is free software; you can redistribute&t; it and/or modify it&n; *  under  the terms of&t; the GNU General  Public License as published by the&n; *  Free Software Foundation;  either version 2 of the&t;License, or (at your&n; *  option) any later version.&n; *&n; *  THIS  SOFTWARE  IS PROVIDED&t;  ``AS&t;IS&squot;&squot; AND   ANY&t;EXPRESS OR IMPLIED&n; *  WARRANTIES,&t;  INCLUDING, BUT NOT  LIMITED  TO, THE IMPLIED WARRANTIES OF&n; *  MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.  IN&n; *  NO&t;EVENT  SHALL   THE AUTHOR  BE&t; LIABLE FOR ANY&t;  DIRECT, INDIRECT,&n; *  INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT&n; *  NOT LIMITED&t;  TO, PROCUREMENT OF  SUBSTITUTE GOODS&t;OR SERVICES; LOSS OF&n; *  USE, DATA,&t;OR PROFITS; OR&t;BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON&n; *  ANY THEORY OF LIABILITY, WHETHER IN&t; CONTRACT, STRICT LIABILITY, OR TORT&n; *  (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF&n; *  THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&n; *&n; *  You should have received a copy of the  GNU General Public License along&n; *  with this program; if not, write  to the Free Software Foundation, Inc.,&n; *  675 Mass Ave, Cambridge, MA 02139, USA.&n; */
DECL|macro|USBDEV_REV
mdefine_line|#define USBDEV_REV 0x0110 
singleline_comment|// BCD
DECL|macro|USBDEV_EP0_MAX_PACKET_SIZE
mdefine_line|#define USBDEV_EP0_MAX_PACKET_SIZE 64
r_typedef
r_enum
(brace
DECL|enumerator|ATTACHED
id|ATTACHED
op_assign
l_int|0
comma
DECL|enumerator|POWERED
id|POWERED
comma
DECL|enumerator|DEFAULT
id|DEFAULT
comma
DECL|enumerator|ADDRESS
id|ADDRESS
comma
DECL|enumerator|CONFIGURED
id|CONFIGURED
DECL|typedef|usbdev_state_t
)brace
id|usbdev_state_t
suffix:semicolon
r_typedef
r_enum
(brace
DECL|enumerator|CB_NEW_STATE
id|CB_NEW_STATE
op_assign
l_int|0
comma
DECL|enumerator|CB_PKT_COMPLETE
id|CB_PKT_COMPLETE
DECL|typedef|usbdev_cb_type_t
)brace
id|usbdev_cb_type_t
suffix:semicolon
DECL|struct|usbdev_pkt
r_typedef
r_struct
id|usbdev_pkt
(brace
DECL|member|ep_addr
r_int
id|ep_addr
suffix:semicolon
singleline_comment|// ep addr this packet routed to
DECL|member|size
r_int
id|size
suffix:semicolon
singleline_comment|// size of payload in bytes
DECL|member|status
r_int
id|status
suffix:semicolon
singleline_comment|// packet status
DECL|member|next
r_struct
id|usbdev_pkt
op_star
id|next
suffix:semicolon
singleline_comment|// function layer can&squot;t touch this
DECL|member|payload
id|u8
id|payload
(braket
l_int|0
)braket
suffix:semicolon
singleline_comment|// the payload
DECL|typedef|usbdev_pkt_t
)brace
id|usbdev_pkt_t
suffix:semicolon
DECL|macro|PKT_STATUS_ACK
mdefine_line|#define PKT_STATUS_ACK  (1&lt;&lt;0)
DECL|macro|PKT_STATUS_NAK
mdefine_line|#define PKT_STATUS_NAK  (1&lt;&lt;1)
DECL|macro|PKT_STATUS_SU
mdefine_line|#define PKT_STATUS_SU   (1&lt;&lt;2)
r_extern
r_int
id|usbdev_init
c_func
(paren
r_struct
id|usb_device_descriptor
op_star
id|dev_desc
comma
r_struct
id|usb_config_descriptor
op_star
id|config_desc
comma
r_struct
id|usb_interface_descriptor
op_star
id|if_desc
comma
r_struct
id|usb_endpoint_descriptor
op_star
id|ep_desc
comma
r_struct
id|usb_string_descriptor
op_star
id|str_desc
(braket
)braket
comma
r_void
(paren
op_star
id|cb
)paren
(paren
id|usbdev_cb_type_t
comma
r_int
r_int
comma
r_void
op_star
)paren
comma
r_void
op_star
id|cb_data
)paren
suffix:semicolon
r_extern
r_void
id|usbdev_exit
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_int
id|usbdev_alloc_packet
(paren
r_int
id|ep_addr
comma
r_int
id|data_size
comma
id|usbdev_pkt_t
op_star
op_star
id|pkt
)paren
suffix:semicolon
r_extern
r_int
id|usbdev_send_packet
(paren
r_int
id|ep_addr
comma
id|usbdev_pkt_t
op_star
id|pkt
)paren
suffix:semicolon
r_extern
r_int
id|usbdev_receive_packet
c_func
(paren
r_int
id|ep_addr
comma
id|usbdev_pkt_t
op_star
op_star
id|pkt
)paren
suffix:semicolon
r_extern
r_int
id|usbdev_get_byte_count
c_func
(paren
r_int
id|ep_addr
)paren
suffix:semicolon
eof
