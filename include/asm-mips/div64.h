multiline_comment|/*&n; * Copyright (C) 2000, 2004  Maciej W. Rozycki&n; * Copyright (C) 2003 Ralf Baechle&n; *&n; * This file is subject to the terms and conditions of the GNU General Public&n; * License.  See the file &quot;COPYING&quot; in the main directory of this archive&n; * for more details.&n; */
macro_line|#ifndef _ASM_DIV64_H
DECL|macro|_ASM_DIV64_H
mdefine_line|#define _ASM_DIV64_H
macro_line|#if (_MIPS_SZLONG == 32)
macro_line|#include &lt;asm/compiler.h&gt;
multiline_comment|/*&n; * No traps on overflows for any of these...&n; */
DECL|macro|do_div64_32
mdefine_line|#define do_div64_32(res, high, low, base) ({ &bslash;&n;&t;unsigned long __quot, __mod; &bslash;&n;&t;unsigned long __cf, __tmp, __tmp2, __i; &bslash;&n;&t;&bslash;&n;&t;__asm__(&quot;.set&t;push&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;.set&t;noat&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;.set&t;noreorder&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;move&t;%2, $0&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;move&t;%3, $0&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;b&t;1f&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot; li&t;%4, 0x21&bslash;n&quot; &bslash;&n;&t;&t;&quot;0:&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;sll&t;$1, %0, 0x1&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;srl&t;%3, %0, 0x1f&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;or&t;%0, $1, %5&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;sll&t;%1, %1, 0x1&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;sll&t;%2, %2, 0x1&bslash;n&quot; &bslash;&n;&t;&t;&quot;1:&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;bnez&t;%3, 2f&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot; sltu&t;%5, %0, %z6&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;bnez&t;%5, 3f&bslash;n&quot; &bslash;&n;&t;&t;&quot;2:&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot; addiu&t;%4, %4, -1&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;subu&t;%0, %0, %z6&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;addiu&t;%2, %2, 1&bslash;n&quot; &bslash;&n;&t;&t;&quot;3:&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;bnez&t;%4, 0b&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot; srl&t;%5, %1, 0x1f&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;.set&t;pop&quot; &bslash;&n;&t;&t;: &quot;=&amp;r&quot; (__mod), &quot;=&amp;r&quot; (__tmp), &quot;=&amp;r&quot; (__quot), &quot;=&amp;r&quot; (__cf), &bslash;&n;&t;&t;  &quot;=&amp;r&quot; (__i), &quot;=&amp;r&quot; (__tmp2) &bslash;&n;&t;&t;: &quot;Jr&quot; (base), &quot;0&quot; (high), &quot;1&quot; (low)); &bslash;&n;&t;&bslash;&n;&t;(res) = __quot; &bslash;&n;&t;__mod; })
DECL|macro|do_div
mdefine_line|#define do_div(n, base) ({ &bslash;&n;&t;unsigned long long __quot; &bslash;&n;&t;unsigned long __mod; &bslash;&n;&t;unsigned long long __div; &bslash;&n;&t;unsigned long __upper, __low, __high, __base; &bslash;&n;&t;&bslash;&n;&t;__div = (n); &bslash;&n;&t;__base = (base); &bslash;&n;&t;&bslash;&n;&t;__high = __div &gt;&gt; 32; &bslash;&n;&t;__low = __div; &bslash;&n;&t;__upper = __high; &bslash;&n;&t;&bslash;&n;&t;if (__high) &bslash;&n;&t;&t;__asm__(&quot;divu&t;$0, %z2, %z3&quot; &bslash;&n;&t;&t;&t;: &quot;=h&quot; (__upper), &quot;=l&quot; (__high) &bslash;&n;&t;&t;&t;: &quot;Jr&quot; (__high), &quot;Jr&quot; (__base) &bslash;&n;&t;&t;&t;: GCC_REG_ACCUM); &bslash;&n;&t;&bslash;&n;&t;__mod = do_div64_32(__low, __upper, __low, __base); &bslash;&n;&t;&bslash;&n;&t;__quot = __high; &bslash;&n;&t;__quot = __quot &lt;&lt; 32 | __low; &bslash;&n;&t;(n) = __quot; &bslash;&n;&t;__mod; })
macro_line|#endif /* (_MIPS_SZLONG == 32) */
macro_line|#if (_MIPS_SZLONG == 64)
multiline_comment|/*&n; * Don&squot;t use this one in new code&n; */
DECL|macro|do_div64_32
mdefine_line|#define do_div64_32(res, high, low, base) ({ &bslash;&n;&t;unsigned int __quot, __mod; &bslash;&n;&t;unsigned long __div; &bslash;&n;&t;unsigned int __low, __high, __base; &bslash;&n;&t;&bslash;&n;&t;__high = (high); &bslash;&n;&t;__low = (low); &bslash;&n;&t;__div = __high; &bslash;&n;&t;__div = __div &lt;&lt; 32 | __low; &bslash;&n;&t;__base = (base); &bslash;&n;&t;&bslash;&n;&t;__mod = __div % __base; &bslash;&n;&t;__div = __div / __base; &bslash;&n;&t;&bslash;&n;&t;__quot = __div; &bslash;&n;&t;(res) = __quot; &bslash;&n;&t;__mod; })
multiline_comment|/*&n; * Hey, we&squot;re already 64-bit, no&n; * need to play games..&n; */
DECL|macro|do_div
mdefine_line|#define do_div(n, base) ({ &bslash;&n;&t;unsigned long __quot; &bslash;&n;&t;unsigned int __mod; &bslash;&n;&t;unsigned long __div; &bslash;&n;&t;unsigned int __base; &bslash;&n;&t;&bslash;&n;&t;__div = (n); &bslash;&n;&t;__base = (base); &bslash;&n;&t;&bslash;&n;&t;__mod = __div % __base; &bslash;&n;&t;__quot = __div / __base; &bslash;&n;&t;&bslash;&n;&t;(n) = __quot; &bslash;&n;&t;__mod; })
macro_line|#endif /* (_MIPS_SZLONG == 64) */
macro_line|#endif /* _ASM_DIV64_H */
eof
