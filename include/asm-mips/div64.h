multiline_comment|/*&n; * include/asm-mips/div64.h&n; * &n; * Copyright (C) 2000  Maciej W. Rozycki&n; *&n; * This file is subject to the terms and conditions of the GNU General Public&n; * License.  See the file &quot;COPYING&quot; in the main directory of this archive&n; * for more details.&n; */
macro_line|#ifndef _ASM_DIV64_H
DECL|macro|_ASM_DIV64_H
mdefine_line|#define _ASM_DIV64_H
macro_line|#include &lt;asm/sgidefs.h&gt;
multiline_comment|/*&n; * No traps on overflows for any of these...&n; */
macro_line|#if (_MIPS_ISA == _MIPS_ISA_MIPS1 ) || (_MIPS_ISA == _MIPS_ISA_MIPS2) || &bslash;&n;    (_MIPS_ISA == _MIPS_ISA_MIPS32)
DECL|macro|do_div64_32
mdefine_line|#define do_div64_32(res, high, low, base) ({ &bslash;&n;&t;unsigned long __quot, __mod; &bslash;&n;&t;unsigned long __cf, __tmp, __i; &bslash;&n;&t;&bslash;&n;&t;__asm__(&quot;.set&t;push&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;.set&t;noat&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;.set&t;noreorder&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;b&t;1f&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot; li&t;%4,0x21&bslash;n&quot; &bslash;&n;&t;&t;&quot;0:&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;sll&t;$1,%0,0x1&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;srl&t;%3,%0,0x1f&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;or&t;%0,$1,$2&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;sll&t;%1,%1,0x1&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;sll&t;%2,%2,0x1&bslash;n&quot; &bslash;&n;&t;&t;&quot;1:&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;bnez&t;%3,2f&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;sltu&t;$2,%0,%z5&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;bnez&t;$2,3f&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;2:&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot; addiu&t;%4,%4,-1&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;subu&t;%0,%0,%z5&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;addiu&t;%2,%2,1&bslash;n&quot; &bslash;&n;&t;&t;&quot;3:&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;bnez&t;%4,0b&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot; srl&t;$2,%1,0x1f&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;.set&t;pop&quot; &bslash;&n;&t;&t;: &quot;=&amp;r&quot; (__mod), &quot;=&amp;r&quot; (__tmp), &quot;=&amp;r&quot; (__quot), &quot;=&amp;r&quot; (__cf), &bslash;&n;&t;&t;  &quot;=&amp;r&quot; (__i) &bslash;&n;&t;&t;: &quot;Jr&quot; (base), &quot;0&quot; (high), &quot;1&quot; (low), &quot;2&quot; (0), &quot;3&quot; (0) &bslash;&n;&t;&t;/* Aarrgh!  Ran out of gcc&squot;s limit on constraints... */ &bslash;&n;&t;&t;: &quot;$1&quot;, &quot;$2&quot;); &bslash;&n;&t;&bslash;&n;&t;(res) = __quot; &bslash;&n;&t;__mod; })
DECL|macro|do_div
mdefine_line|#define do_div(n, base) ({ &bslash;&n;&t;unsigned long long __quot; &bslash;&n;&t;unsigned long __upper, __low, __high, __mod; &bslash;&n;&t;&bslash;&n;&t;__quot = (n); &bslash;&n;&t;__high = __quot &gt;&gt; 32; &bslash;&n;&t;__low = __quot; &bslash;&n;&t;__upper = __high; &bslash;&n;&t;&bslash;&n;&t;if (__high) &bslash;&n;&t;&t;__asm__(&quot;divu&t;$0,%z2,%z3&quot; &bslash;&n;&t;&t;&t;: &quot;=h&quot; (__upper), &quot;=l&quot; (__high) &bslash;&n;&t;&t;&t;: &quot;Jr&quot; (__high), &quot;Jr&quot; (base)); &bslash;&n;&t;&bslash;&n;&t;__mod = do_div64_32(__low, __upper, __low, base); &bslash;&n;&t;&bslash;&n;&t;__quot = __high; &bslash;&n;&t;__quot = __quot &lt;&lt; 32 | __low; &bslash;&n;&t;(n) = __quot; &bslash;&n;&t;__mod; })
macro_line|#else
DECL|macro|do_div64_32
mdefine_line|#define do_div64_32(res, high, low, base) ({ &bslash;&n;&t;unsigned long __quot, __mod, __r0; &bslash;&n;&t;&bslash;&n;&t;__asm__(&quot;dsll32&t;%2,%z3,0&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;or&t;%2,%2,%z4&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;ddivu&t;$0,%2,%z5&quot; &bslash;&n;&t;&t;: &quot;=h&quot; (__mod), &quot;=l&quot; (__quot), &quot;=&amp;r&quot; (__r0) &bslash;&n;&t;&t;: &quot;Jr&quot; (high), &quot;Jr&quot; (low), &quot;Jr&quot; (base)); &bslash;&n;&t;&bslash;&n;&t;(res) = __quot; &bslash;&n;&t;__mod; })
DECL|macro|do_div
mdefine_line|#define do_div(n, base) ({ &bslash;&n;&t;unsigned long long __quot; &bslash;&n;&t;unsigned long __mod, __r0; &bslash;&n;&t;&bslash;&n;&t;__quot = (n); &bslash;&n;&t;&bslash;&n;&t;__asm__(&quot;dsll32&t;%2,%M3,0&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;or&t;%2,%2,%L3&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;ddivu&t;$0,%2,%z4&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;mflo&t;%L1&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;dsra32&t;%M1,%L1,0&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;dsll32&t;%L1,%L1,0&bslash;n&bslash;t&quot; &bslash;&n;&t;&t;&quot;dsra32&t;%L1,%L1,0&quot; &bslash;&n;&t;&t;: &quot;=h&quot; (__mod), &quot;=r&quot; (__quot), &quot;=&amp;r&quot; (__r0) &bslash;&n;&t;&t;: &quot;r&quot; (n), &quot;Jr&quot; (base)); &bslash;&n;&t;&bslash;&n;&t;(n) = __quot; &bslash;&n;&t;__mod; })
macro_line|#endif
macro_line|#endif /* _ASM_DIV64_H */
eof
