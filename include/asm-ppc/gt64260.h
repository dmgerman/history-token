multiline_comment|/*&n; * include/asm-ppc/gt64260.h&n; * &n; * Prototypes, etc. for the Marvell/Galileo GT64260 host bridge routines.&n; *&n; * Author: Mark A. Greer &lt;mgreer@mvista.com&gt;&n; *&n; * 2001 (c) MontaVista, Software, Inc.  This file is licensed under&n; * the terms of the GNU General Public License version 2.1.  This program&n; * is licensed &quot;as is&quot; without any warranty of any kind, whether express&n; * or implied.&n; */
macro_line|#ifndef __ASMPPC_GT64260_H
DECL|macro|__ASMPPC_GT64260_H
mdefine_line|#define __ASMPPC_GT64260_H
macro_line|#include &lt;linux/kernel.h&gt;
macro_line|#include &lt;linux/init.h&gt;
macro_line|#include &lt;linux/pci.h&gt;
macro_line|#include &lt;linux/slab.h&gt;
macro_line|#include &lt;asm/byteorder.h&gt;
macro_line|#include &lt;asm/io.h&gt;
macro_line|#include &lt;asm/irq.h&gt;
macro_line|#include &lt;asm/uaccess.h&gt;
macro_line|#include &lt;asm/machdep.h&gt;
macro_line|#include &lt;asm/pci-bridge.h&gt;
macro_line|#include &lt;asm/gt64260_defs.h&gt;
r_extern
id|u32
id|gt64260_base
suffix:semicolon
r_extern
id|u32
id|gt64260_irq_base
suffix:semicolon
multiline_comment|/* We handle the next 96 IRQs from here */
r_extern
id|u32
id|gt64260_revision
suffix:semicolon
r_extern
id|u8
id|gt64260_pci_exclude_bridge
suffix:semicolon
macro_line|#ifndef&t;TRUE
DECL|macro|TRUE
mdefine_line|#define&t;TRUE&t;1
macro_line|#endif
macro_line|#ifndef&t;FALSE
DECL|macro|FALSE
mdefine_line|#define&t;FALSE&t;0
macro_line|#endif
multiline_comment|/* IRQs defined by the 64260 */
DECL|macro|GT64260_IRQ_MPSC0
mdefine_line|#define&t;GT64260_IRQ_MPSC0&t;&t;40
DECL|macro|GT64260_IRQ_MPSC1
mdefine_line|#define&t;GT64260_IRQ_MPSC1&t;&t;42
DECL|macro|GT64260_IRQ_SDMA
mdefine_line|#define&t;GT64260_IRQ_SDMA&t;&t;36
multiline_comment|/*&n; * Define a default physical memory map to be set up on the bridge.&n; * Also define a struct to pass that info from board-specific routines to&n; * GT64260 generic set up routines.  By passing this info in, the board&n; * support developer can modify it at will.&n; */
multiline_comment|/*&n; * This is the default memory map:&n; *&t;&t;&t;CPU&t;&t;&t;PCI&n; *&t;&t;&t;---&t;&t;&t;---&n; * PCI 0 I/O:&t;0xfa000000-0xfaffffff&t;0x00000000-0x00ffffff&n; * PCI 1 I/O:&t;0xfb000000-0xfbffffff&t;0x01000000-0x01ffffff&n; * PCI 0 MEM:&t;0x80000000-0x8fffffff&t;0x80000000-0x8fffffff&n; * PCI 1 MEM:&t;0x90000000-0x9fffffff&t;0x90000000-0x9fffffff&n; */
multiline_comment|/* Default physical memory map for the GT64260 bridge */
multiline_comment|/*&n; * PCI Bus 0 Definitions&n; */
DECL|macro|GT64260_PCI_0_IO_SIZE
mdefine_line|#define GT64260_PCI_0_IO_SIZE&t;&t;0x01000000U
DECL|macro|GT64260_PCI_0_MEM_SIZE
mdefine_line|#define&t;GT64260_PCI_0_MEM_SIZE&t;&t;0x10000000U
multiline_comment|/* Processor Physical addresses */
DECL|macro|GT64260_PCI_0_IO_START_PROC
mdefine_line|#define&t;GT64260_PCI_0_IO_START_PROC&t;0xfa000000U
DECL|macro|GT64260_PCI_0_IO_END_PROC
mdefine_line|#define&t;GT64260_PCI_0_IO_END_PROC&t;(GT64260_PCI_0_IO_START_PROC + &bslash;&n;&t;&t;&t;&t;&t; GT64260_PCI_0_IO_SIZE - 1)
multiline_comment|/* PCI 0 addresses */
DECL|macro|GT64260_PCI_0_IO_START
mdefine_line|#define&t;GT64260_PCI_0_IO_START&t;&t;0x00000000U
DECL|macro|GT64260_PCI_0_IO_END
mdefine_line|#define&t;GT64260_PCI_0_IO_END&t;&t;(GT64260_PCI_0_IO_START + &bslash;&n;&t;&t;&t;&t;&t; GT64260_PCI_0_IO_SIZE - 1)
multiline_comment|/* Processor Physical addresses */
DECL|macro|GT64260_PCI_0_MEM_START_PROC
mdefine_line|#define&t;GT64260_PCI_0_MEM_START_PROC&t;0x80000000U
DECL|macro|GT64260_PCI_0_MEM_END_PROC
mdefine_line|#define&t;GT64260_PCI_0_MEM_END_PROC&t;(GT64260_PCI_0_MEM_START_PROC + &bslash;&n;&t;&t;&t;&t;&t; GT64260_PCI_0_MEM_SIZE - 1)
multiline_comment|/* PCI 0 addresses */
DECL|macro|GT64260_PCI_0_MEM_START
mdefine_line|#define&t;GT64260_PCI_0_MEM_START&t;&t;0x80000000U
DECL|macro|GT64260_PCI_0_MEM_END
mdefine_line|#define&t;GT64260_PCI_0_MEM_END&t;&t;(GT64260_PCI_0_MEM_START + &bslash;&n;&t;&t;&t;&t;&t; GT64260_PCI_0_MEM_SIZE - 1)
multiline_comment|/*&n; * PCI Bus 1 Definitions&n; */
DECL|macro|GT64260_PCI_1_IO_SIZE
mdefine_line|#define GT64260_PCI_1_IO_SIZE&t;&t;0x01000000U
DECL|macro|GT64260_PCI_1_MEM_SIZE
mdefine_line|#define&t;GT64260_PCI_1_MEM_SIZE&t;&t;0x10000000U
multiline_comment|/* PCI 1 addresses */
DECL|macro|GT64260_PCI_1_IO_START
mdefine_line|#define&t;GT64260_PCI_1_IO_START&t;&t;0x01000000U
DECL|macro|GT64260_PCI_1_IO_END
mdefine_line|#define&t;GT64260_PCI_1_IO_END&t;&t;(GT64260_PCI_1_IO_START + &bslash;&n;&t;&t;&t;&t;&t; GT64260_PCI_1_IO_SIZE - 1)
multiline_comment|/* Processor Physical addresses */
DECL|macro|GT64260_PCI_1_IO_START_PROC
mdefine_line|#define&t;GT64260_PCI_1_IO_START_PROC&t;0xfb000000U
DECL|macro|GT64260_PCI_1_IO_END_PROC
mdefine_line|#define&t;GT64260_PCI_1_IO_END_PROC&t;(GT64260_PCI_1_IO_START_PROC + &bslash;&n;&t;&t;&t;&t;&t; GT64260_PCI_1_IO_SIZE - 1)
multiline_comment|/* PCI 1 addresses */
DECL|macro|GT64260_PCI_1_MEM_START
mdefine_line|#define&t;GT64260_PCI_1_MEM_START&t;&t;0x90000000U
DECL|macro|GT64260_PCI_1_MEM_END
mdefine_line|#define&t;GT64260_PCI_1_MEM_END&t;&t;(GT64260_PCI_1_MEM_START + &bslash;&n;&t;&t;&t;&t;&t; GT64260_PCI_1_MEM_SIZE - 1)
multiline_comment|/* Processor Physical addresses */
DECL|macro|GT64260_PCI_1_MEM_START_PROC
mdefine_line|#define&t;GT64260_PCI_1_MEM_START_PROC&t;0x90000000U
DECL|macro|GT64260_PCI_1_MEM_END_PROC
mdefine_line|#define&t;GT64260_PCI_1_MEM_END_PROC&t;(GT64260_PCI_1_MEM_START_PROC + &bslash;&n;&t;&t;&t;&t;&t; GT64260_PCI_1_MEM_SIZE - 1)
multiline_comment|/* Define struct to pass mem-map info into gt64260_common.c code */
r_typedef
r_struct
(brace
DECL|member|hose_a
r_struct
id|pci_controller
op_star
id|hose_a
suffix:semicolon
DECL|member|hose_b
r_struct
id|pci_controller
op_star
id|hose_b
suffix:semicolon
DECL|member|mem_size
id|u32
id|mem_size
suffix:semicolon
DECL|member|pci_0_io_start_proc
id|u32
id|pci_0_io_start_proc
suffix:semicolon
DECL|member|pci_0_io_start_pci
id|u32
id|pci_0_io_start_pci
suffix:semicolon
DECL|member|pci_0_io_size
id|u32
id|pci_0_io_size
suffix:semicolon
DECL|member|pci_0_io_swap
id|u32
id|pci_0_io_swap
suffix:semicolon
DECL|member|pci_0_mem_start_proc
id|u32
id|pci_0_mem_start_proc
suffix:semicolon
DECL|member|pci_0_mem_start_pci_hi
id|u32
id|pci_0_mem_start_pci_hi
suffix:semicolon
DECL|member|pci_0_mem_start_pci_lo
id|u32
id|pci_0_mem_start_pci_lo
suffix:semicolon
DECL|member|pci_0_mem_size
id|u32
id|pci_0_mem_size
suffix:semicolon
DECL|member|pci_0_mem_swap
id|u32
id|pci_0_mem_swap
suffix:semicolon
DECL|member|pci_1_io_start_proc
id|u32
id|pci_1_io_start_proc
suffix:semicolon
DECL|member|pci_1_io_start_pci
id|u32
id|pci_1_io_start_pci
suffix:semicolon
DECL|member|pci_1_io_size
id|u32
id|pci_1_io_size
suffix:semicolon
DECL|member|pci_1_io_swap
id|u32
id|pci_1_io_swap
suffix:semicolon
DECL|member|pci_1_mem_start_proc
id|u32
id|pci_1_mem_start_proc
suffix:semicolon
DECL|member|pci_1_mem_start_pci_hi
id|u32
id|pci_1_mem_start_pci_hi
suffix:semicolon
DECL|member|pci_1_mem_start_pci_lo
id|u32
id|pci_1_mem_start_pci_lo
suffix:semicolon
DECL|member|pci_1_mem_size
id|u32
id|pci_1_mem_size
suffix:semicolon
DECL|member|pci_1_mem_swap
id|u32
id|pci_1_mem_swap
suffix:semicolon
DECL|typedef|gt64260_bridge_info_t
)brace
id|gt64260_bridge_info_t
suffix:semicolon
DECL|macro|GT64260_BRIDGE_INFO_DEFAULT
mdefine_line|#define&t;GT64260_BRIDGE_INFO_DEFAULT(ip, ms) {&t;&t;&t;&t;&bslash;&n;&t;(ip)-&gt;mem_size = (ms);&t;&t;&t;&t;&t;&t;&bslash;&n;&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;(ip)-&gt;pci_0_io_start_proc = GT64260_PCI_0_IO_START_PROC;&t;&bslash;&n;&t;(ip)-&gt;pci_0_io_start_pci  = GT64260_PCI_0_IO_START;&t;&t;&bslash;&n;&t;(ip)-&gt;pci_0_io_size&t;  = GT64260_PCI_0_IO_SIZE;&t;&t;&bslash;&n;&t;(ip)-&gt;pci_0_io_swap&t;  = GT64260_CPU_PCI_SWAP_NONE;&t;&t;&bslash;&n;&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;(ip)-&gt;pci_0_mem_start_proc   = GT64260_PCI_0_MEM_START_PROC;&t;&bslash;&n;&t;(ip)-&gt;pci_0_mem_start_pci_hi = 0x00000000;&t;&t;&t;&bslash;&n;&t;(ip)-&gt;pci_0_mem_start_pci_lo = GT64260_PCI_0_MEM_START;&t;&t;&bslash;&n;&t;(ip)-&gt;pci_0_mem_size&t;     = GT64260_PCI_0_MEM_SIZE;&t;&t;&bslash;&n;&t;(ip)-&gt;pci_0_mem_swap&t;     = GT64260_CPU_PCI_SWAP_NONE;&t;&bslash;&n;&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;(ip)-&gt;pci_1_io_start_proc = GT64260_PCI_1_IO_START_PROC;&t;&bslash;&n;&t;(ip)-&gt;pci_1_io_start_pci  = GT64260_PCI_1_IO_START;&t;&t;&bslash;&n;&t;(ip)-&gt;pci_1_io_size&t;  = GT64260_PCI_1_IO_SIZE;&t;&t;&bslash;&n;&t;(ip)-&gt;pci_1_io_swap&t;  = GT64260_CPU_PCI_SWAP_NONE;&t;&t;&bslash;&n;&t;&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;(ip)-&gt;pci_1_mem_start_proc   = GT64260_PCI_1_MEM_START_PROC;&t;&bslash;&n;&t;(ip)-&gt;pci_1_mem_start_pci_hi = 0x00000000;&t;&t;&t;&bslash;&n;&t;(ip)-&gt;pci_1_mem_start_pci_lo = GT64260_PCI_1_MEM_START;&t;&t;&bslash;&n;&t;(ip)-&gt;pci_1_mem_size&t;     = GT64260_PCI_1_MEM_SIZE;&t;&t;&bslash;&n;&t;(ip)-&gt;pci_1_mem_swap&t;     = GT64260_CPU_PCI_SWAP_NONE;&t;&bslash;&n;}
multiline_comment|/*&n; *****************************************************************************&n; *&n; *&t;I/O macros to access the 64260&squot;s registers&n; *&n; *****************************************************************************&n; */
DECL|function|gt_read
r_extern
r_inline
r_uint32
(def_block
id|gt_read
c_func
(paren
r_uint32
id|offs
)paren
(brace
r_return
(paren
id|in_le32
c_func
(paren
(paren
r_volatile
id|uint
op_star
)paren
(paren
id|gt64260_base
op_plus
id|offs
)paren
)paren
)paren
suffix:semicolon
)brace
)def_block
DECL|function|gt_write
r_extern
r_inline
r_void
(def_block
id|gt_write
c_func
(paren
r_uint32
id|offs
comma
r_uint32
id|d
)paren
(brace
id|out_le32
c_func
(paren
(paren
r_volatile
id|uint
op_star
)paren
(paren
id|gt64260_base
op_plus
id|offs
)paren
comma
id|d
)paren
suffix:semicolon
)brace
)def_block
macro_line|#if 0 /* paranoid SMP version */
r_extern
r_inline
r_void
id|gt_modify
c_func
(paren
id|u32
id|offs
comma
id|u32
id|data
comma
id|u32
id|mask
)paren
"&bslash;"
(brace
r_uint32
id|reg
suffix:semicolon
id|spin_lock
c_func
(paren
op_amp
id|gt64260_lock
)paren
suffix:semicolon
id|reg
op_assign
id|gt_read
c_func
(paren
id|offs
)paren
op_amp
(paren
op_complement
id|mask
)paren
suffix:semicolon
multiline_comment|/* zero any bits we care about*/
id|reg
op_or_assign
id|data
op_amp
id|mask
suffix:semicolon
multiline_comment|/* set bits from the data */
id|gt_write
c_func
(paren
id|offs
comma
id|reg
)paren
suffix:semicolon
id|spin_unlock
c_func
(paren
op_amp
id|gt64260_lock
)paren
suffix:semicolon
)brace
macro_line|#else
DECL|function|gt_modify
r_extern
r_inline
r_void
id|gt_modify
c_func
(paren
r_uint32
id|offs
comma
r_uint32
id|data
comma
r_uint32
id|mask
)paren
(brace
r_uint32
id|reg
suffix:semicolon
id|reg
op_assign
id|gt_read
c_func
(paren
id|offs
)paren
op_amp
(paren
op_complement
(paren
id|mask
)paren
)paren
suffix:semicolon
multiline_comment|/* zero any bits we care about*/
id|reg
op_or_assign
(paren
id|data
)paren
op_amp
(paren
id|mask
)paren
suffix:semicolon
multiline_comment|/* set bits from the data */
id|gt_write
c_func
(paren
id|offs
comma
id|reg
)paren
suffix:semicolon
)brace
macro_line|#endif
DECL|macro|gt_set_bits
mdefine_line|#define&t;gt_set_bits(offs, bits) gt_modify(offs, ~0, bits) 
DECL|macro|gt_clr_bits
mdefine_line|#define&t;gt_clr_bits(offs, bits) gt_modify(offs, 0, bits)
multiline_comment|/*&n; *****************************************************************************&n; *&n; *&t;Function Prototypes&n; *&n; *****************************************************************************&n; */
r_int
id|gt64260_find_bridges
c_func
(paren
id|u32
id|phys_base_addr
comma
id|gt64260_bridge_info_t
op_star
id|info
comma
r_int
(paren
(paren
op_star
id|map_irq
)paren
(paren
r_struct
id|pci_dev
op_star
comma
r_int
r_char
comma
r_int
r_char
)paren
)paren
)paren
suffix:semicolon
r_int
id|gt64260_bridge_init
c_func
(paren
id|gt64260_bridge_info_t
op_star
id|info
)paren
suffix:semicolon
r_int
id|gt64260_cpu_scs_set_window
c_func
(paren
id|u32
id|window
comma
id|u32
id|base_addr
comma
id|u32
id|size
)paren
suffix:semicolon
r_int
id|gt64260_cpu_cs_set_window
c_func
(paren
id|u32
id|window
comma
id|u32
id|base_addr
comma
id|u32
id|size
)paren
suffix:semicolon
r_int
id|gt64260_cpu_boot_set_window
c_func
(paren
id|u32
id|base_addr
comma
id|u32
id|size
)paren
suffix:semicolon
r_int
id|gt64260_cpu_set_pci_io_window
c_func
(paren
id|u32
id|pci_bus
comma
id|u32
id|cpu_base_addr
comma
id|u32
id|pci_base_addr
comma
id|u32
id|size
comma
id|u32
id|swap
)paren
suffix:semicolon
r_int
id|gt64260_cpu_set_pci_mem_window
c_func
(paren
id|u32
id|pci_bus
comma
id|u32
id|window
comma
id|u32
id|cpu_base_addr
comma
id|u32
id|pci_base_addr_hi
comma
id|u32
id|pci_base_addr_lo
comma
id|u32
id|size
comma
id|u32
id|swap_64bit
)paren
suffix:semicolon
r_int
id|gt64260_cpu_prot_set_window
c_func
(paren
id|u32
id|window
comma
id|u32
id|base_addr
comma
id|u32
id|size
comma
id|u32
id|access_bits
)paren
suffix:semicolon
r_int
id|gt64260_cpu_snoop_set_window
c_func
(paren
id|u32
id|window
comma
id|u32
id|base_addr
comma
id|u32
id|size
comma
id|u32
id|snoop_type
)paren
suffix:semicolon
r_void
id|gt64260_cpu_disable_all_windows
c_func
(paren
r_void
)paren
suffix:semicolon
r_int
id|gt64260_pci_bar_enable
c_func
(paren
id|u32
id|pci_bus
comma
id|u32
id|enable_bits
)paren
suffix:semicolon
r_int
id|gt64260_pci_slave_scs_set_window
c_func
(paren
r_struct
id|pci_controller
op_star
id|hose
comma
id|u32
id|window
comma
id|u32
id|pci_base_addr
comma
id|u32
id|cpu_base_addr
comma
id|u32
id|size
)paren
suffix:semicolon
r_int
id|gt64260_pci_slave_cs_set_window
c_func
(paren
r_struct
id|pci_controller
op_star
id|hose
comma
id|u32
id|window
comma
id|u32
id|pci_base_addr
comma
id|u32
id|cpu_base_addr
comma
id|u32
id|size
)paren
suffix:semicolon
r_int
id|gt64260_pci_slave_boot_set_window
c_func
(paren
r_struct
id|pci_controller
op_star
id|hose
comma
id|u32
id|pci_base_addr
comma
id|u32
id|cpu_base_addr
comma
id|u32
id|size
)paren
suffix:semicolon
r_int
id|gt64260_pci_slave_p2p_mem_set_window
c_func
(paren
r_struct
id|pci_controller
op_star
id|hose
comma
id|u32
id|window
comma
id|u32
id|pci_base_addr
comma
id|u32
id|other_bus_base_addr
comma
id|u32
id|size
)paren
suffix:semicolon
r_int
id|gt64260_pci_slave_p2p_io_set_window
c_func
(paren
r_struct
id|pci_controller
op_star
id|hose
comma
id|u32
id|pci_base_addr
comma
id|u32
id|other_bus_base_addr
comma
id|u32
id|size
)paren
suffix:semicolon
r_int
id|gt64260_pci_slave_dac_scs_set_window
c_func
(paren
r_struct
id|pci_controller
op_star
id|hose
comma
id|u32
id|window
comma
id|u32
id|pci_base_addr_hi
comma
id|u32
id|pci_base_addr_lo
comma
id|u32
id|cpu_base_addr
comma
id|u32
id|size
)paren
suffix:semicolon
r_int
id|gt64260_pci_slave_dac_cs_set_window
c_func
(paren
r_struct
id|pci_controller
op_star
id|hose
comma
id|u32
id|window
comma
id|u32
id|pci_base_addr_hi
comma
id|u32
id|pci_base_addr_lo
comma
id|u32
id|cpu_base_addr
comma
id|u32
id|size
)paren
suffix:semicolon
r_int
id|gt64260_pci_slave_dac_boot_set_window
c_func
(paren
r_struct
id|pci_controller
op_star
id|hose
comma
id|u32
id|pci_base_addr_hi
comma
id|u32
id|pci_base_addr_lo
comma
id|u32
id|cpu_base_addr
comma
id|u32
id|size
)paren
suffix:semicolon
r_int
id|gt64260_pci_slave_dac_p2p_mem_set_window
c_func
(paren
r_struct
id|pci_controller
op_star
id|hose
comma
id|u32
id|window
comma
id|u32
id|pci_base_addr_hi
comma
id|u32
id|pci_base_addr_lo
comma
id|u32
id|other_bus_base_addr
comma
id|u32
id|size
)paren
suffix:semicolon
r_int
id|gt64260_pci_acc_cntl_set_window
c_func
(paren
id|u32
id|pci_bus
comma
id|u32
id|window
comma
id|u32
id|base_addr_hi
comma
id|u32
id|base_addr_lo
comma
id|u32
id|size
comma
id|u32
id|features
)paren
suffix:semicolon
r_int
id|gt64260_pci_snoop_set_window
c_func
(paren
id|u32
id|pci_bus
comma
id|u32
id|window
comma
id|u32
id|base_addr_hi
comma
id|u32
id|base_addr_lo
comma
id|u32
id|size
comma
id|u32
id|snoop_type
)paren
suffix:semicolon
r_int
id|gt64260_set_base
c_func
(paren
id|u32
id|new_base
)paren
suffix:semicolon
r_int
id|gt64260_get_base
c_func
(paren
id|u32
op_star
id|base
)paren
suffix:semicolon
r_int
id|gt64260_pci_exclude_device
c_func
(paren
id|u8
id|bus
comma
id|u8
id|devfn
)paren
suffix:semicolon
r_void
id|gt64260_init_irq
c_func
(paren
r_void
)paren
suffix:semicolon
r_int
id|gt64260_get_irq
c_func
(paren
r_struct
id|pt_regs
op_star
id|regs
)paren
suffix:semicolon
r_void
id|gt64260_mpsc_progress
c_func
(paren
r_char
op_star
id|s
comma
r_int
r_int
id|hex
)paren
suffix:semicolon
macro_line|#endif /* __ASMPPC_GT64260_H */
eof
