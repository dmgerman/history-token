multiline_comment|/*&n; * include/asm-ppc/rheap.c&n; *&n; * Header file for the implementation of a remote heap.&n; *&n; * Author: Pantelis Antoniou &lt;panto@intracom.gr&gt;&n; *&n; * 2004 (c) INTRACOM S.A. Greece. This file is licensed under&n; * the terms of the GNU General Public License version 2. This program&n; * is licensed &quot;as is&quot; without any warranty of any kind, whether express&n; * or implied.&n; */
macro_line|#ifndef __ASM_PPC_RHEAP_H__
DECL|macro|__ASM_PPC_RHEAP_H__
mdefine_line|#define __ASM_PPC_RHEAP_H__
macro_line|#include &lt;linux/list.h&gt;
DECL|struct|_rh_block
r_typedef
r_struct
id|_rh_block
(brace
DECL|member|list
r_struct
id|list_head
id|list
suffix:semicolon
DECL|member|start
r_void
op_star
id|start
suffix:semicolon
DECL|member|size
r_int
id|size
suffix:semicolon
DECL|member|owner
r_const
r_char
op_star
id|owner
suffix:semicolon
DECL|typedef|rh_block_t
)brace
id|rh_block_t
suffix:semicolon
DECL|struct|_rh_info
r_typedef
r_struct
id|_rh_info
(brace
DECL|member|alignment
r_int
r_int
id|alignment
suffix:semicolon
DECL|member|max_blocks
r_int
id|max_blocks
suffix:semicolon
DECL|member|empty_slots
r_int
id|empty_slots
suffix:semicolon
DECL|member|block
id|rh_block_t
op_star
id|block
suffix:semicolon
DECL|member|empty_list
r_struct
id|list_head
id|empty_list
suffix:semicolon
DECL|member|free_list
r_struct
id|list_head
id|free_list
suffix:semicolon
DECL|member|taken_list
r_struct
id|list_head
id|taken_list
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
DECL|typedef|rh_info_t
)brace
id|rh_info_t
suffix:semicolon
DECL|macro|RHIF_STATIC_INFO
mdefine_line|#define RHIF_STATIC_INFO&t;0x1
DECL|macro|RHIF_STATIC_BLOCK
mdefine_line|#define RHIF_STATIC_BLOCK&t;0x2
DECL|struct|rh_stats_t
r_typedef
r_struct
id|rh_stats_t
(brace
DECL|member|start
r_void
op_star
id|start
suffix:semicolon
DECL|member|size
r_int
id|size
suffix:semicolon
DECL|member|owner
r_const
r_char
op_star
id|owner
suffix:semicolon
DECL|typedef|rh_stats_t
)brace
id|rh_stats_t
suffix:semicolon
DECL|macro|RHGS_FREE
mdefine_line|#define RHGS_FREE&t;0
DECL|macro|RHGS_TAKEN
mdefine_line|#define RHGS_TAKEN&t;1
multiline_comment|/* Create a remote heap dynamically */
r_extern
id|rh_info_t
op_star
id|rh_create
c_func
(paren
r_int
r_int
id|alignment
)paren
suffix:semicolon
multiline_comment|/* Destroy a remote heap, created by rh_create() */
r_extern
r_void
id|rh_destroy
c_func
(paren
id|rh_info_t
op_star
id|info
)paren
suffix:semicolon
multiline_comment|/* Initialize in place a remote info block */
r_extern
r_void
id|rh_init
c_func
(paren
id|rh_info_t
op_star
id|info
comma
r_int
r_int
id|alignment
comma
r_int
id|max_blocks
comma
id|rh_block_t
op_star
id|block
)paren
suffix:semicolon
multiline_comment|/* Attach a free region to manage */
r_extern
r_int
id|rh_attach_region
c_func
(paren
id|rh_info_t
op_star
id|info
comma
r_void
op_star
id|start
comma
r_int
id|size
)paren
suffix:semicolon
multiline_comment|/* Detach a free region */
r_extern
r_void
op_star
id|rh_detach_region
c_func
(paren
id|rh_info_t
op_star
id|info
comma
r_void
op_star
id|start
comma
r_int
id|size
)paren
suffix:semicolon
multiline_comment|/* Allocate the given size from the remote heap */
r_extern
r_void
op_star
id|rh_alloc
c_func
(paren
id|rh_info_t
op_star
id|info
comma
r_int
id|size
comma
r_const
r_char
op_star
id|owner
)paren
suffix:semicolon
multiline_comment|/* Allocate the given size from the given address */
r_extern
r_void
op_star
id|rh_alloc_fixed
c_func
(paren
id|rh_info_t
op_star
id|info
comma
r_void
op_star
id|start
comma
r_int
id|size
comma
r_const
r_char
op_star
id|owner
)paren
suffix:semicolon
multiline_comment|/* Free the allocated area */
r_extern
r_int
id|rh_free
c_func
(paren
id|rh_info_t
op_star
id|info
comma
r_void
op_star
id|start
)paren
suffix:semicolon
multiline_comment|/* Get stats for debugging purposes */
r_extern
r_int
id|rh_get_stats
c_func
(paren
id|rh_info_t
op_star
id|info
comma
r_int
id|what
comma
r_int
id|max_stats
comma
id|rh_stats_t
op_star
id|stats
)paren
suffix:semicolon
multiline_comment|/* Simple dump of remote heap info */
r_extern
r_void
id|rh_dump
c_func
(paren
id|rh_info_t
op_star
id|info
)paren
suffix:semicolon
multiline_comment|/* Set owner of taken block */
r_extern
r_int
id|rh_set_owner
c_func
(paren
id|rh_info_t
op_star
id|info
comma
r_void
op_star
id|start
comma
r_const
r_char
op_star
id|owner
)paren
suffix:semicolon
macro_line|#endif&t;&t;&t;&t;/* __ASM_PPC_RHEAP_H__ */
eof
