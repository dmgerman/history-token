macro_line|#ifndef _GENERIC_RMAP_H
DECL|macro|_GENERIC_RMAP_H
mdefine_line|#define _GENERIC_RMAP_H
multiline_comment|/*&n; * linux/include/asm-generic/rmap.h&n; *&n; * Architecture dependant parts of the reverse mapping code,&n; * this version should work for most architectures with a&n; * &squot;normal&squot; page table layout.&n; *&n; * We use the struct page of the page table page to find out&n; * the process and full address of a page table entry:&n; * - page-&gt;mapping points to the process&squot; mm_struct&n; * - page-&gt;index has the high bits of the address&n; * - the lower bits of the address are calculated from the&n; *   offset of the page table entry within the page table page&n; */
macro_line|#include &lt;linux/mm.h&gt;
DECL|function|pgtable_add_rmap
r_static
r_inline
r_void
id|pgtable_add_rmap
c_func
(paren
r_struct
id|page
op_star
id|page
comma
r_struct
id|mm_struct
op_star
id|mm
comma
r_int
r_int
id|address
)paren
(brace
macro_line|#ifdef BROKEN_PPC_PTE_ALLOC_ONE
multiline_comment|/* OK, so PPC calls pte_alloc() before mem_map[] is setup ... ;( */
r_extern
r_int
id|mem_init_done
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|mem_init_done
)paren
r_return
suffix:semicolon
macro_line|#endif
id|page-&gt;mapping
op_assign
(paren
r_void
op_star
)paren
id|mm
suffix:semicolon
id|page-&gt;index
op_assign
id|address
op_amp
op_complement
(paren
(paren
id|PTRS_PER_PTE
op_star
id|PAGE_SIZE
)paren
op_minus
l_int|1
)paren
suffix:semicolon
id|inc_page_state
c_func
(paren
id|nr_page_table_pages
)paren
suffix:semicolon
)brace
DECL|function|pgtable_remove_rmap
r_static
r_inline
r_void
id|pgtable_remove_rmap
c_func
(paren
r_struct
id|page
op_star
id|page
)paren
(brace
id|page-&gt;mapping
op_assign
l_int|NULL
suffix:semicolon
id|page-&gt;index
op_assign
l_int|0
suffix:semicolon
id|dec_page_state
c_func
(paren
id|nr_page_table_pages
)paren
suffix:semicolon
)brace
DECL|function|ptep_to_mm
r_static
r_inline
r_struct
id|mm_struct
op_star
id|ptep_to_mm
c_func
(paren
id|pte_t
op_star
id|ptep
)paren
(brace
r_struct
id|page
op_star
id|page
op_assign
id|virt_to_page
c_func
(paren
id|ptep
)paren
suffix:semicolon
r_return
(paren
r_struct
id|mm_struct
op_star
)paren
id|page-&gt;mapping
suffix:semicolon
)brace
DECL|function|ptep_to_address
r_static
r_inline
r_int
r_int
id|ptep_to_address
c_func
(paren
id|pte_t
op_star
id|ptep
)paren
(brace
r_struct
id|page
op_star
id|page
op_assign
id|virt_to_page
c_func
(paren
id|ptep
)paren
suffix:semicolon
r_int
r_int
id|low_bits
suffix:semicolon
id|low_bits
op_assign
(paren
(paren
r_int
r_int
)paren
id|ptep
op_amp
op_complement
id|PAGE_MASK
)paren
op_star
id|PTRS_PER_PTE
suffix:semicolon
r_return
id|page-&gt;index
op_plus
id|low_bits
suffix:semicolon
)brace
macro_line|#endif /* _GENERIC_RMAP_H */
eof
