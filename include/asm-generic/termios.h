multiline_comment|/* termios.h: generic termios/termio user copying/translation&n; */
macro_line|#ifndef _ASM_GENERIC_TERMIOS_H
DECL|macro|_ASM_GENERIC_TERMIOS_H
mdefine_line|#define _ASM_GENERIC_TERMIOS_H
macro_line|#include &lt;asm/uaccess.h&gt;
macro_line|#ifndef __ARCH_TERMIO_GETPUT
multiline_comment|/*&n; * Translate a &quot;termio&quot; structure into a &quot;termios&quot;. Ugh.&n; */
DECL|function|user_termio_to_kernel_termios
r_static
r_inline
r_int
id|user_termio_to_kernel_termios
c_func
(paren
r_struct
id|termios
op_star
id|termios
comma
r_struct
id|termio
id|__user
op_star
id|termio
)paren
(brace
r_int
r_int
id|tmp
suffix:semicolon
r_if
c_cond
(paren
id|get_user
c_func
(paren
id|tmp
comma
op_amp
id|termio-&gt;c_iflag
)paren
OL
l_int|0
)paren
r_goto
id|fault
suffix:semicolon
id|termios-&gt;c_iflag
op_assign
(paren
l_int|0xffff0000
op_amp
id|termios-&gt;c_iflag
)paren
op_or
id|tmp
suffix:semicolon
r_if
c_cond
(paren
id|get_user
c_func
(paren
id|tmp
comma
op_amp
id|termio-&gt;c_oflag
)paren
OL
l_int|0
)paren
r_goto
id|fault
suffix:semicolon
id|termios-&gt;c_oflag
op_assign
(paren
l_int|0xffff0000
op_amp
id|termios-&gt;c_oflag
)paren
op_or
id|tmp
suffix:semicolon
r_if
c_cond
(paren
id|get_user
c_func
(paren
id|tmp
comma
op_amp
id|termio-&gt;c_cflag
)paren
OL
l_int|0
)paren
r_goto
id|fault
suffix:semicolon
id|termios-&gt;c_cflag
op_assign
(paren
l_int|0xffff0000
op_amp
id|termios-&gt;c_cflag
)paren
op_or
id|tmp
suffix:semicolon
r_if
c_cond
(paren
id|get_user
c_func
(paren
id|tmp
comma
op_amp
id|termio-&gt;c_lflag
)paren
OL
l_int|0
)paren
r_goto
id|fault
suffix:semicolon
id|termios-&gt;c_lflag
op_assign
(paren
l_int|0xffff0000
op_amp
id|termios-&gt;c_lflag
)paren
op_or
id|tmp
suffix:semicolon
r_if
c_cond
(paren
id|get_user
c_func
(paren
id|termios-&gt;c_line
comma
op_amp
id|termio-&gt;c_line
)paren
OL
l_int|0
)paren
r_goto
id|fault
suffix:semicolon
r_if
c_cond
(paren
id|copy_from_user
c_func
(paren
id|termios-&gt;c_cc
comma
id|termio-&gt;c_cc
comma
id|NCC
)paren
op_ne
l_int|0
)paren
r_goto
id|fault
suffix:semicolon
r_return
l_int|0
suffix:semicolon
id|fault
suffix:colon
r_return
op_minus
id|EFAULT
suffix:semicolon
)brace
multiline_comment|/*&n; * Translate a &quot;termios&quot; structure into a &quot;termio&quot;. Ugh.&n; */
DECL|function|kernel_termios_to_user_termio
r_static
r_inline
r_int
id|kernel_termios_to_user_termio
c_func
(paren
r_struct
id|termio
id|__user
op_star
id|termio
comma
r_struct
id|termios
op_star
id|termios
)paren
(brace
r_if
c_cond
(paren
id|put_user
c_func
(paren
id|termios-&gt;c_iflag
comma
op_amp
id|termio-&gt;c_iflag
)paren
OL
l_int|0
op_logical_or
id|put_user
c_func
(paren
id|termios-&gt;c_oflag
comma
op_amp
id|termio-&gt;c_oflag
)paren
OL
l_int|0
op_logical_or
id|put_user
c_func
(paren
id|termios-&gt;c_cflag
comma
op_amp
id|termio-&gt;c_cflag
)paren
OL
l_int|0
op_logical_or
id|put_user
c_func
(paren
id|termios-&gt;c_lflag
comma
op_amp
id|termio-&gt;c_lflag
)paren
OL
l_int|0
op_logical_or
id|put_user
c_func
(paren
id|termios-&gt;c_line
comma
op_amp
id|termio-&gt;c_line
)paren
OL
l_int|0
op_logical_or
id|copy_to_user
c_func
(paren
id|termio-&gt;c_cc
comma
id|termios-&gt;c_cc
comma
id|NCC
)paren
op_ne
l_int|0
)paren
r_return
op_minus
id|EFAULT
suffix:semicolon
r_return
l_int|0
suffix:semicolon
)brace
DECL|macro|user_termios_to_kernel_termios
mdefine_line|#define user_termios_to_kernel_termios(k, u) copy_from_user(k, u, sizeof(struct termios))
DECL|macro|kernel_termios_to_user_termios
mdefine_line|#define kernel_termios_to_user_termios(u, k) copy_to_user(u, k, sizeof(struct termios))
macro_line|#endif&t;/* __ARCH_TERMIO_GETPUT */
macro_line|#endif /* _ASM_GENERIC_TERMIOS_H */
eof
