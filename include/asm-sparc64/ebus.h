multiline_comment|/* $Id: ebus.h,v 1.10 2001/03/14 05:00:55 davem Exp $&n; * ebus.h: PCI to Ebus pseudo driver software state.&n; *&n; * Copyright (C) 1997 Eddie C. Dost (ecd@skynet.be)&n; * Copyright (C) 1999 David S. Miller (davem@redhat.com)&n; */
macro_line|#ifndef __SPARC64_EBUS_H
DECL|macro|__SPARC64_EBUS_H
mdefine_line|#define __SPARC64_EBUS_H
macro_line|#include &lt;asm/pbm.h&gt;
macro_line|#include &lt;asm/oplib.h&gt;
DECL|struct|linux_ebus_child
r_struct
id|linux_ebus_child
(brace
DECL|member|next
r_struct
id|linux_ebus_child
op_star
id|next
suffix:semicolon
DECL|member|parent
r_struct
id|linux_ebus_device
op_star
id|parent
suffix:semicolon
DECL|member|bus
r_struct
id|linux_ebus
op_star
id|bus
suffix:semicolon
DECL|member|prom_node
r_int
id|prom_node
suffix:semicolon
DECL|member|prom_name
r_char
id|prom_name
(braket
l_int|64
)braket
suffix:semicolon
DECL|member|resource
r_struct
id|resource
id|resource
(braket
id|PROMREG_MAX
)braket
suffix:semicolon
DECL|member|num_addrs
r_int
id|num_addrs
suffix:semicolon
DECL|member|irqs
r_int
r_int
id|irqs
(braket
id|PROMINTR_MAX
)braket
suffix:semicolon
DECL|member|num_irqs
r_int
id|num_irqs
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|linux_ebus_device
r_struct
id|linux_ebus_device
(brace
DECL|member|next
r_struct
id|linux_ebus_device
op_star
id|next
suffix:semicolon
DECL|member|children
r_struct
id|linux_ebus_child
op_star
id|children
suffix:semicolon
DECL|member|bus
r_struct
id|linux_ebus
op_star
id|bus
suffix:semicolon
DECL|member|prom_node
r_int
id|prom_node
suffix:semicolon
DECL|member|prom_name
r_char
id|prom_name
(braket
l_int|64
)braket
suffix:semicolon
DECL|member|resource
r_struct
id|resource
id|resource
(braket
id|PROMREG_MAX
)braket
suffix:semicolon
DECL|member|num_addrs
r_int
id|num_addrs
suffix:semicolon
DECL|member|irqs
r_int
r_int
id|irqs
(braket
id|PROMINTR_MAX
)braket
suffix:semicolon
DECL|member|num_irqs
r_int
id|num_irqs
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|linux_ebus
r_struct
id|linux_ebus
(brace
DECL|member|next
r_struct
id|linux_ebus
op_star
id|next
suffix:semicolon
DECL|member|devices
r_struct
id|linux_ebus_device
op_star
id|devices
suffix:semicolon
DECL|member|parent
r_struct
id|pci_pbm_info
op_star
id|parent
suffix:semicolon
DECL|member|self
r_struct
id|pci_dev
op_star
id|self
suffix:semicolon
DECL|member|index
r_int
id|index
suffix:semicolon
DECL|member|is_rio
r_int
id|is_rio
suffix:semicolon
DECL|member|prom_node
r_int
id|prom_node
suffix:semicolon
DECL|member|prom_name
r_char
id|prom_name
(braket
l_int|64
)braket
suffix:semicolon
DECL|member|ebus_ranges
r_struct
id|linux_prom_ebus_ranges
id|ebus_ranges
(braket
id|PROMREG_MAX
)braket
suffix:semicolon
DECL|member|num_ebus_ranges
r_int
id|num_ebus_ranges
suffix:semicolon
DECL|member|ebus_intmap
r_struct
id|linux_prom_ebus_intmap
id|ebus_intmap
(braket
id|PROMREG_MAX
)braket
suffix:semicolon
DECL|member|num_ebus_intmap
r_int
id|num_ebus_intmap
suffix:semicolon
DECL|member|ebus_intmask
r_struct
id|linux_prom_ebus_intmask
id|ebus_intmask
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|ebus_dma_info
r_struct
id|ebus_dma_info
(brace
DECL|member|lock
id|spinlock_t
id|lock
suffix:semicolon
DECL|member|regs
r_void
id|__iomem
op_star
id|regs
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
DECL|macro|EBUS_DMA_FLAG_USE_EBDMA_HANDLER
mdefine_line|#define EBUS_DMA_FLAG_USE_EBDMA_HANDLER&t;&t;0x00000001
DECL|macro|EBUS_DMA_FLAG_TCI_DISABLE
mdefine_line|#define EBUS_DMA_FLAG_TCI_DISABLE&t;&t;0x00000002
multiline_comment|/* These are only valid is EBUS_DMA_FLAG_USE_EBDMA_HANDLER is&n;&t; * set.&n;&t; */
DECL|member|callback
r_void
(paren
op_star
id|callback
)paren
(paren
r_struct
id|ebus_dma_info
op_star
id|p
comma
r_int
id|event
comma
r_void
op_star
id|cookie
)paren
suffix:semicolon
DECL|member|client_cookie
r_void
op_star
id|client_cookie
suffix:semicolon
DECL|member|irq
r_int
r_int
id|irq
suffix:semicolon
DECL|macro|EBUS_DMA_EVENT_ERROR
mdefine_line|#define EBUS_DMA_EVENT_ERROR&t;1
DECL|macro|EBUS_DMA_EVENT_DMA
mdefine_line|#define EBUS_DMA_EVENT_DMA&t;2
DECL|macro|EBUS_DMA_EVENT_DEVICE
mdefine_line|#define EBUS_DMA_EVENT_DEVICE&t;4
DECL|member|name
r_int
r_char
id|name
(braket
l_int|64
)braket
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_int
id|ebus_dma_register
c_func
(paren
r_struct
id|ebus_dma_info
op_star
id|p
)paren
suffix:semicolon
r_extern
r_int
id|ebus_dma_irq_enable
c_func
(paren
r_struct
id|ebus_dma_info
op_star
id|p
comma
r_int
id|on
)paren
suffix:semicolon
r_extern
r_void
id|ebus_dma_unregister
c_func
(paren
r_struct
id|ebus_dma_info
op_star
id|p
)paren
suffix:semicolon
r_extern
r_int
id|ebus_dma_request
c_func
(paren
r_struct
id|ebus_dma_info
op_star
id|p
comma
id|dma_addr_t
id|bus_addr
comma
r_int
id|len
)paren
suffix:semicolon
r_extern
r_void
id|ebus_dma_prepare
c_func
(paren
r_struct
id|ebus_dma_info
op_star
id|p
comma
r_int
id|write
)paren
suffix:semicolon
r_extern
r_int
r_int
id|ebus_dma_residue
c_func
(paren
r_struct
id|ebus_dma_info
op_star
id|p
)paren
suffix:semicolon
r_extern
r_void
id|ebus_dma_enable
c_func
(paren
r_struct
id|ebus_dma_info
op_star
id|p
comma
r_int
id|on
)paren
suffix:semicolon
r_extern
r_struct
id|linux_ebus
op_star
id|ebus_chain
suffix:semicolon
r_extern
r_void
id|ebus_init
c_func
(paren
r_void
)paren
suffix:semicolon
DECL|macro|for_each_ebus
mdefine_line|#define for_each_ebus(bus)&t;&t;&t;&t;&t;&t;&bslash;&n;        for((bus) = ebus_chain; (bus); (bus) = (bus)-&gt;next)
DECL|macro|for_each_ebusdev
mdefine_line|#define for_each_ebusdev(dev, bus)&t;&t;&t;&t;&t;&bslash;&n;        for((dev) = (bus)-&gt;devices; (dev); (dev) = (dev)-&gt;next)
DECL|macro|for_each_edevchild
mdefine_line|#define for_each_edevchild(dev, child)&t;&t;&t;&t;&t;&bslash;&n;        for((child) = (dev)-&gt;children; (child); (child) = (child)-&gt;next)
macro_line|#endif /* !(__SPARC64_EBUS_H) */
eof
