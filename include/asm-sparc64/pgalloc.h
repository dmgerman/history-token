multiline_comment|/* $Id: pgalloc.h,v 1.30 2001/12/21 04:56:17 davem Exp $ */
macro_line|#ifndef _SPARC64_PGALLOC_H
DECL|macro|_SPARC64_PGALLOC_H
mdefine_line|#define _SPARC64_PGALLOC_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/kernel.h&gt;
macro_line|#include &lt;linux/sched.h&gt;
macro_line|#include &lt;linux/mm.h&gt;
macro_line|#include &lt;asm/spitfire.h&gt;
macro_line|#include &lt;asm/cpudata.h&gt;
macro_line|#include &lt;asm/cacheflush.h&gt;
multiline_comment|/* Page table allocation/freeing. */
macro_line|#ifdef CONFIG_SMP
multiline_comment|/* Sliiiicck */
DECL|macro|pgt_quicklists
mdefine_line|#define pgt_quicklists&t;local_cpu_data()
macro_line|#else
DECL|struct|pgtable_cache_struct
r_extern
r_struct
id|pgtable_cache_struct
(brace
DECL|member|pgd_cache
r_int
r_int
op_star
id|pgd_cache
suffix:semicolon
DECL|member|pte_cache
r_int
r_int
op_star
id|pte_cache
(braket
l_int|2
)braket
suffix:semicolon
DECL|member|pgcache_size
r_int
r_int
id|pgcache_size
suffix:semicolon
)brace
id|pgt_quicklists
suffix:semicolon
macro_line|#endif
DECL|macro|pgd_quicklist
mdefine_line|#define pgd_quicklist&t;&t;(pgt_quicklists.pgd_cache)
DECL|macro|pmd_quicklist
mdefine_line|#define pmd_quicklist&t;&t;((unsigned long *)0)
DECL|macro|pte_quicklist
mdefine_line|#define pte_quicklist&t;&t;(pgt_quicklists.pte_cache)
DECL|macro|pgtable_cache_size
mdefine_line|#define pgtable_cache_size&t;(pgt_quicklists.pgcache_size)
DECL|function|free_pgd_fast
r_static
id|__inline__
r_void
id|free_pgd_fast
c_func
(paren
id|pgd_t
op_star
id|pgd
)paren
(brace
id|preempt_disable
c_func
(paren
)paren
suffix:semicolon
op_star
(paren
r_int
r_int
op_star
)paren
id|pgd
op_assign
(paren
r_int
r_int
)paren
id|pgd_quicklist
suffix:semicolon
id|pgd_quicklist
op_assign
(paren
r_int
r_int
op_star
)paren
id|pgd
suffix:semicolon
id|pgtable_cache_size
op_increment
suffix:semicolon
id|preempt_enable
c_func
(paren
)paren
suffix:semicolon
)brace
DECL|function|get_pgd_fast
r_static
id|__inline__
id|pgd_t
op_star
id|get_pgd_fast
c_func
(paren
r_void
)paren
(brace
r_int
r_int
op_star
id|ret
suffix:semicolon
id|preempt_disable
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
(paren
id|ret
op_assign
id|pgd_quicklist
)paren
op_ne
l_int|NULL
)paren
(brace
id|pgd_quicklist
op_assign
(paren
r_int
r_int
op_star
)paren
(paren
op_star
id|ret
)paren
suffix:semicolon
id|ret
(braket
l_int|0
)braket
op_assign
l_int|0
suffix:semicolon
id|pgtable_cache_size
op_decrement
suffix:semicolon
id|preempt_enable
c_func
(paren
)paren
suffix:semicolon
)brace
r_else
(brace
id|preempt_enable
c_func
(paren
)paren
suffix:semicolon
id|ret
op_assign
(paren
r_int
r_int
op_star
)paren
id|__get_free_page
c_func
(paren
id|GFP_KERNEL
op_or
id|__GFP_REPEAT
)paren
suffix:semicolon
r_if
c_cond
(paren
id|ret
)paren
(brace
id|memset
c_func
(paren
id|ret
comma
l_int|0
comma
id|PAGE_SIZE
)paren
suffix:semicolon
)brace
)brace
r_return
(paren
id|pgd_t
op_star
)paren
id|ret
suffix:semicolon
)brace
DECL|function|free_pgd_slow
r_static
id|__inline__
r_void
id|free_pgd_slow
c_func
(paren
id|pgd_t
op_star
id|pgd
)paren
(brace
id|free_page
c_func
(paren
(paren
r_int
r_int
)paren
id|pgd
)paren
suffix:semicolon
)brace
macro_line|#ifdef DCACHE_ALIASING_POSSIBLE
DECL|macro|VPTE_COLOR
mdefine_line|#define VPTE_COLOR(address)&t;&t;(((address) &gt;&gt; (PAGE_SHIFT + 10)) &amp; 1UL)
DECL|macro|DCACHE_COLOR
mdefine_line|#define DCACHE_COLOR(address)&t;&t;(((address) &gt;&gt; PAGE_SHIFT) &amp; 1UL)
macro_line|#else
DECL|macro|VPTE_COLOR
mdefine_line|#define VPTE_COLOR(address)&t;&t;0
DECL|macro|DCACHE_COLOR
mdefine_line|#define DCACHE_COLOR(address)&t;&t;0
macro_line|#endif
DECL|macro|pud_populate
mdefine_line|#define pud_populate(MM, PUD, PMD)&t;pud_set(PUD, PMD)
DECL|function|pmd_alloc_one_fast
r_static
id|__inline__
id|pmd_t
op_star
id|pmd_alloc_one_fast
c_func
(paren
r_struct
id|mm_struct
op_star
id|mm
comma
r_int
r_int
id|address
)paren
(brace
r_int
r_int
op_star
id|ret
suffix:semicolon
r_int
id|color
op_assign
l_int|0
suffix:semicolon
id|preempt_disable
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|pte_quicklist
(braket
id|color
)braket
op_eq
l_int|NULL
)paren
id|color
op_assign
l_int|1
suffix:semicolon
r_if
c_cond
(paren
(paren
id|ret
op_assign
(paren
r_int
r_int
op_star
)paren
id|pte_quicklist
(braket
id|color
)braket
)paren
op_ne
l_int|NULL
)paren
(brace
id|pte_quicklist
(braket
id|color
)braket
op_assign
(paren
r_int
r_int
op_star
)paren
(paren
op_star
id|ret
)paren
suffix:semicolon
id|ret
(braket
l_int|0
)braket
op_assign
l_int|0
suffix:semicolon
id|pgtable_cache_size
op_decrement
suffix:semicolon
)brace
id|preempt_enable
c_func
(paren
)paren
suffix:semicolon
r_return
(paren
id|pmd_t
op_star
)paren
id|ret
suffix:semicolon
)brace
DECL|function|pmd_alloc_one
r_static
id|__inline__
id|pmd_t
op_star
id|pmd_alloc_one
c_func
(paren
r_struct
id|mm_struct
op_star
id|mm
comma
r_int
r_int
id|address
)paren
(brace
id|pmd_t
op_star
id|pmd
suffix:semicolon
id|pmd
op_assign
id|pmd_alloc_one_fast
c_func
(paren
id|mm
comma
id|address
)paren
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|pmd
)paren
(brace
id|pmd
op_assign
(paren
id|pmd_t
op_star
)paren
id|__get_free_page
c_func
(paren
id|GFP_KERNEL
op_or
id|__GFP_REPEAT
)paren
suffix:semicolon
r_if
c_cond
(paren
id|pmd
)paren
id|memset
c_func
(paren
id|pmd
comma
l_int|0
comma
id|PAGE_SIZE
)paren
suffix:semicolon
)brace
r_return
id|pmd
suffix:semicolon
)brace
DECL|function|free_pmd_fast
r_static
id|__inline__
r_void
id|free_pmd_fast
c_func
(paren
id|pmd_t
op_star
id|pmd
)paren
(brace
r_int
r_int
id|color
op_assign
id|DCACHE_COLOR
c_func
(paren
(paren
r_int
r_int
)paren
id|pmd
)paren
suffix:semicolon
id|preempt_disable
c_func
(paren
)paren
suffix:semicolon
op_star
(paren
r_int
r_int
op_star
)paren
id|pmd
op_assign
(paren
r_int
r_int
)paren
id|pte_quicklist
(braket
id|color
)braket
suffix:semicolon
id|pte_quicklist
(braket
id|color
)braket
op_assign
(paren
r_int
r_int
op_star
)paren
id|pmd
suffix:semicolon
id|pgtable_cache_size
op_increment
suffix:semicolon
id|preempt_enable
c_func
(paren
)paren
suffix:semicolon
)brace
DECL|function|free_pmd_slow
r_static
id|__inline__
r_void
id|free_pmd_slow
c_func
(paren
id|pmd_t
op_star
id|pmd
)paren
(brace
id|free_page
c_func
(paren
(paren
r_int
r_int
)paren
id|pmd
)paren
suffix:semicolon
)brace
DECL|macro|pmd_populate_kernel
mdefine_line|#define pmd_populate_kernel(MM, PMD, PTE)&t;pmd_set(PMD, PTE)
DECL|macro|pmd_populate
mdefine_line|#define pmd_populate(MM,PMD,PTE_PAGE)&t;&t;&bslash;&n;&t;pmd_populate_kernel(MM,PMD,page_address(PTE_PAGE))
r_extern
id|pte_t
op_star
id|__pte_alloc_one_kernel
c_func
(paren
r_struct
id|mm_struct
op_star
id|mm
comma
r_int
r_int
id|address
)paren
suffix:semicolon
DECL|function|pte_alloc_one_kernel
r_static
r_inline
id|pte_t
op_star
id|pte_alloc_one_kernel
c_func
(paren
r_struct
id|mm_struct
op_star
id|mm
comma
r_int
r_int
id|address
)paren
(brace
r_return
id|__pte_alloc_one_kernel
c_func
(paren
id|mm
comma
id|address
)paren
suffix:semicolon
)brace
r_static
r_inline
r_struct
id|page
op_star
DECL|function|pte_alloc_one
id|pte_alloc_one
c_func
(paren
r_struct
id|mm_struct
op_star
id|mm
comma
r_int
r_int
id|addr
)paren
(brace
id|pte_t
op_star
id|pte
op_assign
id|__pte_alloc_one_kernel
c_func
(paren
id|mm
comma
id|addr
)paren
suffix:semicolon
r_if
c_cond
(paren
id|pte
)paren
r_return
id|virt_to_page
c_func
(paren
id|pte
)paren
suffix:semicolon
r_return
l_int|NULL
suffix:semicolon
)brace
DECL|function|pte_alloc_one_fast
r_static
id|__inline__
id|pte_t
op_star
id|pte_alloc_one_fast
c_func
(paren
r_struct
id|mm_struct
op_star
id|mm
comma
r_int
r_int
id|address
)paren
(brace
r_int
r_int
id|color
op_assign
id|VPTE_COLOR
c_func
(paren
id|address
)paren
suffix:semicolon
r_int
r_int
op_star
id|ret
suffix:semicolon
id|preempt_disable
c_func
(paren
)paren
suffix:semicolon
r_if
c_cond
(paren
(paren
id|ret
op_assign
(paren
r_int
r_int
op_star
)paren
id|pte_quicklist
(braket
id|color
)braket
)paren
op_ne
l_int|NULL
)paren
(brace
id|pte_quicklist
(braket
id|color
)braket
op_assign
(paren
r_int
r_int
op_star
)paren
(paren
op_star
id|ret
)paren
suffix:semicolon
id|ret
(braket
l_int|0
)braket
op_assign
l_int|0
suffix:semicolon
id|pgtable_cache_size
op_decrement
suffix:semicolon
)brace
id|preempt_enable
c_func
(paren
)paren
suffix:semicolon
r_return
(paren
id|pte_t
op_star
)paren
id|ret
suffix:semicolon
)brace
DECL|function|free_pte_fast
r_static
id|__inline__
r_void
id|free_pte_fast
c_func
(paren
id|pte_t
op_star
id|pte
)paren
(brace
r_int
r_int
id|color
op_assign
id|DCACHE_COLOR
c_func
(paren
(paren
r_int
r_int
)paren
id|pte
)paren
suffix:semicolon
id|preempt_disable
c_func
(paren
)paren
suffix:semicolon
op_star
(paren
r_int
r_int
op_star
)paren
id|pte
op_assign
(paren
r_int
r_int
)paren
id|pte_quicklist
(braket
id|color
)braket
suffix:semicolon
id|pte_quicklist
(braket
id|color
)braket
op_assign
(paren
r_int
r_int
op_star
)paren
id|pte
suffix:semicolon
id|pgtable_cache_size
op_increment
suffix:semicolon
id|preempt_enable
c_func
(paren
)paren
suffix:semicolon
)brace
DECL|function|free_pte_slow
r_static
id|__inline__
r_void
id|free_pte_slow
c_func
(paren
id|pte_t
op_star
id|pte
)paren
(brace
id|free_page
c_func
(paren
(paren
r_int
r_int
)paren
id|pte
)paren
suffix:semicolon
)brace
DECL|function|pte_free_kernel
r_static
r_inline
r_void
id|pte_free_kernel
c_func
(paren
id|pte_t
op_star
id|pte
)paren
(brace
id|free_pte_fast
c_func
(paren
id|pte
)paren
suffix:semicolon
)brace
DECL|function|pte_free
r_static
r_inline
r_void
id|pte_free
c_func
(paren
r_struct
id|page
op_star
id|ptepage
)paren
(brace
id|free_pte_fast
c_func
(paren
id|page_address
c_func
(paren
id|ptepage
)paren
)paren
suffix:semicolon
)brace
DECL|macro|pmd_free
mdefine_line|#define pmd_free(pmd)&t;&t;free_pmd_fast(pmd)
DECL|macro|pgd_free
mdefine_line|#define pgd_free(pgd)&t;&t;free_pgd_fast(pgd)
DECL|macro|pgd_alloc
mdefine_line|#define pgd_alloc(mm)&t;&t;get_pgd_fast()
macro_line|#endif /* _SPARC64_PGALLOC_H */
eof
