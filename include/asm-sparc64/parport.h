multiline_comment|/* $Id: parport.h,v 1.11 2001/05/11 07:54:24 davem Exp $&n; * parport.h: sparc64 specific parport initialization and dma.&n; *&n; * Copyright (C) 1999  Eddie C. Dost  (ecd@skynet.be)&n; */
macro_line|#ifndef _ASM_SPARC64_PARPORT_H
DECL|macro|_ASM_SPARC64_PARPORT_H
mdefine_line|#define _ASM_SPARC64_PARPORT_H 1
macro_line|#include &lt;asm/ebus.h&gt;
macro_line|#include &lt;asm/isa.h&gt;
macro_line|#include &lt;asm/ns87303.h&gt;
DECL|macro|PARPORT_PC_MAX_PORTS
mdefine_line|#define PARPORT_PC_MAX_PORTS&t;PARPORT_MAX
DECL|struct|sparc_ebus_info
r_static
r_struct
id|sparc_ebus_info
(brace
DECL|member|info
r_struct
id|ebus_dma_info
id|info
suffix:semicolon
DECL|member|addr
r_int
r_int
id|addr
suffix:semicolon
DECL|member|count
r_int
r_int
id|count
suffix:semicolon
DECL|variable|sparc_ebus_dmas
)brace
id|sparc_ebus_dmas
(braket
id|PARPORT_PC_MAX_PORTS
)braket
suffix:semicolon
DECL|function|enable_dma
r_static
id|__inline__
r_void
id|enable_dma
c_func
(paren
r_int
r_int
id|dmanr
)paren
(brace
r_if
c_cond
(paren
id|ebus_dma_request
c_func
(paren
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
dot
id|info
comma
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
dot
id|addr
comma
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
dot
id|count
)paren
)paren
id|BUG
c_func
(paren
)paren
suffix:semicolon
id|ebus_dma_enable
c_func
(paren
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
dot
id|info
comma
l_int|1
)paren
suffix:semicolon
)brace
DECL|function|disable_dma
r_static
id|__inline__
r_void
id|disable_dma
c_func
(paren
r_int
r_int
id|dmanr
)paren
(brace
id|ebus_dma_enable
c_func
(paren
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
dot
id|info
comma
l_int|0
)paren
suffix:semicolon
)brace
DECL|function|clear_dma_ff
r_static
id|__inline__
r_void
id|clear_dma_ff
c_func
(paren
r_int
r_int
id|dmanr
)paren
(brace
multiline_comment|/* nothing */
)brace
DECL|function|set_dma_mode
r_static
id|__inline__
r_void
id|set_dma_mode
c_func
(paren
r_int
r_int
id|dmanr
comma
r_char
id|mode
)paren
(brace
id|ebus_dma_prepare
c_func
(paren
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
dot
id|info
comma
(paren
id|mode
op_ne
id|DMA_MODE_WRITE
)paren
)paren
suffix:semicolon
)brace
DECL|function|set_dma_addr
r_static
id|__inline__
r_void
id|set_dma_addr
c_func
(paren
r_int
r_int
id|dmanr
comma
r_int
r_int
id|addr
)paren
(brace
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
dot
id|addr
op_assign
id|addr
suffix:semicolon
)brace
DECL|function|set_dma_count
r_static
id|__inline__
r_void
id|set_dma_count
c_func
(paren
r_int
r_int
id|dmanr
comma
r_int
r_int
id|count
)paren
(brace
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
dot
id|count
op_assign
id|count
suffix:semicolon
)brace
DECL|function|get_dma_residue
r_static
id|__inline__
r_int
r_int
id|get_dma_residue
c_func
(paren
r_int
r_int
id|dmanr
)paren
(brace
r_return
id|ebus_dma_residue
c_func
(paren
op_amp
id|sparc_ebus_dmas
(braket
id|dmanr
)braket
dot
id|info
)paren
suffix:semicolon
)brace
DECL|function|ebus_ecpp_p
r_static
r_int
id|ebus_ecpp_p
c_func
(paren
r_struct
id|linux_ebus_device
op_star
id|edev
)paren
(brace
r_if
c_cond
(paren
op_logical_neg
id|strcmp
c_func
(paren
id|edev-&gt;prom_name
comma
l_string|&quot;ecpp&quot;
)paren
)paren
r_return
l_int|1
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|strcmp
c_func
(paren
id|edev-&gt;prom_name
comma
l_string|&quot;parallel&quot;
)paren
)paren
(brace
r_char
id|compat
(braket
l_int|19
)braket
suffix:semicolon
id|prom_getstring
c_func
(paren
id|edev-&gt;prom_node
comma
l_string|&quot;compatible&quot;
comma
id|compat
comma
r_sizeof
(paren
id|compat
)paren
)paren
suffix:semicolon
id|compat
(braket
l_int|18
)braket
op_assign
l_char|&squot;&bslash;0&squot;
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|strcmp
c_func
(paren
id|compat
comma
l_string|&quot;ecpp&quot;
)paren
)paren
r_return
l_int|1
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|strcmp
c_func
(paren
id|compat
comma
l_string|&quot;ns87317-ecpp&quot;
)paren
op_logical_and
op_logical_neg
id|strcmp
c_func
(paren
id|compat
op_plus
l_int|13
comma
l_string|&quot;ecpp&quot;
)paren
)paren
r_return
l_int|1
suffix:semicolon
)brace
r_return
l_int|0
suffix:semicolon
)brace
DECL|function|parport_isa_probe
r_static
r_int
id|parport_isa_probe
c_func
(paren
r_int
id|count
)paren
(brace
r_struct
id|sparc_isa_bridge
op_star
id|isa_br
suffix:semicolon
r_struct
id|sparc_isa_device
op_star
id|isa_dev
suffix:semicolon
id|for_each_isa
c_func
(paren
id|isa_br
)paren
(brace
id|for_each_isadev
c_func
(paren
id|isa_dev
comma
id|isa_br
)paren
(brace
r_struct
id|sparc_isa_device
op_star
id|child
suffix:semicolon
r_int
r_int
id|base
suffix:semicolon
r_if
c_cond
(paren
id|strcmp
c_func
(paren
id|isa_dev-&gt;prom_name
comma
l_string|&quot;dma&quot;
)paren
)paren
r_continue
suffix:semicolon
id|child
op_assign
id|isa_dev-&gt;child
suffix:semicolon
r_while
c_loop
(paren
id|child
)paren
(brace
r_if
c_cond
(paren
op_logical_neg
id|strcmp
c_func
(paren
id|child-&gt;prom_name
comma
l_string|&quot;parallel&quot;
)paren
)paren
r_break
suffix:semicolon
id|child
op_assign
id|child-&gt;next
suffix:semicolon
)brace
r_if
c_cond
(paren
op_logical_neg
id|child
)paren
r_continue
suffix:semicolon
id|base
op_assign
id|child-&gt;resource.start
suffix:semicolon
multiline_comment|/* No DMA, see commentary in&n;&t;&t;&t; * asm-sparc64/floppy.h:isa_floppy_init()&n;&t;&t;&t; */
r_if
c_cond
(paren
id|parport_pc_probe_port
c_func
(paren
id|base
comma
id|base
op_plus
l_int|0x400
comma
id|child-&gt;irq
comma
id|PARPORT_DMA_NOFIFO
comma
id|child-&gt;bus-&gt;self
)paren
)paren
id|count
op_increment
suffix:semicolon
)brace
)brace
r_return
id|count
suffix:semicolon
)brace
DECL|function|parport_pc_find_nonpci_ports
r_static
r_int
id|parport_pc_find_nonpci_ports
(paren
r_int
id|autoirq
comma
r_int
id|autodma
)paren
(brace
r_struct
id|linux_ebus
op_star
id|ebus
suffix:semicolon
r_struct
id|linux_ebus_device
op_star
id|edev
suffix:semicolon
r_int
id|count
op_assign
l_int|0
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|pci_present
c_func
(paren
)paren
)paren
r_return
l_int|0
suffix:semicolon
id|for_each_ebus
c_func
(paren
id|ebus
)paren
(brace
id|for_each_ebusdev
c_func
(paren
id|edev
comma
id|ebus
)paren
(brace
r_if
c_cond
(paren
id|ebus_ecpp_p
c_func
(paren
id|edev
)paren
)paren
(brace
r_int
r_int
id|base
op_assign
id|edev-&gt;resource
(braket
l_int|0
)braket
dot
id|start
suffix:semicolon
r_int
r_int
id|config
op_assign
id|edev-&gt;resource
(braket
l_int|1
)braket
dot
id|start
suffix:semicolon
id|spin_lock_init
c_func
(paren
op_amp
id|sparc_ebus_dmas
(braket
id|count
)braket
dot
id|info.lock
)paren
suffix:semicolon
id|sparc_ebus_dmas
(braket
id|count
)braket
dot
id|info.regs
op_assign
id|edev-&gt;resource
(braket
l_int|2
)braket
dot
id|start
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|sparc_ebus_dmas
(braket
id|count
)braket
dot
id|info.regs
)paren
r_continue
suffix:semicolon
id|sparc_ebus_dmas
(braket
id|count
)braket
dot
id|info.flags
op_assign
l_int|0
suffix:semicolon
id|sparc_ebus_dmas
(braket
id|count
)braket
dot
id|info.callback
op_assign
l_int|NULL
suffix:semicolon
id|sparc_ebus_dmas
(braket
id|count
)braket
dot
id|info.client_cookie
op_assign
l_int|NULL
suffix:semicolon
id|sparc_ebus_dmas
(braket
id|count
)braket
dot
id|info.irq
op_assign
l_int|0xdeadbeef
suffix:semicolon
id|strcpy
c_func
(paren
id|sparc_ebus_dmas
(braket
id|count
)braket
dot
id|info.name
comma
l_string|&quot;parport&quot;
)paren
suffix:semicolon
r_if
c_cond
(paren
id|ebus_dma_register
c_func
(paren
op_amp
id|sparc_ebus_dmas
(braket
id|count
)braket
dot
id|info
)paren
)paren
r_continue
suffix:semicolon
id|ebus_dma_irq_enable
c_func
(paren
op_amp
id|sparc_ebus_dmas
(braket
id|count
)braket
dot
id|info
comma
l_int|1
)paren
suffix:semicolon
multiline_comment|/* Configure IRQ to Push Pull, Level Low */
multiline_comment|/* Enable ECP, set bit 2 of the CTR first */
id|outb
c_func
(paren
l_int|0x04
comma
id|base
op_plus
l_int|0x02
)paren
suffix:semicolon
id|ns87303_modify
c_func
(paren
id|config
comma
id|PCR
comma
id|PCR_EPP_ENABLE
op_or
id|PCR_IRQ_ODRAIN
comma
id|PCR_ECP_ENABLE
op_or
id|PCR_ECP_CLK_ENA
op_or
id|PCR_IRQ_POLAR
)paren
suffix:semicolon
multiline_comment|/* CTR bit 5 controls direction of port */
id|ns87303_modify
c_func
(paren
id|config
comma
id|PTR
comma
l_int|0
comma
id|PTR_LPT_REG_DIR
)paren
suffix:semicolon
r_if
c_cond
(paren
id|parport_pc_probe_port
c_func
(paren
id|base
comma
id|base
op_plus
l_int|0x400
comma
id|edev-&gt;irqs
(braket
l_int|0
)braket
comma
id|count
comma
id|ebus-&gt;self
)paren
)paren
id|count
op_increment
suffix:semicolon
)brace
)brace
)brace
id|count
op_assign
id|parport_isa_probe
c_func
(paren
id|count
)paren
suffix:semicolon
r_return
id|count
suffix:semicolon
)brace
macro_line|#endif /* !(_ASM_SPARC64_PARPORT_H */
eof
