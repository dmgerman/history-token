multiline_comment|/*&n; * include/asm-sh/cpu-sh4/cacheflush.h&n; *&n; * Copyright (C) 1999 Niibe Yutaka&n; * Copyright (C) 2003 Paul Mundt&n; *&n; * This file is subject to the terms and conditions of the GNU General Public&n; * License.  See the file &quot;COPYING&quot; in the main directory of this archive&n; * for more details.&n; */
macro_line|#ifndef __ASM_CPU_SH4_CACHEFLUSH_H
DECL|macro|__ASM_CPU_SH4_CACHEFLUSH_H
mdefine_line|#define __ASM_CPU_SH4_CACHEFLUSH_H
multiline_comment|/*&n; *  Caches are broken on SH-4 (unless we use write-through&n; *  caching; in which case they&squot;re only semi-broken),&n; *  so we need them.&n; */
multiline_comment|/* Page is 4K, OC size is 16K, there are four lines. */
DECL|macro|CACHE_ALIAS
mdefine_line|#define CACHE_ALIAS 0x00003000
r_struct
id|page
suffix:semicolon
r_struct
id|mm_struct
suffix:semicolon
r_struct
id|vm_area_struct
suffix:semicolon
r_extern
r_void
id|flush_cache_all
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|flush_cache_mm
c_func
(paren
r_struct
id|mm_struct
op_star
id|mm
)paren
suffix:semicolon
r_extern
r_void
id|flush_cache_range
c_func
(paren
r_struct
id|vm_area_struct
op_star
id|vma
comma
r_int
r_int
id|start
comma
r_int
r_int
id|end
)paren
suffix:semicolon
r_extern
r_void
id|flush_cache_page
c_func
(paren
r_struct
id|vm_area_struct
op_star
id|vma
comma
r_int
r_int
id|addr
comma
r_int
r_int
id|pfn
)paren
suffix:semicolon
r_extern
r_void
id|flush_dcache_page
c_func
(paren
r_struct
id|page
op_star
id|pg
)paren
suffix:semicolon
DECL|macro|flush_dcache_mmap_lock
mdefine_line|#define flush_dcache_mmap_lock(mapping)&t;&t;do { } while (0)
DECL|macro|flush_dcache_mmap_unlock
mdefine_line|#define flush_dcache_mmap_unlock(mapping)&t;do { } while (0)
r_extern
r_void
id|flush_icache_range
c_func
(paren
r_int
r_int
id|start
comma
r_int
r_int
id|end
)paren
suffix:semicolon
r_extern
r_void
id|flush_cache_sigtramp
c_func
(paren
r_int
r_int
id|addr
)paren
suffix:semicolon
r_extern
r_void
id|flush_icache_user_range
c_func
(paren
r_struct
id|vm_area_struct
op_star
id|vma
comma
r_struct
id|page
op_star
id|page
comma
r_int
r_int
id|addr
comma
r_int
id|len
)paren
suffix:semicolon
DECL|macro|flush_icache_page
mdefine_line|#define flush_icache_page(vma,pg)&t;&t;do { } while (0)
multiline_comment|/* Initialization of P3 area for copy_user_page */
r_extern
r_void
id|p3_cache_init
c_func
(paren
r_void
)paren
suffix:semicolon
DECL|macro|PG_mapped
mdefine_line|#define PG_mapped&t;PG_arch_1
multiline_comment|/* We provide our own get_unmapped_area to avoid cache alias issue */
DECL|macro|HAVE_ARCH_UNMAPPED_AREA
mdefine_line|#define HAVE_ARCH_UNMAPPED_AREA
macro_line|#ifdef CONFIG_MMU
r_extern
r_int
id|remap_area_pages
c_func
(paren
r_int
r_int
id|addr
comma
r_int
r_int
id|phys_addr
comma
r_int
r_int
id|size
comma
r_int
r_int
id|flags
)paren
suffix:semicolon
macro_line|#else /* CONFIG_MMU */
DECL|function|remap_area_pages
r_static
r_inline
r_int
id|remap_area_pages
c_func
(paren
r_int
r_int
id|addr
comma
r_int
r_int
id|phys_addr
comma
r_int
r_int
id|size
comma
r_int
r_int
id|flags
)paren
(brace
r_return
l_int|0
suffix:semicolon
)brace
macro_line|#endif /* CONFIG_MMU */
macro_line|#endif /* __ASM_CPU_SH4_CACHEFLUSH_H */
eof
