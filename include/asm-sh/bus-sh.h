multiline_comment|/*&n; * include/asm-sh/bus-sh.h&n; *&n; * Copyright (C) 2004 Paul Mundt&n; *&n; * This file is subject to the terms and conditions of the GNU General Public&n; * License.  See the file &quot;COPYING&quot; in the main directory of this archive&n; * for more details.&n; */
macro_line|#ifndef __ASM_SH_BUS_SH_H
DECL|macro|__ASM_SH_BUS_SH_H
mdefine_line|#define __ASM_SH_BUS_SH_H
r_extern
r_struct
id|bus_type
id|sh_bus_types
(braket
)braket
suffix:semicolon
DECL|struct|sh_dev
r_struct
id|sh_dev
(brace
DECL|member|dev
r_struct
id|device
id|dev
suffix:semicolon
DECL|member|name
r_char
op_star
id|name
suffix:semicolon
DECL|member|dev_id
r_int
r_int
id|dev_id
suffix:semicolon
DECL|member|bus_id
r_int
r_int
id|bus_id
suffix:semicolon
DECL|member|res
r_struct
id|resource
id|res
suffix:semicolon
DECL|member|mapbase
r_void
op_star
id|mapbase
suffix:semicolon
DECL|member|irq
r_int
r_int
id|irq
(braket
l_int|6
)braket
suffix:semicolon
DECL|member|dma_mask
id|u64
op_star
id|dma_mask
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|to_sh_dev
mdefine_line|#define to_sh_dev(d)&t;container_of((d), struct sh_dev, dev)
DECL|macro|sh_get_drvdata
mdefine_line|#define sh_get_drvdata(d)&t;dev_get_drvdata(&amp;(d)-&gt;dev)
DECL|macro|sh_set_drvdata
mdefine_line|#define sh_set_drvdata(d,p)&t;dev_set_drvdata(&amp;(d)-&gt;dev, (p))
DECL|struct|sh_driver
r_struct
id|sh_driver
(brace
DECL|member|drv
r_struct
id|device_driver
id|drv
suffix:semicolon
DECL|member|dev_id
r_int
r_int
id|dev_id
suffix:semicolon
DECL|member|bus_id
r_int
r_int
id|bus_id
suffix:semicolon
DECL|member|probe
r_int
(paren
op_star
id|probe
)paren
(paren
r_struct
id|sh_dev
op_star
)paren
suffix:semicolon
DECL|member|remove
r_int
(paren
op_star
id|remove
)paren
(paren
r_struct
id|sh_dev
op_star
)paren
suffix:semicolon
DECL|member|suspend
r_int
(paren
op_star
id|suspend
)paren
(paren
r_struct
id|sh_dev
op_star
comma
id|u32
)paren
suffix:semicolon
DECL|member|resume
r_int
(paren
op_star
id|resume
)paren
(paren
r_struct
id|sh_dev
op_star
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|to_sh_driver
mdefine_line|#define to_sh_driver(d)&t;container_of((d), struct sh_driver, drv)
DECL|macro|sh_name
mdefine_line|#define sh_name(d)&t;((d)-&gt;dev.driver-&gt;name)
multiline_comment|/*&n; * Device ID numbers for bus types&n; */
r_enum
(brace
DECL|enumerator|SH_DEV_ID_USB_OHCI
id|SH_DEV_ID_USB_OHCI
comma
)brace
suffix:semicolon
DECL|macro|SH_NR_BUSES
mdefine_line|#define SH_NR_BUSES&t;&t;1
DECL|macro|SH_BUS_NAME_VIRT
mdefine_line|#define SH_BUS_NAME_VIRT&t;&quot;shbus&quot;
r_enum
(brace
DECL|enumerator|SH_BUS_VIRT
id|SH_BUS_VIRT
comma
)brace
suffix:semicolon
multiline_comment|/* arch/sh/kernel/cpu/bus.c */
r_extern
r_int
id|sh_device_register
c_func
(paren
r_struct
id|sh_dev
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_void
id|sh_device_unregister
c_func
(paren
r_struct
id|sh_dev
op_star
id|dev
)paren
suffix:semicolon
r_extern
r_int
id|sh_driver_register
c_func
(paren
r_struct
id|sh_driver
op_star
id|drv
)paren
suffix:semicolon
r_extern
r_void
id|sh_driver_unregister
c_func
(paren
r_struct
id|sh_driver
op_star
id|drv
)paren
suffix:semicolon
macro_line|#endif /* __ASM_SH_BUS_SH_H */
eof
