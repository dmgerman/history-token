multiline_comment|/*&n; * include/asm-sh/io_adx.h&n; *&n; * Copyright (C) 2001 A&amp;D Co., Ltd.&n; *&n; * This file may be copied or modified under the terms of the GNU&n; * General Public License.  See linux/COPYING for more information.&n; *&n; * IO functions for an A&amp;D ADX Board&n; */
macro_line|#ifndef _ASM_SH_IO_ADX_H
DECL|macro|_ASM_SH_IO_ADX_H
mdefine_line|#define _ASM_SH_IO_ADX_H
macro_line|#include &lt;asm/io_generic.h&gt;
r_extern
r_int
r_char
id|adx_inb
c_func
(paren
r_int
r_int
id|port
)paren
suffix:semicolon
r_extern
r_int
r_int
id|adx_inw
c_func
(paren
r_int
r_int
id|port
)paren
suffix:semicolon
r_extern
r_int
r_int
id|adx_inl
c_func
(paren
r_int
r_int
id|port
)paren
suffix:semicolon
r_extern
r_void
id|adx_outb
c_func
(paren
r_int
r_char
id|value
comma
r_int
r_int
id|port
)paren
suffix:semicolon
r_extern
r_void
id|adx_outw
c_func
(paren
r_int
r_int
id|value
comma
r_int
r_int
id|port
)paren
suffix:semicolon
r_extern
r_void
id|adx_outl
c_func
(paren
r_int
r_int
id|value
comma
r_int
r_int
id|port
)paren
suffix:semicolon
r_extern
r_int
r_char
id|adx_inb_p
c_func
(paren
r_int
r_int
id|port
)paren
suffix:semicolon
r_extern
r_void
id|adx_outb_p
c_func
(paren
r_int
r_char
id|value
comma
r_int
r_int
id|port
)paren
suffix:semicolon
r_extern
r_void
id|adx_insb
c_func
(paren
r_int
r_int
id|port
comma
r_void
op_star
id|addr
comma
r_int
r_int
id|count
)paren
suffix:semicolon
r_extern
r_void
id|adx_insw
c_func
(paren
r_int
r_int
id|port
comma
r_void
op_star
id|addr
comma
r_int
r_int
id|count
)paren
suffix:semicolon
r_extern
r_void
id|adx_insl
c_func
(paren
r_int
r_int
id|port
comma
r_void
op_star
id|addr
comma
r_int
r_int
id|count
)paren
suffix:semicolon
r_extern
r_void
id|adx_outsb
c_func
(paren
r_int
r_int
id|port
comma
r_const
r_void
op_star
id|addr
comma
r_int
r_int
id|count
)paren
suffix:semicolon
r_extern
r_void
id|adx_outsw
c_func
(paren
r_int
r_int
id|port
comma
r_const
r_void
op_star
id|addr
comma
r_int
r_int
id|count
)paren
suffix:semicolon
r_extern
r_void
id|adx_outsl
c_func
(paren
r_int
r_int
id|port
comma
r_const
r_void
op_star
id|addr
comma
r_int
r_int
id|count
)paren
suffix:semicolon
r_extern
r_int
r_char
id|adx_readb
c_func
(paren
r_int
r_int
id|addr
)paren
suffix:semicolon
r_extern
r_int
r_int
id|adx_readw
c_func
(paren
r_int
r_int
id|addr
)paren
suffix:semicolon
r_extern
r_int
r_int
id|adx_readl
c_func
(paren
r_int
r_int
id|addr
)paren
suffix:semicolon
r_extern
r_void
id|adx_writeb
c_func
(paren
r_int
r_char
id|b
comma
r_int
r_int
id|addr
)paren
suffix:semicolon
r_extern
r_void
id|adx_writew
c_func
(paren
r_int
r_int
id|b
comma
r_int
r_int
id|addr
)paren
suffix:semicolon
r_extern
r_void
id|adx_writel
c_func
(paren
r_int
r_int
id|b
comma
r_int
r_int
id|addr
)paren
suffix:semicolon
r_extern
r_void
op_star
id|adx_ioremap
c_func
(paren
r_int
r_int
id|offset
comma
r_int
r_int
id|size
)paren
suffix:semicolon
r_extern
r_void
id|adx_iounmap
c_func
(paren
r_void
op_star
id|addr
)paren
suffix:semicolon
r_extern
r_int
r_int
id|adx_isa_port2addr
c_func
(paren
r_int
r_int
id|offset
)paren
suffix:semicolon
r_extern
r_void
id|setup_adx
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_void
id|init_adx_IRQ
c_func
(paren
r_void
)paren
suffix:semicolon
macro_line|#ifdef __WANT_IO_DEF
DECL|macro|__inb
mdefine_line|#define __inb&t;&t;adx_inb
DECL|macro|__inw
mdefine_line|#define __inw&t;&t;adx_inw
DECL|macro|__inl
mdefine_line|#define __inl&t;&t;adx_inl
DECL|macro|__outb
mdefine_line|#define __outb&t;&t;adx_outb
DECL|macro|__outw
mdefine_line|#define __outw&t;&t;adx_outw
DECL|macro|__outl
mdefine_line|#define __outl&t;&t;adx_outl
DECL|macro|__inb_p
mdefine_line|#define __inb_p&t;&t;adx_inb_p
DECL|macro|__inw_p
mdefine_line|#define __inw_p&t;&t;adx_inw
DECL|macro|__inl_p
mdefine_line|#define __inl_p&t;&t;adx_inl
DECL|macro|__outb_p
mdefine_line|#define __outb_p&t;adx_outb_p
DECL|macro|__outw_p
mdefine_line|#define __outw_p&t;adx_outw
DECL|macro|__outl_p
mdefine_line|#define __outl_p&t;adx_outl
DECL|macro|__insb
mdefine_line|#define __insb&t;&t;adx_insb
DECL|macro|__insw
mdefine_line|#define __insw&t;&t;adx_insw
DECL|macro|__insl
mdefine_line|#define __insl&t;&t;adx_insl
DECL|macro|__outsb
mdefine_line|#define __outsb&t;&t;adx_outsb
DECL|macro|__outsw
mdefine_line|#define __outsw&t;&t;adx_outsw
DECL|macro|__outsl
mdefine_line|#define __outsl&t;&t;adx_outsl
DECL|macro|__readb
mdefine_line|#define __readb&t;&t;adx_readb
DECL|macro|__readw
mdefine_line|#define __readw&t;&t;adx_readw
DECL|macro|__readl
mdefine_line|#define __readl&t;&t;adx_readl
DECL|macro|__writeb
mdefine_line|#define __writeb&t;adx_writeb
DECL|macro|__writew
mdefine_line|#define __writew&t;adx_writew
DECL|macro|__writel
mdefine_line|#define __writel&t;adx_writel
DECL|macro|__isa_port2addr
mdefine_line|#define __isa_port2addr&t;adx_isa_port2addr
DECL|macro|__ioremap
mdefine_line|#define __ioremap&t;adx_ioremap
DECL|macro|__iounmap
mdefine_line|#define __iounmap&t;adx_iounmap
macro_line|#endif
macro_line|#endif /* _ASM_SH_IO_AANDD_H */
eof
