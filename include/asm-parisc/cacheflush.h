macro_line|#ifndef _PARISC_CACHEFLUSH_H
DECL|macro|_PARISC_CACHEFLUSH_H
mdefine_line|#define _PARISC_CACHEFLUSH_H
macro_line|#include &lt;linux/config.h&gt;
macro_line|#include &lt;linux/mm.h&gt;
multiline_comment|/* The usual comment is &quot;Caches aren&squot;t brain-dead on the &lt;architecture&gt;&quot;.&n; * Unfortunately, that doesn&squot;t apply to PA-RISC. */
multiline_comment|/* Cache flush operations */
macro_line|#ifdef CONFIG_SMP
DECL|macro|flush_cache_mm
mdefine_line|#define flush_cache_mm(mm) flush_cache_all()
macro_line|#else
DECL|macro|flush_cache_mm
mdefine_line|#define flush_cache_mm(mm) flush_cache_all_local()
macro_line|#endif
DECL|macro|flush_kernel_dcache_range
mdefine_line|#define flush_kernel_dcache_range(start,size) &bslash;&n;&t;flush_kernel_dcache_range_asm((start), (start)+(size));
r_extern
r_void
id|flush_cache_all_local
c_func
(paren
r_void
)paren
suffix:semicolon
DECL|function|cacheflush_h_tmp_function
r_static
r_inline
r_void
id|cacheflush_h_tmp_function
c_func
(paren
r_void
op_star
id|dummy
)paren
(brace
id|flush_cache_all_local
c_func
(paren
)paren
suffix:semicolon
)brace
DECL|function|flush_cache_all
r_static
r_inline
r_void
id|flush_cache_all
c_func
(paren
r_void
)paren
(brace
id|on_each_cpu
c_func
(paren
id|cacheflush_h_tmp_function
comma
l_int|NULL
comma
l_int|1
comma
l_int|1
)paren
suffix:semicolon
)brace
multiline_comment|/* The following value needs to be tuned and probably scaled with the&n; * cache size.&n; */
DECL|macro|FLUSH_THRESHOLD
mdefine_line|#define FLUSH_THRESHOLD 0x80000
r_static
r_inline
r_void
DECL|function|flush_user_dcache_range
id|flush_user_dcache_range
c_func
(paren
r_int
r_int
id|start
comma
r_int
r_int
id|end
)paren
(brace
macro_line|#ifdef CONFIG_SMP
id|flush_user_dcache_range_asm
c_func
(paren
id|start
comma
id|end
)paren
suffix:semicolon
macro_line|#else
r_if
c_cond
(paren
(paren
id|end
op_minus
id|start
)paren
OL
id|FLUSH_THRESHOLD
)paren
id|flush_user_dcache_range_asm
c_func
(paren
id|start
comma
id|end
)paren
suffix:semicolon
r_else
id|flush_data_cache
c_func
(paren
)paren
suffix:semicolon
macro_line|#endif
)brace
r_static
r_inline
r_void
DECL|function|flush_user_icache_range
id|flush_user_icache_range
c_func
(paren
r_int
r_int
id|start
comma
r_int
r_int
id|end
)paren
(brace
macro_line|#ifdef CONFIG_SMP
id|flush_user_icache_range_asm
c_func
(paren
id|start
comma
id|end
)paren
suffix:semicolon
macro_line|#else
r_if
c_cond
(paren
(paren
id|end
op_minus
id|start
)paren
OL
id|FLUSH_THRESHOLD
)paren
id|flush_user_icache_range_asm
c_func
(paren
id|start
comma
id|end
)paren
suffix:semicolon
r_else
id|flush_instruction_cache
c_func
(paren
)paren
suffix:semicolon
macro_line|#endif
)brace
r_extern
r_void
id|__flush_dcache_page
c_func
(paren
r_struct
id|page
op_star
id|page
)paren
suffix:semicolon
DECL|function|flush_dcache_page
r_static
r_inline
r_void
id|flush_dcache_page
c_func
(paren
r_struct
id|page
op_star
id|page
)paren
(brace
r_if
c_cond
(paren
id|page-&gt;mapping
op_logical_and
id|list_empty
c_func
(paren
op_amp
id|page-&gt;mapping-&gt;i_mmap
)paren
op_logical_and
id|list_empty
c_func
(paren
op_amp
id|page-&gt;mapping-&gt;i_mmap_shared
)paren
)paren
(brace
id|set_bit
c_func
(paren
id|PG_dcache_dirty
comma
op_amp
id|page-&gt;flags
)paren
suffix:semicolon
)brace
r_else
(brace
id|__flush_dcache_page
c_func
(paren
id|page
)paren
suffix:semicolon
)brace
)brace
DECL|macro|flush_icache_page
mdefine_line|#define flush_icache_page(vma,page)&t;do { flush_kernel_dcache_page(page_address(page)); flush_kernel_icache_page(page_address(page)); } while (0)
DECL|macro|flush_icache_range
mdefine_line|#define flush_icache_range(s,e)&t;&t;do { flush_kernel_dcache_range_asm(s,e); flush_kernel_icache_range_asm(s,e); } while (0)
DECL|macro|flush_icache_user_range
mdefine_line|#define flush_icache_user_range(vma, page, addr, len) &bslash;&n;&t;flush_icache_page((vma), (page))
DECL|function|flush_cache_range
r_static
r_inline
r_void
id|flush_cache_range
c_func
(paren
r_struct
id|vm_area_struct
op_star
id|vma
comma
r_int
r_int
id|start
comma
r_int
r_int
id|end
)paren
(brace
r_int
id|sr3
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|vma-&gt;vm_mm-&gt;context
)paren
(brace
id|BUG
c_func
(paren
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
id|sr3
op_assign
id|mfsp
c_func
(paren
l_int|3
)paren
suffix:semicolon
r_if
c_cond
(paren
id|vma-&gt;vm_mm-&gt;context
op_eq
id|sr3
)paren
(brace
id|flush_user_dcache_range
c_func
(paren
id|start
comma
id|end
)paren
suffix:semicolon
id|flush_user_icache_range
c_func
(paren
id|start
comma
id|end
)paren
suffix:semicolon
)brace
r_else
(brace
id|flush_cache_all
c_func
(paren
)paren
suffix:semicolon
)brace
)brace
r_static
r_inline
r_void
DECL|function|flush_cache_page
id|flush_cache_page
c_func
(paren
r_struct
id|vm_area_struct
op_star
id|vma
comma
r_int
r_int
id|vmaddr
)paren
(brace
r_int
id|sr3
suffix:semicolon
r_if
c_cond
(paren
op_logical_neg
id|vma-&gt;vm_mm-&gt;context
)paren
(brace
id|BUG
c_func
(paren
)paren
suffix:semicolon
r_return
suffix:semicolon
)brace
id|sr3
op_assign
id|mfsp
c_func
(paren
l_int|3
)paren
suffix:semicolon
r_if
c_cond
(paren
id|vma-&gt;vm_mm-&gt;context
op_eq
id|sr3
)paren
(brace
id|flush_user_dcache_range
c_func
(paren
id|vmaddr
comma
id|vmaddr
op_plus
id|PAGE_SIZE
)paren
suffix:semicolon
r_if
c_cond
(paren
id|vma-&gt;vm_flags
op_amp
id|VM_EXEC
)paren
id|flush_user_icache_range
c_func
(paren
id|vmaddr
comma
id|vmaddr
op_plus
id|PAGE_SIZE
)paren
suffix:semicolon
)brace
r_else
(brace
r_if
c_cond
(paren
id|vma-&gt;vm_flags
op_amp
id|VM_EXEC
)paren
id|flush_cache_all
c_func
(paren
)paren
suffix:semicolon
r_else
id|flush_data_cache
c_func
(paren
)paren
suffix:semicolon
)brace
)brace
macro_line|#endif
eof
