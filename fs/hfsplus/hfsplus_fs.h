multiline_comment|/*&n; *  linux/include/linux/hfsplus_fs.h&n; *&n; * Copyright (C) 1999&n; * Brad Boyer (flar@pants.nu)&n; * (C) 2003 Ardis Technologies &lt;roman@ardistech.com&gt;&n; *&n; */
macro_line|#ifndef _LINUX_HFSPLUS_FS_H
DECL|macro|_LINUX_HFSPLUS_FS_H
mdefine_line|#define _LINUX_HFSPLUS_FS_H
macro_line|#include &lt;linux/fs.h&gt;
macro_line|#include &lt;linux/version.h&gt;
macro_line|#include &lt;linux/buffer_head.h&gt;
macro_line|#include &quot;hfsplus_raw.h&quot;
DECL|macro|DBG_BNODE_REFS
mdefine_line|#define DBG_BNODE_REFS&t;0x00000001
DECL|macro|DBG_BNODE_MOD
mdefine_line|#define DBG_BNODE_MOD&t;0x00000002
DECL|macro|DBG_CAT_MOD
mdefine_line|#define DBG_CAT_MOD&t;0x00000004
DECL|macro|DBG_INODE
mdefine_line|#define DBG_INODE&t;0x00000008
DECL|macro|DBG_SUPER
mdefine_line|#define DBG_SUPER&t;0x00000010
DECL|macro|DBG_EXTENT
mdefine_line|#define DBG_EXTENT&t;0x00000020
DECL|macro|DBG_BITMAP
mdefine_line|#define DBG_BITMAP&t;0x00000040
singleline_comment|//#define DBG_MASK&t;(DBG_EXTENT|DBG_INODE|DBG_BNODE_MOD)
singleline_comment|//#define DBG_MASK&t;(DBG_BNODE_MOD|DBG_CAT_MOD|DBG_INODE)
singleline_comment|//#define DBG_MASK&t;(DBG_CAT_MOD|DBG_BNODE_REFS|DBG_INODE|DBG_EXTENT)
DECL|macro|DBG_MASK
mdefine_line|#define DBG_MASK&t;(0)
DECL|macro|dprint
mdefine_line|#define dprint(flg, fmt, args...) &bslash;&n;&t;if (flg &amp; DBG_MASK) printk(fmt , ## args)
multiline_comment|/* Runtime config options */
DECL|macro|HFSPLUS_DEF_CR_TYPE
mdefine_line|#define HFSPLUS_DEF_CR_TYPE    0x3F3F3F3F  /* &squot;????&squot; */
DECL|macro|HFSPLUS_TYPE_DATA
mdefine_line|#define HFSPLUS_TYPE_DATA 0x00
DECL|macro|HFSPLUS_TYPE_RSRC
mdefine_line|#define HFSPLUS_TYPE_RSRC 0xFF
DECL|typedef|btree_keycmp
r_typedef
r_int
(paren
op_star
id|btree_keycmp
)paren
(paren
id|hfsplus_btree_key
op_star
comma
id|hfsplus_btree_key
op_star
)paren
suffix:semicolon
DECL|macro|NODE_HASH_SIZE
mdefine_line|#define NODE_HASH_SIZE&t;256
multiline_comment|/* An HFS+ BTree held in memory */
DECL|struct|hfs_btree
r_struct
id|hfs_btree
(brace
DECL|member|sb
r_struct
id|super_block
op_star
id|sb
suffix:semicolon
DECL|member|inode
r_struct
id|inode
op_star
id|inode
suffix:semicolon
DECL|member|keycmp
id|btree_keycmp
id|keycmp
suffix:semicolon
DECL|member|cnid
id|u32
id|cnid
suffix:semicolon
DECL|member|root
id|u32
id|root
suffix:semicolon
DECL|member|leaf_count
id|u32
id|leaf_count
suffix:semicolon
DECL|member|leaf_head
id|u32
id|leaf_head
suffix:semicolon
DECL|member|leaf_tail
id|u32
id|leaf_tail
suffix:semicolon
DECL|member|node_count
id|u32
id|node_count
suffix:semicolon
DECL|member|free_nodes
id|u32
id|free_nodes
suffix:semicolon
DECL|member|attributes
id|u32
id|attributes
suffix:semicolon
DECL|member|node_size
r_int
r_int
id|node_size
suffix:semicolon
DECL|member|node_size_shift
r_int
r_int
id|node_size_shift
suffix:semicolon
DECL|member|max_key_len
r_int
r_int
id|max_key_len
suffix:semicolon
DECL|member|depth
r_int
r_int
id|depth
suffix:semicolon
singleline_comment|//unsigned int map1_size, map_size;
DECL|member|tree_lock
r_struct
id|semaphore
id|tree_lock
suffix:semicolon
DECL|member|pages_per_bnode
r_int
r_int
id|pages_per_bnode
suffix:semicolon
DECL|member|hash_lock
id|spinlock_t
id|hash_lock
suffix:semicolon
DECL|member|node_hash
r_struct
id|hfs_bnode
op_star
id|node_hash
(braket
id|NODE_HASH_SIZE
)braket
suffix:semicolon
DECL|member|node_hash_cnt
r_int
id|node_hash_cnt
suffix:semicolon
)brace
suffix:semicolon
r_struct
id|page
suffix:semicolon
multiline_comment|/* An HFS+ BTree node in memory */
DECL|struct|hfs_bnode
r_struct
id|hfs_bnode
(brace
DECL|member|tree
r_struct
id|hfs_btree
op_star
id|tree
suffix:semicolon
DECL|member|prev
id|u32
id|prev
suffix:semicolon
DECL|member|this
id|u32
id|this
suffix:semicolon
DECL|member|next
id|u32
id|next
suffix:semicolon
DECL|member|parent
id|u32
id|parent
suffix:semicolon
DECL|member|num_recs
id|u16
id|num_recs
suffix:semicolon
DECL|member|type
id|u8
id|type
suffix:semicolon
DECL|member|height
id|u8
id|height
suffix:semicolon
DECL|member|next_hash
r_struct
id|hfs_bnode
op_star
id|next_hash
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
DECL|member|lock_wq
id|wait_queue_head_t
id|lock_wq
suffix:semicolon
DECL|member|refcnt
id|atomic_t
id|refcnt
suffix:semicolon
DECL|member|page_offset
r_int
r_int
id|page_offset
suffix:semicolon
DECL|member|page
r_struct
id|page
op_star
id|page
(braket
l_int|0
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|HFS_BNODE_LOCK
mdefine_line|#define HFS_BNODE_LOCK&t;&t;0
DECL|macro|HFS_BNODE_ERROR
mdefine_line|#define HFS_BNODE_ERROR&t;&t;1
DECL|macro|HFS_BNODE_NEW
mdefine_line|#define HFS_BNODE_NEW&t;&t;2
DECL|macro|HFS_BNODE_DIRTY
mdefine_line|#define HFS_BNODE_DIRTY&t;&t;3
DECL|macro|HFS_BNODE_DELETED
mdefine_line|#define HFS_BNODE_DELETED&t;4
multiline_comment|/*&n; * HFS+ superblock info (built from Volume Header on disk)&n; */
r_struct
id|hfsplus_vh
suffix:semicolon
r_struct
id|hfs_btree
suffix:semicolon
DECL|struct|hfsplus_sb_info
r_struct
id|hfsplus_sb_info
(brace
DECL|member|s_vhbh
r_struct
id|buffer_head
op_star
id|s_vhbh
suffix:semicolon
DECL|member|s_vhdr
r_struct
id|hfsplus_vh
op_star
id|s_vhdr
suffix:semicolon
DECL|member|ext_tree
r_struct
id|hfs_btree
op_star
id|ext_tree
suffix:semicolon
DECL|member|cat_tree
r_struct
id|hfs_btree
op_star
id|cat_tree
suffix:semicolon
DECL|member|attr_tree
r_struct
id|hfs_btree
op_star
id|attr_tree
suffix:semicolon
DECL|member|alloc_file
r_struct
id|inode
op_star
id|alloc_file
suffix:semicolon
DECL|member|hidden_dir
r_struct
id|inode
op_star
id|hidden_dir
suffix:semicolon
multiline_comment|/* Runtime variables */
DECL|member|blockoffset
id|u32
id|blockoffset
suffix:semicolon
DECL|member|sect_count
id|u32
id|sect_count
suffix:semicolon
DECL|member|fs_shift
r_int
id|fs_shift
suffix:semicolon
multiline_comment|/* Stuff in host order from Vol Header */
DECL|member|alloc_blksz
id|u32
id|alloc_blksz
suffix:semicolon
DECL|member|alloc_blksz_shift
r_int
id|alloc_blksz_shift
suffix:semicolon
DECL|member|total_blocks
id|u32
id|total_blocks
suffix:semicolon
DECL|member|free_blocks
id|u32
id|free_blocks
suffix:semicolon
DECL|member|next_alloc
id|u32
id|next_alloc
suffix:semicolon
DECL|member|next_cnid
id|u32
id|next_cnid
suffix:semicolon
DECL|member|file_count
id|u32
id|file_count
suffix:semicolon
DECL|member|folder_count
id|u32
id|folder_count
suffix:semicolon
DECL|member|data_clump_blocks
DECL|member|rsrc_clump_blocks
id|u32
id|data_clump_blocks
comma
id|rsrc_clump_blocks
suffix:semicolon
multiline_comment|/* Config options */
DECL|member|creator
id|u32
id|creator
suffix:semicolon
DECL|member|type
id|u32
id|type
suffix:semicolon
DECL|member|umask
id|umode_t
id|umask
suffix:semicolon
DECL|member|uid
id|uid_t
id|uid
suffix:semicolon
DECL|member|gid
id|gid_t
id|gid
suffix:semicolon
DECL|member|part
DECL|member|session
r_int
id|part
comma
id|session
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
DECL|member|inode_cnt
id|atomic_t
id|inode_cnt
suffix:semicolon
DECL|member|last_inode_cnt
id|u32
id|last_inode_cnt
suffix:semicolon
DECL|member|rsrc_inodes
r_struct
id|hlist_head
id|rsrc_inodes
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|HFSPLUS_SB_WRITEBACKUP
mdefine_line|#define HFSPLUS_SB_WRITEBACKUP&t;0x0001
DECL|struct|hfsplus_inode_info
r_struct
id|hfsplus_inode_info
(brace
DECL|member|extents_lock
r_struct
id|semaphore
id|extents_lock
suffix:semicolon
DECL|member|clump_blocks
DECL|member|alloc_blocks
id|u32
id|clump_blocks
comma
id|alloc_blocks
suffix:semicolon
DECL|member|fs_blocks
id|sector_t
id|fs_blocks
suffix:semicolon
multiline_comment|/* Allocation extents from catalog record or volume header */
DECL|member|first_extents
id|hfsplus_extent_rec
id|first_extents
suffix:semicolon
DECL|member|first_blocks
id|u32
id|first_blocks
suffix:semicolon
DECL|member|cached_extents
id|hfsplus_extent_rec
id|cached_extents
suffix:semicolon
DECL|member|cached_start
DECL|member|cached_blocks
id|u32
id|cached_start
comma
id|cached_blocks
suffix:semicolon
DECL|member|opencnt
id|atomic_t
id|opencnt
suffix:semicolon
DECL|member|rsrc_inode
r_struct
id|inode
op_star
id|rsrc_inode
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
multiline_comment|/* Device number in hfsplus_permissions in catalog */
DECL|member|dev
id|u32
id|dev
suffix:semicolon
multiline_comment|/* BSD system and user file flags */
DECL|member|rootflags
id|u8
id|rootflags
suffix:semicolon
DECL|member|userflags
id|u8
id|userflags
suffix:semicolon
DECL|member|open_dir_list
r_struct
id|list_head
id|open_dir_list
suffix:semicolon
DECL|member|phys_size
id|loff_t
id|phys_size
suffix:semicolon
DECL|member|vfs_inode
r_struct
id|inode
id|vfs_inode
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|HFSPLUS_FLG_RSRC
mdefine_line|#define HFSPLUS_FLG_RSRC&t;0x0001
DECL|macro|HFSPLUS_FLG_EXT_DIRTY
mdefine_line|#define HFSPLUS_FLG_EXT_DIRTY&t;0x0002
DECL|macro|HFSPLUS_FLG_EXT_NEW
mdefine_line|#define HFSPLUS_FLG_EXT_NEW&t;0x0004
DECL|macro|HFSPLUS_IS_DATA
mdefine_line|#define HFSPLUS_IS_DATA(inode)   (!(HFSPLUS_I(inode).flags &amp; HFSPLUS_FLG_RSRC))
DECL|macro|HFSPLUS_IS_RSRC
mdefine_line|#define HFSPLUS_IS_RSRC(inode)   (HFSPLUS_I(inode).flags &amp; HFSPLUS_FLG_RSRC)
DECL|struct|hfs_find_data
r_struct
id|hfs_find_data
(brace
multiline_comment|/* filled by caller */
DECL|member|search_key
id|hfsplus_btree_key
op_star
id|search_key
suffix:semicolon
DECL|member|key
id|hfsplus_btree_key
op_star
id|key
suffix:semicolon
multiline_comment|/* filled by find */
DECL|member|tree
r_struct
id|hfs_btree
op_star
id|tree
suffix:semicolon
DECL|member|bnode
r_struct
id|hfs_bnode
op_star
id|bnode
suffix:semicolon
multiline_comment|/* filled by findrec */
DECL|member|record
r_int
id|record
suffix:semicolon
DECL|member|keyoffset
DECL|member|keylength
r_int
id|keyoffset
comma
id|keylength
suffix:semicolon
DECL|member|entryoffset
DECL|member|entrylength
r_int
id|entryoffset
comma
id|entrylength
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|hfsplus_readdir_data
r_struct
id|hfsplus_readdir_data
(brace
DECL|member|list
r_struct
id|list_head
id|list
suffix:semicolon
DECL|member|file
r_struct
id|file
op_star
id|file
suffix:semicolon
DECL|member|key
r_struct
id|hfsplus_cat_key
id|key
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|hfs_btree_open
mdefine_line|#define hfs_btree_open hfsplus_btree_open
DECL|macro|hfs_btree_close
mdefine_line|#define hfs_btree_close hfsplus_btree_close
DECL|macro|hfs_btree_write
mdefine_line|#define hfs_btree_write hfsplus_btree_write
DECL|macro|hfs_bmap_alloc
mdefine_line|#define hfs_bmap_alloc hfsplus_bmap_alloc
DECL|macro|hfs_bmap_free
mdefine_line|#define hfs_bmap_free hfsplus_bmap_free
DECL|macro|hfs_bnode_read
mdefine_line|#define hfs_bnode_read hfsplus_bnode_read
DECL|macro|hfs_bnode_read_u16
mdefine_line|#define hfs_bnode_read_u16 hfsplus_bnode_read_u16
DECL|macro|hfs_bnode_read_u8
mdefine_line|#define hfs_bnode_read_u8 hfsplus_bnode_read_u8
DECL|macro|hfs_bnode_read_key
mdefine_line|#define hfs_bnode_read_key hfsplus_bnode_read_key
DECL|macro|hfs_bnode_write
mdefine_line|#define hfs_bnode_write hfsplus_bnode_write
DECL|macro|hfs_bnode_write_u16
mdefine_line|#define hfs_bnode_write_u16 hfsplus_bnode_write_u16
DECL|macro|hfs_bnode_clear
mdefine_line|#define hfs_bnode_clear hfsplus_bnode_clear
DECL|macro|hfs_bnode_copy
mdefine_line|#define hfs_bnode_copy hfsplus_bnode_copy
DECL|macro|hfs_bnode_move
mdefine_line|#define hfs_bnode_move hfsplus_bnode_move
DECL|macro|hfs_bnode_dump
mdefine_line|#define hfs_bnode_dump hfsplus_bnode_dump
DECL|macro|hfs_bnode_unlink
mdefine_line|#define hfs_bnode_unlink hfsplus_bnode_unlink
DECL|macro|hfs_bnode_findhash
mdefine_line|#define hfs_bnode_findhash hfsplus_bnode_findhash
DECL|macro|hfs_bnode_find
mdefine_line|#define hfs_bnode_find hfsplus_bnode_find
DECL|macro|hfs_bnode_unhash
mdefine_line|#define hfs_bnode_unhash hfsplus_bnode_unhash
DECL|macro|hfs_bnode_free
mdefine_line|#define hfs_bnode_free hfsplus_bnode_free
DECL|macro|hfs_bnode_create
mdefine_line|#define hfs_bnode_create hfsplus_bnode_create
DECL|macro|hfs_bnode_get
mdefine_line|#define hfs_bnode_get hfsplus_bnode_get
DECL|macro|hfs_bnode_put
mdefine_line|#define hfs_bnode_put hfsplus_bnode_put
DECL|macro|hfs_brec_lenoff
mdefine_line|#define hfs_brec_lenoff hfsplus_brec_lenoff
DECL|macro|hfs_brec_keylen
mdefine_line|#define hfs_brec_keylen hfsplus_brec_keylen
DECL|macro|hfs_brec_insert
mdefine_line|#define hfs_brec_insert hfsplus_brec_insert
DECL|macro|hfs_brec_remove
mdefine_line|#define hfs_brec_remove hfsplus_brec_remove
DECL|macro|hfs_bnode_split
mdefine_line|#define hfs_bnode_split hfsplus_bnode_split
DECL|macro|hfs_brec_update_parent
mdefine_line|#define hfs_brec_update_parent hfsplus_brec_update_parent
DECL|macro|hfs_btree_inc_height
mdefine_line|#define hfs_btree_inc_height hfsplus_btree_inc_height
DECL|macro|hfs_find_init
mdefine_line|#define hfs_find_init hfsplus_find_init
DECL|macro|hfs_find_exit
mdefine_line|#define hfs_find_exit hfsplus_find_exit
DECL|macro|__hfs_brec_find
mdefine_line|#define __hfs_brec_find __hplusfs_brec_find
DECL|macro|hfs_brec_find
mdefine_line|#define hfs_brec_find hfsplus_brec_find
DECL|macro|hfs_brec_read
mdefine_line|#define hfs_brec_read hfsplus_brec_read
DECL|macro|hfs_brec_goto
mdefine_line|#define hfs_brec_goto hfsplus_brec_goto
DECL|macro|hfs_part_find
mdefine_line|#define hfs_part_find hfsplus_part_find
multiline_comment|/*&n; * definitions for ext2 flag ioctls (linux really needs a generic&n; * interface for this).&n; */
multiline_comment|/* ext2 ioctls (EXT2_IOC_GETFLAGS and EXT2_IOC_SETFLAGS) to support&n; * chattr/lsattr */
DECL|macro|HFSPLUS_IOC_EXT2_GETFLAGS
mdefine_line|#define HFSPLUS_IOC_EXT2_GETFLAGS&t;_IOR(&squot;f&squot;, 1, long)
DECL|macro|HFSPLUS_IOC_EXT2_SETFLAGS
mdefine_line|#define HFSPLUS_IOC_EXT2_SETFLAGS&t;_IOW(&squot;f&squot;, 2, long)
DECL|macro|EXT2_FLAG_IMMUTABLE
mdefine_line|#define EXT2_FLAG_IMMUTABLE&t;&t;0x00000010 /* Immutable file */
DECL|macro|EXT2_FLAG_APPEND
mdefine_line|#define EXT2_FLAG_APPEND&t;&t;0x00000020 /* writes to file may only append */
DECL|macro|EXT2_FLAG_NODUMP
mdefine_line|#define EXT2_FLAG_NODUMP&t;&t;0x00000040 /* do not dump file */
multiline_comment|/*&n; * Functions in any *.c used in other files&n; */
multiline_comment|/* bitmap.c */
r_int
id|hfsplus_block_allocate
c_func
(paren
r_struct
id|super_block
op_star
comma
id|u32
comma
id|u32
comma
id|u32
op_star
)paren
suffix:semicolon
r_int
id|hfsplus_block_free
c_func
(paren
r_struct
id|super_block
op_star
comma
id|u32
comma
id|u32
)paren
suffix:semicolon
multiline_comment|/* btree.c */
r_struct
id|hfs_btree
op_star
id|hfs_btree_open
c_func
(paren
r_struct
id|super_block
op_star
comma
id|u32
)paren
suffix:semicolon
r_void
id|hfs_btree_close
c_func
(paren
r_struct
id|hfs_btree
op_star
)paren
suffix:semicolon
r_void
id|hfs_btree_write
c_func
(paren
r_struct
id|hfs_btree
op_star
)paren
suffix:semicolon
r_struct
id|hfs_bnode
op_star
id|hfs_bmap_alloc
c_func
(paren
r_struct
id|hfs_btree
op_star
)paren
suffix:semicolon
r_void
id|hfs_bmap_free
c_func
(paren
r_struct
id|hfs_bnode
op_star
)paren
suffix:semicolon
multiline_comment|/* bnode.c */
r_void
id|hfs_bnode_read
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_void
op_star
comma
r_int
comma
r_int
)paren
suffix:semicolon
id|u16
id|hfs_bnode_read_u16
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_int
)paren
suffix:semicolon
id|u8
id|hfs_bnode_read_u8
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_int
)paren
suffix:semicolon
r_void
id|hfs_bnode_read_key
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_void
op_star
comma
r_int
)paren
suffix:semicolon
r_void
id|hfs_bnode_write
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_void
op_star
comma
r_int
comma
r_int
)paren
suffix:semicolon
r_void
id|hfs_bnode_write_u16
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_int
comma
id|u16
)paren
suffix:semicolon
r_void
id|hfs_bnode_clear
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_int
comma
r_int
)paren
suffix:semicolon
r_void
id|hfs_bnode_copy
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_int
comma
r_struct
id|hfs_bnode
op_star
comma
r_int
comma
r_int
)paren
suffix:semicolon
r_void
id|hfs_bnode_move
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_int
comma
r_int
comma
r_int
)paren
suffix:semicolon
r_void
id|hfs_bnode_dump
c_func
(paren
r_struct
id|hfs_bnode
op_star
)paren
suffix:semicolon
r_void
id|hfs_bnode_unlink
c_func
(paren
r_struct
id|hfs_bnode
op_star
)paren
suffix:semicolon
r_struct
id|hfs_bnode
op_star
id|hfs_bnode_findhash
c_func
(paren
r_struct
id|hfs_btree
op_star
comma
id|u32
)paren
suffix:semicolon
r_struct
id|hfs_bnode
op_star
id|hfs_bnode_find
c_func
(paren
r_struct
id|hfs_btree
op_star
comma
id|u32
)paren
suffix:semicolon
r_void
id|hfs_bnode_unhash
c_func
(paren
r_struct
id|hfs_bnode
op_star
)paren
suffix:semicolon
r_void
id|hfs_bnode_free
c_func
(paren
r_struct
id|hfs_bnode
op_star
)paren
suffix:semicolon
r_struct
id|hfs_bnode
op_star
id|hfs_bnode_create
c_func
(paren
r_struct
id|hfs_btree
op_star
comma
id|u32
)paren
suffix:semicolon
r_void
id|hfs_bnode_get
c_func
(paren
r_struct
id|hfs_bnode
op_star
)paren
suffix:semicolon
r_void
id|hfs_bnode_put
c_func
(paren
r_struct
id|hfs_bnode
op_star
)paren
suffix:semicolon
multiline_comment|/* brec.c */
id|u16
id|hfs_brec_lenoff
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
id|u16
comma
id|u16
op_star
)paren
suffix:semicolon
id|u16
id|hfs_brec_keylen
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
id|u16
)paren
suffix:semicolon
r_int
id|hfs_brec_insert
c_func
(paren
r_struct
id|hfs_find_data
op_star
comma
r_void
op_star
comma
r_int
)paren
suffix:semicolon
r_int
id|hfs_brec_remove
c_func
(paren
r_struct
id|hfs_find_data
op_star
)paren
suffix:semicolon
r_struct
id|hfs_bnode
op_star
id|hfs_bnode_split
c_func
(paren
r_struct
id|hfs_find_data
op_star
)paren
suffix:semicolon
r_int
id|hfs_brec_update_parent
c_func
(paren
r_struct
id|hfs_find_data
op_star
)paren
suffix:semicolon
r_int
id|hfs_btree_inc_height
c_func
(paren
r_struct
id|hfs_btree
op_star
)paren
suffix:semicolon
multiline_comment|/* bfind.c */
r_int
id|hfs_find_init
c_func
(paren
r_struct
id|hfs_btree
op_star
comma
r_struct
id|hfs_find_data
op_star
)paren
suffix:semicolon
r_void
id|hfs_find_exit
c_func
(paren
r_struct
id|hfs_find_data
op_star
)paren
suffix:semicolon
r_int
id|__hfs_brec_find
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_struct
id|hfs_find_data
op_star
)paren
suffix:semicolon
r_int
id|hfs_brec_find
c_func
(paren
r_struct
id|hfs_find_data
op_star
)paren
suffix:semicolon
r_int
id|hfs_brec_read
c_func
(paren
r_struct
id|hfs_find_data
op_star
comma
r_void
op_star
comma
r_int
)paren
suffix:semicolon
r_int
id|hfs_brec_goto
c_func
(paren
r_struct
id|hfs_find_data
op_star
comma
r_int
)paren
suffix:semicolon
multiline_comment|/* catalog.c */
r_int
id|hfsplus_cat_cmp_key
c_func
(paren
id|hfsplus_btree_key
op_star
comma
id|hfsplus_btree_key
op_star
)paren
suffix:semicolon
r_void
id|hfsplus_cat_build_key
c_func
(paren
id|hfsplus_btree_key
op_star
comma
id|u32
comma
r_struct
id|qstr
op_star
)paren
suffix:semicolon
r_int
id|hfsplus_find_cat
c_func
(paren
r_struct
id|super_block
op_star
comma
id|u32
comma
r_struct
id|hfs_find_data
op_star
)paren
suffix:semicolon
r_int
id|hfsplus_create_cat
c_func
(paren
id|u32
comma
r_struct
id|inode
op_star
comma
r_struct
id|qstr
op_star
comma
r_struct
id|inode
op_star
)paren
suffix:semicolon
r_int
id|hfsplus_delete_cat
c_func
(paren
id|u32
comma
r_struct
id|inode
op_star
comma
r_struct
id|qstr
op_star
)paren
suffix:semicolon
r_int
id|hfsplus_rename_cat
c_func
(paren
id|u32
comma
r_struct
id|inode
op_star
comma
r_struct
id|qstr
op_star
comma
r_struct
id|inode
op_star
comma
r_struct
id|qstr
op_star
)paren
suffix:semicolon
multiline_comment|/* extents.c */
r_int
id|hfsplus_ext_cmp_key
c_func
(paren
id|hfsplus_btree_key
op_star
comma
id|hfsplus_btree_key
op_star
)paren
suffix:semicolon
r_void
id|hfsplus_ext_build_key
c_func
(paren
id|hfsplus_btree_key
op_star
comma
id|u32
comma
id|u32
comma
id|u8
)paren
suffix:semicolon
r_void
id|hfsplus_ext_write_extent
c_func
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
r_int
id|hfsplus_get_block
c_func
(paren
r_struct
id|inode
op_star
comma
id|sector_t
comma
r_struct
id|buffer_head
op_star
comma
r_int
)paren
suffix:semicolon
r_int
id|hfsplus_free_fork
c_func
(paren
r_struct
id|super_block
op_star
comma
id|u32
comma
r_struct
id|hfsplus_fork_raw
op_star
comma
r_int
)paren
suffix:semicolon
r_int
id|hfsplus_file_extend
c_func
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
r_void
id|hfsplus_file_truncate
c_func
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
multiline_comment|/* inode.c */
r_extern
r_struct
id|address_space_operations
id|hfsplus_aops
suffix:semicolon
r_extern
r_struct
id|address_space_operations
id|hfsplus_btree_aops
suffix:semicolon
r_void
id|hfsplus_inode_read_fork
c_func
(paren
r_struct
id|inode
op_star
comma
r_struct
id|hfsplus_fork_raw
op_star
)paren
suffix:semicolon
r_void
id|hfsplus_inode_write_fork
c_func
(paren
r_struct
id|inode
op_star
comma
r_struct
id|hfsplus_fork_raw
op_star
)paren
suffix:semicolon
r_int
id|hfsplus_cat_read_inode
c_func
(paren
r_struct
id|inode
op_star
comma
r_struct
id|hfs_find_data
op_star
)paren
suffix:semicolon
r_int
id|hfsplus_cat_write_inode
c_func
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
r_struct
id|inode
op_star
id|hfsplus_new_inode
c_func
(paren
r_struct
id|super_block
op_star
comma
r_int
)paren
suffix:semicolon
r_void
id|hfsplus_delete_inode
c_func
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
multiline_comment|/* ioctl.c */
r_int
id|hfsplus_ioctl
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|filp
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
multiline_comment|/* options.c */
r_int
id|parse_options
c_func
(paren
r_char
op_star
comma
r_struct
id|hfsplus_sb_info
op_star
)paren
suffix:semicolon
r_void
id|fill_defaults
c_func
(paren
r_struct
id|hfsplus_sb_info
op_star
)paren
suffix:semicolon
multiline_comment|/* tables.c */
r_extern
id|u16
id|case_fold_table
(braket
)braket
suffix:semicolon
multiline_comment|/* unicode.c */
r_int
id|hfsplus_unistrcmp
c_func
(paren
r_const
r_struct
id|hfsplus_unistr
op_star
comma
r_const
r_struct
id|hfsplus_unistr
op_star
)paren
suffix:semicolon
r_int
id|hfsplus_uni2asc
c_func
(paren
r_const
r_struct
id|hfsplus_unistr
op_star
comma
r_char
op_star
comma
r_int
op_star
)paren
suffix:semicolon
r_int
id|hfsplus_asc2uni
c_func
(paren
r_struct
id|hfsplus_unistr
op_star
comma
r_const
r_char
op_star
comma
r_int
)paren
suffix:semicolon
multiline_comment|/* wrapper.c */
r_int
id|hfsplus_read_wrapper
c_func
(paren
r_struct
id|super_block
op_star
)paren
suffix:semicolon
r_int
id|hfs_part_find
c_func
(paren
r_struct
id|super_block
op_star
comma
id|sector_t
op_star
comma
id|sector_t
op_star
)paren
suffix:semicolon
multiline_comment|/* access macros */
multiline_comment|/*&n;static inline struct hfsplus_sb_info *HFSPLUS_SB(struct super_block *sb)&n;{&n;&t;return sb-&gt;s_fs_info;&n;}&n;static inline struct hfsplus_inode_info *HFSPLUS_I(struct inode *inode)&n;{&n;&t;return list_entry(inode, struct hfsplus_inode_info, vfs_inode);&n;}&n;*/
DECL|macro|HFSPLUS_SB
mdefine_line|#define HFSPLUS_SB(super)&t;(*(struct hfsplus_sb_info *)(super)-&gt;s_fs_info)
DECL|macro|HFSPLUS_I
mdefine_line|#define HFSPLUS_I(inode)&t;(*list_entry(inode, struct hfsplus_inode_info, vfs_inode))
macro_line|#if 1
DECL|macro|hfsplus_kmap
mdefine_line|#define hfsplus_kmap(p)&t;&t;({ struct page *__p = (p); kmap(__p); })
DECL|macro|hfsplus_kunmap
mdefine_line|#define hfsplus_kunmap(p)&t;({ struct page *__p = (p); kunmap(__p); __p; })
macro_line|#else
DECL|macro|hfsplus_kmap
mdefine_line|#define hfsplus_kmap(p)&t;&t;kmap(p)
DECL|macro|hfsplus_kunmap
mdefine_line|#define hfsplus_kunmap(p)&t;kunmap(p)
macro_line|#endif
DECL|macro|sb_bread512
mdefine_line|#define sb_bread512(sb, sec, data) ({&t;&t;&t;&bslash;&n;&t;struct buffer_head *__bh;&t;&t;&t;&bslash;&n;&t;sector_t __block;&t;&t;&t;&t;&bslash;&n;&t;loff_t __start;&t;&t;&t;&t;&t;&bslash;&n;&t;int __offset;&t;&t;&t;&t;&t;&bslash;&n;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;__start = (loff_t)(sec) &lt;&lt; HFSPLUS_SECTOR_SHIFT;&bslash;&n;&t;__block = __start &gt;&gt; (sb)-&gt;s_blocksize_bits;&t;&bslash;&n;&t;__offset = __start &amp; ((sb)-&gt;s_blocksize - 1);&t;&bslash;&n;&t;__bh = sb_bread((sb), __block);&t;&t;&t;&bslash;&n;&t;if (likely(__bh != NULL))&t;&t;&t;&bslash;&n;&t;&t;data = (void *)(__bh-&gt;b_data + __offset);&bslash;&n;&t;else&t;&t;&t;&t;&t;&t;&bslash;&n;&t;&t;data = NULL;&t;&t;&t;&t;&bslash;&n;&t;__bh;&t;&t;&t;&t;&t;&t;&bslash;&n;})
multiline_comment|/* time macros */
DECL|macro|__hfsp_mt2ut
mdefine_line|#define __hfsp_mt2ut(t)&t;&t;(be32_to_cpu(t) - 2082844800U)
DECL|macro|__hfsp_ut2mt
mdefine_line|#define __hfsp_ut2mt(t)&t;&t;(cpu_to_be32(t + 2082844800U))
multiline_comment|/* compatibility */
DECL|macro|hfsp_mt2ut
mdefine_line|#define hfsp_mt2ut(t)&t;&t;(struct timespec){ .tv_sec = __hfsp_mt2ut(t) }
DECL|macro|hfsp_ut2mt
mdefine_line|#define hfsp_ut2mt(t)&t;&t;__hfsp_ut2mt((t).tv_sec)
DECL|macro|hfsp_now2mt
mdefine_line|#define hfsp_now2mt()&t;&t;__hfsp_ut2mt(get_seconds())
DECL|macro|kdev_t_to_nr
mdefine_line|#define kdev_t_to_nr(x)&t;&t;(x)
macro_line|#endif
eof
