multiline_comment|/*&n; * bitmap.h - Defines for NTFS kernel bitmap handling.  Part of the Linux-NTFS&n; *&t;      project.&n; *&n; * Copyright (c) 2004 Anton Altaparmakov&n; *&n; * This program/include file is free software; you can redistribute it and/or&n; * modify it under the terms of the GNU General Public License as published&n; * by the Free Software Foundation; either version 2 of the License, or&n; * (at your option) any later version.&n; *&n; * This program/include file is distributed in the hope that it will be&n; * useful, but WITHOUT ANY WARRANTY; without even the implied warranty&n; * of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; * GNU General Public License for more details.&n; *&n; * You should have received a copy of the GNU General Public License&n; * along with this program (in the main directory of the Linux-NTFS&n; * distribution in the file COPYING); if not, write to the Free Software&n; * Foundation,Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA&n; */
macro_line|#ifndef _LINUX_NTFS_BITMAP_H
DECL|macro|_LINUX_NTFS_BITMAP_H
mdefine_line|#define _LINUX_NTFS_BITMAP_H
macro_line|#include &lt;linux/fs.h&gt;
macro_line|#include &quot;types.h&quot;
r_extern
r_int
id|__ntfs_bitmap_set_bits_in_run
c_func
(paren
r_struct
id|inode
op_star
id|vi
comma
r_const
id|s64
id|start_bit
comma
r_const
id|s64
id|count
comma
r_const
id|u8
id|value
comma
r_const
id|BOOL
id|is_rollback
)paren
suffix:semicolon
multiline_comment|/**&n; * ntfs_bitmap_set_bits_in_run - set a run of bits in a bitmap to a value&n; * @vi:&t;&t;&t;vfs inode describing the bitmap&n; * @start_bit:&t;&t;first bit to set&n; * @count:&t;&t;number of bits to set&n; * @value:&t;&t;value to set the bits to (i.e. 0 or 1)&n; *&n; * Set @count bits starting at bit @start_bit in the bitmap described by the&n; * vfs inode @vi to @value, where @value is either 0 or 1.&n; *&n; * Return 0 on success and -errno on error.&n; */
DECL|function|ntfs_bitmap_set_bits_in_run
r_static
r_inline
r_int
id|ntfs_bitmap_set_bits_in_run
c_func
(paren
r_struct
id|inode
op_star
id|vi
comma
r_const
id|s64
id|start_bit
comma
r_const
id|s64
id|count
comma
r_const
id|u8
id|value
)paren
(brace
r_return
id|__ntfs_bitmap_set_bits_in_run
c_func
(paren
id|vi
comma
id|start_bit
comma
id|count
comma
id|value
comma
id|FALSE
)paren
suffix:semicolon
)brace
multiline_comment|/**&n; * ntfs_bitmap_set_run - set a run of bits in a bitmap&n; * @vi:&t;&t;vfs inode describing the bitmap&n; * @start_bit:&t;first bit to set&n; * @count:&t;number of bits to set&n; *&n; * Set @count bits starting at bit @start_bit in the bitmap described by the&n; * vfs inode @vi.&n; *&n; * Return 0 on success and -errno on error.&n; */
DECL|function|ntfs_bitmap_set_run
r_static
r_inline
r_int
id|ntfs_bitmap_set_run
c_func
(paren
r_struct
id|inode
op_star
id|vi
comma
r_const
id|s64
id|start_bit
comma
r_const
id|s64
id|count
)paren
(brace
r_return
id|ntfs_bitmap_set_bits_in_run
c_func
(paren
id|vi
comma
id|start_bit
comma
id|count
comma
l_int|1
)paren
suffix:semicolon
)brace
multiline_comment|/**&n; * ntfs_bitmap_clear_run - clear a run of bits in a bitmap&n; * @vi:&t;&t;vfs inode describing the bitmap&n; * @start_bit:&t;first bit to clear&n; * @count:&t;number of bits to clear&n; *&n; * Clear @count bits starting at bit @start_bit in the bitmap described by the&n; * vfs inode @vi.&n; *&n; * Return 0 on success and -errno on error.&n; */
DECL|function|ntfs_bitmap_clear_run
r_static
r_inline
r_int
id|ntfs_bitmap_clear_run
c_func
(paren
r_struct
id|inode
op_star
id|vi
comma
r_const
id|s64
id|start_bit
comma
r_const
id|s64
id|count
)paren
(brace
r_return
id|ntfs_bitmap_set_bits_in_run
c_func
(paren
id|vi
comma
id|start_bit
comma
id|count
comma
l_int|0
)paren
suffix:semicolon
)brace
multiline_comment|/**&n; * ntfs_bitmap_set_bit - set a bit in a bitmap&n; * @vi:&t;&t;vfs inode describing the bitmap&n; * @bit:&t;bit to set&n; *&n; * Set bit @bit in the bitmap described by the vfs inode @vi.&n; *&n; * Return 0 on success and -errno on error.&n; */
DECL|function|ntfs_bitmap_set_bit
r_static
r_inline
r_int
id|ntfs_bitmap_set_bit
c_func
(paren
r_struct
id|inode
op_star
id|vi
comma
r_const
id|s64
id|bit
)paren
(brace
r_return
id|ntfs_bitmap_set_run
c_func
(paren
id|vi
comma
id|bit
comma
l_int|1
)paren
suffix:semicolon
)brace
multiline_comment|/**&n; * ntfs_bitmap_clear_bit - clear a bit in a bitmap&n; * @vi:&t;&t;vfs inode describing the bitmap&n; * @bit:&t;bit to clear&n; *&n; * Clear bit @bit in the bitmap described by the vfs inode @vi.&n; *&n; * Return 0 on success and -errno on error.&n; */
DECL|function|ntfs_bitmap_clear_bit
r_static
r_inline
r_int
id|ntfs_bitmap_clear_bit
c_func
(paren
r_struct
id|inode
op_star
id|vi
comma
r_const
id|s64
id|bit
)paren
(brace
r_return
id|ntfs_bitmap_clear_run
c_func
(paren
id|vi
comma
id|bit
comma
l_int|1
)paren
suffix:semicolon
)brace
macro_line|#endif /* defined _LINUX_NTFS_BITMAP_H */
eof
