multiline_comment|/* -*- mode: c; c-basic-offset: 8; indent-tabs-mode: nil; -*-&n; * vim:expandtab:shiftwidth=8:tabstop=8:&n; *&n; *  Copyright (C) 2001, 2002 Cluster File Systems, Inc.&n; *  Copyright (C) 2001 Tacitus Systems, Inc.&n; *  Copyright (C) 2000 Stelias Computing, Inc.&n; *  Copyright (C) 2000 Red Hat, Inc.&n; *  Copyright (C) 2000 TurboLinux, Inc.&n; *  Copyright (C) 2000 Los Alamos National Laboratory.&n; *&n; *   This file is part of InterMezzo, http://www.inter-mezzo.org.&n; *&n; *   InterMezzo is free software; you can redistribute it and/or&n; *   modify it under the terms of version 2 of the GNU General Public&n; *   License as published by the Free Software Foundation.&n; *&n; *   InterMezzo is distributed in the hope that it will be useful,&n; *   but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *   GNU General Public License for more details.&n; *&n; *   You should have received a copy of the GNU General Public License&n; *   along with InterMezzo; if not, write to the Free Software&n; *   Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.&n; */
macro_line|#ifndef __INTERMEZZO_FS_H_
DECL|macro|__INTERMEZZO_FS_H_
mdefine_line|#define __INTERMEZZO_FS_H_ 1
macro_line|#include &quot;intermezzo_lib.h&quot;
macro_line|#include &quot;intermezzo_idl.h&quot;
macro_line|#ifdef __KERNEL__
DECL|typedef|uuid_t
r_typedef
id|__u8
id|uuid_t
(braket
l_int|16
)braket
suffix:semicolon
macro_line|#else
macro_line|# include &lt;uuid/uuid.h&gt;
macro_line|#endif
DECL|struct|lento_vfs_context
r_struct
id|lento_vfs_context
(brace
DECL|member|kml_offset
id|__u64
id|kml_offset
suffix:semicolon
DECL|member|updated_time
r_struct
id|timespec
id|updated_time
suffix:semicolon
DECL|member|remote_ino
id|__u64
id|remote_ino
suffix:semicolon
DECL|member|remote_generation
id|__u64
id|remote_generation
suffix:semicolon
DECL|member|slot_offset
id|__u32
id|slot_offset
suffix:semicolon
DECL|member|recno
id|__u32
id|recno
suffix:semicolon
DECL|member|flags
id|__u32
id|flags
suffix:semicolon
DECL|member|uuid
id|uuid_t
id|uuid
suffix:semicolon
DECL|member|remote_version
r_struct
id|presto_version
id|remote_version
suffix:semicolon
)brace
suffix:semicolon
r_static
r_inline
r_int
id|izo_ioctl_is_invalid
c_func
(paren
r_struct
id|izo_ioctl_data
op_star
id|data
)paren
suffix:semicolon
macro_line|#ifdef __KERNEL__
macro_line|# include &lt;linux/smp.h&gt;
macro_line|# include &lt;linux/fsfilter.h&gt;
macro_line|# include &lt;linux/mount.h&gt;
macro_line|# include &lt;linux/slab.h&gt;
macro_line|# include &lt;linux/vmalloc.h&gt;
macro_line|# include &lt;linux/smp_lock.h&gt;
multiline_comment|/* fixups for fs.h */
macro_line|# ifndef fs_down
DECL|macro|fs_down
macro_line|#  define fs_down(sem) down(sem)
macro_line|# endif
macro_line|# ifndef fs_up
DECL|macro|fs_up
macro_line|#  define fs_up(sem) up(sem)
macro_line|# endif
DECL|macro|KML_IDLE
macro_line|# define KML_IDLE                        0
DECL|macro|KML_DECODE
macro_line|# define KML_DECODE                      1
DECL|macro|KML_OPTIMIZE
macro_line|# define KML_OPTIMIZE                    2
DECL|macro|KML_REINT
macro_line|# define KML_REINT                       3
DECL|macro|KML_OPEN_REINT
macro_line|# define KML_OPEN_REINT                  0x0100
DECL|macro|KML_REINT_BEGIN
macro_line|# define KML_REINT_BEGIN                 0x0200
DECL|macro|KML_BACKFETCH
macro_line|# define KML_BACKFETCH                   0x0400
DECL|macro|KML_REINT_END
macro_line|# define KML_REINT_END                   0x0800
DECL|macro|KML_CLOSE_REINT
macro_line|# define KML_CLOSE_REINT                 0x1000
DECL|macro|KML_REINT_MAXBUF
macro_line|# define KML_REINT_MAXBUF                (64 * 1024)
DECL|macro|CACHE_CLIENT_RO
macro_line|# define CACHE_CLIENT_RO       0x4
DECL|macro|CACHE_LENTO_RO
macro_line|# define CACHE_LENTO_RO        0x8
multiline_comment|/* global variables */
r_extern
r_int
id|presto_debug
suffix:semicolon
r_extern
r_int
id|presto_print_entry
suffix:semicolon
r_extern
r_int
id|presto_kmemory
suffix:semicolon
r_extern
r_int
id|presto_vmemory
suffix:semicolon
DECL|macro|PRESTO_DEBUG
macro_line|# define PRESTO_DEBUG
macro_line|# ifdef PRESTO_DEBUG
multiline_comment|/* debugging masks */
DECL|macro|D_SUPER
macro_line|#  define D_SUPER       1
DECL|macro|D_INODE
macro_line|#  define D_INODE       2
DECL|macro|D_FILE
macro_line|#  define D_FILE        4
DECL|macro|D_CACHE
macro_line|#  define D_CACHE       8  /* cache debugging */
DECL|macro|D_MALLOC
macro_line|#  define D_MALLOC     16  /* print malloc, de-alloc information */
DECL|macro|D_JOURNAL
macro_line|#  define D_JOURNAL    32
DECL|macro|D_UPCALL
macro_line|#  define D_UPCALL     64  /* up and downcall debugging */
DECL|macro|D_PSDEV
macro_line|#  define D_PSDEV     128
DECL|macro|D_PIOCTL
macro_line|#  define D_PIOCTL    256
DECL|macro|D_SPECIAL
macro_line|#  define D_SPECIAL   512
DECL|macro|D_TIMING
macro_line|#  define D_TIMING   1024
DECL|macro|D_DOWNCALL
macro_line|#  define D_DOWNCALL 2048
DECL|macro|D_KML
macro_line|#  define D_KML      4096
DECL|macro|D_FSDATA
macro_line|#  define D_FSDATA   8192
DECL|macro|CDEBUG
macro_line|#  define CDEBUG(mask, format, a...)                                    &bslash;&n;        do {                                                            &bslash;&n;                if (presto_debug &amp; mask) {                              &bslash;&n;                        printk(&quot;(%s:%s,l. %d %d): &quot; format, __FILE__,   &bslash;&n;                               __FUNCTION__, __LINE__, current-&gt;pid     &bslash;&n;                               , ## a);                                 &bslash;&n;                }                                                       &bslash;&n;        } while (0)
DECL|macro|CERROR
mdefine_line|#define CERROR(format, a...)                                            &bslash;&n;do {                                                                    &bslash;&n;        printk(&quot;(%s:%s,l. %d %d): &quot; format, __FILE__, __FUNCTION__,     &bslash;&n;               __LINE__, current-&gt;pid , ## a);                          &bslash;&n;} while (0)
DECL|macro|ENTRY
macro_line|#  define ENTRY                                                         &bslash;&n;        if (presto_print_entry)                                         &bslash;&n;                printk(&quot;Process %d entered %s&bslash;n&quot;, current-&gt;pid, __FUNCTION__)
DECL|macro|EXIT
macro_line|#  define EXIT                                                          &bslash;&n;        if (presto_print_entry)                                         &bslash;&n;                printk(&quot;Process %d leaving %s at %d&bslash;n&quot;, current-&gt;pid,   &bslash;&n;                       __FUNCTION__, __LINE__)
DECL|macro|presto_kmem_inc
macro_line|#  define presto_kmem_inc(ptr, size) presto_kmemory += (size)
DECL|macro|presto_kmem_dec
macro_line|#  define presto_kmem_dec(ptr, size) presto_kmemory -= (size)
DECL|macro|presto_vmem_inc
macro_line|#  define presto_vmem_inc(ptr, size) presto_vmemory += (size)
DECL|macro|presto_vmem_dec
macro_line|#  define presto_vmem_dec(ptr, size) presto_vmemory -= (size)
macro_line|# else /* !PRESTO_DEBUG */
DECL|macro|CDEBUG
macro_line|#  define CDEBUG(mask, format, a...) do {} while (0)
DECL|macro|ENTRY
macro_line|#  define ENTRY do {} while (0)
DECL|macro|EXIT
macro_line|#  define EXIT do {} while (0)
DECL|macro|presto_kmem_inc
macro_line|#  define presto_kmem_inc(ptr, size) do {} while (0)
DECL|macro|presto_kmem_dec
macro_line|#  define presto_kmem_dec(ptr, size) do {} while (0)
DECL|macro|presto_vmem_inc
macro_line|#  define presto_vmem_inc(ptr, size) do {} while (0)
DECL|macro|presto_vmem_dec
macro_line|#  define presto_vmem_dec(ptr, size) do {} while (0)
macro_line|# endif /* PRESTO_DEBUG */
DECL|struct|run_ctxt
r_struct
id|run_ctxt
(brace
DECL|member|pwdmnt
r_struct
id|vfsmount
op_star
id|pwdmnt
suffix:semicolon
DECL|member|pwd
r_struct
id|dentry
op_star
id|pwd
suffix:semicolon
DECL|member|rootmnt
r_struct
id|vfsmount
op_star
id|rootmnt
suffix:semicolon
DECL|member|root
r_struct
id|dentry
op_star
id|root
suffix:semicolon
DECL|member|fsuid
id|uid_t
id|fsuid
suffix:semicolon
DECL|member|fsgid
id|gid_t
id|fsgid
suffix:semicolon
DECL|member|fs
id|mm_segment_t
id|fs
suffix:semicolon
DECL|member|ngroups
r_int
id|ngroups
suffix:semicolon
DECL|member|groups
id|gid_t
id|groups
(braket
id|NGROUPS
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|function|push_ctxt
r_static
r_inline
r_void
id|push_ctxt
c_func
(paren
r_struct
id|run_ctxt
op_star
id|save
comma
r_struct
id|run_ctxt
op_star
r_new
)paren
(brace
r_int
id|i
suffix:semicolon
id|save-&gt;fs
op_assign
id|get_fs
c_func
(paren
)paren
suffix:semicolon
id|save-&gt;pwd
op_assign
id|dget
c_func
(paren
id|current-&gt;fs-&gt;pwd
)paren
suffix:semicolon
id|save-&gt;pwdmnt
op_assign
id|mntget
c_func
(paren
id|current-&gt;fs-&gt;pwdmnt
)paren
suffix:semicolon
id|save-&gt;fsgid
op_assign
id|current-&gt;fsgid
suffix:semicolon
id|save-&gt;fsuid
op_assign
id|current-&gt;fsuid
suffix:semicolon
id|save-&gt;root
op_assign
id|current-&gt;fs-&gt;root
suffix:semicolon
id|save-&gt;rootmnt
op_assign
id|current-&gt;fs-&gt;rootmnt
suffix:semicolon
id|save-&gt;ngroups
op_assign
id|current-&gt;ngroups
suffix:semicolon
r_for
c_loop
(paren
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|current-&gt;ngroups
suffix:semicolon
id|i
op_increment
)paren
id|save-&gt;groups
(braket
id|i
)braket
op_assign
id|current-&gt;groups
(braket
id|i
)braket
suffix:semicolon
id|set_fs
c_func
(paren
r_new
op_member_access_from_pointer
id|fs
)paren
suffix:semicolon
id|lock_kernel
c_func
(paren
)paren
suffix:semicolon
id|set_fs_pwd
c_func
(paren
id|current-&gt;fs
comma
r_new
op_member_access_from_pointer
id|pwdmnt
comma
r_new
op_member_access_from_pointer
id|pwd
)paren
suffix:semicolon
r_if
c_cond
(paren
r_new
op_member_access_from_pointer
id|root
)paren
id|set_fs_root
c_func
(paren
id|current-&gt;fs
comma
r_new
op_member_access_from_pointer
id|rootmnt
comma
r_new
op_member_access_from_pointer
id|root
)paren
suffix:semicolon
id|unlock_kernel
c_func
(paren
)paren
suffix:semicolon
id|current-&gt;fsuid
op_assign
r_new
op_member_access_from_pointer
id|fsuid
suffix:semicolon
id|current-&gt;fsgid
op_assign
r_new
op_member_access_from_pointer
id|fsgid
suffix:semicolon
r_if
c_cond
(paren
r_new
op_member_access_from_pointer
id|ngroups
OG
l_int|0
)paren
(brace
id|current-&gt;ngroups
op_assign
r_new
op_member_access_from_pointer
id|ngroups
suffix:semicolon
r_for
c_loop
(paren
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
r_new
op_member_access_from_pointer
id|ngroups
suffix:semicolon
id|i
op_increment
)paren
id|current-&gt;groups
(braket
id|i
)braket
op_assign
r_new
op_member_access_from_pointer
id|groups
(braket
id|i
)braket
suffix:semicolon
)brace
)brace
DECL|function|pop_ctxt
r_static
r_inline
r_void
id|pop_ctxt
c_func
(paren
r_struct
id|run_ctxt
op_star
id|saved
)paren
(brace
r_int
id|i
suffix:semicolon
id|set_fs
c_func
(paren
id|saved-&gt;fs
)paren
suffix:semicolon
id|lock_kernel
c_func
(paren
)paren
suffix:semicolon
id|set_fs_pwd
c_func
(paren
id|current-&gt;fs
comma
id|saved-&gt;pwdmnt
comma
id|saved-&gt;pwd
)paren
suffix:semicolon
r_if
c_cond
(paren
id|saved-&gt;root
)paren
id|set_fs_root
c_func
(paren
id|current-&gt;fs
comma
id|saved-&gt;rootmnt
comma
id|saved-&gt;root
)paren
suffix:semicolon
id|unlock_kernel
c_func
(paren
)paren
suffix:semicolon
id|current-&gt;fsuid
op_assign
id|saved-&gt;fsuid
suffix:semicolon
id|current-&gt;fsgid
op_assign
id|saved-&gt;fsgid
suffix:semicolon
id|current-&gt;ngroups
op_assign
id|saved-&gt;ngroups
suffix:semicolon
r_for
c_loop
(paren
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|saved-&gt;ngroups
suffix:semicolon
id|i
op_increment
)paren
id|current-&gt;groups
(braket
id|i
)braket
op_assign
id|saved-&gt;groups
(braket
id|i
)braket
suffix:semicolon
id|mntput
c_func
(paren
id|saved-&gt;pwdmnt
)paren
suffix:semicolon
id|dput
c_func
(paren
id|saved-&gt;pwd
)paren
suffix:semicolon
)brace
DECL|function|presto_d2d
r_static
r_inline
r_struct
id|presto_dentry_data
op_star
id|presto_d2d
c_func
(paren
r_struct
id|dentry
op_star
id|dentry
)paren
(brace
r_return
(paren
r_struct
id|presto_dentry_data
op_star
)paren
(paren
id|dentry-&gt;d_fsdata
)paren
suffix:semicolon
)brace
DECL|struct|presto_cache
r_struct
id|presto_cache
(brace
DECL|member|cache_lock
id|spinlock_t
id|cache_lock
suffix:semicolon
DECL|member|cache_reserved
id|loff_t
id|cache_reserved
suffix:semicolon
DECL|member|cache_vfsmount
r_struct
id|vfsmount
op_star
id|cache_vfsmount
suffix:semicolon
DECL|member|cache_sb
r_struct
id|super_block
op_star
id|cache_sb
suffix:semicolon
DECL|member|cache_root
r_struct
id|dentry
op_star
id|cache_root
suffix:semicolon
DECL|member|cache_chain
r_struct
id|list_head
id|cache_chain
suffix:semicolon
multiline_comment|/* for the dev/cache hash */
DECL|member|cache_flags
r_int
id|cache_flags
suffix:semicolon
DECL|member|cache_type
r_char
op_star
id|cache_type
suffix:semicolon
multiline_comment|/* filesystem type of cache */
DECL|member|cache_filter
r_struct
id|filter_fs
op_star
id|cache_filter
suffix:semicolon
DECL|member|cache_psdev
r_struct
id|upc_channel
op_star
id|cache_psdev
suffix:semicolon
multiline_comment|/* points to channel used */
DECL|member|cache_channel_list
r_struct
id|list_head
id|cache_channel_list
suffix:semicolon
DECL|member|cache_fset_list
r_struct
id|list_head
id|cache_fset_list
suffix:semicolon
multiline_comment|/* filesets mounted in cache */
)brace
suffix:semicolon
DECL|struct|presto_log_fd
r_struct
id|presto_log_fd
(brace
DECL|member|fd_lock
id|rwlock_t
id|fd_lock
suffix:semicolon
DECL|member|fd_offset
id|loff_t
id|fd_offset
suffix:semicolon
multiline_comment|/* offset where next record should go */
DECL|member|fd_file
r_struct
id|file
op_star
id|fd_file
suffix:semicolon
DECL|member|fd_truncating
r_int
id|fd_truncating
suffix:semicolon
DECL|member|fd_recno
r_int
r_int
id|fd_recno
suffix:semicolon
multiline_comment|/* last recno written */
DECL|member|fd_reservations
r_struct
id|list_head
id|fd_reservations
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* file sets */
DECL|macro|CHUNK_BITS
macro_line|# define CHUNK_BITS  16
DECL|struct|presto_file_set
r_struct
id|presto_file_set
(brace
DECL|member|fset_list
r_struct
id|list_head
id|fset_list
suffix:semicolon
DECL|member|fset_kml
r_struct
id|presto_log_fd
id|fset_kml
suffix:semicolon
DECL|member|fset_lml
r_struct
id|presto_log_fd
id|fset_lml
suffix:semicolon
DECL|member|fset_rcvd
r_struct
id|presto_log_fd
id|fset_rcvd
suffix:semicolon
DECL|member|fset_clients
r_struct
id|list_head
op_star
id|fset_clients
suffix:semicolon
multiline_comment|/* cache of clients */
DECL|member|fset_dentry
r_struct
id|dentry
op_star
id|fset_dentry
suffix:semicolon
DECL|member|fset_mnt
r_struct
id|vfsmount
op_star
id|fset_mnt
suffix:semicolon
DECL|member|fset_cache
r_struct
id|presto_cache
op_star
id|fset_cache
suffix:semicolon
DECL|member|fset_lento_recno
r_int
r_int
id|fset_lento_recno
suffix:semicolon
multiline_comment|/* last recno mentioned to lento */
DECL|member|fset_lento_off
id|loff_t
id|fset_lento_off
suffix:semicolon
multiline_comment|/* last offset mentioned to lento */
DECL|member|fset_kml_logical_off
id|loff_t
id|fset_kml_logical_off
suffix:semicolon
multiline_comment|/* logical offset of kml file byte 0 */
DECL|member|fset_name
r_char
op_star
id|fset_name
suffix:semicolon
DECL|member|fset_flags
r_int
id|fset_flags
suffix:semicolon
DECL|member|fset_chunkbits
r_int
id|fset_chunkbits
suffix:semicolon
DECL|member|fset_reint_buf
r_char
op_star
id|fset_reint_buf
suffix:semicolon
multiline_comment|/* temporary buffer holds kml during reint */
DECL|member|fset_permit_lock
id|spinlock_t
id|fset_permit_lock
suffix:semicolon
DECL|member|fset_permit_count
r_int
id|fset_permit_count
suffix:semicolon
DECL|member|fset_permit_upcall_count
r_int
id|fset_permit_upcall_count
suffix:semicolon
multiline_comment|/* This queue is used both for processes waiting for the kernel to give&n;         * up the permit as well as processes waiting for the kernel to be given&n;         * the permit, depending on the state of FSET_HASPERMIT. */
DECL|member|fset_permit_queue
id|wait_queue_head_t
id|fset_permit_queue
suffix:semicolon
DECL|member|fset_file_maxio
id|loff_t
id|fset_file_maxio
suffix:semicolon
multiline_comment|/* writing more than this causes a close */
DECL|member|kml_truncate_size
r_int
r_int
r_int
id|kml_truncate_size
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* This is the default number of bytes written before a close is recorded*/
DECL|macro|FSET_DEFAULT_MAX_FILEIO
mdefine_line|#define FSET_DEFAULT_MAX_FILEIO (1024&lt;&lt;10)
r_struct
id|dentry
op_star
id|presto_tmpfs_ilookup
c_func
(paren
r_struct
id|inode
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|dentry
comma
id|ino_t
id|ino
comma
r_int
r_int
id|generation
)paren
suffix:semicolon
r_struct
id|dentry
op_star
id|presto_iget_ilookup
c_func
(paren
r_struct
id|inode
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|dentry
comma
id|ino_t
id|ino
comma
r_int
r_int
id|generation
)paren
suffix:semicolon
r_struct
id|dentry
op_star
id|presto_add_ilookup_dentry
c_func
(paren
r_struct
id|dentry
op_star
id|parent
comma
r_struct
id|dentry
op_star
id|real
)paren
suffix:semicolon
DECL|struct|journal_ops
r_struct
id|journal_ops
(brace
DECL|member|tr_all_data
r_int
(paren
op_star
id|tr_all_data
)paren
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
DECL|member|tr_avail
id|loff_t
(paren
op_star
id|tr_avail
)paren
(paren
r_struct
id|presto_cache
op_star
id|fset
comma
r_struct
id|super_block
op_star
)paren
suffix:semicolon
DECL|member|tr_start
r_void
op_star
(paren
op_star
id|tr_start
)paren
(paren
r_struct
id|presto_file_set
op_star
comma
r_struct
id|inode
op_star
comma
r_int
id|op
)paren
suffix:semicolon
DECL|member|tr_commit
r_void
(paren
op_star
id|tr_commit
)paren
(paren
r_struct
id|presto_file_set
op_star
comma
r_void
op_star
id|handle
)paren
suffix:semicolon
DECL|member|tr_journal_data
r_void
(paren
op_star
id|tr_journal_data
)paren
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
DECL|member|tr_ilookup
r_struct
id|dentry
op_star
(paren
op_star
id|tr_ilookup
)paren
(paren
r_struct
id|inode
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|dentry
comma
id|ino_t
id|ino
comma
r_int
r_int
id|generation
)paren
suffix:semicolon
DECL|member|tr_add_ilookup
r_struct
id|dentry
op_star
(paren
op_star
id|tr_add_ilookup
)paren
(paren
r_struct
id|dentry
op_star
id|parent
comma
r_struct
id|dentry
op_star
id|real
)paren
suffix:semicolon
)brace
suffix:semicolon
r_extern
r_struct
id|journal_ops
id|presto_ext2_journal_ops
suffix:semicolon
r_extern
r_struct
id|journal_ops
id|presto_ext3_journal_ops
suffix:semicolon
r_extern
r_struct
id|journal_ops
id|presto_tmpfs_journal_ops
suffix:semicolon
r_extern
r_struct
id|journal_ops
id|presto_xfs_journal_ops
suffix:semicolon
r_extern
r_struct
id|journal_ops
id|presto_reiserfs_journal_ops
suffix:semicolon
r_extern
r_struct
id|journal_ops
id|presto_obdfs_journal_ops
suffix:semicolon
DECL|macro|LENTO_FL_KML
macro_line|# define LENTO_FL_KML            0x0001
DECL|macro|LENTO_FL_EXPECT
macro_line|# define LENTO_FL_EXPECT         0x0002
DECL|macro|LENTO_FL_VFSCHECK
macro_line|# define LENTO_FL_VFSCHECK       0x0004
DECL|macro|LENTO_FL_JUSTLOG
macro_line|# define LENTO_FL_JUSTLOG        0x0008
DECL|macro|LENTO_FL_WRITE_KML
macro_line|# define LENTO_FL_WRITE_KML      0x0010
DECL|macro|LENTO_FL_CANCEL_LML
macro_line|# define LENTO_FL_CANCEL_LML     0x0020
DECL|macro|LENTO_FL_WRITE_EXPECT
macro_line|# define LENTO_FL_WRITE_EXPECT   0x0040
DECL|macro|LENTO_FL_IGNORE_TIME
macro_line|# define LENTO_FL_IGNORE_TIME    0x0080
DECL|macro|LENTO_FL_TOUCH_PARENT
macro_line|# define LENTO_FL_TOUCH_PARENT   0x0100
DECL|macro|LENTO_FL_TOUCH_NEWOBJ
macro_line|# define LENTO_FL_TOUCH_NEWOBJ   0x0200
DECL|macro|LENTO_FL_SET_DDFILEID
macro_line|# define LENTO_FL_SET_DDFILEID   0x0400
r_struct
id|presto_cache
op_star
id|presto_get_cache
c_func
(paren
r_struct
id|inode
op_star
id|inode
)paren
suffix:semicolon
r_int
id|presto_sprint_mounts
c_func
(paren
r_char
op_star
id|buf
comma
r_int
id|buflen
comma
r_int
id|minor
)paren
suffix:semicolon
r_struct
id|presto_file_set
op_star
id|presto_fset
c_func
(paren
r_struct
id|dentry
op_star
id|de
)paren
suffix:semicolon
r_int
id|presto_journal
c_func
(paren
r_struct
id|dentry
op_star
id|dentry
comma
r_char
op_star
id|buf
comma
r_int
id|size
)paren
suffix:semicolon
r_int
id|presto_fwrite
c_func
(paren
r_struct
id|file
op_star
id|file
comma
r_const
r_char
op_star
id|str
comma
r_int
id|len
comma
id|loff_t
op_star
id|off
)paren
suffix:semicolon
r_int
id|presto_ispresto
c_func
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
multiline_comment|/* super.c */
r_extern
r_struct
id|file_system_type
id|presto_fs_type
suffix:semicolon
r_extern
r_int
id|init_intermezzo_fs
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* fileset.c */
r_extern
r_int
id|izo_prepare_fileset
c_func
(paren
r_struct
id|dentry
op_star
id|root
comma
r_char
op_star
id|fsetname
)paren
suffix:semicolon
r_char
op_star
id|izo_make_path
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_char
op_star
id|name
)paren
suffix:semicolon
r_struct
id|file
op_star
id|izo_fset_open
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_char
op_star
id|name
comma
r_int
id|flags
comma
r_int
id|mode
)paren
suffix:semicolon
multiline_comment|/* psdev.c */
r_int
id|izo_psdev_get_free_channel
c_func
(paren
r_void
)paren
suffix:semicolon
r_int
id|presto_psdev_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_int
id|izo_psdev_setpid
c_func
(paren
r_int
id|minor
)paren
suffix:semicolon
r_extern
r_void
id|presto_psdev_cleanup
c_func
(paren
r_void
)paren
suffix:semicolon
r_inline
r_int
id|presto_lento_up
c_func
(paren
r_int
id|minor
)paren
suffix:semicolon
r_int
id|izo_psdev_setchannel
c_func
(paren
r_struct
id|file
op_star
id|file
comma
r_int
id|fd
)paren
suffix:semicolon
multiline_comment|/* inode.c */
r_extern
r_struct
id|super_operations
id|presto_super_ops
suffix:semicolon
r_void
id|presto_set_ops
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|filter_fs
op_star
id|filter
)paren
suffix:semicolon
multiline_comment|/* dcache.c */
r_void
id|presto_frob_dop
c_func
(paren
r_struct
id|dentry
op_star
id|de
)paren
suffix:semicolon
r_char
op_star
id|presto_path
c_func
(paren
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|dentry
op_star
id|root
comma
r_char
op_star
id|buffer
comma
r_int
id|buflen
)paren
suffix:semicolon
r_inline
r_struct
id|presto_dentry_data
op_star
id|izo_alloc_ddata
c_func
(paren
r_void
)paren
suffix:semicolon
r_int
id|presto_set_dd
c_func
(paren
r_struct
id|dentry
op_star
)paren
suffix:semicolon
r_int
id|presto_init_ddata_cache
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|presto_cleanup_ddata_cache
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_struct
id|dentry_operations
id|presto_dentry_ops
suffix:semicolon
multiline_comment|/* dir.c */
r_extern
r_struct
id|inode_operations
id|presto_dir_iops
suffix:semicolon
r_extern
r_struct
id|inode_operations
id|presto_file_iops
suffix:semicolon
r_extern
r_struct
id|inode_operations
id|presto_sym_iops
suffix:semicolon
r_extern
r_struct
id|file_operations
id|presto_dir_fops
suffix:semicolon
r_extern
r_struct
id|file_operations
id|presto_file_fops
suffix:semicolon
r_extern
r_struct
id|file_operations
id|presto_sym_fops
suffix:semicolon
r_int
id|presto_setattr
c_func
(paren
r_struct
id|dentry
op_star
id|de
comma
r_struct
id|iattr
op_star
id|iattr
)paren
suffix:semicolon
r_int
id|presto_settime
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|newobj
comma
r_struct
id|dentry
op_star
id|parent
comma
r_struct
id|dentry
op_star
id|target
comma
r_struct
id|lento_vfs_context
op_star
id|ctx
comma
r_int
id|valid
)paren
suffix:semicolon
r_int
id|presto_ioctl
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|file
op_star
id|file
comma
r_int
r_int
id|cmd
comma
r_int
r_int
id|arg
)paren
suffix:semicolon
r_extern
r_int
id|presto_ilookup_uid
suffix:semicolon
DECL|macro|PRESTO_ILOOKUP_MAGIC
macro_line|# define PRESTO_ILOOKUP_MAGIC &quot;...ino:&quot;
DECL|macro|PRESTO_ILOOKUP_SEP
macro_line|# define PRESTO_ILOOKUP_SEP &squot;:&squot;
r_int
id|izo_dentry_is_ilookup
c_func
(paren
r_struct
id|dentry
op_star
comma
id|ino_t
op_star
id|id
comma
r_int
r_int
op_star
id|generation
)paren
suffix:semicolon
r_struct
id|dentry
op_star
id|presto_lookup
c_func
(paren
r_struct
id|inode
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|nameidata
op_star
id|nd
)paren
suffix:semicolon
DECL|struct|presto_dentry_data
r_struct
id|presto_dentry_data
(brace
DECL|member|dd_count
r_int
id|dd_count
suffix:semicolon
multiline_comment|/* how mnay dentries are using this dentry */
DECL|member|dd_fset
r_struct
id|presto_file_set
op_star
id|dd_fset
suffix:semicolon
DECL|member|dd_inodentry
r_struct
id|dentry
op_star
id|dd_inodentry
suffix:semicolon
DECL|member|dd_kml_offset
id|loff_t
id|dd_kml_offset
suffix:semicolon
DECL|member|dd_flags
r_int
id|dd_flags
suffix:semicolon
DECL|member|remote_ino
id|__u64
id|remote_ino
suffix:semicolon
DECL|member|remote_generation
id|__u64
id|remote_generation
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|presto_file_data
r_struct
id|presto_file_data
(brace
DECL|member|fd_do_lml
r_int
id|fd_do_lml
suffix:semicolon
DECL|member|fd_lml_offset
id|loff_t
id|fd_lml_offset
suffix:semicolon
DECL|member|fd_bytes_written
r_int
id|fd_bytes_written
suffix:semicolon
multiline_comment|/* authorization related data of file at open time */
DECL|member|fd_uid
id|uid_t
id|fd_uid
suffix:semicolon
DECL|member|fd_gid
id|gid_t
id|fd_gid
suffix:semicolon
DECL|member|fd_mode
id|mode_t
id|fd_mode
suffix:semicolon
multiline_comment|/* identification data of calling process */
DECL|member|fd_fsuid
id|uid_t
id|fd_fsuid
suffix:semicolon
DECL|member|fd_fsgid
id|gid_t
id|fd_fsgid
suffix:semicolon
DECL|member|fd_ngroups
r_int
id|fd_ngroups
suffix:semicolon
DECL|member|fd_groups
id|gid_t
id|fd_groups
(braket
id|NGROUPS_MAX
)braket
suffix:semicolon
multiline_comment|/* information how to complete the close operation */
DECL|member|fd_info
r_struct
id|lento_vfs_context
id|fd_info
suffix:semicolon
DECL|member|fd_version
r_struct
id|presto_version
id|fd_version
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* presto.c and Lento::Downcall */
r_int
id|presto_walk
c_func
(paren
r_const
r_char
op_star
id|name
comma
r_struct
id|nameidata
op_star
id|nd
)paren
suffix:semicolon
r_int
id|izo_clear_fsetroot
c_func
(paren
r_struct
id|dentry
op_star
id|dentry
)paren
suffix:semicolon
r_int
id|izo_clear_all_fsetroots
c_func
(paren
r_struct
id|presto_cache
op_star
id|cache
)paren
suffix:semicolon
r_int
id|presto_get_kmlsize
c_func
(paren
r_char
op_star
id|path
comma
id|__u64
op_star
id|size
)paren
suffix:semicolon
r_int
id|presto_get_lastrecno
c_func
(paren
r_char
op_star
id|path
comma
id|off_t
op_star
id|size
)paren
suffix:semicolon
r_int
id|presto_set_fsetroot
c_func
(paren
r_struct
id|dentry
op_star
id|dentry
comma
r_char
op_star
id|fsetname
comma
r_int
r_int
id|flags
)paren
suffix:semicolon
r_int
id|presto_set_fsetroot_from_ioc
c_func
(paren
r_struct
id|dentry
op_star
id|dentry
comma
r_char
op_star
id|fsetname
comma
r_int
r_int
id|flags
)paren
suffix:semicolon
r_inline
r_int
id|presto_is_read_only
c_func
(paren
r_struct
id|presto_file_set
op_star
)paren
suffix:semicolon
r_int
id|presto_truncate_lml
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
)paren
suffix:semicolon
r_int
id|lento_write_lml
c_func
(paren
r_char
op_star
id|path
comma
id|__u64
id|remote_ino
comma
id|__u32
id|remote_generation
comma
id|__u32
id|remote_version
comma
r_struct
id|presto_version
op_star
id|remote_file_version
)paren
suffix:semicolon
r_int
id|lento_complete_closes
c_func
(paren
r_char
op_star
id|path
)paren
suffix:semicolon
r_inline
r_int
id|presto_f2m
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
)paren
suffix:semicolon
r_int
id|presto_prep
c_func
(paren
r_struct
id|dentry
op_star
comma
r_struct
id|presto_cache
op_star
op_star
comma
r_struct
id|presto_file_set
op_star
op_star
)paren
suffix:semicolon
multiline_comment|/* cache.c */
r_extern
r_struct
id|presto_cache
op_star
id|presto_cache_init
c_func
(paren
r_void
)paren
suffix:semicolon
r_extern
r_inline
r_void
id|presto_cache_add
c_func
(paren
r_struct
id|presto_cache
op_star
id|cache
)paren
suffix:semicolon
r_extern
r_inline
r_void
id|presto_cache_init_hash
c_func
(paren
r_void
)paren
suffix:semicolon
r_struct
id|presto_cache
op_star
id|presto_cache_find
c_func
(paren
r_struct
id|super_block
op_star
id|sb
)paren
suffix:semicolon
DECL|macro|PRESTO_REQLOW
mdefine_line|#define PRESTO_REQLOW  (3 * 4096)
DECL|macro|PRESTO_REQHIGH
mdefine_line|#define PRESTO_REQHIGH (6 * 4096)
r_void
id|presto_release_space
c_func
(paren
r_struct
id|presto_cache
op_star
id|cache
comma
id|loff_t
id|req
)paren
suffix:semicolon
r_int
id|presto_reserve_space
c_func
(paren
r_struct
id|presto_cache
op_star
id|cache
comma
id|loff_t
id|req
)paren
suffix:semicolon
DECL|macro|PRESTO_DATA
mdefine_line|#define PRESTO_DATA             0x00000002 /* cached data is valid */
DECL|macro|PRESTO_ATTR
mdefine_line|#define PRESTO_ATTR             0x00000004 /* attributes cached */
DECL|macro|PRESTO_DONT_JOURNAL
mdefine_line|#define PRESTO_DONT_JOURNAL     0x00000008 /* things like .intermezzo/ */
r_struct
id|presto_file_set
op_star
id|presto_path2fileset
c_func
(paren
r_const
r_char
op_star
id|name
)paren
suffix:semicolon
r_int
id|izo_revoke_permit
c_func
(paren
r_struct
id|dentry
op_star
comma
id|uuid_t
id|uuid
)paren
suffix:semicolon
r_int
id|presto_chk
c_func
(paren
r_struct
id|dentry
op_star
id|dentry
comma
r_int
id|flag
)paren
suffix:semicolon
r_void
id|presto_set
c_func
(paren
r_struct
id|dentry
op_star
id|dentry
comma
r_int
id|flag
)paren
suffix:semicolon
r_int
id|presto_get_permit
c_func
(paren
r_struct
id|inode
op_star
id|inode
)paren
suffix:semicolon
r_int
id|presto_put_permit
c_func
(paren
r_struct
id|inode
op_star
id|inode
)paren
suffix:semicolon
r_int
id|presto_set_max_kml_size
c_func
(paren
r_const
r_char
op_star
id|path
comma
r_int
r_int
id|max_size
)paren
suffix:semicolon
r_int
id|izo_mark_dentry
c_func
(paren
r_struct
id|dentry
op_star
id|dentry
comma
r_int
op_logical_and
comma
r_int
op_logical_or
comma
r_int
op_star
id|res
)paren
suffix:semicolon
r_int
id|izo_mark_cache
c_func
(paren
r_struct
id|dentry
op_star
id|dentry
comma
r_int
id|and_bits
comma
r_int
id|or_bits
comma
r_int
op_star
)paren
suffix:semicolon
r_int
id|izo_mark_fset
c_func
(paren
r_struct
id|dentry
op_star
id|dentry
comma
r_int
id|and_bits
comma
r_int
id|or_bits
comma
r_int
op_star
)paren
suffix:semicolon
r_void
id|presto_getversion
c_func
(paren
r_struct
id|presto_version
op_star
id|pv
comma
r_struct
id|inode
op_star
id|inode
)paren
suffix:semicolon
r_int
id|presto_i2m
c_func
(paren
r_struct
id|inode
op_star
id|inode
)paren
suffix:semicolon
r_int
id|presto_c2m
c_func
(paren
r_struct
id|presto_cache
op_star
id|cache
)paren
suffix:semicolon
multiline_comment|/* file.c */
r_int
id|izo_purge_file
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_char
op_star
id|file
)paren
suffix:semicolon
r_int
id|presto_adjust_lml
c_func
(paren
r_struct
id|file
op_star
id|file
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
multiline_comment|/* journal.c */
DECL|struct|rec_info
r_struct
id|rec_info
(brace
DECL|member|offset
id|loff_t
id|offset
suffix:semicolon
DECL|member|size
r_int
id|size
suffix:semicolon
DECL|member|recno
r_int
id|recno
suffix:semicolon
DECL|member|is_kml
r_int
id|is_kml
suffix:semicolon
)brace
suffix:semicolon
r_void
id|presto_trans_commit
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_void
op_star
id|handle
)paren
suffix:semicolon
r_void
op_star
id|presto_trans_start
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|inode
op_star
id|inode
comma
r_int
id|op
)paren
suffix:semicolon
r_int
id|presto_fread
c_func
(paren
r_struct
id|file
op_star
id|file
comma
r_char
op_star
id|str
comma
r_int
id|len
comma
id|loff_t
op_star
id|off
)paren
suffix:semicolon
r_int
id|presto_clear_lml_close
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
id|loff_t
id|lml_offset
)paren
suffix:semicolon
r_int
id|presto_complete_lml
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
)paren
suffix:semicolon
r_int
id|presto_read_kml_logical_offset
c_func
(paren
r_struct
id|rec_info
op_star
id|recinfo
comma
r_struct
id|presto_file_set
op_star
id|fset
)paren
suffix:semicolon
r_int
id|presto_write_kml_logical_offset
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
)paren
suffix:semicolon
r_struct
id|file
op_star
id|presto_copy_kml_tail
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_int
r_int
r_int
id|start
)paren
suffix:semicolon
r_int
id|presto_finish_kml_truncate
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_int
r_int
r_int
id|offset
)paren
suffix:semicolon
r_int
id|izo_lookup_file
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_char
op_star
id|path
comma
r_struct
id|nameidata
op_star
id|nd
)paren
suffix:semicolon
r_int
id|izo_do_truncate
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
id|loff_t
id|length
comma
id|loff_t
id|size_check
)paren
suffix:semicolon
r_int
id|izo_log_close
c_func
(paren
r_struct
id|presto_log_fd
op_star
id|logfd
)paren
suffix:semicolon
r_struct
id|file
op_star
id|izo_log_open
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_char
op_star
id|name
comma
r_int
id|flags
)paren
suffix:semicolon
r_int
id|izo_init_kml_file
c_func
(paren
r_struct
id|presto_file_set
op_star
comma
r_struct
id|presto_log_fd
op_star
)paren
suffix:semicolon
r_int
id|izo_init_lml_file
c_func
(paren
r_struct
id|presto_file_set
op_star
comma
r_struct
id|presto_log_fd
op_star
)paren
suffix:semicolon
r_int
id|izo_init_last_rcvd_file
c_func
(paren
r_struct
id|presto_file_set
op_star
comma
r_struct
id|presto_log_fd
op_star
)paren
suffix:semicolon
multiline_comment|/* vfs.c */
multiline_comment|/* Extra data needed in the KML for rollback operations; this structure is&n; * passed around during the KML-writing process. */
DECL|struct|izo_rollback_data
r_struct
id|izo_rollback_data
(brace
DECL|member|rb_mode
id|__u32
id|rb_mode
suffix:semicolon
DECL|member|rb_rdev
id|__u32
id|rb_rdev
suffix:semicolon
DECL|member|rb_uid
id|__u64
id|rb_uid
suffix:semicolon
DECL|member|rb_gid
id|__u64
id|rb_gid
suffix:semicolon
)brace
suffix:semicolon
r_int
id|presto_write_last_rcvd
c_func
(paren
r_struct
id|rec_info
op_star
id|recinfo
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_void
id|izo_get_rollback_data
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|izo_rollback_data
op_star
id|rb
)paren
suffix:semicolon
r_int
id|presto_do_close
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|file
op_star
id|file
)paren
suffix:semicolon
r_int
id|presto_do_setattr
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|iattr
op_star
id|iattr
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|presto_do_create
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_int
id|mode
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|presto_do_link
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|old_dentry
comma
r_struct
id|dentry
op_star
id|new_dentry
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|presto_do_unlink
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|presto_do_symlink
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_const
r_char
op_star
id|name
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|presto_do_mkdir
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_int
id|mode
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|presto_do_rmdir
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|presto_do_mknod
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dir
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_int
id|mode
comma
id|dev_t
id|dev
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|do_rename
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|old_dir
comma
r_struct
id|dentry
op_star
id|old_dentry
comma
r_struct
id|dentry
op_star
id|new_dir
comma
r_struct
id|dentry
op_star
id|new_dentry
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|presto_do_statfs
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|kstatfs
op_star
id|buf
)paren
suffix:semicolon
r_int
id|lento_setattr
c_func
(paren
r_const
r_char
op_star
id|name
comma
r_struct
id|iattr
op_star
id|iattr
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_create
c_func
(paren
r_const
r_char
op_star
id|name
comma
r_int
id|mode
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_link
c_func
(paren
r_const
r_char
op_star
id|oldname
comma
r_const
r_char
op_star
id|newname
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_unlink
c_func
(paren
r_const
r_char
op_star
id|name
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_symlink
c_func
(paren
r_const
r_char
op_star
id|oldname
comma
r_const
r_char
op_star
id|newname
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_mkdir
c_func
(paren
r_const
r_char
op_star
id|name
comma
r_int
id|mode
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_rmdir
c_func
(paren
r_const
r_char
op_star
id|name
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_mknod
c_func
(paren
r_const
r_char
op_star
id|name
comma
r_int
id|mode
comma
id|dev_t
id|dev
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_rename
c_func
(paren
r_const
r_char
op_star
id|oldname
comma
r_const
r_char
op_star
id|newname
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|lento_iopen
c_func
(paren
r_const
r_char
op_star
id|name
comma
id|ino_t
id|ino
comma
r_int
r_int
id|generation
comma
r_int
id|flags
)paren
suffix:semicolon
multiline_comment|/* journal.c */
DECL|macro|JOURNAL_PAGE_SZ
mdefine_line|#define JOURNAL_PAGE_SZ  PAGE_SIZE
id|__inline__
r_int
id|presto_no_journal
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
)paren
suffix:semicolon
r_int
id|journal_fetch
c_func
(paren
r_int
id|minor
)paren
suffix:semicolon
r_int
id|presto_log
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|rec_info
op_star
id|rec
comma
r_const
r_char
op_star
id|buf
comma
r_int
id|size
comma
r_const
r_char
op_star
id|string1
comma
r_int
id|len1
comma
r_const
r_char
op_star
id|string2
comma
r_int
id|len2
comma
r_const
r_char
op_star
id|string3
comma
r_int
id|len3
)paren
suffix:semicolon
r_int
id|presto_get_fileid
c_func
(paren
r_int
id|minor
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
)paren
suffix:semicolon
r_int
id|presto_journal_setattr
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|presto_version
op_star
id|old_ver
comma
r_struct
id|izo_rollback_data
op_star
comma
r_struct
id|iattr
op_star
id|iattr
)paren
suffix:semicolon
r_int
id|presto_journal_create
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|presto_version
op_star
id|tgt_dir_ver
comma
r_struct
id|presto_version
op_star
id|new_file_ver
comma
r_int
id|mode
)paren
suffix:semicolon
r_int
id|presto_journal_link
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|src
comma
r_struct
id|dentry
op_star
id|tgt
comma
r_struct
id|presto_version
op_star
id|tgt_dir_ver
comma
r_struct
id|presto_version
op_star
id|new_link_ver
)paren
suffix:semicolon
r_int
id|presto_journal_unlink
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dir
comma
r_struct
id|presto_version
op_star
id|tgt_dir_ver
comma
r_struct
id|presto_version
op_star
id|old_file_ver
comma
r_struct
id|izo_rollback_data
op_star
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_char
op_star
id|old_target
comma
r_int
id|old_targetlen
)paren
suffix:semicolon
r_int
id|presto_journal_symlink
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_const
r_char
op_star
id|target
comma
r_struct
id|presto_version
op_star
id|tgt_dir_ver
comma
r_struct
id|presto_version
op_star
id|new_link_ver
)paren
suffix:semicolon
r_int
id|presto_journal_mkdir
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|presto_version
op_star
id|tgt_dir_ver
comma
r_struct
id|presto_version
op_star
id|new_dir_ver
comma
r_int
id|mode
)paren
suffix:semicolon
r_int
id|presto_journal_rmdir
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|presto_version
op_star
id|tgt_dir_ver
comma
r_struct
id|presto_version
op_star
id|old_dir_ver
comma
r_struct
id|izo_rollback_data
op_star
comma
r_int
id|len
comma
r_const
r_char
op_star
id|name
)paren
suffix:semicolon
r_int
id|presto_journal_mknod
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|dentry
comma
r_struct
id|presto_version
op_star
id|tgt_dir_ver
comma
r_struct
id|presto_version
op_star
id|new_node_ver
comma
r_int
id|mode
comma
r_int
id|dmajor
comma
r_int
id|dminor
)paren
suffix:semicolon
r_int
id|presto_journal_rename
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|dentry
op_star
id|src
comma
r_struct
id|dentry
op_star
id|tgt
comma
r_struct
id|presto_version
op_star
id|src_dir_ver
comma
r_struct
id|presto_version
op_star
id|tgt_dir_ver
)paren
suffix:semicolon
r_int
id|presto_journal_open
c_func
(paren
r_struct
id|rec_info
op_star
comma
r_struct
id|presto_file_set
op_star
comma
r_struct
id|dentry
op_star
comma
r_struct
id|presto_version
op_star
id|old_ver
)paren
suffix:semicolon
r_int
id|presto_journal_close
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
comma
r_struct
id|presto_file_data
op_star
comma
r_struct
id|dentry
op_star
comma
r_struct
id|presto_version
op_star
id|old_file_ver
comma
r_struct
id|presto_version
op_star
id|new_file_ver
)paren
suffix:semicolon
r_int
id|presto_write_lml_close
c_func
(paren
r_struct
id|rec_info
op_star
id|rec
comma
r_struct
id|presto_file_set
op_star
id|fset
comma
r_struct
id|file
op_star
id|file
comma
id|__u64
id|remote_ino
comma
id|__u64
id|remote_generation
comma
r_struct
id|presto_version
op_star
id|remote_version
comma
r_struct
id|presto_version
op_star
id|new_file_ver
)paren
suffix:semicolon
r_void
id|presto_log_op
c_func
(paren
r_void
op_star
id|data
comma
r_int
id|len
)paren
suffix:semicolon
id|loff_t
id|presto_kml_offset
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
)paren
suffix:semicolon
multiline_comment|/* upcall.c */
DECL|macro|SYNCHRONOUS
mdefine_line|#define SYNCHRONOUS 0
DECL|macro|ASYNCHRONOUS
mdefine_line|#define ASYNCHRONOUS 1
multiline_comment|/* asynchronous calls */
r_int
id|izo_upc_kml
c_func
(paren
r_int
id|minor
comma
id|__u64
id|offset
comma
id|__u32
id|first_recno
comma
id|__u64
id|length
comma
id|__u32
id|last_recno
comma
r_char
op_star
id|fsetname
)paren
suffix:semicolon
r_int
id|izo_upc_kml_truncate
c_func
(paren
r_int
id|minor
comma
id|__u64
id|length
comma
id|__u32
id|last_recno
comma
r_char
op_star
id|fsetname
)paren
suffix:semicolon
r_int
id|izo_upc_go_fetch_kml
c_func
(paren
r_int
id|minor
comma
r_char
op_star
id|fsetname
comma
id|uuid_t
id|uuid
comma
id|__u64
id|kmlsize
)paren
suffix:semicolon
r_int
id|izo_upc_backfetch
c_func
(paren
r_int
id|minor
comma
r_char
op_star
id|path
comma
r_char
op_star
id|fileset
comma
r_struct
id|lento_vfs_context
op_star
)paren
suffix:semicolon
multiline_comment|/* synchronous calls */
r_int
id|izo_upc_get_fileid
c_func
(paren
r_int
id|minor
comma
id|__u32
id|reclen
comma
r_char
op_star
id|rec
comma
id|__u32
id|pathlen
comma
r_char
op_star
id|path
comma
r_char
op_star
id|fsetname
)paren
suffix:semicolon
r_int
id|izo_upc_permit
c_func
(paren
r_int
id|minor
comma
r_struct
id|dentry
op_star
comma
id|__u32
id|pathlen
comma
r_char
op_star
id|path
comma
r_char
op_star
id|fset
)paren
suffix:semicolon
r_int
id|izo_upc_open
c_func
(paren
r_int
id|minor
comma
id|__u32
id|pathlen
comma
r_char
op_star
id|path
comma
r_char
op_star
id|fsetname
comma
r_struct
id|lento_vfs_context
op_star
id|info
)paren
suffix:semicolon
r_int
id|izo_upc_connect
c_func
(paren
r_int
id|minor
comma
id|__u64
id|ip_address
comma
id|__u64
id|port
comma
id|__u8
id|uuid
(braket
l_int|16
)braket
comma
r_int
id|client_flag
)paren
suffix:semicolon
r_int
id|izo_upc_revoke_permit
c_func
(paren
r_int
id|minor
comma
r_char
op_star
id|fsetname
comma
id|uuid_t
id|uuid
)paren
suffix:semicolon
r_int
id|izo_upc_set_kmlsize
c_func
(paren
r_int
id|minor
comma
r_char
op_star
id|fsetname
comma
id|uuid_t
id|uuid
comma
id|__u64
id|kmlsize
)paren
suffix:semicolon
r_int
id|izo_upc_client_make_branch
c_func
(paren
r_int
id|minor
comma
r_char
op_star
id|fsetname
)paren
suffix:semicolon
r_int
id|izo_upc_server_make_branch
c_func
(paren
r_int
id|minor
comma
r_char
op_star
id|fsetname
)paren
suffix:semicolon
r_int
id|izo_upc_branch_undo
c_func
(paren
r_int
id|minor
comma
r_char
op_star
id|fsetname
comma
r_char
op_star
id|branchname
)paren
suffix:semicolon
r_int
id|izo_upc_branch_redo
c_func
(paren
r_int
id|minor
comma
r_char
op_star
id|fsetname
comma
r_char
op_star
id|branchname
)paren
suffix:semicolon
r_int
id|izo_upc_repstatus
c_func
(paren
r_int
id|minor
comma
r_char
op_star
id|fsetname
comma
r_struct
id|izo_rcvd_rec
op_star
id|lr_server
)paren
suffix:semicolon
multiline_comment|/* general mechanism */
r_int
id|izo_upc_upcall
c_func
(paren
r_int
id|minor
comma
r_int
op_star
id|size
comma
r_struct
id|izo_upcall_hdr
op_star
comma
r_int
id|async
)paren
suffix:semicolon
multiline_comment|/* replicator.c */
r_int
id|izo_repstatus
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
id|__u64
id|client_kmlsize
comma
r_struct
id|izo_rcvd_rec
op_star
id|lr_client
comma
r_struct
id|izo_rcvd_rec
op_star
id|lr_server
)paren
suffix:semicolon
r_int
id|izo_rep_cache_init
c_func
(paren
r_struct
id|presto_file_set
op_star
)paren
suffix:semicolon
id|loff_t
id|izo_rcvd_get
c_func
(paren
r_struct
id|izo_rcvd_rec
op_star
comma
r_struct
id|presto_file_set
op_star
comma
r_char
op_star
id|uuid
)paren
suffix:semicolon
id|loff_t
id|izo_rcvd_write
c_func
(paren
r_struct
id|presto_file_set
op_star
comma
r_struct
id|izo_rcvd_rec
op_star
)paren
suffix:semicolon
id|loff_t
id|izo_rcvd_upd_remote
c_func
(paren
r_struct
id|presto_file_set
op_star
id|fset
comma
r_char
op_star
id|uuid
comma
id|__u64
id|remote_recno
comma
id|__u64
id|remote_offset
)paren
suffix:semicolon
multiline_comment|/* sysctl.c */
r_int
id|init_intermezzo_sysctl
c_func
(paren
r_void
)paren
suffix:semicolon
r_void
id|cleanup_intermezzo_sysctl
c_func
(paren
r_void
)paren
suffix:semicolon
multiline_comment|/* ext_attr.c */
multiline_comment|/* We will be more tolerant than the default ea patch with attr name sizes and&n; * the size of value. If these come via VFS from the default ea patches, the&n; * corresponding character strings will be truncated anyway. During journalling- * we journal length for both name and value. See journal_set_ext_attr.&n; */
DECL|macro|PRESTO_EXT_ATTR_NAME_MAX
mdefine_line|#define PRESTO_EXT_ATTR_NAME_MAX 128
DECL|macro|PRESTO_EXT_ATTR_VALUE_MAX
mdefine_line|#define PRESTO_EXT_ATTR_VALUE_MAX 8192
DECL|macro|PRESTO_ALLOC
mdefine_line|#define PRESTO_ALLOC(ptr, size)                                         &bslash;&n;do {                                                                    &bslash;&n;        long s = (size);                                                &bslash;&n;        (ptr) = kmalloc(s, GFP_KERNEL);                                 &bslash;&n;        if ((ptr) == NULL)                                              &bslash;&n;                CERROR(&quot;IZO: out of memory at %s:%d (trying to &quot;        &bslash;&n;                       &quot;allocate %ld)&bslash;n&quot;, __FILE__, __LINE__, s);       &bslash;&n;        else {                                                          &bslash;&n;                presto_kmem_inc((ptr), s);                              &bslash;&n;                memset((ptr), 0, s);                                    &bslash;&n;        }                                                               &bslash;&n;        CDEBUG(D_MALLOC, &quot;kmalloced: %ld at %p (tot %ld).&bslash;n&quot;,           &bslash;&n;               s, (ptr), presto_kmemory);                               &bslash;&n;} while (0)
DECL|macro|PRESTO_FREE
mdefine_line|#define PRESTO_FREE(ptr, size)                                          &bslash;&n;do {                                                                    &bslash;&n;        long s = (size);                                                &bslash;&n;        if ((ptr) == NULL) {                                            &bslash;&n;                CERROR(&quot;IZO: free NULL pointer (%ld bytes) at &quot;         &bslash;&n;                       &quot;%s:%d&bslash;n&quot;, s, __FILE__, __LINE__);               &bslash;&n;                break;                                                  &bslash;&n;        }                                                               &bslash;&n;        kfree(ptr);                                                     &bslash;&n;        CDEBUG(D_MALLOC, &quot;kfreed: %ld at %p (tot %ld).&bslash;n&quot;,              &bslash;&n;               s, (ptr), presto_kmemory);                               &bslash;&n;        presto_kmem_dec((ptr), s);                                      &bslash;&n;} while (0)
DECL|function|dentry_name_cmp
r_static
r_inline
r_int
id|dentry_name_cmp
c_func
(paren
r_struct
id|dentry
op_star
id|dentry
comma
r_char
op_star
id|name
)paren
(brace
r_return
(paren
id|strlen
c_func
(paren
id|name
)paren
op_eq
id|dentry-&gt;d_name.len
op_logical_and
id|memcmp
c_func
(paren
id|name
comma
id|dentry-&gt;d_name.name
comma
id|dentry-&gt;d_name.len
)paren
op_eq
l_int|0
)paren
suffix:semicolon
)brace
DECL|function|strdup
r_static
r_inline
r_char
op_star
id|strdup
c_func
(paren
r_char
op_star
id|str
)paren
(brace
r_char
op_star
id|tmp
suffix:semicolon
id|tmp
op_assign
id|kmalloc
c_func
(paren
id|strlen
c_func
(paren
id|str
)paren
op_plus
l_int|1
comma
id|GFP_KERNEL
)paren
suffix:semicolon
r_if
c_cond
(paren
id|tmp
)paren
id|memcpy
c_func
(paren
id|tmp
comma
id|str
comma
id|strlen
c_func
(paren
id|str
)paren
op_plus
l_int|1
)paren
suffix:semicolon
r_return
id|tmp
suffix:semicolon
)brace
multiline_comment|/* buffer MUST be at least the size of izo_ioctl_hdr */
DECL|function|izo_ioctl_getdata
r_static
r_inline
r_int
id|izo_ioctl_getdata
c_func
(paren
r_char
op_star
id|buf
comma
r_char
op_star
id|end
comma
r_void
op_star
id|arg
)paren
(brace
r_struct
id|izo_ioctl_hdr
op_star
id|hdr
suffix:semicolon
r_struct
id|izo_ioctl_data
op_star
id|data
suffix:semicolon
r_int
id|err
suffix:semicolon
id|ENTRY
suffix:semicolon
id|hdr
op_assign
(paren
r_struct
id|izo_ioctl_hdr
op_star
)paren
id|buf
suffix:semicolon
id|data
op_assign
(paren
r_struct
id|izo_ioctl_data
op_star
)paren
id|buf
suffix:semicolon
id|err
op_assign
id|copy_from_user
c_func
(paren
id|buf
comma
(paren
r_void
op_star
)paren
id|arg
comma
r_sizeof
(paren
op_star
id|hdr
)paren
)paren
suffix:semicolon
r_if
c_cond
(paren
id|err
)paren
(brace
id|EXIT
suffix:semicolon
r_return
id|err
suffix:semicolon
)brace
r_if
c_cond
(paren
id|hdr-&gt;ioc_version
op_ne
id|IZO_IOCTL_VERSION
)paren
(brace
id|CERROR
c_func
(paren
l_string|&quot;IZO: version mismatch kernel vs application&bslash;n&quot;
)paren
suffix:semicolon
r_return
op_minus
id|EINVAL
suffix:semicolon
)brace
r_if
c_cond
(paren
id|hdr-&gt;ioc_len
op_plus
id|buf
op_ge
id|end
)paren
(brace
id|CERROR
c_func
(paren
l_string|&quot;IZO: user buffer exceeds kernel buffer&bslash;n&quot;
)paren
suffix:semicolon
r_return
op_minus
id|EINVAL
suffix:semicolon
)brace
r_if
c_cond
(paren
id|hdr-&gt;ioc_len
OL
r_sizeof
(paren
r_struct
id|izo_ioctl_data
)paren
)paren
(brace
id|CERROR
c_func
(paren
l_string|&quot;IZO: user buffer too small for ioctl&bslash;n&quot;
)paren
suffix:semicolon
r_return
op_minus
id|EINVAL
suffix:semicolon
)brace
id|err
op_assign
id|copy_from_user
c_func
(paren
id|buf
comma
(paren
r_void
op_star
)paren
id|arg
comma
id|hdr-&gt;ioc_len
)paren
suffix:semicolon
r_if
c_cond
(paren
id|err
)paren
(brace
id|EXIT
suffix:semicolon
r_return
id|err
suffix:semicolon
)brace
r_if
c_cond
(paren
id|izo_ioctl_is_invalid
c_func
(paren
id|data
)paren
)paren
(brace
id|CERROR
c_func
(paren
l_string|&quot;IZO: ioctl not correctly formatted&bslash;n&quot;
)paren
suffix:semicolon
r_return
op_minus
id|EINVAL
suffix:semicolon
)brace
r_if
c_cond
(paren
id|data-&gt;ioc_inllen1
)paren
(brace
id|data-&gt;ioc_inlbuf1
op_assign
op_amp
id|data-&gt;ioc_bulk
(braket
l_int|0
)braket
suffix:semicolon
)brace
r_if
c_cond
(paren
id|data-&gt;ioc_inllen2
)paren
(brace
id|data-&gt;ioc_inlbuf2
op_assign
op_amp
id|data-&gt;ioc_bulk
(braket
l_int|0
)braket
op_plus
id|size_round
c_func
(paren
id|data-&gt;ioc_inllen1
)paren
suffix:semicolon
)brace
id|EXIT
suffix:semicolon
r_return
l_int|0
suffix:semicolon
)brace
DECL|macro|MYPATHLEN
macro_line|# define MYPATHLEN(buffer, path) ((buffer) + PAGE_SIZE - (path))
DECL|macro|free
macro_line|# define free kfree
DECL|macro|malloc
macro_line|# define malloc(a) kmalloc(a, GFP_KERNEL)
DECL|macro|printf
macro_line|# define printf printk
r_int
id|kml_reint_rec
c_func
(paren
r_struct
id|file
op_star
id|dir
comma
r_struct
id|izo_ioctl_data
op_star
id|data
)paren
suffix:semicolon
r_int
id|izo_get_fileid
c_func
(paren
r_struct
id|file
op_star
id|dir
comma
r_struct
id|izo_ioctl_data
op_star
id|data
)paren
suffix:semicolon
r_int
id|izo_set_fileid
c_func
(paren
r_struct
id|file
op_star
id|dir
comma
r_struct
id|izo_ioctl_data
op_star
id|data
)paren
suffix:semicolon
macro_line|#else /* __KERNEL__ */
macro_line|# include &lt;stdlib.h&gt;
macro_line|# include &lt;stdio.h&gt;
macro_line|# include &lt;sys/types.h&gt;
macro_line|# include &lt;sys/ioctl.h&gt;
macro_line|# include &lt;string.h&gt;
DECL|macro|printk
macro_line|# define printk printf
macro_line|# ifndef CERROR
DECL|macro|CERROR
macro_line|#   define CERROR printf
macro_line|# endif
DECL|macro|kmalloc
macro_line|# define kmalloc(a,b) malloc(a)
r_void
id|init_fsreintdata
(paren
r_void
)paren
suffix:semicolon
r_int
id|kml_fsreint
c_func
(paren
r_struct
id|kml_rec
op_star
id|rec
comma
r_char
op_star
id|basedir
)paren
suffix:semicolon
r_int
id|kml_iocreint
c_func
(paren
id|__u32
id|size
comma
r_char
op_star
id|ptr
comma
id|__u32
id|offset
comma
r_int
id|dird
comma
id|uuid_t
id|uuid
comma
id|__u32
id|generate_kml
)paren
suffix:semicolon
r_static
r_inline
r_int
id|izo_ioctl_packlen
c_func
(paren
r_struct
id|izo_ioctl_data
op_star
id|data
)paren
suffix:semicolon
DECL|function|izo_ioctl_init
r_static
r_inline
r_void
id|izo_ioctl_init
c_func
(paren
r_struct
id|izo_ioctl_data
op_star
id|data
)paren
(brace
id|memset
c_func
(paren
id|data
comma
l_int|0
comma
r_sizeof
(paren
op_star
id|data
)paren
)paren
suffix:semicolon
id|data-&gt;ioc_len
op_assign
r_sizeof
(paren
op_star
id|data
)paren
suffix:semicolon
id|data-&gt;ioc_version
op_assign
id|IZO_IOCTL_VERSION
suffix:semicolon
)brace
r_static
r_inline
r_int
DECL|function|izo_ioctl_pack
id|izo_ioctl_pack
c_func
(paren
r_struct
id|izo_ioctl_data
op_star
id|data
comma
r_char
op_star
op_star
id|pbuf
comma
r_int
id|max
)paren
(brace
r_char
op_star
id|ptr
suffix:semicolon
r_struct
id|izo_ioctl_data
op_star
id|overlay
suffix:semicolon
id|data-&gt;ioc_len
op_assign
id|izo_ioctl_packlen
c_func
(paren
id|data
)paren
suffix:semicolon
id|data-&gt;ioc_version
op_assign
id|IZO_IOCTL_VERSION
suffix:semicolon
r_if
c_cond
(paren
op_star
id|pbuf
op_logical_and
id|izo_ioctl_packlen
c_func
(paren
id|data
)paren
OG
id|max
)paren
r_return
l_int|1
suffix:semicolon
r_if
c_cond
(paren
op_star
id|pbuf
op_eq
l_int|NULL
)paren
op_star
id|pbuf
op_assign
id|malloc
c_func
(paren
id|data-&gt;ioc_len
)paren
suffix:semicolon
r_if
c_cond
(paren
op_star
id|pbuf
op_eq
l_int|NULL
)paren
r_return
l_int|1
suffix:semicolon
id|overlay
op_assign
(paren
r_struct
id|izo_ioctl_data
op_star
)paren
op_star
id|pbuf
suffix:semicolon
id|memcpy
c_func
(paren
op_star
id|pbuf
comma
id|data
comma
r_sizeof
(paren
op_star
id|data
)paren
)paren
suffix:semicolon
id|ptr
op_assign
id|overlay-&gt;ioc_bulk
suffix:semicolon
r_if
c_cond
(paren
id|data-&gt;ioc_inlbuf1
)paren
id|LOGL
c_func
(paren
id|data-&gt;ioc_inlbuf1
comma
id|data-&gt;ioc_inllen1
comma
id|ptr
)paren
suffix:semicolon
r_if
c_cond
(paren
id|data-&gt;ioc_inlbuf2
)paren
id|LOGL
c_func
(paren
id|data-&gt;ioc_inlbuf2
comma
id|data-&gt;ioc_inllen2
comma
id|ptr
)paren
suffix:semicolon
r_if
c_cond
(paren
id|izo_ioctl_is_invalid
c_func
(paren
id|overlay
)paren
)paren
r_return
l_int|1
suffix:semicolon
r_return
l_int|0
suffix:semicolon
)brace
macro_line|#endif /* __KERNEL__*/
DECL|macro|IZO_ERROR_NAME
mdefine_line|#define IZO_ERROR_NAME 1
DECL|macro|IZO_ERROR_UPDATE
mdefine_line|#define IZO_ERROR_UPDATE 2
DECL|macro|IZO_ERROR_DELETE
mdefine_line|#define IZO_ERROR_DELETE 3
DECL|macro|IZO_ERROR_RENAME
mdefine_line|#define IZO_ERROR_RENAME 4
DECL|function|izo_error
r_static
r_inline
r_char
op_star
id|izo_error
c_func
(paren
r_int
id|err
)paren
(brace
macro_line|#ifndef __KERNEL__
r_if
c_cond
(paren
id|err
op_le
l_int|0
)paren
r_return
id|strerror
c_func
(paren
op_minus
id|err
)paren
suffix:semicolon
macro_line|#endif
r_switch
c_cond
(paren
id|err
)paren
(brace
r_case
id|IZO_ERROR_NAME
suffix:colon
r_return
l_string|&quot;InterMezzo name/name conflict&quot;
suffix:semicolon
r_case
id|IZO_ERROR_UPDATE
suffix:colon
r_return
l_string|&quot;InterMezzo update/update conflict&quot;
suffix:semicolon
r_case
id|IZO_ERROR_DELETE
suffix:colon
r_return
l_string|&quot;InterMezzo update/delete conflict&quot;
suffix:semicolon
r_case
id|IZO_ERROR_RENAME
suffix:colon
r_return
l_string|&quot;InterMezzo rename/rename conflict&quot;
suffix:semicolon
)brace
r_return
l_string|&quot;Unknown InterMezzo error&quot;
suffix:semicolon
)brace
DECL|function|izo_ioctl_packlen
r_static
r_inline
r_int
id|izo_ioctl_packlen
c_func
(paren
r_struct
id|izo_ioctl_data
op_star
id|data
)paren
(brace
r_int
id|len
op_assign
r_sizeof
(paren
r_struct
id|izo_ioctl_data
)paren
suffix:semicolon
id|len
op_add_assign
id|size_round
c_func
(paren
id|data-&gt;ioc_inllen1
)paren
suffix:semicolon
id|len
op_add_assign
id|size_round
c_func
(paren
id|data-&gt;ioc_inllen2
)paren
suffix:semicolon
r_return
id|len
suffix:semicolon
)brace
DECL|function|izo_ioctl_is_invalid
r_static
r_inline
r_int
id|izo_ioctl_is_invalid
c_func
(paren
r_struct
id|izo_ioctl_data
op_star
id|data
)paren
(brace
r_if
c_cond
(paren
id|data-&gt;ioc_len
OG
(paren
l_int|1
op_lshift
l_int|30
)paren
)paren
(brace
id|CERROR
c_func
(paren
l_string|&quot;IZO ioctl: ioc_len larger than 1&lt;&lt;30&bslash;n&quot;
)paren
suffix:semicolon
r_return
l_int|1
suffix:semicolon
)brace
r_if
c_cond
(paren
id|data-&gt;ioc_inllen1
OG
(paren
l_int|1
op_lshift
l_int|30
)paren
)paren
(brace
id|CERROR
c_func
(paren
l_string|&quot;IZO ioctl: ioc_inllen1 larger than 1&lt;&lt;30&bslash;n&quot;
)paren
suffix:semicolon
r_return
l_int|1
suffix:semicolon
)brace
r_if
c_cond
(paren
id|data-&gt;ioc_inllen2
OG
(paren
l_int|1
op_lshift
l_int|30
)paren
)paren
(brace
id|CERROR
c_func
(paren
l_string|&quot;IZO ioctl: ioc_inllen2 larger than 1&lt;&lt;30&bslash;n&quot;
)paren
suffix:semicolon
r_return
l_int|1
suffix:semicolon
)brace
r_if
c_cond
(paren
id|data-&gt;ioc_inlbuf1
op_logical_and
op_logical_neg
id|data-&gt;ioc_inllen1
)paren
(brace
id|CERROR
c_func
(paren
l_string|&quot;IZO ioctl: inlbuf1 pointer but 0 length&bslash;n&quot;
)paren
suffix:semicolon
r_return
l_int|1
suffix:semicolon
)brace
r_if
c_cond
(paren
id|data-&gt;ioc_inlbuf2
op_logical_and
op_logical_neg
id|data-&gt;ioc_inllen2
)paren
(brace
id|CERROR
c_func
(paren
l_string|&quot;IZO ioctl: inlbuf2 pointer but 0 length&bslash;n&quot;
)paren
suffix:semicolon
r_return
l_int|1
suffix:semicolon
)brace
r_if
c_cond
(paren
id|data-&gt;ioc_pbuf1
op_logical_and
op_logical_neg
id|data-&gt;ioc_plen1
)paren
(brace
id|CERROR
c_func
(paren
l_string|&quot;IZO ioctl: pbuf1 pointer but 0 length&bslash;n&quot;
)paren
suffix:semicolon
r_return
l_int|1
suffix:semicolon
)brace
r_if
c_cond
(paren
id|data-&gt;ioc_pbuf2
op_logical_and
op_logical_neg
id|data-&gt;ioc_plen2
)paren
(brace
id|CERROR
c_func
(paren
l_string|&quot;IZO ioctl: pbuf2 pointer but 0 length&bslash;n&quot;
)paren
suffix:semicolon
r_return
l_int|1
suffix:semicolon
)brace
r_if
c_cond
(paren
id|izo_ioctl_packlen
c_func
(paren
id|data
)paren
op_ne
id|data-&gt;ioc_len
)paren
(brace
id|CERROR
c_func
(paren
l_string|&quot;IZO ioctl: packlen exceeds ioc_len&bslash;n&quot;
)paren
suffix:semicolon
r_return
l_int|1
suffix:semicolon
)brace
r_if
c_cond
(paren
id|data-&gt;ioc_inllen1
op_logical_and
id|data-&gt;ioc_bulk
(braket
id|data-&gt;ioc_inllen1
op_minus
l_int|1
)braket
op_ne
l_char|&squot;&bslash;0&squot;
)paren
(brace
id|CERROR
c_func
(paren
l_string|&quot;IZO ioctl: inlbuf1 not 0 terminated&bslash;n&quot;
)paren
suffix:semicolon
r_return
l_int|1
suffix:semicolon
)brace
r_if
c_cond
(paren
id|data-&gt;ioc_inllen2
op_logical_and
id|data-&gt;ioc_bulk
(braket
id|size_round
c_func
(paren
id|data-&gt;ioc_inllen1
)paren
op_plus
id|data-&gt;ioc_inllen2
op_minus
l_int|1
)braket
op_ne
l_char|&squot;&bslash;0&squot;
)paren
(brace
id|CERROR
c_func
(paren
l_string|&quot;IZO ioctl: inlbuf2 not 0 terminated&bslash;n&quot;
)paren
suffix:semicolon
r_return
l_int|1
suffix:semicolon
)brace
r_return
l_int|0
suffix:semicolon
)brace
multiline_comment|/* kml_unpack.c */
r_char
op_star
id|kml_print_rec
c_func
(paren
r_struct
id|kml_rec
op_star
id|rec
comma
r_int
id|brief
)paren
suffix:semicolon
r_int
id|kml_unpack
c_func
(paren
r_struct
id|kml_rec
op_star
id|rec
comma
r_char
op_star
op_star
id|buf
comma
r_char
op_star
id|end
)paren
suffix:semicolon
multiline_comment|/* fs 2.5 compat */
multiline_comment|/* is_read_only() is replaced by bdev_read_only which takes struct&n;   block_device *.  Since this is only needed for debugging, it can be&n;   safely ignored now.&n;*/
DECL|macro|is_read_only
mdefine_line|#define is_read_only(dev) 0
macro_line|#endif
eof
