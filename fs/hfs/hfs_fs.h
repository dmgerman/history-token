multiline_comment|/*&n; *  linux/fs/hfs/hfs_fs.h&n; *&n; * Copyright (C) 1995-1997  Paul H. Hargrove&n; * (C) 2003 Ardis Technologies &lt;roman@ardistech.com&gt;&n; * This file may be distributed under the terms of the GNU General Public License.&n; */
macro_line|#ifndef _LINUX_HFS_FS_H
DECL|macro|_LINUX_HFS_FS_H
mdefine_line|#define _LINUX_HFS_FS_H
macro_line|#include &lt;linux/version.h&gt;
macro_line|#include &lt;linux/slab.h&gt;
macro_line|#include &lt;linux/types.h&gt;
macro_line|#include &lt;linux/buffer_head.h&gt;
macro_line|#include &lt;linux/fs.h&gt;
macro_line|#include &lt;asm/byteorder.h&gt;
macro_line|#include &lt;asm/uaccess.h&gt;
macro_line|#include &quot;hfs.h&quot;
DECL|macro|DBG_BNODE_REFS
mdefine_line|#define DBG_BNODE_REFS&t;0x00000001
DECL|macro|DBG_BNODE_MOD
mdefine_line|#define DBG_BNODE_MOD&t;0x00000002
DECL|macro|DBG_CAT_MOD
mdefine_line|#define DBG_CAT_MOD&t;0x00000004
DECL|macro|DBG_INODE
mdefine_line|#define DBG_INODE&t;0x00000008
DECL|macro|DBG_SUPER
mdefine_line|#define DBG_SUPER&t;0x00000010
DECL|macro|DBG_EXTENT
mdefine_line|#define DBG_EXTENT&t;0x00000020
DECL|macro|DBG_BITMAP
mdefine_line|#define DBG_BITMAP&t;0x00000040
singleline_comment|//#define DBG_MASK&t;(DBG_EXTENT|DBG_INODE|DBG_BNODE_MOD|DBG_CAT_MOD|DBG_BITMAP)
singleline_comment|//#define DBG_MASK&t;(DBG_BNODE_MOD|DBG_CAT_MOD|DBG_INODE)
singleline_comment|//#define DBG_MASK&t;(DBG_CAT_MOD|DBG_BNODE_REFS|DBG_INODE|DBG_EXTENT)
DECL|macro|DBG_MASK
mdefine_line|#define DBG_MASK&t;(0)
DECL|macro|dprint
mdefine_line|#define dprint(flg, fmt, args...) &bslash;&n;&t;if (flg &amp; DBG_MASK) printk(fmt , ## args)
DECL|macro|hfs_warn
mdefine_line|#define hfs_warn(format, args...) printk(KERN_WARNING format , ## args)
DECL|macro|hfs_error
mdefine_line|#define hfs_error(format, args...) printk(KERN_ERR format , ## args)
multiline_comment|/*&n; * struct hfs_inode_info&n; *&n; * The HFS-specific part of a Linux (struct inode)&n; */
DECL|struct|hfs_inode_info
r_struct
id|hfs_inode_info
(brace
DECL|member|opencnt
id|atomic_t
id|opencnt
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
multiline_comment|/* to deal with localtime ugliness */
DECL|member|tz_secondswest
r_int
id|tz_secondswest
suffix:semicolon
DECL|member|cat_key
r_struct
id|hfs_cat_key
id|cat_key
suffix:semicolon
DECL|member|open_dir_list
r_struct
id|list_head
id|open_dir_list
suffix:semicolon
DECL|member|rsrc_inode
r_struct
id|inode
op_star
id|rsrc_inode
suffix:semicolon
DECL|member|extents_lock
r_struct
id|semaphore
id|extents_lock
suffix:semicolon
DECL|member|alloc_blocks
DECL|member|clump_blocks
id|u16
id|alloc_blocks
comma
id|clump_blocks
suffix:semicolon
multiline_comment|/* Allocation extents from catlog record or volume header */
DECL|member|first_extents
id|hfs_extent_rec
id|first_extents
suffix:semicolon
DECL|member|first_blocks
id|u16
id|first_blocks
suffix:semicolon
DECL|member|cached_extents
id|hfs_extent_rec
id|cached_extents
suffix:semicolon
DECL|member|cached_start
DECL|member|cached_blocks
id|u16
id|cached_start
comma
id|cached_blocks
suffix:semicolon
DECL|member|phys_size
id|loff_t
id|phys_size
suffix:semicolon
DECL|member|vfs_inode
r_struct
id|inode
id|vfs_inode
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|HFS_FLG_RSRC
mdefine_line|#define HFS_FLG_RSRC&t;&t;0x0001
DECL|macro|HFS_FLG_EXT_DIRTY
mdefine_line|#define HFS_FLG_EXT_DIRTY&t;0x0002
DECL|macro|HFS_FLG_EXT_NEW
mdefine_line|#define HFS_FLG_EXT_NEW&t;&t;0x0004
DECL|macro|HFS_IS_RSRC
mdefine_line|#define HFS_IS_RSRC(inode)&t;(HFS_I(inode)-&gt;flags &amp; HFS_FLG_RSRC)
multiline_comment|/*&n; * struct hfs_sb_info&n; *&n; * The HFS-specific part of a Linux (struct super_block)&n; */
DECL|struct|hfs_sb_info
r_struct
id|hfs_sb_info
(brace
DECL|member|mdb_bh
r_struct
id|buffer_head
op_star
id|mdb_bh
suffix:semicolon
multiline_comment|/* The hfs_buffer&n;&t;&t;&t;&t;&t;&t;   holding the real&n;&t;&t;&t;&t;&t;&t;   superblock (aka VIB&n;&t;&t;&t;&t;&t;&t;   or MDB) */
DECL|member|mdb
r_struct
id|hfs_mdb
op_star
id|mdb
suffix:semicolon
DECL|member|alt_mdb_bh
r_struct
id|buffer_head
op_star
id|alt_mdb_bh
suffix:semicolon
multiline_comment|/* The hfs_buffer holding&n;&t;&t;&t;&t;&t;&t;   the alternate superblock */
DECL|member|alt_mdb
r_struct
id|hfs_mdb
op_star
id|alt_mdb
suffix:semicolon
DECL|member|bitmap
id|u32
op_star
id|bitmap
suffix:semicolon
multiline_comment|/* The page holding the&n;&t;&t;&t;&t;&t;&t;   allocation bitmap */
DECL|member|ext_tree
r_struct
id|hfs_btree
op_star
id|ext_tree
suffix:semicolon
multiline_comment|/* Information about&n;&t;&t;&t;&t;&t;&t;   the extents b-tree */
DECL|member|cat_tree
r_struct
id|hfs_btree
op_star
id|cat_tree
suffix:semicolon
multiline_comment|/* Information about&n;&t;&t;&t;&t;&t;&t;   the catalog b-tree */
DECL|member|file_count
id|u32
id|file_count
suffix:semicolon
multiline_comment|/* The number of&n;&t;&t;&t;&t;&t;&t;   regular files in&n;&t;&t;&t;&t;&t;&t;   the filesystem */
DECL|member|folder_count
id|u32
id|folder_count
suffix:semicolon
multiline_comment|/* The number of&n;&t;&t;&t;&t;&t;&t;   directories in the&n;&t;&t;&t;&t;&t;&t;   filesystem */
DECL|member|next_id
id|u32
id|next_id
suffix:semicolon
multiline_comment|/* The next available&n;&t;&t;&t;&t;&t;&t;   file id number */
DECL|member|clumpablks
id|u32
id|clumpablks
suffix:semicolon
multiline_comment|/* The number of allocation&n;&t;&t;&t;&t;&t;&t;   blocks to try to add when&n;&t;&t;&t;&t;&t;&t;   extending a file */
DECL|member|fs_start
id|u32
id|fs_start
suffix:semicolon
multiline_comment|/* The first 512-byte&n;&t;&t;&t;&t;&t;&t;   block represented&n;&t;&t;&t;&t;&t;&t;   in the bitmap */
DECL|member|part_start
id|u32
id|part_start
suffix:semicolon
DECL|member|root_files
id|u16
id|root_files
suffix:semicolon
multiline_comment|/* The number of&n;&t;&t;&t;&t;&t;&t;   regular&n;&t;&t;&t;&t;&t;&t;   (non-directory)&n;&t;&t;&t;&t;&t;&t;   files in the root&n;&t;&t;&t;&t;&t;&t;   directory */
DECL|member|root_dirs
id|u16
id|root_dirs
suffix:semicolon
multiline_comment|/* The number of&n;&t;&t;&t;&t;&t;&t;   directories in the&n;&t;&t;&t;&t;&t;&t;   root directory */
DECL|member|fs_ablocks
id|u16
id|fs_ablocks
suffix:semicolon
multiline_comment|/* The number of&n;&t;&t;&t;&t;&t;&t;   allocation blocks&n;&t;&t;&t;&t;&t;&t;   in the filesystem */
DECL|member|free_ablocks
id|u16
id|free_ablocks
suffix:semicolon
multiline_comment|/* the number of unused&n;&t;&t;&t;&t;&t;&t;   allocation blocks&n;&t;&t;&t;&t;&t;&t;   in the filesystem */
DECL|member|alloc_blksz
id|u32
id|alloc_blksz
suffix:semicolon
multiline_comment|/* The size of an&n;&t;&t;&t;&t;&t;&t;   &quot;allocation block&quot; */
DECL|member|s_quiet
r_int
id|s_quiet
suffix:semicolon
multiline_comment|/* Silent failure when&n;&t;&t;&t;&t;&t;&t;   changing owner or mode? */
DECL|member|s_type
id|u32
id|s_type
suffix:semicolon
multiline_comment|/* Type for new files */
DECL|member|s_creator
id|u32
id|s_creator
suffix:semicolon
multiline_comment|/* Creator for new files */
DECL|member|s_file_umask
id|umode_t
id|s_file_umask
suffix:semicolon
multiline_comment|/* The umask applied to the&n;&t;&t;&t;&t;&t;&t;   permissions on all files */
DECL|member|s_dir_umask
id|umode_t
id|s_dir_umask
suffix:semicolon
multiline_comment|/* The umask applied to the&n;&t;&t;&t;&t;&t;&t;   permissions on all dirs */
DECL|member|s_uid
id|uid_t
id|s_uid
suffix:semicolon
multiline_comment|/* The uid of all files */
DECL|member|s_gid
id|gid_t
id|s_gid
suffix:semicolon
multiline_comment|/* The gid of all files */
DECL|member|session
DECL|member|part
r_int
id|session
comma
id|part
suffix:semicolon
DECL|member|bitmap_lock
r_struct
id|semaphore
id|bitmap_lock
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
DECL|member|blockoffset
id|u16
id|blockoffset
suffix:semicolon
DECL|member|fs_div
r_int
id|fs_div
suffix:semicolon
DECL|member|rsrc_inodes
r_struct
id|hlist_head
id|rsrc_inodes
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|HFS_FLG_BITMAP_DIRTY
mdefine_line|#define HFS_FLG_BITMAP_DIRTY&t;0
DECL|macro|HFS_FLG_MDB_DIRTY
mdefine_line|#define HFS_FLG_MDB_DIRTY&t;1
DECL|macro|HFS_FLG_ALT_MDB_DIRTY
mdefine_line|#define HFS_FLG_ALT_MDB_DIRTY&t;2
multiline_comment|/* bitmap.c */
r_extern
id|u32
id|hfs_vbm_search_free
c_func
(paren
r_struct
id|super_block
op_star
comma
id|u32
comma
id|u32
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hfs_clear_vbm_bits
c_func
(paren
r_struct
id|super_block
op_star
comma
id|u16
comma
id|u16
)paren
suffix:semicolon
multiline_comment|/* catalog.c */
r_extern
r_int
id|hfs_cat_keycmp
c_func
(paren
r_const
id|btree_key
op_star
comma
r_const
id|btree_key
op_star
)paren
suffix:semicolon
r_struct
id|hfs_find_data
suffix:semicolon
r_extern
r_int
id|hfs_cat_find_brec
c_func
(paren
r_struct
id|super_block
op_star
comma
id|u32
comma
r_struct
id|hfs_find_data
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hfs_cat_create
c_func
(paren
id|u32
comma
r_struct
id|inode
op_star
comma
r_struct
id|qstr
op_star
comma
r_struct
id|inode
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hfs_cat_delete
c_func
(paren
id|u32
comma
r_struct
id|inode
op_star
comma
r_struct
id|qstr
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hfs_cat_move
c_func
(paren
id|u32
comma
r_struct
id|inode
op_star
comma
r_struct
id|qstr
op_star
comma
r_struct
id|inode
op_star
comma
r_struct
id|qstr
op_star
)paren
suffix:semicolon
r_extern
r_void
id|hfs_cat_build_key
c_func
(paren
id|btree_key
op_star
comma
id|u32
comma
r_struct
id|qstr
op_star
)paren
suffix:semicolon
multiline_comment|/* dir.c */
r_extern
r_struct
id|file_operations
id|hfs_dir_operations
suffix:semicolon
r_extern
r_struct
id|inode_operations
id|hfs_dir_inode_operations
suffix:semicolon
r_extern
r_int
id|hfs_mkdir
c_func
(paren
r_struct
id|inode
op_star
comma
r_struct
id|dentry
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|hfs_unlink
c_func
(paren
r_struct
id|inode
op_star
comma
r_struct
id|dentry
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hfs_rmdir
c_func
(paren
r_struct
id|inode
op_star
comma
r_struct
id|dentry
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hfs_rename
c_func
(paren
r_struct
id|inode
op_star
comma
r_struct
id|dentry
op_star
comma
r_struct
id|inode
op_star
comma
r_struct
id|dentry
op_star
)paren
suffix:semicolon
multiline_comment|/* extent.c */
r_extern
r_int
id|hfs_ext_keycmp
c_func
(paren
r_const
id|btree_key
op_star
comma
r_const
id|btree_key
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hfs_free_fork
c_func
(paren
r_struct
id|super_block
op_star
comma
r_struct
id|hfs_cat_file
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_void
id|hfs_ext_write_extent
c_func
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hfs_extend_file
c_func
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
r_extern
r_void
id|hfs_file_truncate
c_func
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
multiline_comment|/* file.c */
r_extern
r_struct
id|inode_operations
id|hfs_file_inode_operations
suffix:semicolon
r_extern
r_struct
id|file_operations
id|hfs_file_operations
suffix:semicolon
r_extern
r_int
id|hfs_get_block
c_func
(paren
r_struct
id|inode
op_star
comma
id|sector_t
comma
r_struct
id|buffer_head
op_star
comma
r_int
)paren
suffix:semicolon
multiline_comment|/* inode.c */
r_extern
r_struct
id|address_space_operations
id|hfs_aops
suffix:semicolon
r_extern
r_struct
id|address_space_operations
id|hfs_btree_aops
suffix:semicolon
r_extern
r_struct
id|inode
op_star
id|hfs_new_inode
c_func
(paren
r_struct
id|inode
op_star
comma
r_struct
id|qstr
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_void
id|hfs_inode_write_fork
c_func
(paren
r_struct
id|inode
op_star
comma
r_struct
id|hfs_extent
op_star
comma
id|u32
op_star
comma
id|u32
op_star
)paren
suffix:semicolon
r_extern
r_void
id|hfs_write_inode
c_func
(paren
r_struct
id|inode
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|hfs_inode_setattr
c_func
(paren
r_struct
id|dentry
op_star
comma
r_struct
id|iattr
op_star
)paren
suffix:semicolon
r_extern
r_void
id|hfs_inode_read_fork
c_func
(paren
r_struct
id|inode
op_star
id|inode
comma
r_struct
id|hfs_extent
op_star
id|ext
comma
id|u32
id|log_size
comma
id|u32
id|phys_size
comma
id|u32
id|clump_size
)paren
suffix:semicolon
r_extern
r_struct
id|inode
op_star
id|hfs_iget
c_func
(paren
r_struct
id|super_block
op_star
comma
r_struct
id|hfs_cat_key
op_star
comma
id|hfs_cat_rec
op_star
)paren
suffix:semicolon
r_extern
r_void
id|hfs_clear_inode
c_func
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
r_extern
r_void
id|hfs_delete_inode
c_func
(paren
r_struct
id|inode
op_star
)paren
suffix:semicolon
multiline_comment|/* mdb.c */
r_extern
r_int
id|hfs_mdb_get
c_func
(paren
r_struct
id|super_block
op_star
)paren
suffix:semicolon
r_extern
r_void
id|hfs_mdb_commit
c_func
(paren
r_struct
id|super_block
op_star
)paren
suffix:semicolon
r_extern
r_void
id|hfs_mdb_close
c_func
(paren
r_struct
id|super_block
op_star
)paren
suffix:semicolon
r_extern
r_void
id|hfs_mdb_put
c_func
(paren
r_struct
id|super_block
op_star
)paren
suffix:semicolon
multiline_comment|/* part_tbl.c */
r_extern
r_int
id|hfs_part_find
c_func
(paren
r_struct
id|super_block
op_star
comma
id|sector_t
op_star
comma
id|sector_t
op_star
)paren
suffix:semicolon
multiline_comment|/* string.c */
r_extern
r_struct
id|dentry_operations
id|hfs_dentry_operations
suffix:semicolon
r_extern
r_int
id|hfs_hash_dentry
c_func
(paren
r_struct
id|dentry
op_star
comma
r_struct
id|qstr
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hfs_strcmp
c_func
(paren
r_const
r_int
r_char
op_star
comma
r_int
r_int
comma
r_const
r_int
r_char
op_star
comma
r_int
r_int
)paren
suffix:semicolon
r_extern
r_int
id|hfs_compare_dentry
c_func
(paren
r_struct
id|dentry
op_star
comma
r_struct
id|qstr
op_star
comma
r_struct
id|qstr
op_star
)paren
suffix:semicolon
multiline_comment|/* super.c */
r_extern
r_struct
id|super_block
op_star
id|hfs_read_super
c_func
(paren
r_struct
id|super_block
op_star
comma
r_void
op_star
comma
r_int
)paren
suffix:semicolon
multiline_comment|/* trans.c */
r_extern
r_void
id|hfs_triv2mac
c_func
(paren
r_struct
id|hfs_name
op_star
comma
r_struct
id|qstr
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hfs_mac2triv
c_func
(paren
r_char
op_star
comma
r_const
r_struct
id|hfs_name
op_star
)paren
suffix:semicolon
r_extern
r_struct
id|timezone
id|sys_tz
suffix:semicolon
multiline_comment|/*&n; * There are two time systems.  Both are based on seconds since&n; * a particular time/date.&n; *&t;Unix:&t;unsigned lil-endian since 00:00 GMT, Jan. 1, 1970&n; *&t;mac:&t;unsigned big-endian since 00:00 GMT, Jan. 1, 1904&n; *&n; */
DECL|macro|__hfs_u_to_mtime
mdefine_line|#define __hfs_u_to_mtime(sec)&t;cpu_to_be32(sec + 2082844800U - sys_tz.tz_minuteswest * 60)
DECL|macro|__hfs_m_to_utime
mdefine_line|#define __hfs_m_to_utime(sec)&t;(be32_to_cpu(sec) - 2082844800U  + sys_tz.tz_minuteswest * 60)
DECL|macro|HFS_I
mdefine_line|#define HFS_I(inode)&t;(list_entry(inode, struct hfs_inode_info, vfs_inode))
DECL|macro|HFS_SB
mdefine_line|#define HFS_SB(sb)&t;((struct hfs_sb_info *)(sb)-&gt;s_fs_info)
DECL|macro|hfs_m_to_utime
mdefine_line|#define hfs_m_to_utime(time)&t;(struct timespec){ .tv_sec = __hfs_m_to_utime(time) }
DECL|macro|hfs_u_to_mtime
mdefine_line|#define hfs_u_to_mtime(time)&t;__hfs_u_to_mtime((time).tv_sec)
DECL|macro|hfs_mtime
mdefine_line|#define hfs_mtime()&t;&t;__hfs_u_to_mtime(get_seconds())
DECL|function|hfs_mdb_name
r_static
r_inline
r_const
r_char
op_star
id|hfs_mdb_name
c_func
(paren
r_struct
id|super_block
op_star
id|sb
)paren
(brace
r_return
id|sb-&gt;s_id
suffix:semicolon
)brace
DECL|function|hfs_bitmap_dirty
r_static
r_inline
r_void
id|hfs_bitmap_dirty
c_func
(paren
r_struct
id|super_block
op_star
id|sb
)paren
(brace
id|set_bit
c_func
(paren
id|HFS_FLG_BITMAP_DIRTY
comma
op_amp
id|HFS_SB
c_func
(paren
id|sb
)paren
op_member_access_from_pointer
id|flags
)paren
suffix:semicolon
id|sb-&gt;s_dirt
op_assign
l_int|1
suffix:semicolon
)brace
DECL|function|hfs_buffer_sync
r_static
r_inline
r_void
id|hfs_buffer_sync
c_func
(paren
r_struct
id|buffer_head
op_star
id|bh
)paren
(brace
r_while
c_loop
(paren
id|buffer_locked
c_func
(paren
id|bh
)paren
)paren
(brace
id|wait_on_buffer
c_func
(paren
id|bh
)paren
suffix:semicolon
)brace
r_if
c_cond
(paren
id|buffer_dirty
c_func
(paren
id|bh
)paren
)paren
(brace
id|ll_rw_block
c_func
(paren
id|WRITE
comma
l_int|1
comma
op_amp
id|bh
)paren
suffix:semicolon
id|wait_on_buffer
c_func
(paren
id|bh
)paren
suffix:semicolon
)brace
)brace
DECL|macro|sb_bread512
mdefine_line|#define sb_bread512(sb, sec, data) ({&t;&t;&t;&bslash;&n;&t;struct buffer_head *__bh;&t;&t;&t;&bslash;&n;&t;sector_t __block;&t;&t;&t;&t;&bslash;&n;&t;loff_t __start;&t;&t;&t;&t;&t;&bslash;&n;&t;int __offset;&t;&t;&t;&t;&t;&bslash;&n;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;__start = (loff_t)(sec) &lt;&lt; HFS_SECTOR_SIZE_BITS;&bslash;&n;&t;__block = __start &gt;&gt; (sb)-&gt;s_blocksize_bits;&t;&bslash;&n;&t;__offset = __start &amp; ((sb)-&gt;s_blocksize - 1);&t;&bslash;&n;&t;__bh = sb_bread((sb), __block);&t;&t;&t;&bslash;&n;&t;if (likely(__bh != NULL))&t;&t;&t;&bslash;&n;&t;&t;data = (void *)(__bh-&gt;b_data + __offset);&bslash;&n;&t;else&t;&t;&t;&t;&t;&t;&bslash;&n;&t;&t;data = NULL;&t;&t;&t;&t;&bslash;&n;&t;__bh;&t;&t;&t;&t;&t;&t;&bslash;&n;})
macro_line|#endif
eof
