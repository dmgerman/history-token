multiline_comment|/*&n; *  linux/fs/hfs/btree.h&n; *&n; * Copyright (C) 2001&n; * Brad Boyer (flar@allandria.com)&n; * (C) 2003 Ardis Technologies &lt;roman@ardistech.com&gt;&n; */
macro_line|#include &quot;hfs_fs.h&quot;
DECL|typedef|btree_keycmp
r_typedef
r_int
(paren
op_star
id|btree_keycmp
)paren
(paren
r_const
id|btree_key
op_star
comma
r_const
id|btree_key
op_star
)paren
suffix:semicolon
DECL|macro|NODE_HASH_SIZE
mdefine_line|#define NODE_HASH_SIZE  256
multiline_comment|/* A HFS BTree held in memory */
DECL|struct|hfs_btree
r_struct
id|hfs_btree
(brace
DECL|member|sb
r_struct
id|super_block
op_star
id|sb
suffix:semicolon
DECL|member|inode
r_struct
id|inode
op_star
id|inode
suffix:semicolon
DECL|member|keycmp
id|btree_keycmp
id|keycmp
suffix:semicolon
DECL|member|cnid
id|u32
id|cnid
suffix:semicolon
DECL|member|root
id|u32
id|root
suffix:semicolon
DECL|member|leaf_count
id|u32
id|leaf_count
suffix:semicolon
DECL|member|leaf_head
id|u32
id|leaf_head
suffix:semicolon
DECL|member|leaf_tail
id|u32
id|leaf_tail
suffix:semicolon
DECL|member|node_count
id|u32
id|node_count
suffix:semicolon
DECL|member|free_nodes
id|u32
id|free_nodes
suffix:semicolon
DECL|member|attributes
id|u32
id|attributes
suffix:semicolon
DECL|member|node_size
r_int
r_int
id|node_size
suffix:semicolon
DECL|member|node_size_shift
r_int
r_int
id|node_size_shift
suffix:semicolon
DECL|member|max_key_len
r_int
r_int
id|max_key_len
suffix:semicolon
DECL|member|depth
r_int
r_int
id|depth
suffix:semicolon
singleline_comment|//unsigned int map1_size, map_size;
DECL|member|tree_lock
r_struct
id|semaphore
id|tree_lock
suffix:semicolon
DECL|member|pages_per_bnode
r_int
r_int
id|pages_per_bnode
suffix:semicolon
DECL|member|hash_lock
id|spinlock_t
id|hash_lock
suffix:semicolon
DECL|member|node_hash
r_struct
id|hfs_bnode
op_star
id|node_hash
(braket
id|NODE_HASH_SIZE
)braket
suffix:semicolon
DECL|member|node_hash_cnt
r_int
id|node_hash_cnt
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* A HFS BTree node in memory */
DECL|struct|hfs_bnode
r_struct
id|hfs_bnode
(brace
DECL|member|tree
r_struct
id|hfs_btree
op_star
id|tree
suffix:semicolon
DECL|member|prev
id|u32
id|prev
suffix:semicolon
DECL|member|this
id|u32
id|this
suffix:semicolon
DECL|member|next
id|u32
id|next
suffix:semicolon
DECL|member|parent
id|u32
id|parent
suffix:semicolon
DECL|member|num_recs
id|u16
id|num_recs
suffix:semicolon
DECL|member|type
id|u8
id|type
suffix:semicolon
DECL|member|height
id|u8
id|height
suffix:semicolon
DECL|member|next_hash
r_struct
id|hfs_bnode
op_star
id|next_hash
suffix:semicolon
DECL|member|flags
r_int
r_int
id|flags
suffix:semicolon
DECL|member|lock_wq
id|wait_queue_head_t
id|lock_wq
suffix:semicolon
DECL|member|refcnt
id|atomic_t
id|refcnt
suffix:semicolon
DECL|member|page_offset
r_int
r_int
id|page_offset
suffix:semicolon
DECL|member|page
r_struct
id|page
op_star
id|page
(braket
l_int|0
)braket
suffix:semicolon
)brace
suffix:semicolon
DECL|macro|HFS_BNODE_ERROR
mdefine_line|#define HFS_BNODE_ERROR&t;&t;0
DECL|macro|HFS_BNODE_NEW
mdefine_line|#define HFS_BNODE_NEW&t;&t;1
DECL|macro|HFS_BNODE_DELETED
mdefine_line|#define HFS_BNODE_DELETED&t;2
DECL|struct|hfs_find_data
r_struct
id|hfs_find_data
(brace
DECL|member|key
id|btree_key
op_star
id|key
suffix:semicolon
DECL|member|search_key
id|btree_key
op_star
id|search_key
suffix:semicolon
DECL|member|tree
r_struct
id|hfs_btree
op_star
id|tree
suffix:semicolon
DECL|member|bnode
r_struct
id|hfs_bnode
op_star
id|bnode
suffix:semicolon
DECL|member|record
r_int
id|record
suffix:semicolon
DECL|member|keyoffset
DECL|member|keylength
r_int
id|keyoffset
comma
id|keylength
suffix:semicolon
DECL|member|entryoffset
DECL|member|entrylength
r_int
id|entryoffset
comma
id|entrylength
suffix:semicolon
)brace
suffix:semicolon
multiline_comment|/* btree.c */
r_extern
r_struct
id|hfs_btree
op_star
id|hfs_btree_open
c_func
(paren
r_struct
id|super_block
op_star
comma
id|u32
comma
id|btree_keycmp
)paren
suffix:semicolon
r_extern
r_void
id|hfs_btree_close
c_func
(paren
r_struct
id|hfs_btree
op_star
)paren
suffix:semicolon
r_extern
r_void
id|hfs_btree_write
c_func
(paren
r_struct
id|hfs_btree
op_star
)paren
suffix:semicolon
r_extern
r_struct
id|hfs_bnode
op_star
id|hfs_bmap_alloc
c_func
(paren
r_struct
id|hfs_btree
op_star
)paren
suffix:semicolon
r_extern
r_void
id|hfs_bmap_free
c_func
(paren
r_struct
id|hfs_bnode
op_star
id|node
)paren
suffix:semicolon
multiline_comment|/* bnode.c */
r_extern
r_void
id|hfs_bnode_read
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_void
op_star
comma
r_int
comma
r_int
)paren
suffix:semicolon
r_extern
id|u16
id|hfs_bnode_read_u16
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
id|u8
id|hfs_bnode_read_u8
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_void
id|hfs_bnode_read_key
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_void
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_void
id|hfs_bnode_write
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_void
op_star
comma
r_int
comma
r_int
)paren
suffix:semicolon
r_extern
r_void
id|hfs_bnode_write_u16
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_int
comma
id|u16
)paren
suffix:semicolon
r_extern
r_void
id|hfs_bnode_write_u8
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_int
comma
id|u8
)paren
suffix:semicolon
r_extern
r_void
id|hfs_bnode_clear
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_int
comma
r_int
)paren
suffix:semicolon
r_extern
r_void
id|hfs_bnode_copy
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_int
comma
r_struct
id|hfs_bnode
op_star
comma
r_int
comma
r_int
)paren
suffix:semicolon
r_extern
r_void
id|hfs_bnode_move
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_int
comma
r_int
comma
r_int
)paren
suffix:semicolon
r_extern
r_void
id|hfs_bnode_dump
c_func
(paren
r_struct
id|hfs_bnode
op_star
)paren
suffix:semicolon
r_extern
r_void
id|hfs_bnode_unlink
c_func
(paren
r_struct
id|hfs_bnode
op_star
)paren
suffix:semicolon
r_extern
r_struct
id|hfs_bnode
op_star
id|hfs_bnode_findhash
c_func
(paren
r_struct
id|hfs_btree
op_star
comma
id|u32
)paren
suffix:semicolon
r_extern
r_struct
id|hfs_bnode
op_star
id|hfs_bnode_find
c_func
(paren
r_struct
id|hfs_btree
op_star
comma
id|u32
)paren
suffix:semicolon
r_extern
r_void
id|hfs_bnode_unhash
c_func
(paren
r_struct
id|hfs_bnode
op_star
)paren
suffix:semicolon
r_extern
r_void
id|hfs_bnode_free
c_func
(paren
r_struct
id|hfs_bnode
op_star
)paren
suffix:semicolon
r_extern
r_struct
id|hfs_bnode
op_star
id|hfs_bnode_create
c_func
(paren
r_struct
id|hfs_btree
op_star
comma
id|u32
)paren
suffix:semicolon
r_extern
r_void
id|hfs_bnode_get
c_func
(paren
r_struct
id|hfs_bnode
op_star
)paren
suffix:semicolon
r_extern
r_void
id|hfs_bnode_put
c_func
(paren
r_struct
id|hfs_bnode
op_star
)paren
suffix:semicolon
multiline_comment|/* brec.c */
r_extern
id|u16
id|hfs_brec_lenoff
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
id|u16
comma
id|u16
op_star
)paren
suffix:semicolon
r_extern
id|u16
id|hfs_brec_keylen
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
id|u16
)paren
suffix:semicolon
r_extern
r_int
id|hfs_brec_insert
c_func
(paren
r_struct
id|hfs_find_data
op_star
comma
r_void
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|hfs_brec_remove
c_func
(paren
r_struct
id|hfs_find_data
op_star
)paren
suffix:semicolon
r_extern
r_struct
id|hfs_bnode
op_star
id|hfs_bnode_split
c_func
(paren
r_struct
id|hfs_find_data
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hfs_brec_update_parent
c_func
(paren
r_struct
id|hfs_find_data
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hfs_btree_inc_height
c_func
(paren
r_struct
id|hfs_btree
op_star
)paren
suffix:semicolon
multiline_comment|/* bfind.c */
r_extern
r_int
id|hfs_find_init
c_func
(paren
r_struct
id|hfs_btree
op_star
comma
r_struct
id|hfs_find_data
op_star
)paren
suffix:semicolon
r_extern
r_void
id|hfs_find_exit
c_func
(paren
r_struct
id|hfs_find_data
op_star
)paren
suffix:semicolon
r_extern
r_int
id|__hfs_brec_find
c_func
(paren
r_struct
id|hfs_bnode
op_star
comma
r_struct
id|hfs_find_data
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hfs_brec_find
c_func
(paren
r_struct
id|hfs_find_data
op_star
)paren
suffix:semicolon
r_extern
r_int
id|hfs_brec_read
c_func
(paren
r_struct
id|hfs_find_data
op_star
comma
r_void
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|hfs_brec_goto
c_func
(paren
r_struct
id|hfs_find_data
op_star
comma
r_int
)paren
suffix:semicolon
DECL|struct|hfs_bnode_desc
r_struct
id|hfs_bnode_desc
(brace
DECL|member|next
id|__be32
id|next
suffix:semicolon
multiline_comment|/* (V) Number of the next node at this level */
DECL|member|prev
id|__be32
id|prev
suffix:semicolon
multiline_comment|/* (V) Number of the prev node at this level */
DECL|member|type
id|u8
id|type
suffix:semicolon
multiline_comment|/* (F) The type of node */
DECL|member|height
id|u8
id|height
suffix:semicolon
multiline_comment|/* (F) The level of this node (leaves=1) */
DECL|member|num_recs
id|__be16
id|num_recs
suffix:semicolon
multiline_comment|/* (V) The number of records in this node */
DECL|member|reserved
id|u16
id|reserved
suffix:semicolon
DECL|variable|__packed
)brace
id|__packed
suffix:semicolon
DECL|macro|HFS_NODE_INDEX
mdefine_line|#define HFS_NODE_INDEX&t;0x00&t;/* An internal (index) node */
DECL|macro|HFS_NODE_HEADER
mdefine_line|#define HFS_NODE_HEADER&t;0x01&t;/* The tree header node (node 0) */
DECL|macro|HFS_NODE_MAP
mdefine_line|#define HFS_NODE_MAP&t;0x02&t;/* Holds part of the bitmap of used nodes */
DECL|macro|HFS_NODE_LEAF
mdefine_line|#define HFS_NODE_LEAF&t;0xFF&t;/* A leaf (ndNHeight==1) node */
DECL|struct|hfs_btree_header_rec
r_struct
id|hfs_btree_header_rec
(brace
DECL|member|depth
id|__be16
id|depth
suffix:semicolon
multiline_comment|/* (V) The number of levels in this B-tree */
DECL|member|root
id|__be32
id|root
suffix:semicolon
multiline_comment|/* (V) The node number of the root node */
DECL|member|leaf_count
id|__be32
id|leaf_count
suffix:semicolon
multiline_comment|/* (V) The number of leaf records */
DECL|member|leaf_head
id|__be32
id|leaf_head
suffix:semicolon
multiline_comment|/* (V) The number of the first leaf node */
DECL|member|leaf_tail
id|__be32
id|leaf_tail
suffix:semicolon
multiline_comment|/* (V) The number of the last leaf node */
DECL|member|node_size
id|__be16
id|node_size
suffix:semicolon
multiline_comment|/* (F) The number of bytes in a node (=512) */
DECL|member|max_key_len
id|__be16
id|max_key_len
suffix:semicolon
multiline_comment|/* (F) The length of a key in an index node */
DECL|member|node_count
id|__be32
id|node_count
suffix:semicolon
multiline_comment|/* (V) The total number of nodes */
DECL|member|free_nodes
id|__be32
id|free_nodes
suffix:semicolon
multiline_comment|/* (V) The number of unused nodes */
DECL|member|reserved1
id|u16
id|reserved1
suffix:semicolon
DECL|member|clump_size
id|__be32
id|clump_size
suffix:semicolon
multiline_comment|/* (F) clump size. not usually used. */
DECL|member|btree_type
id|u8
id|btree_type
suffix:semicolon
multiline_comment|/* (F) BTree type */
DECL|member|reserved2
id|u8
id|reserved2
suffix:semicolon
DECL|member|attributes
id|__be32
id|attributes
suffix:semicolon
multiline_comment|/* (F) attributes */
DECL|member|reserved3
id|u32
id|reserved3
(braket
l_int|16
)braket
suffix:semicolon
DECL|variable|__packed
)brace
id|__packed
suffix:semicolon
DECL|macro|HFS_NODE_INDEX
mdefine_line|#define HFS_NODE_INDEX&t;0x00&t;/* An internal (index) node */
DECL|macro|HFS_NODE_HEADER
mdefine_line|#define HFS_NODE_HEADER&t;0x01&t;/* The tree header node (node 0) */
DECL|macro|HFS_NODE_MAP
mdefine_line|#define HFS_NODE_MAP&t;&t;0x02&t;/* Holds part of the bitmap of used nodes */
DECL|macro|HFS_NODE_LEAF
mdefine_line|#define HFS_NODE_LEAF&t;&t;0xFF&t;/* A leaf (ndNHeight==1) node */
DECL|macro|BTREE_ATTR_BADCLOSE
mdefine_line|#define BTREE_ATTR_BADCLOSE&t;0x00000001&t;/* b-tree not closed properly. not&n;&t;&t;&t;&t;&t;&t;   used by hfsplus. */
DECL|macro|HFS_TREE_BIGKEYS
mdefine_line|#define HFS_TREE_BIGKEYS&t;0x00000002&t;/* key length is u16 instead of u8.&n;&t;&t;&t;&t;&t;&t;   used by hfsplus. */
DECL|macro|HFS_TREE_VARIDXKEYS
mdefine_line|#define HFS_TREE_VARIDXKEYS&t;0x00000004&t;/* variable key length instead of&n;&t;&t;&t;&t;&t;&t;   max key length. use din catalog&n;&t;&t;&t;&t;&t;&t;   b-tree but not in extents&n;&t;&t;&t;&t;&t;&t;   b-tree (hfsplus). */
eof
