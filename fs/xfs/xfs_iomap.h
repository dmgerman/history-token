multiline_comment|/*&n; * Copyright (c) 2003 Silicon Graphics, Inc.  All Rights Reserved.&n; *&n; * This program is free software; you can redistribute it and/or modify it&n; * under the terms of version 2 of the GNU General Public License as&n; * published by the Free Software Foundation.&n; *&n; * This program is distributed in the hope that it would be useful, but&n; * WITHOUT ANY WARRANTY; without even the implied warranty of&n; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.&n; *&n; * Further, this software is distributed without any warranty that it is&n; * free of the rightful claim of any third person regarding infringement&n; * or the like.  Any license provided herein, whether implied or&n; * otherwise, applies only to this software file.  Patent licenses, if&n; * any, provided herein do not apply to combinations of this program with&n; * other software, or any other product whatsoever.&n; *&n; * You should have received a copy of the GNU General Public License along&n; * with this program; if not, write the Free Software Foundation, Inc., 59&n; * Temple Place - Suite 330, Boston MA 02111-1307, USA.&n; *&n; * Contact information: Silicon Graphics, Inc., 1600 Amphitheatre Pkwy,&n; * Mountain View, CA  94043, or:&n; *&n; * http://www.sgi.com&n; *&n; * For further information regarding this notice, see:&n; *&n; * http://oss.sgi.com/projects/GenInfo/SGIGPLNoticeExplan/&n; */
macro_line|#ifndef __XFS_IOMAP_H__
DECL|macro|__XFS_IOMAP_H__
mdefine_line|#define __XFS_IOMAP_H__
DECL|macro|IOMAP_DADDR_NULL
mdefine_line|#define IOMAP_DADDR_NULL ((xfs_daddr_t) (-1LL))
r_typedef
r_enum
(brace
multiline_comment|/* iomap_flags values */
DECL|enumerator|IOMAP_EOF
id|IOMAP_EOF
op_assign
l_int|0x01
comma
multiline_comment|/* mapping contains EOF   */
DECL|enumerator|IOMAP_HOLE
id|IOMAP_HOLE
op_assign
l_int|0x02
comma
multiline_comment|/* mapping covers a hole  */
DECL|enumerator|IOMAP_DELAY
id|IOMAP_DELAY
op_assign
l_int|0x04
comma
multiline_comment|/* mapping covers delalloc region  */
DECL|enumerator|IOMAP_UNWRITTEN
id|IOMAP_UNWRITTEN
op_assign
l_int|0x20
comma
multiline_comment|/* mapping covers allocated */
multiline_comment|/* but uninitialized file data  */
DECL|enumerator|IOMAP_NEW
id|IOMAP_NEW
op_assign
l_int|0x40
multiline_comment|/* just allocate */
DECL|typedef|iomap_flags_t
)brace
id|iomap_flags_t
suffix:semicolon
r_typedef
r_enum
(brace
multiline_comment|/* base extent manipulation calls */
DECL|enumerator|BMAPI_READ
id|BMAPI_READ
op_assign
(paren
l_int|1
op_lshift
l_int|0
)paren
comma
multiline_comment|/* read extents */
DECL|enumerator|BMAPI_WRITE
id|BMAPI_WRITE
op_assign
(paren
l_int|1
op_lshift
l_int|1
)paren
comma
multiline_comment|/* create extents */
DECL|enumerator|BMAPI_ALLOCATE
id|BMAPI_ALLOCATE
op_assign
(paren
l_int|1
op_lshift
l_int|2
)paren
comma
multiline_comment|/* delayed allocate to real extents */
DECL|enumerator|BMAPI_UNWRITTEN
id|BMAPI_UNWRITTEN
op_assign
(paren
l_int|1
op_lshift
l_int|3
)paren
comma
multiline_comment|/* unwritten extents to real extents */
multiline_comment|/* modifiers */
DECL|enumerator|BMAPI_IGNSTATE
id|BMAPI_IGNSTATE
op_assign
(paren
l_int|1
op_lshift
l_int|4
)paren
comma
multiline_comment|/* ignore unwritten state on read */
DECL|enumerator|BMAPI_DIRECT
id|BMAPI_DIRECT
op_assign
(paren
l_int|1
op_lshift
l_int|5
)paren
comma
multiline_comment|/* direct instead of buffered write */
DECL|enumerator|BMAPI_MMAP
id|BMAPI_MMAP
op_assign
(paren
l_int|1
op_lshift
l_int|6
)paren
comma
multiline_comment|/* allocate for mmap write */
DECL|enumerator|BMAPI_SYNC
id|BMAPI_SYNC
op_assign
(paren
l_int|1
op_lshift
l_int|7
)paren
comma
multiline_comment|/* sync write */
DECL|enumerator|BMAPI_TRYLOCK
id|BMAPI_TRYLOCK
op_assign
(paren
l_int|1
op_lshift
l_int|8
)paren
comma
multiline_comment|/* non-blocking request */
DECL|enumerator|BMAPI_DEVICE
id|BMAPI_DEVICE
op_assign
(paren
l_int|1
op_lshift
l_int|9
)paren
comma
multiline_comment|/* we only want to know the device */
DECL|typedef|bmapi_flags_t
)brace
id|bmapi_flags_t
suffix:semicolon
multiline_comment|/*&n; * xfs_iomap_t:  File system I/O map&n; *&n; * The iomap_bn field is expressed in 512-byte blocks, and is where the &n; * mapping starts on disk.&n; *&n; * The iomap_offset, iomap_bsize and iomap_delta fields are in bytes.&n; * iomap_offset is the offset of the mapping in the file itself.&n; * iomap_bsize is the size of the mapping,  iomap_delta is the &n; * desired data&squot;s offset into the mapping, given the offset supplied &n; * to the file I/O map routine.&n; *&n; * When a request is made to read beyond the logical end of the object,&n; * iomap_size may be set to 0, but iomap_offset and iomap_length should be set&n; * to the actual amount of underlying storage that has been allocated, if any.&n; */
DECL|struct|xfs_iomap
r_typedef
r_struct
id|xfs_iomap
(brace
DECL|member|iomap_bn
id|xfs_daddr_t
id|iomap_bn
suffix:semicolon
multiline_comment|/* first 512b blk of mapping */
DECL|member|iomap_target
id|xfs_buftarg_t
op_star
id|iomap_target
suffix:semicolon
DECL|member|iomap_offset
id|loff_t
id|iomap_offset
suffix:semicolon
multiline_comment|/* offset of mapping, bytes */
DECL|member|iomap_bsize
id|loff_t
id|iomap_bsize
suffix:semicolon
multiline_comment|/* size of mapping, bytes */
DECL|member|iomap_delta
r_int
id|iomap_delta
suffix:semicolon
multiline_comment|/* offset into mapping, bytes */
DECL|member|iomap_flags
id|iomap_flags_t
id|iomap_flags
suffix:semicolon
DECL|typedef|xfs_iomap_t
)brace
id|xfs_iomap_t
suffix:semicolon
r_struct
id|xfs_iocore
suffix:semicolon
r_struct
id|xfs_inode
suffix:semicolon
r_struct
id|xfs_bmbt_irec
suffix:semicolon
r_extern
r_int
id|xfs_iomap
c_func
(paren
r_struct
id|xfs_iocore
op_star
comma
id|xfs_off_t
comma
id|ssize_t
comma
r_int
comma
r_struct
id|xfs_iomap
op_star
comma
r_int
op_star
)paren
suffix:semicolon
r_extern
r_int
id|xfs_iomap_write_direct
c_func
(paren
r_struct
id|xfs_inode
op_star
comma
id|loff_t
comma
r_int
comma
r_int
comma
r_struct
id|xfs_bmbt_irec
op_star
comma
r_int
op_star
comma
r_int
)paren
suffix:semicolon
r_extern
r_int
id|xfs_iomap_write_delay
c_func
(paren
r_struct
id|xfs_inode
op_star
comma
id|loff_t
comma
r_int
comma
r_int
comma
r_struct
id|xfs_bmbt_irec
op_star
comma
r_int
op_star
)paren
suffix:semicolon
r_extern
r_int
id|xfs_iomap_write_allocate
c_func
(paren
r_struct
id|xfs_inode
op_star
comma
r_struct
id|xfs_bmbt_irec
op_star
comma
r_int
op_star
)paren
suffix:semicolon
r_extern
r_int
id|xfs_iomap_write_unwritten
c_func
(paren
r_struct
id|xfs_inode
op_star
comma
id|loff_t
comma
r_int
)paren
suffix:semicolon
macro_line|#endif /* __XFS_IOMAP_H__*/
eof
