multiline_comment|/*&n; * befs.h&n; *&n; * Copyright (C) 2001-2002 Will Dyson &lt;will_dyson@pobox.com&gt;&n; * Copyright (C) 1999 Makoto Kato (m_kato@ga2.so-net.ne.jp)&n; */
macro_line|#ifndef _LINUX_BEFS_H
DECL|macro|_LINUX_BEFS_H
mdefine_line|#define _LINUX_BEFS_H
macro_line|#include &quot;befs_fs_types.h&quot;
multiline_comment|/* used in debug.c */
DECL|macro|BEFS_VERSION
mdefine_line|#define BEFS_VERSION &quot;0.9.3&quot;
multiline_comment|/* Sector_t makes this sillyness obsolete */
DECL|typedef|befs_blocknr_t
r_typedef
id|u64
id|befs_blocknr_t
suffix:semicolon
DECL|typedef|vfs_blocknr_t
r_typedef
id|u32
id|vfs_blocknr_t
suffix:semicolon
multiline_comment|/*&n; * BeFS in memory structures&n; */
DECL|struct|befs_mount_options
r_typedef
r_struct
id|befs_mount_options
(brace
DECL|member|gid
id|gid_t
id|gid
suffix:semicolon
DECL|member|uid
id|uid_t
id|uid
suffix:semicolon
DECL|member|use_gid
r_int
id|use_gid
suffix:semicolon
DECL|member|use_uid
r_int
id|use_uid
suffix:semicolon
DECL|member|debug
r_int
id|debug
suffix:semicolon
DECL|member|iocharset
r_char
op_star
id|iocharset
suffix:semicolon
DECL|typedef|befs_mount_options
)brace
id|befs_mount_options
suffix:semicolon
DECL|struct|befs_sb_info
r_typedef
r_struct
id|befs_sb_info
(brace
DECL|member|magic1
id|u32
id|magic1
suffix:semicolon
DECL|member|block_size
id|u32
id|block_size
suffix:semicolon
DECL|member|block_shift
id|u32
id|block_shift
suffix:semicolon
DECL|member|byte_order
r_int
id|byte_order
suffix:semicolon
DECL|member|num_blocks
id|befs_off_t
id|num_blocks
suffix:semicolon
DECL|member|used_blocks
id|befs_off_t
id|used_blocks
suffix:semicolon
DECL|member|inode_size
id|u32
id|inode_size
suffix:semicolon
DECL|member|magic2
id|u32
id|magic2
suffix:semicolon
multiline_comment|/* Allocation group information */
DECL|member|blocks_per_ag
id|u32
id|blocks_per_ag
suffix:semicolon
DECL|member|ag_shift
id|u32
id|ag_shift
suffix:semicolon
DECL|member|num_ags
id|u32
id|num_ags
suffix:semicolon
multiline_comment|/* jornal log entry */
DECL|member|log_blocks
id|befs_block_run
id|log_blocks
suffix:semicolon
DECL|member|log_start
id|befs_off_t
id|log_start
suffix:semicolon
DECL|member|log_end
id|befs_off_t
id|log_end
suffix:semicolon
DECL|member|root_dir
id|befs_inode_addr
id|root_dir
suffix:semicolon
DECL|member|indices
id|befs_inode_addr
id|indices
suffix:semicolon
DECL|member|magic3
id|u32
id|magic3
suffix:semicolon
DECL|member|mount_opts
id|befs_mount_options
id|mount_opts
suffix:semicolon
DECL|member|nls
r_struct
id|nls_table
op_star
id|nls
suffix:semicolon
DECL|typedef|befs_sb_info
)brace
id|befs_sb_info
suffix:semicolon
DECL|struct|befs_inode_info
r_typedef
r_struct
id|befs_inode_info
(brace
DECL|member|i_flags
id|u32
id|i_flags
suffix:semicolon
DECL|member|i_type
id|u32
id|i_type
suffix:semicolon
DECL|member|i_inode_num
id|befs_inode_addr
id|i_inode_num
suffix:semicolon
DECL|member|i_parent
id|befs_inode_addr
id|i_parent
suffix:semicolon
DECL|member|i_attribute
id|befs_inode_addr
id|i_attribute
suffix:semicolon
r_union
(brace
DECL|member|ds
id|befs_data_stream
id|ds
suffix:semicolon
DECL|member|symlink
r_char
id|symlink
(braket
id|BEFS_SYMLINK_LEN
)braket
suffix:semicolon
DECL|member|i_data
)brace
id|i_data
suffix:semicolon
DECL|member|vfs_inode
r_struct
id|inode
id|vfs_inode
suffix:semicolon
DECL|typedef|befs_inode_info
)brace
id|befs_inode_info
suffix:semicolon
DECL|enum|befs_err
r_enum
id|befs_err
(brace
DECL|enumerator|BEFS_OK
id|BEFS_OK
comma
DECL|enumerator|BEFS_ERR
id|BEFS_ERR
comma
DECL|enumerator|BEFS_BAD_INODE
id|BEFS_BAD_INODE
comma
DECL|enumerator|BEFS_BT_END
id|BEFS_BT_END
comma
DECL|enumerator|BEFS_BT_EMPTY
id|BEFS_BT_EMPTY
comma
DECL|enumerator|BEFS_BT_MATCH
id|BEFS_BT_MATCH
comma
DECL|enumerator|BEFS_BT_PARMATCH
id|BEFS_BT_PARMATCH
comma
DECL|enumerator|BEFS_BT_NOT_FOUND
id|BEFS_BT_NOT_FOUND
)brace
suffix:semicolon
multiline_comment|/****************************/
multiline_comment|/* debug.c */
r_void
id|befs_error
c_func
(paren
r_const
r_struct
id|super_block
op_star
id|sb
comma
r_const
r_char
op_star
id|fmt
comma
dot
dot
dot
)paren
suffix:semicolon
r_void
id|befs_warning
c_func
(paren
r_const
r_struct
id|super_block
op_star
id|sb
comma
r_const
r_char
op_star
id|fmt
comma
dot
dot
dot
)paren
suffix:semicolon
r_void
id|befs_debug
c_func
(paren
r_const
r_struct
id|super_block
op_star
id|sb
comma
r_const
r_char
op_star
id|fmt
comma
dot
dot
dot
)paren
suffix:semicolon
r_void
id|befs_dump_super_block
c_func
(paren
r_const
r_struct
id|super_block
op_star
id|sb
comma
id|befs_super_block
op_star
)paren
suffix:semicolon
r_void
id|befs_dump_inode
c_func
(paren
r_const
r_struct
id|super_block
op_star
id|sb
comma
id|befs_inode
op_star
)paren
suffix:semicolon
r_void
id|befs_dump_index_entry
c_func
(paren
r_const
r_struct
id|super_block
op_star
id|sb
comma
id|befs_btree_super
op_star
)paren
suffix:semicolon
r_void
id|befs_dump_index_node
c_func
(paren
r_const
r_struct
id|super_block
op_star
id|sb
comma
id|befs_btree_nodehead
op_star
)paren
suffix:semicolon
r_void
id|befs_dump_inode_addr
c_func
(paren
r_const
r_struct
id|super_block
op_star
id|sb
comma
id|befs_inode_addr
)paren
suffix:semicolon
multiline_comment|/****************************/
multiline_comment|/* Gets a pointer to the private portion of the super_block&n; * structure from the public part&n; */
r_static
r_inline
id|befs_sb_info
op_star
DECL|function|BEFS_SB
id|BEFS_SB
c_func
(paren
r_const
r_struct
id|super_block
op_star
id|super
)paren
(brace
r_return
(paren
id|befs_sb_info
op_star
)paren
id|super-&gt;s_fs_info
suffix:semicolon
)brace
r_static
r_inline
id|befs_inode_info
op_star
DECL|function|BEFS_I
id|BEFS_I
c_func
(paren
r_const
r_struct
id|inode
op_star
id|inode
)paren
(brace
r_return
id|list_entry
c_func
(paren
id|inode
comma
r_struct
id|befs_inode_info
comma
id|vfs_inode
)paren
suffix:semicolon
)brace
r_static
r_inline
id|befs_blocknr_t
DECL|function|iaddr2blockno
id|iaddr2blockno
c_func
(paren
r_struct
id|super_block
op_star
id|sb
comma
id|befs_inode_addr
op_star
id|iaddr
)paren
(brace
r_return
(paren
(paren
id|iaddr-&gt;allocation_group
op_lshift
id|BEFS_SB
c_func
(paren
id|sb
)paren
op_member_access_from_pointer
id|ag_shift
)paren
op_plus
id|iaddr-&gt;start
)paren
suffix:semicolon
)brace
r_static
r_inline
id|befs_inode_addr
DECL|function|blockno2iaddr
id|blockno2iaddr
c_func
(paren
r_struct
id|super_block
op_star
id|sb
comma
id|befs_blocknr_t
id|blockno
)paren
(brace
id|befs_inode_addr
id|iaddr
suffix:semicolon
id|iaddr.allocation_group
op_assign
id|blockno
op_rshift
id|BEFS_SB
c_func
(paren
id|sb
)paren
op_member_access_from_pointer
id|ag_shift
suffix:semicolon
id|iaddr.start
op_assign
id|blockno
op_minus
(paren
id|iaddr.allocation_group
op_lshift
id|BEFS_SB
c_func
(paren
id|sb
)paren
op_member_access_from_pointer
id|ag_shift
)paren
suffix:semicolon
id|iaddr.len
op_assign
l_int|1
suffix:semicolon
r_return
id|iaddr
suffix:semicolon
)brace
r_static
r_inline
r_int
r_int
DECL|function|befs_iaddrs_per_block
id|befs_iaddrs_per_block
c_func
(paren
r_struct
id|super_block
op_star
id|sb
)paren
(brace
r_return
id|BEFS_SB
c_func
(paren
id|sb
)paren
op_member_access_from_pointer
id|block_size
op_div
r_sizeof
(paren
id|befs_inode_addr
)paren
suffix:semicolon
)brace
r_static
r_inline
r_int
DECL|function|befs_iaddr_is_empty
id|befs_iaddr_is_empty
c_func
(paren
id|befs_inode_addr
op_star
id|iaddr
)paren
(brace
r_return
(paren
op_logical_neg
id|iaddr-&gt;allocation_group
)paren
op_logical_and
(paren
op_logical_neg
id|iaddr-&gt;start
)paren
op_logical_and
(paren
op_logical_neg
id|iaddr-&gt;len
)paren
suffix:semicolon
)brace
r_static
r_inline
r_int
DECL|function|befs_brun_size
id|befs_brun_size
c_func
(paren
r_struct
id|super_block
op_star
id|sb
comma
id|befs_block_run
id|run
)paren
(brace
r_return
id|BEFS_SB
c_func
(paren
id|sb
)paren
op_member_access_from_pointer
id|block_size
op_star
id|run.len
suffix:semicolon
)brace
macro_line|#endif&t;&t;&t;&t;/* _LINUX_BEFS_H */
eof
