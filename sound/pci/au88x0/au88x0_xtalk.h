multiline_comment|/***************************************************************************&n; *            au88x0_cxtalk.h&n; *&n; *  Wed Nov 19 19:07:17 2003&n; *  Copyright  2003  mjander&n; *  mjander@users.sourceforge.org&n; ****************************************************************************/
multiline_comment|/*&n; *  This program is free software; you can redistribute it and/or modify&n; *  it under the terms of the GNU General Public License as published by&n; *  the Free Software Foundation; either version 2 of the License, or&n; *  (at your option) any later version.&n; *&n; *  This program is distributed in the hope that it will be useful,&n; *  but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *  GNU Library General Public License for more details.&n; *&n; *  You should have received a copy of the GNU General Public License&n; *  along with this program; if not, write to the Free Software&n; *  Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.&n; */
multiline_comment|/* The crosstalk canceler supports 5 stereo input channels. The result is &n;   available at one single output route pair (stereo). */
macro_line|#ifndef _AU88X0_CXTALK_H
DECL|macro|_AU88X0_CXTALK_H
mdefine_line|#define _AU88X0_CXTALK_H
macro_line|#include &quot;au88x0.h&quot;
DECL|macro|XTDLINE_SZ
mdefine_line|#define XTDLINE_SZ 32
DECL|macro|XTGAINS_SZ
mdefine_line|#define XTGAINS_SZ 10
DECL|macro|XTINST_SZ
mdefine_line|#define XTINST_SZ 4
DECL|macro|XT_HEADPHONE
mdefine_line|#define XT_HEADPHONE&t;1
DECL|macro|XT_SPEAKER0
mdefine_line|#define XT_SPEAKER0&t;&t;2
DECL|macro|XT_SPEAKER1
mdefine_line|#define XT_SPEAKER1&t;&t;3
DECL|macro|XT_DIAMOND
mdefine_line|#define XT_DIAMOND&t;&t;4
DECL|typedef|xtalk_dline_t
r_typedef
r_int
id|xtalk_dline_t
(braket
id|XTDLINE_SZ
)braket
suffix:semicolon
DECL|typedef|xtalk_gains_t
r_typedef
r_int
id|xtalk_gains_t
(braket
id|XTGAINS_SZ
)braket
suffix:semicolon
DECL|typedef|xtalk_instate_t
r_typedef
r_int
id|xtalk_instate_t
(braket
id|XTINST_SZ
)braket
suffix:semicolon
DECL|typedef|xtalk_coefs_t
r_typedef
r_int
id|xtalk_coefs_t
(braket
l_int|5
)braket
(braket
l_int|5
)braket
suffix:semicolon
DECL|typedef|xtalk_state_t
r_typedef
r_int
id|xtalk_state_t
(braket
l_int|5
)braket
(braket
l_int|4
)braket
suffix:semicolon
r_extern
id|xtalk_gains_t
r_const
id|vortex_asXtalkGainsAllChan
suffix:semicolon
r_static
r_void
id|vortex_XtalkHw_SetGains
c_func
(paren
id|vortex_t
op_star
id|vortex
comma
id|xtalk_gains_t
r_const
id|gains
)paren
suffix:semicolon
r_static
r_void
id|vortex_XtalkHw_SetSampleRate
c_func
(paren
id|vortex_t
op_star
id|vortex
comma
r_int
id|sr
)paren
suffix:semicolon
r_static
r_void
id|vortex_XtalkHw_ProgramPipe
c_func
(paren
id|vortex_t
op_star
id|vortex
)paren
suffix:semicolon
r_static
r_void
id|vortex_XtalkHw_ProgramPipe
c_func
(paren
id|vortex_t
op_star
id|vortex
)paren
suffix:semicolon
r_static
r_void
id|vortex_XtalkHw_ProgramXtalkWide
c_func
(paren
id|vortex_t
op_star
id|vortex
)paren
suffix:semicolon
r_static
r_void
id|vortex_XtalkHw_ProgramXtalkNarrow
c_func
(paren
id|vortex_t
op_star
id|vortex
)paren
suffix:semicolon
r_static
r_void
id|vortex_XtalkHw_ProgramDiamondXtalk
c_func
(paren
id|vortex_t
op_star
id|vortex
)paren
suffix:semicolon
r_static
r_void
id|vortex_XtalkHw_Enable
c_func
(paren
id|vortex_t
op_star
id|vortex
)paren
suffix:semicolon
r_static
r_void
id|vortex_XtalkHw_Disable
c_func
(paren
id|vortex_t
op_star
id|vortex
)paren
suffix:semicolon
r_static
r_void
id|vortex_XtalkHw_init
c_func
(paren
id|vortex_t
op_star
id|vortex
)paren
suffix:semicolon
macro_line|#endif&t;&t;&t;&t;/* _AU88X0_CXTALK_H */
eof
