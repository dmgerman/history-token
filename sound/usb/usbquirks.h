multiline_comment|/*&n; * ALSA USB Audio Driver&n; *&n; * Copyright (c) 2002 by Takashi Iwai &lt;tiwai@suse.de&gt;,&n; *                       Clemens Ladisch &lt;clemens@ladisch.de&gt;&n; *&n; *&n; *  This program is free software; you can redistribute it and/or modify&n; *  it under the terms of the GNU General Public License as published by&n; *  the Free Software Foundation; either version 2 of the License, or&n; *  (at your option) any later version.&n; *&n; *  This program is distributed in the hope that it will be useful,&n; *  but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *  GNU General Public License for more details.&n; *&n; *  You should have received a copy of the GNU General Public License&n; *  along with this program; if not, write to the Free Software&n; *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA&n; */
multiline_comment|/*&n; * The contents of this file are part of the driver&squot;s id_table.&n; *&n; * In a perfect world, this file would be empty.&n; */
multiline_comment|/*&n; * Use this for devices where other interfaces are standard compliant,&n; * to prevent the quirk being applied to those interfaces. (To work with&n; * hotplugging, bDeviceClass must be set to USB_CLASS_PER_INTERFACE.)&n; */
DECL|macro|USB_DEVICE_VENDOR_SPEC
mdefine_line|#define USB_DEVICE_VENDOR_SPEC(vend, prod) &bslash;&n;&t;.match_flags = USB_DEVICE_ID_MATCH_VENDOR | &bslash;&n;&t;&t;       USB_DEVICE_ID_MATCH_PRODUCT | &bslash;&n;&t;&t;       USB_DEVICE_ID_MATCH_INT_CLASS, &bslash;&n;&t;.idVendor = vend, &bslash;&n;&t;.idProduct = prod, &bslash;&n;&t;.bInterfaceClass = USB_CLASS_VENDOR_SPEC
multiline_comment|/*&n; * Yamaha devices&n; */
DECL|macro|YAMAHA_DEVICE
mdefine_line|#define YAMAHA_DEVICE(id, name) { &bslash;&n;&t;USB_DEVICE(0x0499, id), &bslash;&n;&t;.driver_info = (unsigned long) &amp; (const snd_usb_audio_quirk_t) { &bslash;&n;&t;&t;.vendor_name = &quot;Yamaha&quot;, &bslash;&n;&t;&t;.product_name = name, &bslash;&n;&t;&t;.ifnum = QUIRK_ANY_INTERFACE, &bslash;&n;&t;&t;.type = QUIRK_MIDI_YAMAHA &bslash;&n;&t;} &bslash;&n;}
DECL|macro|YAMAHA_INTERFACE
mdefine_line|#define YAMAHA_INTERFACE(id, intf, name) { &bslash;&n;&t;USB_DEVICE_VENDOR_SPEC(0x0499, id), &bslash;&n;&t;.driver_info = (unsigned long) &amp; (const snd_usb_audio_quirk_t) { &bslash;&n;&t;&t;.vendor_name = &quot;Yamaha&quot;, &bslash;&n;&t;&t;.product_name = name, &bslash;&n;&t;&t;.ifnum = intf, &bslash;&n;&t;&t;.type = QUIRK_MIDI_YAMAHA &bslash;&n;&t;} &bslash;&n;}
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1000
comma
l_string|&quot;UX256&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1001
comma
l_string|&quot;MU1000&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1002
comma
l_string|&quot;MU2000&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1003
comma
l_string|&quot;MU500&quot;
)paren
comma
id|YAMAHA_INTERFACE
c_func
(paren
l_int|0x1004
comma
l_int|3
comma
l_string|&quot;UW500&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1005
comma
l_string|&quot;MOTIF6&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1006
comma
l_string|&quot;MOTIF7&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1007
comma
l_string|&quot;MOTIF8&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1008
comma
l_string|&quot;UX96&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1009
comma
l_string|&quot;UX16&quot;
)paren
comma
id|YAMAHA_INTERFACE
c_func
(paren
l_int|0x100a
comma
l_int|3
comma
l_string|&quot;EOS BX&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x100c
comma
l_string|&quot;UC-MX&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x100d
comma
l_string|&quot;UC-KX&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x100e
comma
l_string|&quot;S08&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x100f
comma
l_string|&quot;CLP-150&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1010
comma
l_string|&quot;CLP-170&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1011
comma
l_string|&quot;P-250&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1012
comma
l_string|&quot;TYROS&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1013
comma
l_string|&quot;PF-500&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1014
comma
l_string|&quot;S90&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1015
comma
l_string|&quot;MOTIF-R&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1017
comma
l_string|&quot;CVP-204&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1018
comma
l_string|&quot;CVP-206&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1019
comma
l_string|&quot;CVP-208&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x101a
comma
l_string|&quot;CVP-210&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x101b
comma
l_string|&quot;PSR-1100&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x101c
comma
l_string|&quot;PSR-2100&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x101d
comma
l_string|&quot;CLP-175&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x101e
comma
l_string|&quot;PSR-K1&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1020
comma
l_string|&quot;EZ-250i&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1021
comma
l_string|&quot;MOTIF ES 6&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1022
comma
l_string|&quot;MOTIF ES 7&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1023
comma
l_string|&quot;MOTIF ES 8&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1024
comma
l_string|&quot;CVP-301&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1025
comma
l_string|&quot;CVP-303&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1026
comma
l_string|&quot;CVP-305&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1027
comma
l_string|&quot;CVP-307&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1028
comma
l_string|&quot;CVP-309&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1029
comma
l_string|&quot;CVP-309GP&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x102a
comma
l_string|&quot;PSR-1500&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x102b
comma
l_string|&quot;PSR-3000&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x102e
comma
l_string|&quot;ELS-01/01C&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1030
comma
l_string|&quot;PSR-295/293&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1031
comma
l_string|&quot;DGX-205/203&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1032
comma
l_string|&quot;DGX-305&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1033
comma
l_string|&quot;DGX-505&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1034
comma
l_int|NULL
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1035
comma
l_int|NULL
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1036
comma
l_int|NULL
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1037
comma
l_int|NULL
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1038
comma
l_int|NULL
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x1039
comma
l_int|NULL
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x103a
comma
l_int|NULL
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x103b
comma
l_int|NULL
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x103c
comma
l_int|NULL
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x2000
comma
l_string|&quot;DGP-7&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x2001
comma
l_string|&quot;DGP-5&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x2002
comma
l_int|NULL
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x5000
comma
l_string|&quot;CS1D&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x5001
comma
l_string|&quot;DSP1D&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x5002
comma
l_string|&quot;DME32&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x5003
comma
l_string|&quot;DM2000&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x5004
comma
l_string|&quot;02R96&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x5005
comma
l_string|&quot;ACU16-C&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x5006
comma
l_string|&quot;NHB32-C&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x5007
comma
l_string|&quot;DM1000&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x5008
comma
l_string|&quot;01V96&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x5009
comma
l_string|&quot;SPX2000&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x500a
comma
l_string|&quot;PM5D&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x500b
comma
l_string|&quot;DME64N&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x500c
comma
l_string|&quot;DME24N&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x500d
comma
l_int|NULL
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x500e
comma
l_int|NULL
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x7000
comma
l_string|&quot;DTX&quot;
)paren
comma
id|YAMAHA_DEVICE
c_func
(paren
l_int|0x7010
comma
l_string|&quot;UB99&quot;
)paren
comma
DECL|macro|YAMAHA_DEVICE
macro_line|#undef YAMAHA_DEVICE
DECL|macro|YAMAHA_INTERFACE
macro_line|#undef YAMAHA_INTERFACE
multiline_comment|/*&n; * Roland/RolandED/Edirol/BOSS devices&n; */
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0000
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UA-100&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_COMPOSITE
comma
dot
id|data
op_assign
(paren
r_const
id|snd_usb_audio_quirk_t
(braket
)braket
)paren
(brace
(brace
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
r_struct
id|audioformat
)paren
(brace
dot
id|format
op_assign
id|SNDRV_PCM_FORMAT_S16_LE
comma
dot
id|channels
op_assign
l_int|4
comma
dot
id|iface
op_assign
l_int|0
comma
dot
id|altsetting
op_assign
l_int|1
comma
dot
id|altset_idx
op_assign
l_int|1
comma
dot
id|attributes
op_assign
l_int|0
comma
dot
id|endpoint
op_assign
l_int|0x01
comma
dot
id|ep_attr
op_assign
l_int|0x09
comma
dot
id|rates
op_assign
id|SNDRV_PCM_RATE_CONTINUOUS
comma
dot
id|rate_min
op_assign
l_int|44100
comma
dot
id|rate_max
op_assign
l_int|44100
comma
)brace
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|1
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
r_struct
id|audioformat
)paren
(brace
dot
id|format
op_assign
id|SNDRV_PCM_FORMAT_S16_LE
comma
dot
id|channels
op_assign
l_int|2
comma
dot
id|iface
op_assign
l_int|1
comma
dot
id|altsetting
op_assign
l_int|1
comma
dot
id|altset_idx
op_assign
l_int|1
comma
dot
id|attributes
op_assign
id|EP_CS_ATTR_FILL_MAX
comma
dot
id|endpoint
op_assign
l_int|0x81
comma
dot
id|ep_attr
op_assign
l_int|0x05
comma
dot
id|rates
op_assign
id|SNDRV_PCM_RATE_CONTINUOUS
comma
dot
id|rate_min
op_assign
l_int|44100
comma
dot
id|rate_max
op_assign
l_int|44100
comma
)brace
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0007
comma
dot
id|in_cables
op_assign
l_int|0x0007
)brace
)brace
comma
(brace
dot
id|ifnum
op_assign
op_minus
l_int|1
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0002
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UM-4&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x000f
comma
dot
id|in_cables
op_assign
l_int|0x000f
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0003
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;SC-8850&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x003f
comma
dot
id|in_cables
op_assign
l_int|0x003f
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0004
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;U-8&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0005
comma
dot
id|in_cables
op_assign
l_int|0x0005
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0005
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UM-2&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0003
comma
dot
id|in_cables
op_assign
l_int|0x0003
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0007
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;SC-8820&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0013
comma
dot
id|in_cables
op_assign
l_int|0x0013
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0008
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;PC-300&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0009
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UM-1&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x000b
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;SK-500&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0013
comma
dot
id|in_cables
op_assign
l_int|0x0013
)brace
)brace
)brace
comma
(brace
multiline_comment|/* thanks to Emiliano Grilli &lt;emillo@libero.it&gt;&n;&t; * for helping researching this data */
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x000c
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;SC-D70&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_COMPOSITE
comma
dot
id|data
op_assign
(paren
r_const
id|snd_usb_audio_quirk_t
(braket
)braket
)paren
(brace
(brace
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
r_struct
id|audioformat
)paren
(brace
dot
id|format
op_assign
id|SNDRV_PCM_FORMAT_S24_3LE
comma
dot
id|channels
op_assign
l_int|2
comma
dot
id|iface
op_assign
l_int|0
comma
dot
id|altsetting
op_assign
l_int|1
comma
dot
id|altset_idx
op_assign
l_int|1
comma
dot
id|attributes
op_assign
l_int|0
comma
dot
id|endpoint
op_assign
l_int|0x01
comma
dot
id|ep_attr
op_assign
l_int|0x01
comma
dot
id|rates
op_assign
id|SNDRV_PCM_RATE_CONTINUOUS
comma
dot
id|rate_min
op_assign
l_int|44100
comma
dot
id|rate_max
op_assign
l_int|44100
comma
)brace
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|1
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
r_struct
id|audioformat
)paren
(brace
dot
id|format
op_assign
id|SNDRV_PCM_FORMAT_S24_3LE
comma
dot
id|channels
op_assign
l_int|2
comma
dot
id|iface
op_assign
l_int|1
comma
dot
id|altsetting
op_assign
l_int|1
comma
dot
id|altset_idx
op_assign
l_int|1
comma
dot
id|attributes
op_assign
l_int|0
comma
dot
id|endpoint
op_assign
l_int|0x81
comma
dot
id|ep_attr
op_assign
l_int|0x01
comma
dot
id|rates
op_assign
id|SNDRV_PCM_RATE_CONTINUOUS
comma
dot
id|rate_min
op_assign
l_int|44100
comma
dot
id|rate_max
op_assign
l_int|44100
comma
)brace
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0007
comma
dot
id|in_cables
op_assign
l_int|0x0007
)brace
)brace
comma
(brace
dot
id|ifnum
op_assign
op_minus
l_int|1
)brace
)brace
)brace
)brace
comma
(brace
multiline_comment|/*&n;&t; * This quirk is for the &quot;Advanced Driver&quot; mode of the Edirol UA-5.&n;&t; * If the advanced mode switch at the back of the unit is off, the&n;&t; * UA-5 has ID 0x0582/0x0011 and is standard compliant (no quirks),&n;&t; * but offers only 16-bit PCM.&n;&t; * In advanced mode, the UA-5 will output S24_3LE samples (two&n;&t; * channels) at the rate indicated on the front switch, including&n;&t; * the 96kHz sample rate.&n;&t; */
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0010
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UA-5&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_COMPOSITE
comma
dot
id|data
op_assign
(paren
r_const
id|snd_usb_audio_quirk_t
(braket
)braket
)paren
(brace
(brace
dot
id|ifnum
op_assign
l_int|1
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_STANDARD_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_STANDARD_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
op_minus
l_int|1
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0012
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;XV-5050&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0014
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UM-880&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x01ff
comma
dot
id|in_cables
op_assign
l_int|0x01ff
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0016
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;SD-90&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x000f
comma
dot
id|in_cables
op_assign
l_int|0x000f
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x001b
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;MMP-2&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x001d
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;V-SYNTH&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0023
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UM-550&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x003f
comma
dot
id|in_cables
op_assign
l_int|0x003f
)brace
)brace
)brace
comma
(brace
multiline_comment|/*&n;&t; * This quirk is for the &quot;Advanced Driver&quot; mode. If off, the UA-20&n;&t; * has ID 0x0026 and is standard compliant, but has only 16-bit PCM&n;&t; * and no MIDI.&n;&t; */
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0025
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UA-20&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_COMPOSITE
comma
dot
id|data
op_assign
(paren
r_const
id|snd_usb_audio_quirk_t
(braket
)braket
)paren
(brace
(brace
dot
id|ifnum
op_assign
l_int|1
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_STANDARD_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_STANDARD_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|3
comma
dot
id|type
op_assign
id|QUIRK_MIDI_STANDARD_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
op_minus
l_int|1
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0027
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;SD-20&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0003
comma
dot
id|in_cables
op_assign
l_int|0x0007
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0029
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;SD-80&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x000f
comma
dot
id|in_cables
op_assign
l_int|0x000f
)brace
)brace
)brace
comma
(brace
multiline_comment|/*&n;&t; * This quirk is for the &quot;Advanced&quot; modes of the Edirol UA-700.&n;&t; * If the sample format switch is not in an advanced setting, the&n;&t; * UA-700 has ID 0x0582/0x002c and is standard compliant (no quirks),&n;&t; * but offers only 16-bit PCM and no MIDI.&n;&t; */
id|USB_DEVICE_VENDOR_SPEC
c_func
(paren
l_int|0x0582
comma
l_int|0x002b
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UA-700&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_COMPOSITE
comma
dot
id|data
op_assign
(paren
r_const
id|snd_usb_audio_quirk_t
(braket
)braket
)paren
(brace
(brace
dot
id|ifnum
op_assign
l_int|1
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_EDIROL_UA700_UA25
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_EDIROL_UA700_UA25
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|3
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_EDIROL_UA700_UA25
)brace
comma
(brace
dot
id|ifnum
op_assign
op_minus
l_int|1
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x002d
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;XV-2020&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x002f
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;VariOS&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0007
comma
dot
id|in_cables
op_assign
l_int|0x0007
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0033
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;PCR&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0003
comma
dot
id|in_cables
op_assign
l_int|0x0007
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0037
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;Digital Piano&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE_VENDOR_SPEC
c_func
(paren
l_int|0x0582
comma
l_int|0x003b
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;BOSS&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;GS-10&quot;
comma
dot
id|ifnum
op_assign
l_int|3
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0003
comma
dot
id|in_cables
op_assign
l_int|0x0003
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0040
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;GI-20&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0044
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UA-1000&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_COMPOSITE
comma
dot
id|data
op_assign
(paren
r_const
id|snd_usb_audio_quirk_t
(braket
)braket
)paren
(brace
(brace
dot
id|ifnum
op_assign
l_int|1
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_EDIROL_UA1000
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_EDIROL_UA1000
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|3
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0003
comma
dot
id|in_cables
op_assign
l_int|0x0003
)brace
)brace
comma
(brace
dot
id|ifnum
op_assign
op_minus
l_int|1
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0048
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UR-80&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0003
comma
dot
id|in_cables
op_assign
l_int|0x0007
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x004d
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;PCR-A&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0003
comma
dot
id|in_cables
op_assign
l_int|0x0007
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0065
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;PCR-1&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_MIDI_FIXED_ENDPOINT
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0003
)brace
)brace
)brace
comma
(brace
multiline_comment|/*&n;&t; * This quirk is for the &quot;Advanced Driver&quot; mode. If off, the UA-3FX&n;&t; * is standard compliant, but has only 16-bit PCM.&n;&t; */
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0050
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UA-3FX&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_COMPOSITE
comma
dot
id|data
op_assign
(paren
r_const
id|snd_usb_audio_quirk_t
(braket
)braket
)paren
(brace
(brace
dot
id|ifnum
op_assign
l_int|1
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_STANDARD_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_STANDARD_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
op_minus
l_int|1
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0052
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UM-1SX&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_MIDI_STANDARD_INTERFACE
)brace
)brace
comma
(brace
multiline_comment|/*&n;&t; * This quirk is for the &quot;Advanced&quot; modes of the Edirol UA-25.&n;&t; * If the switch is not in an advanced setting, the UA-25 has&n;&t; * ID 0x0582/0x0073 and is standard compliant (no quirks), but&n;&t; * offers only 16-bit PCM at 44.1 kHz and no MIDI.&n;&t; */
id|USB_DEVICE_VENDOR_SPEC
c_func
(paren
l_int|0x0582
comma
l_int|0x0074
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UA-25&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_COMPOSITE
comma
dot
id|data
op_assign
(paren
r_const
id|snd_usb_audio_quirk_t
(braket
)braket
)paren
(brace
(brace
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_EDIROL_UA700_UA25
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|1
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_EDIROL_UA700_UA25
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_EDIROL_UA700_UA25
)brace
comma
(brace
dot
id|ifnum
op_assign
op_minus
l_int|1
)brace
)brace
)brace
)brace
comma
multiline_comment|/* Midiman/M-Audio devices */
(brace
id|USB_DEVICE_VENDOR_SPEC
c_func
(paren
l_int|0x0763
comma
l_int|0x1002
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;M-Audio&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;MidiSport 2x2&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_MIDI_MIDIMAN
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0003
comma
dot
id|in_cables
op_assign
l_int|0x0003
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE_VENDOR_SPEC
c_func
(paren
l_int|0x0763
comma
l_int|0x1011
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;M-Audio&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;MidiSport 1x1&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_MIDI_MIDIMAN
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE_VENDOR_SPEC
c_func
(paren
l_int|0x0763
comma
l_int|0x1015
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;M-Audio&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;Keystation&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_MIDI_MIDIMAN
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE_VENDOR_SPEC
c_func
(paren
l_int|0x0763
comma
l_int|0x1021
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;M-Audio&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;MidiSport 4x4&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_MIDI_MIDIMAN
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x000f
comma
dot
id|in_cables
op_assign
l_int|0x000f
)brace
)brace
)brace
comma
(brace
multiline_comment|/*&n;&t; * For hardware revision 1.05; in the later revisions (1.10 and&n;&t; * 1.21), 0x1031 is the ID for the device without firmware.&n;&t; * Thanks to Olaf Giesbrecht &lt;Olaf_Giesbrecht@yahoo.de&gt;&n;&t; */
id|USB_DEVICE_VER
c_func
(paren
l_int|0x0763
comma
l_int|0x1031
comma
l_int|0x0100
comma
l_int|0x0109
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;M-Audio&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;MidiSport 8x8&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_MIDI_MIDIMAN
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x01ff
comma
dot
id|in_cables
op_assign
l_int|0x01ff
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE_VENDOR_SPEC
c_func
(paren
l_int|0x0763
comma
l_int|0x1033
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;M-Audio&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;MidiSport 8x8&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_MIDI_MIDIMAN
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x01ff
comma
dot
id|in_cables
op_assign
l_int|0x01ff
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE_VENDOR_SPEC
c_func
(paren
l_int|0x0763
comma
l_int|0x1041
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;M-Audio&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;MidiSport 2x4&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_MIDI_MIDIMAN
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x000f
comma
dot
id|in_cables
op_assign
l_int|0x0003
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE_VENDOR_SPEC
c_func
(paren
l_int|0x0763
comma
l_int|0x2001
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;M-Audio&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;Quattro&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_COMPOSITE
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
(braket
)braket
)paren
(brace
multiline_comment|/*&n;&t;&t;&t; * Interfaces 0-2 are &quot;Windows-compatible&quot;, 16-bit only,&n;&t;&t;&t; * and share endpoints with the other interfaces.&n;&t;&t;&t; * Ignore them.  The other interfaces can do 24 bits,&n;&t;&t;&t; * but captured samples are big-endian (see usbaudio.c).&n;&t;&t;&t; */
(brace
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_IGNORE_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|1
comma
dot
id|type
op_assign
id|QUIRK_IGNORE_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_IGNORE_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|3
comma
dot
id|type
op_assign
id|QUIRK_IGNORE_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|4
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_STANDARD_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|5
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_STANDARD_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|6
comma
dot
id|type
op_assign
id|QUIRK_IGNORE_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|7
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_STANDARD_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|8
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_STANDARD_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|9
comma
dot
id|type
op_assign
id|QUIRK_MIDI_MIDIMAN
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
comma
(brace
dot
id|ifnum
op_assign
op_minus
l_int|1
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE_VENDOR_SPEC
c_func
(paren
l_int|0x0763
comma
l_int|0x2003
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;M-Audio&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;AudioPhile&quot;
comma
dot
id|ifnum
op_assign
l_int|6
comma
dot
id|type
op_assign
id|QUIRK_MIDI_MIDIMAN
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE_VENDOR_SPEC
c_func
(paren
l_int|0x0763
comma
l_int|0x2008
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;M-Audio&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;Ozone&quot;
comma
dot
id|ifnum
op_assign
l_int|3
comma
dot
id|type
op_assign
id|QUIRK_MIDI_MIDIMAN
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE_VENDOR_SPEC
c_func
(paren
l_int|0x0763
comma
l_int|0x200d
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;M-Audio&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;OmniStudio&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_COMPOSITE
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
(braket
)braket
)paren
(brace
(brace
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_IGNORE_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|1
comma
dot
id|type
op_assign
id|QUIRK_IGNORE_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_IGNORE_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|3
comma
dot
id|type
op_assign
id|QUIRK_IGNORE_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|4
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_STANDARD_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|5
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_STANDARD_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|6
comma
dot
id|type
op_assign
id|QUIRK_IGNORE_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|7
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_STANDARD_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|8
comma
dot
id|type
op_assign
id|QUIRK_AUDIO_STANDARD_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|9
comma
dot
id|type
op_assign
id|QUIRK_MIDI_MIDIMAN
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
comma
(brace
dot
id|ifnum
op_assign
op_minus
l_int|1
)brace
)brace
)brace
)brace
comma
multiline_comment|/* Mark of the Unicorn devices */
(brace
multiline_comment|/* thanks to Robert A. Lerche &lt;ral &squot;at&squot; msbit.com&gt; */
id|USB_DEVICE
c_func
(paren
l_int|0x07fd
comma
l_int|0x0001
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;MOTU&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;Fastlane&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_COMPOSITE
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
(braket
)braket
)paren
(brace
(brace
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_MIDI_MOTU
)brace
comma
(brace
dot
id|ifnum
op_assign
l_int|1
comma
dot
id|type
op_assign
id|QUIRK_IGNORE_INTERFACE
)brace
comma
(brace
dot
id|ifnum
op_assign
op_minus
l_int|1
)brace
)brace
)brace
)brace
comma
(brace
multiline_comment|/* Creative Sound Blaster MP3+ */
id|USB_DEVICE
c_func
(paren
l_int|0x041e
comma
l_int|0x3010
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Creative Labs&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;Sound Blaster MP3+&quot;
comma
dot
id|ifnum
op_assign
id|QUIRK_NO_INTERFACE
)brace
)brace
comma
multiline_comment|/* Emagic devices */
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x086a
comma
l_int|0x0001
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Emagic&quot;
comma
multiline_comment|/* .product_name = &quot;Unitor8&quot;, */
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_MIDI_EMAGIC
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x80ff
comma
dot
id|in_cables
op_assign
l_int|0x80ff
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x086a
comma
l_int|0x0002
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Emagic&quot;
comma
multiline_comment|/* .product_name = &quot;AMT8&quot;, */
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_MIDI_EMAGIC
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x80ff
comma
dot
id|in_cables
op_assign
l_int|0x80ff
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x086a
comma
l_int|0x0003
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Emagic&quot;
comma
multiline_comment|/* .product_name = &quot;MT4&quot;, */
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|type
op_assign
id|QUIRK_MIDI_EMAGIC
comma
dot
id|data
op_assign
op_amp
(paren
r_const
id|snd_usb_midi_endpoint_info_t
)paren
(brace
dot
id|out_cables
op_assign
l_int|0x800f
comma
dot
id|in_cables
op_assign
l_int|0x8003
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE_VENDOR_SPEC
c_func
(paren
l_int|0x0ccd
comma
l_int|0x0013
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Terratec&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;PHASE 26&quot;
comma
dot
id|ifnum
op_assign
l_int|3
comma
dot
id|type
op_assign
id|QUIRK_MIDI_STANDARD_INTERFACE
)brace
)brace
comma
multiline_comment|/* Novation EMS devices */
(brace
id|USB_DEVICE_VENDOR_SPEC
c_func
(paren
l_int|0x1235
comma
l_int|0x0001
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Novation&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;ReMOTE Audio/XStation&quot;
comma
dot
id|ifnum
op_assign
l_int|4
comma
dot
id|type
op_assign
id|QUIRK_MIDI_NOVATION
)brace
)brace
comma
(brace
id|USB_DEVICE_VENDOR_SPEC
c_func
(paren
l_int|0x1235
comma
l_int|0x0002
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Novation&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;Speedio&quot;
comma
dot
id|ifnum
op_assign
l_int|3
comma
dot
id|type
op_assign
id|QUIRK_MIDI_NOVATION
)brace
)brace
comma
(brace
id|USB_DEVICE_VENDOR_SPEC
c_func
(paren
l_int|0x1235
comma
l_int|0x4661
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Novation&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;ReMOTE25&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|type
op_assign
id|QUIRK_MIDI_NOVATION
)brace
)brace
comma
(brace
multiline_comment|/*&n;&t; * Some USB MIDI devices don&squot;t have an audio control interface,&n;&t; * so we have to grab MIDI streaming interfaces here.&n;&t; */
dot
id|match_flags
op_assign
id|USB_DEVICE_ID_MATCH_INT_CLASS
op_or
id|USB_DEVICE_ID_MATCH_INT_SUBCLASS
comma
dot
id|bInterfaceClass
op_assign
id|USB_CLASS_AUDIO
comma
dot
id|bInterfaceSubClass
op_assign
id|USB_SUBCLASS_MIDI_STREAMING
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|ifnum
op_assign
id|QUIRK_ANY_INTERFACE
comma
dot
id|type
op_assign
id|QUIRK_MIDI_STANDARD_INTERFACE
)brace
)brace
comma
DECL|macro|USB_DEVICE_VENDOR_SPEC
macro_line|#undef USB_DEVICE_VENDOR_SPEC
eof
