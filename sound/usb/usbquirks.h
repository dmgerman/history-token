multiline_comment|/*&n; * ALSA USB Audio Driver&n; *&n; * Copyright (c) 2002 by Takashi Iwai &lt;tiwai@suse.de&gt;,&n; *                       Clemens Ladisch &lt;clemens@ladisch.de&gt;&n; *&n; *&n; *  This program is free software; you can redistribute it and/or modify&n; *  it under the terms of the GNU General Public License as published by&n; *  the Free Software Foundation; either version 2 of the License, or&n; *  (at your option) any later version.&n; *&n; *  This program is distributed in the hope that it will be useful,&n; *  but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *  GNU General Public License for more details.&n; *&n; *  You should have received a copy of the GNU General Public License&n; *  along with this program; if not, write to the Free Software&n; *  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA&n; */
multiline_comment|/*&n; * The contents of this file are part of the driver&squot;s id_table.&n; *&n; * In a perfect world, this file would be empty.&n; */
macro_line|#if defined(CONFIG_SND_SEQUENCER) || defined(CONFIG_SND_SEQUENCER_MODULE)
(brace
multiline_comment|/* from NetBSD&squot;s umidi driver */
id|USB_DEVICE
c_func
(paren
l_int|0x0499
comma
l_int|0x1000
)paren
comma
multiline_comment|/* Yamaha UX256 */
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0xffff
comma
dot
id|in_cables
op_assign
l_int|0x00ff
)brace
)brace
)brace
)brace
comma
(brace
multiline_comment|/* from Nagano Daisuke&squot;s usb-midi driver */
id|USB_DEVICE
c_func
(paren
l_int|0x0499
comma
l_int|0x1001
)paren
comma
multiline_comment|/* Yamaha MU1000 */
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x000f
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
)brace
)brace
comma
multiline_comment|/*&n; * I don&squot;t know whether the following Yamaha devices need entries or not:&n; * 0x1002 MU2000   0x1008 UX96&n; * 0x1003 MU500    0x1009 UX16&n; * 0x1004 UW500    0x100e S08&n; * 0x1005 MOTIF6   0x100f CLP-150&n; * 0x1006 MOTIF7   0x1010 CLP-170&n; * 0x1007 MOTIF8&n; */
multiline_comment|/*&n; * Once upon a time people thought, &quot;Wouldn&squot;t it be nice if there was a&n; * standard for USB MIDI devices, so that device drivers would not be forced&n; * to know about the quirks of specific devices?&quot;  So Roland went ahead and&n; * wrote the USB Device Class Definition for MIDI Devices, and the USB-IF&n; * endorsed it, and now everybody designing USB MIDI devices does so in&n; * agreement with this standard (or at least tries to).&n; *&n; * And if you prefer a happy end, you can imagine that Roland devices set a&n; * good example. Instead of being completely fucked up due to the lack of&n; * class-specific descriptors.&n; */
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0000
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UA-100&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x0007
comma
dot
id|in_cables
op_assign
l_int|0x0007
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0002
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UM-4&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x000f
comma
dot
id|in_cables
op_assign
l_int|0x000f
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0003
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;SC-8850&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x003f
comma
dot
id|in_cables
op_assign
l_int|0x003f
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0004
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;U-8&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x0003
comma
dot
id|in_cables
op_assign
l_int|0x0003
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0005
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UM-2&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x0003
comma
dot
id|in_cables
op_assign
l_int|0x0003
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0007
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;SC-8820&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x0013
comma
dot
id|in_cables
op_assign
l_int|0x0013
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0008
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;PC-300&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0009
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UM-1&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x000b
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;SK-500&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x0013
comma
dot
id|in_cables
op_assign
l_int|0x0013
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x000c
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;SC-D70&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x0007
comma
dot
id|in_cables
op_assign
l_int|0x0007
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0012
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;Roland&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;XV-5050&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x0001
comma
dot
id|in_cables
op_assign
l_int|0x0001
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0014
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UM-880&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x01ff
comma
dot
id|in_cables
op_assign
l_int|0x01ff
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0016
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;SD-90&quot;
comma
dot
id|ifnum
op_assign
l_int|2
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x000f
comma
dot
id|in_cables
op_assign
l_int|0x000f
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0023
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UM-550&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x003f
comma
dot
id|in_cables
op_assign
l_int|0x003f
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0027
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;SD-20&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x0003
comma
dot
id|in_cables
op_assign
l_int|0x0007
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x0029
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;SD-80&quot;
comma
dot
id|ifnum
op_assign
l_int|0
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x000f
comma
dot
id|in_cables
op_assign
l_int|0x000f
)brace
)brace
)brace
)brace
comma
(brace
id|USB_DEVICE
c_func
(paren
l_int|0x0582
comma
l_int|0x002b
)paren
comma
dot
id|driver_info
op_assign
(paren
r_int
r_int
)paren
op_amp
(paren
r_const
id|snd_usb_audio_quirk_t
)paren
(brace
dot
id|vendor_name
op_assign
l_string|&quot;EDIROL&quot;
comma
dot
id|product_name
op_assign
l_string|&quot;UA-700&quot;
comma
dot
id|ifnum
op_assign
l_int|3
comma
dot
id|endpoints
op_assign
(brace
(brace
dot
id|epnum
op_assign
op_minus
l_int|1
comma
dot
id|out_cables
op_assign
l_int|0x0003
comma
dot
id|in_cables
op_assign
l_int|0x0003
)brace
)brace
)brace
)brace
comma
macro_line|#endif /* CONFIG_SND_SEQUENCER(_MODULE) */
eof
