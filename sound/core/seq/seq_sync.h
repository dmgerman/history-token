multiline_comment|/*&n; *  Synchronization of ALSA sequencer queues&n; *&n; *   Copyright (c) 2000 by Takashi Iwai &lt;tiwai@suse.de&gt;&n; *&n; *   This program is free software; you can redistribute it and/or modify&n; *   it under the terms of the GNU General Public License as published by&n; *   the Free Software Foundation; either version 2 of the License, or&n; *   (at your option) any later version.&n; *&n; *   This program is distributed in the hope that it will be useful,&n; *   but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *   GNU General Public License for more details.&n; *&n; *   You should have received a copy of the GNU General Public License&n; *   along with this program; if not, write to the Free Software&n; *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA&n; *&n; */
macro_line|#ifndef __SND_SEQ_SYNC_H
DECL|macro|__SND_SEQ_SYNC_H
mdefine_line|#define __SND_SEQ_SYNC_H
DECL|typedef|queue_sync_t
r_typedef
r_struct
id|snd_queue_sync
id|queue_sync_t
suffix:semicolon
DECL|typedef|seq_sync_parser_t
r_typedef
r_struct
id|snd_seq_sync_parser
id|seq_sync_parser_t
suffix:semicolon
DECL|typedef|seq_sync_arg_t
r_typedef
r_void
op_star
id|seq_sync_arg_t
suffix:semicolon
DECL|struct|snd_queue_sync
r_struct
id|snd_queue_sync
(brace
DECL|member|format
r_int
r_char
id|format
suffix:semicolon
DECL|member|time_format
r_int
r_char
id|time_format
suffix:semicolon
DECL|member|opt_info
r_int
r_char
id|opt_info
(braket
l_int|6
)braket
suffix:semicolon
multiline_comment|/* optional info */
DECL|member|addr
id|snd_seq_addr_t
id|addr
suffix:semicolon
multiline_comment|/* master/slave address */
DECL|member|counter
r_int
r_int
id|counter
suffix:semicolon
multiline_comment|/* current position */
DECL|member|resolution
r_int
r_int
id|resolution
suffix:semicolon
multiline_comment|/* resolution for time */
DECL|member|cur_time
id|snd_seq_real_time_t
id|cur_time
suffix:semicolon
multiline_comment|/* current time */
DECL|member|sync_tick
id|seq_timer_tick_t
id|sync_tick
suffix:semicolon
multiline_comment|/* tick info */
r_union
(brace
DECL|member|tick
r_struct
id|sndrv_seq_queue_tick_sync
id|tick
suffix:semicolon
DECL|member|time
r_struct
id|sndrv_seq_queue_time_sync
id|time
suffix:semicolon
DECL|member|param
)brace
id|param
suffix:semicolon
DECL|member|parser
id|seq_sync_parser_t
op_star
id|parser
suffix:semicolon
DECL|member|parser_arg
id|seq_sync_arg_t
id|parser_arg
suffix:semicolon
DECL|member|list
r_struct
id|list_head
id|list
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|seq_sync_parser_ops
r_struct
id|seq_sync_parser_ops
(brace
DECL|member|open
r_int
(paren
op_star
id|open
)paren
(paren
id|queue_sync_t
op_star
id|sync_info
comma
id|seq_sync_arg_t
op_star
id|retp
)paren
suffix:semicolon
DECL|member|sync
r_int
(paren
op_star
id|sync
)paren
(paren
id|seq_sync_arg_t
id|arg
comma
r_const
id|snd_seq_event_t
op_star
id|src
comma
id|snd_seq_event_t
op_star
id|ev
)paren
suffix:semicolon
DECL|member|close
r_int
(paren
op_star
id|close
)paren
(paren
id|seq_sync_arg_t
id|arg
)paren
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|snd_seq_sync_parser
r_struct
id|snd_seq_sync_parser
(brace
DECL|member|format
r_int
r_int
id|format
suffix:semicolon
multiline_comment|/* supported format */
DECL|member|in
r_struct
id|seq_sync_parser_ops
id|in
suffix:semicolon
multiline_comment|/* sync-in (slave) */
DECL|member|out
r_struct
id|seq_sync_parser_ops
id|out
suffix:semicolon
multiline_comment|/* sync-out (mastering) */
)brace
suffix:semicolon
multiline_comment|/*&n; * prototypes&n; */
r_int
id|snd_seq_sync_create_port
c_func
(paren
id|queue_t
op_star
id|queue
)paren
suffix:semicolon
r_int
id|snd_seq_sync_delete_port
c_func
(paren
id|queue_t
op_star
id|queue
)paren
suffix:semicolon
r_void
id|snd_seq_sync_clear
c_func
(paren
id|queue_t
op_star
id|q
)paren
suffix:semicolon
r_void
id|snd_seq_sync_update_tempo
c_func
(paren
id|queue_t
op_star
id|q
)paren
suffix:semicolon
r_void
id|snd_seq_sync_update_tick
c_func
(paren
id|queue_t
op_star
id|q
comma
r_int
id|master_only
comma
r_int
id|atomic
comma
r_int
id|hop
)paren
suffix:semicolon
r_void
id|snd_seq_sync_update_time
c_func
(paren
id|queue_t
op_star
id|q
comma
r_int
id|master_only
comma
r_int
id|atomic
comma
r_int
id|hop
)paren
suffix:semicolon
r_void
id|snd_seq_sync_check
c_func
(paren
id|queue_t
op_star
id|q
comma
r_int
r_int
id|resolution
comma
r_int
id|atomic
comma
r_int
id|hop
)paren
suffix:semicolon
id|sndrv_seq_time_frame_t
id|snd_seq_position_to_time_frame
c_func
(paren
r_int
id|format
comma
r_int
r_int
id|nsubs
comma
r_int
r_int
id|pos
)paren
suffix:semicolon
r_int
r_int
id|snd_seq_time_frame_to_position
c_func
(paren
r_int
id|format
comma
r_int
r_int
id|nsubs
comma
id|sndrv_seq_time_frame_t
op_star
id|rtime
)paren
suffix:semicolon
r_int
r_int
id|snd_seq_get_smpte_resolution
c_func
(paren
r_int
id|time_format
)paren
suffix:semicolon
macro_line|#endif
eof
