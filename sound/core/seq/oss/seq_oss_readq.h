multiline_comment|/*&n; * OSS compatible sequencer driver&n; * read fifo queue&n; *&n; * Copyright (C) 1998,99 Takashi Iwai &lt;tiwai@suse.de&gt;&n; *&n; * This program is free software; you can redistribute it and/or modify&n; * it under the terms of the GNU General Public License as published by&n; * the Free Software Foundation; either version 2 of the License, or&n; * (at your option) any later version.&n; *&n; * This program is distributed in the hope that it will be useful,&n; * but WITHOUT ANY WARRANTY; without even the implied warranty of&n; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; * GNU General Public License for more details.&n; *&n; * You should have received a copy of the GNU General Public License&n; * along with this program; if not, write to the Free Software&n; * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA&n; */
macro_line|#ifndef __SEQ_OSS_READQ_H
DECL|macro|__SEQ_OSS_READQ_H
mdefine_line|#define __SEQ_OSS_READQ_H
macro_line|#include &quot;seq_oss_device.h&quot;
multiline_comment|/*&n; * definition of read queue&n; */
DECL|struct|seq_oss_readq_t
r_struct
id|seq_oss_readq_t
(brace
DECL|member|q
id|evrec_t
op_star
id|q
suffix:semicolon
DECL|member|qlen
r_int
id|qlen
suffix:semicolon
DECL|member|maxlen
r_int
id|maxlen
suffix:semicolon
DECL|member|head
DECL|member|tail
r_int
id|head
comma
id|tail
suffix:semicolon
DECL|member|pre_event_timeout
r_int
r_int
id|pre_event_timeout
suffix:semicolon
DECL|member|input_time
r_int
r_int
id|input_time
suffix:semicolon
DECL|member|midi_sleep
id|wait_queue_head_t
id|midi_sleep
suffix:semicolon
DECL|member|lock
id|spinlock_t
id|lock
suffix:semicolon
)brace
suffix:semicolon
id|seq_oss_readq_t
op_star
id|snd_seq_oss_readq_new
c_func
(paren
id|seq_oss_devinfo_t
op_star
id|dp
comma
r_int
id|maxlen
)paren
suffix:semicolon
r_void
id|snd_seq_oss_readq_delete
c_func
(paren
id|seq_oss_readq_t
op_star
id|q
)paren
suffix:semicolon
r_void
id|snd_seq_oss_readq_clear
c_func
(paren
id|seq_oss_readq_t
op_star
id|readq
)paren
suffix:semicolon
r_int
r_int
id|snd_seq_oss_readq_poll
c_func
(paren
id|seq_oss_readq_t
op_star
id|readq
comma
r_struct
id|file
op_star
id|file
comma
id|poll_table
op_star
id|wait
)paren
suffix:semicolon
r_int
id|snd_seq_oss_readq_puts
c_func
(paren
id|seq_oss_readq_t
op_star
id|readq
comma
r_int
id|dev
comma
r_int
r_char
op_star
id|data
comma
r_int
id|len
)paren
suffix:semicolon
r_int
id|snd_seq_oss_readq_put_event
c_func
(paren
id|seq_oss_readq_t
op_star
id|readq
comma
id|evrec_t
op_star
id|ev
)paren
suffix:semicolon
r_int
id|snd_seq_oss_readq_put_timestamp
c_func
(paren
id|seq_oss_readq_t
op_star
id|readq
comma
r_int
r_int
id|curt
comma
r_int
id|seq_mode
)paren
suffix:semicolon
id|evrec_t
op_star
id|snd_seq_oss_readq_pick
c_func
(paren
id|seq_oss_readq_t
op_star
id|q
comma
r_int
id|blocking
comma
r_int
r_int
op_star
id|rflags
)paren
suffix:semicolon
r_void
id|snd_seq_oss_readq_unlock
c_func
(paren
id|seq_oss_readq_t
op_star
id|q
comma
r_int
r_int
id|flags
)paren
suffix:semicolon
r_void
id|snd_seq_oss_readq_free
c_func
(paren
id|seq_oss_readq_t
op_star
id|q
comma
r_int
r_int
id|flags
)paren
suffix:semicolon
macro_line|#endif
eof
