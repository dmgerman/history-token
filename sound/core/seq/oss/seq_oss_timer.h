multiline_comment|/*&n; * OSS compatible sequencer driver&n; * timer handling routines&n; *&n; * Copyright (C) 1998,99 Takashi Iwai &lt;tiwai@suse.de&gt;&n; *&n; * This program is free software; you can redistribute it and/or modify&n; * it under the terms of the GNU General Public License as published by&n; * the Free Software Foundation; either version 2 of the License, or&n; * (at your option) any later version.&n; *&n; * This program is distributed in the hope that it will be useful,&n; * but WITHOUT ANY WARRANTY; without even the implied warranty of&n; * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; * GNU General Public License for more details.&n; *&n; * You should have received a copy of the GNU General Public License&n; * along with this program; if not, write to the Free Software&n; * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA&n; */
macro_line|#ifndef __SEQ_OSS_TIMER_H
DECL|macro|__SEQ_OSS_TIMER_H
mdefine_line|#define __SEQ_OSS_TIMER_H
macro_line|#include &quot;seq_oss_device.h&quot;
multiline_comment|/*&n; * timer information definition&n; */
DECL|struct|seq_oss_timer_t
r_struct
id|seq_oss_timer_t
(brace
DECL|member|dp
id|seq_oss_devinfo_t
op_star
id|dp
suffix:semicolon
DECL|member|cur_tick
id|reltime_t
id|cur_tick
suffix:semicolon
DECL|member|realtime
r_int
id|realtime
suffix:semicolon
DECL|member|running
r_int
id|running
suffix:semicolon
DECL|member|tempo
DECL|member|ppq
r_int
id|tempo
comma
id|ppq
suffix:semicolon
multiline_comment|/* ALSA queue */
DECL|member|oss_tempo
DECL|member|oss_timebase
r_int
id|oss_tempo
comma
id|oss_timebase
suffix:semicolon
)brace
suffix:semicolon
id|seq_oss_timer_t
op_star
id|snd_seq_oss_timer_new
c_func
(paren
id|seq_oss_devinfo_t
op_star
id|dp
)paren
suffix:semicolon
r_void
id|snd_seq_oss_timer_delete
c_func
(paren
id|seq_oss_timer_t
op_star
id|dp
)paren
suffix:semicolon
r_int
id|snd_seq_oss_timer_start
c_func
(paren
id|seq_oss_timer_t
op_star
id|timer
)paren
suffix:semicolon
r_int
id|snd_seq_oss_timer_stop
c_func
(paren
id|seq_oss_timer_t
op_star
id|timer
)paren
suffix:semicolon
r_int
id|snd_seq_oss_timer_continue
c_func
(paren
id|seq_oss_timer_t
op_star
id|timer
)paren
suffix:semicolon
r_int
id|snd_seq_oss_timer_tempo
c_func
(paren
id|seq_oss_timer_t
op_star
id|timer
comma
r_int
id|value
)paren
suffix:semicolon
DECL|macro|snd_seq_oss_timer_reset
mdefine_line|#define snd_seq_oss_timer_reset  snd_seq_oss_timer_start
r_int
id|snd_seq_oss_timer_ioctl
c_func
(paren
id|seq_oss_timer_t
op_star
id|timer
comma
r_int
r_int
id|cmd
comma
r_void
op_star
id|arg
)paren
suffix:semicolon
multiline_comment|/*&n; * get current processed time&n; */
r_static
r_inline
id|abstime_t
DECL|function|snd_seq_oss_timer_cur_tick
id|snd_seq_oss_timer_cur_tick
c_func
(paren
id|seq_oss_timer_t
op_star
id|timer
)paren
(brace
r_return
id|timer-&gt;cur_tick
suffix:semicolon
)brace
multiline_comment|/*&n; * is realtime event?&n; */
r_static
r_inline
r_int
DECL|function|snd_seq_oss_timer_is_realtime
id|snd_seq_oss_timer_is_realtime
c_func
(paren
id|seq_oss_timer_t
op_star
id|timer
)paren
(brace
r_return
id|timer-&gt;realtime
suffix:semicolon
)brace
macro_line|#endif
eof
