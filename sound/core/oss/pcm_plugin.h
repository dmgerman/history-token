macro_line|#ifndef __PCM_PLUGIN_H
DECL|macro|__PCM_PLUGIN_H
mdefine_line|#define __PCM_PLUGIN_H
multiline_comment|/*&n; *  Digital Audio (Plugin interface) abstract layer&n; *  Copyright (c) by Jaroslav Kysela &lt;perex@suse.cz&gt;&n; *&n; *&n; *   This program is free software; you can redistribute it and/or modify&n; *   it under the terms of the GNU General Public License as published by&n; *   the Free Software Foundation; either version 2 of the License, or&n; *   (at your option) any later version.&n; *&n; *   This program is distributed in the hope that it will be useful,&n; *   but WITHOUT ANY WARRANTY; without even the implied warranty of&n; *   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the&n; *   GNU General Public License for more details.&n; *&n; *   You should have received a copy of the GNU General Public License&n; *   along with this program; if not, write to the Free Software&n; *   Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307 USA&n; *&n; */
macro_line|#ifndef ATTRIBUTE_UNUSED
DECL|macro|ATTRIBUTE_UNUSED
mdefine_line|#define ATTRIBUTE_UNUSED __attribute__ ((__unused__))
macro_line|#endif
DECL|typedef|bitset_t
r_typedef
r_int
r_int
id|bitset_t
suffix:semicolon
DECL|function|bitset_size
r_static
r_inline
r_int
id|bitset_size
c_func
(paren
r_int
id|nbits
)paren
(brace
r_return
(paren
id|nbits
op_plus
r_sizeof
(paren
id|bitset_t
)paren
op_star
l_int|8
op_minus
l_int|1
)paren
op_div
(paren
r_sizeof
(paren
id|bitset_t
)paren
op_star
l_int|8
)paren
suffix:semicolon
)brace
DECL|function|bitset_alloc
r_static
r_inline
id|bitset_t
op_star
id|bitset_alloc
c_func
(paren
r_int
id|nbits
)paren
(brace
r_return
id|kcalloc
c_func
(paren
id|bitset_size
c_func
(paren
id|nbits
)paren
comma
r_sizeof
(paren
id|bitset_t
)paren
comma
id|GFP_KERNEL
)paren
suffix:semicolon
)brace
DECL|function|bitset_set
r_static
r_inline
r_void
id|bitset_set
c_func
(paren
id|bitset_t
op_star
id|bitmap
comma
r_int
r_int
id|pos
)paren
(brace
r_int
id|bits
op_assign
r_sizeof
(paren
op_star
id|bitmap
)paren
op_star
l_int|8
suffix:semicolon
id|bitmap
(braket
id|pos
op_div
id|bits
)braket
op_or_assign
l_int|1
op_lshift
(paren
id|pos
op_mod
id|bits
)paren
suffix:semicolon
)brace
DECL|function|bitset_reset
r_static
r_inline
r_void
id|bitset_reset
c_func
(paren
id|bitset_t
op_star
id|bitmap
comma
r_int
r_int
id|pos
)paren
(brace
r_int
id|bits
op_assign
r_sizeof
(paren
op_star
id|bitmap
)paren
op_star
l_int|8
suffix:semicolon
id|bitmap
(braket
id|pos
op_div
id|bits
)braket
op_and_assign
op_complement
(paren
l_int|1
op_lshift
(paren
id|pos
op_mod
id|bits
)paren
)paren
suffix:semicolon
)brace
DECL|function|bitset_get
r_static
r_inline
r_int
id|bitset_get
c_func
(paren
id|bitset_t
op_star
id|bitmap
comma
r_int
r_int
id|pos
)paren
(brace
r_int
id|bits
op_assign
r_sizeof
(paren
op_star
id|bitmap
)paren
op_star
l_int|8
suffix:semicolon
r_return
op_logical_neg
op_logical_neg
(paren
id|bitmap
(braket
id|pos
op_div
id|bits
)braket
op_amp
(paren
l_int|1
op_lshift
(paren
id|pos
op_mod
id|bits
)paren
)paren
)paren
suffix:semicolon
)brace
DECL|function|bitset_copy
r_static
r_inline
r_void
id|bitset_copy
c_func
(paren
id|bitset_t
op_star
id|dst
comma
id|bitset_t
op_star
id|src
comma
r_int
r_int
id|nbits
)paren
(brace
id|memcpy
c_func
(paren
id|dst
comma
id|src
comma
id|bitset_size
c_func
(paren
id|nbits
)paren
op_star
r_sizeof
(paren
id|bitset_t
)paren
)paren
suffix:semicolon
)brace
DECL|function|bitset_and
r_static
r_inline
r_void
id|bitset_and
c_func
(paren
id|bitset_t
op_star
id|dst
comma
id|bitset_t
op_star
id|bs
comma
r_int
r_int
id|nbits
)paren
(brace
id|bitset_t
op_star
id|end
op_assign
id|dst
op_plus
id|bitset_size
c_func
(paren
id|nbits
)paren
suffix:semicolon
r_while
c_loop
(paren
id|dst
OL
id|end
)paren
op_star
id|dst
op_increment
op_and_assign
op_star
id|bs
op_increment
suffix:semicolon
)brace
DECL|function|bitset_or
r_static
r_inline
r_void
id|bitset_or
c_func
(paren
id|bitset_t
op_star
id|dst
comma
id|bitset_t
op_star
id|bs
comma
r_int
r_int
id|nbits
)paren
(brace
id|bitset_t
op_star
id|end
op_assign
id|dst
op_plus
id|bitset_size
c_func
(paren
id|nbits
)paren
suffix:semicolon
r_while
c_loop
(paren
id|dst
OL
id|end
)paren
op_star
id|dst
op_increment
op_or_assign
op_star
id|bs
op_increment
suffix:semicolon
)brace
DECL|function|bitset_zero
r_static
r_inline
r_void
id|bitset_zero
c_func
(paren
id|bitset_t
op_star
id|dst
comma
r_int
r_int
id|nbits
)paren
(brace
id|bitset_t
op_star
id|end
op_assign
id|dst
op_plus
id|bitset_size
c_func
(paren
id|nbits
)paren
suffix:semicolon
r_while
c_loop
(paren
id|dst
OL
id|end
)paren
op_star
id|dst
op_increment
op_assign
l_int|0
suffix:semicolon
)brace
DECL|function|bitset_one
r_static
r_inline
r_void
id|bitset_one
c_func
(paren
id|bitset_t
op_star
id|dst
comma
r_int
r_int
id|nbits
)paren
(brace
id|bitset_t
op_star
id|end
op_assign
id|dst
op_plus
id|bitset_size
c_func
(paren
id|nbits
)paren
suffix:semicolon
r_while
c_loop
(paren
id|dst
OL
id|end
)paren
op_star
id|dst
op_increment
op_assign
op_complement
(paren
id|bitset_t
)paren
l_int|0
suffix:semicolon
)brace
DECL|macro|snd_pcm_plug_t
mdefine_line|#define snd_pcm_plug_t snd_pcm_substream_t
DECL|macro|snd_pcm_plug_stream
mdefine_line|#define snd_pcm_plug_stream(plug) ((plug)-&gt;stream)
r_typedef
r_enum
(brace
DECL|enumerator|INIT
id|INIT
op_assign
l_int|0
comma
DECL|enumerator|PREPARE
id|PREPARE
op_assign
l_int|1
comma
DECL|typedef|snd_pcm_plugin_action_t
)brace
id|snd_pcm_plugin_action_t
suffix:semicolon
DECL|struct|_snd_pcm_channel_area
r_typedef
r_struct
id|_snd_pcm_channel_area
(brace
DECL|member|addr
r_void
op_star
id|addr
suffix:semicolon
multiline_comment|/* base address of channel samples */
DECL|member|first
r_int
r_int
id|first
suffix:semicolon
multiline_comment|/* offset to first sample in bits */
DECL|member|step
r_int
r_int
id|step
suffix:semicolon
multiline_comment|/* samples distance in bits */
DECL|typedef|snd_pcm_channel_area_t
)brace
id|snd_pcm_channel_area_t
suffix:semicolon
DECL|struct|_snd_pcm_plugin_channel
r_typedef
r_struct
id|_snd_pcm_plugin_channel
(brace
DECL|member|aptr
r_void
op_star
id|aptr
suffix:semicolon
multiline_comment|/* pointer to the allocated area */
DECL|member|area
id|snd_pcm_channel_area_t
id|area
suffix:semicolon
DECL|member|frames
id|snd_pcm_uframes_t
id|frames
suffix:semicolon
multiline_comment|/* allocated frames */
DECL|member|enabled
r_int
r_int
id|enabled
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* channel need to be processed */
DECL|member|wanted
r_int
r_int
id|wanted
suffix:colon
l_int|1
suffix:semicolon
multiline_comment|/* channel is wanted */
DECL|typedef|snd_pcm_plugin_channel_t
)brace
id|snd_pcm_plugin_channel_t
suffix:semicolon
DECL|struct|_snd_pcm_plugin_format
r_typedef
r_struct
id|_snd_pcm_plugin_format
(brace
DECL|member|format
r_int
id|format
suffix:semicolon
DECL|member|rate
r_int
r_int
id|rate
suffix:semicolon
DECL|member|channels
r_int
r_int
id|channels
suffix:semicolon
DECL|typedef|snd_pcm_plugin_format_t
)brace
id|snd_pcm_plugin_format_t
suffix:semicolon
DECL|struct|_snd_pcm_plugin
r_struct
id|_snd_pcm_plugin
(brace
DECL|member|name
r_const
r_char
op_star
id|name
suffix:semicolon
multiline_comment|/* plug-in name */
DECL|member|stream
r_int
id|stream
suffix:semicolon
DECL|member|src_format
id|snd_pcm_plugin_format_t
id|src_format
suffix:semicolon
multiline_comment|/* source format */
DECL|member|dst_format
id|snd_pcm_plugin_format_t
id|dst_format
suffix:semicolon
multiline_comment|/* destination format */
DECL|member|src_width
r_int
id|src_width
suffix:semicolon
multiline_comment|/* sample width in bits */
DECL|member|dst_width
r_int
id|dst_width
suffix:semicolon
multiline_comment|/* sample width in bits */
DECL|member|access
r_int
id|access
suffix:semicolon
DECL|member|src_frames
id|snd_pcm_sframes_t
(paren
op_star
id|src_frames
)paren
(paren
id|snd_pcm_plugin_t
op_star
id|plugin
comma
id|snd_pcm_uframes_t
id|dst_frames
)paren
suffix:semicolon
DECL|member|dst_frames
id|snd_pcm_sframes_t
(paren
op_star
id|dst_frames
)paren
(paren
id|snd_pcm_plugin_t
op_star
id|plugin
comma
id|snd_pcm_uframes_t
id|src_frames
)paren
suffix:semicolon
DECL|member|client_channels
id|snd_pcm_sframes_t
(paren
op_star
id|client_channels
)paren
(paren
id|snd_pcm_plugin_t
op_star
id|plugin
comma
id|snd_pcm_uframes_t
id|frames
comma
id|snd_pcm_plugin_channel_t
op_star
op_star
id|channels
)paren
suffix:semicolon
DECL|member|src_channels_mask
r_int
(paren
op_star
id|src_channels_mask
)paren
(paren
id|snd_pcm_plugin_t
op_star
id|plugin
comma
id|bitset_t
op_star
id|dst_vmask
comma
id|bitset_t
op_star
op_star
id|src_vmask
)paren
suffix:semicolon
DECL|member|dst_channels_mask
r_int
(paren
op_star
id|dst_channels_mask
)paren
(paren
id|snd_pcm_plugin_t
op_star
id|plugin
comma
id|bitset_t
op_star
id|src_vmask
comma
id|bitset_t
op_star
op_star
id|dst_vmask
)paren
suffix:semicolon
DECL|member|transfer
id|snd_pcm_sframes_t
(paren
op_star
id|transfer
)paren
(paren
id|snd_pcm_plugin_t
op_star
id|plugin
comma
r_const
id|snd_pcm_plugin_channel_t
op_star
id|src_channels
comma
id|snd_pcm_plugin_channel_t
op_star
id|dst_channels
comma
id|snd_pcm_uframes_t
id|frames
)paren
suffix:semicolon
DECL|member|action
r_int
(paren
op_star
id|action
)paren
(paren
id|snd_pcm_plugin_t
op_star
id|plugin
comma
id|snd_pcm_plugin_action_t
id|action
comma
r_int
r_int
id|data
)paren
suffix:semicolon
DECL|member|prev
id|snd_pcm_plugin_t
op_star
id|prev
suffix:semicolon
DECL|member|next
id|snd_pcm_plugin_t
op_star
id|next
suffix:semicolon
DECL|member|plug
id|snd_pcm_plug_t
op_star
id|plug
suffix:semicolon
DECL|member|private_data
r_void
op_star
id|private_data
suffix:semicolon
DECL|member|private_free
r_void
(paren
op_star
id|private_free
)paren
(paren
id|snd_pcm_plugin_t
op_star
id|plugin
)paren
suffix:semicolon
DECL|member|buf
r_char
op_star
id|buf
suffix:semicolon
DECL|member|buf_frames
id|snd_pcm_uframes_t
id|buf_frames
suffix:semicolon
DECL|member|buf_channels
id|snd_pcm_plugin_channel_t
op_star
id|buf_channels
suffix:semicolon
DECL|member|src_vmask
id|bitset_t
op_star
id|src_vmask
suffix:semicolon
DECL|member|dst_vmask
id|bitset_t
op_star
id|dst_vmask
suffix:semicolon
DECL|member|extra_data
r_char
id|extra_data
(braket
l_int|0
)braket
suffix:semicolon
)brace
suffix:semicolon
r_int
id|snd_pcm_plugin_build
c_func
(paren
id|snd_pcm_plug_t
op_star
id|handle
comma
r_const
r_char
op_star
id|name
comma
id|snd_pcm_plugin_format_t
op_star
id|src_format
comma
id|snd_pcm_plugin_format_t
op_star
id|dst_format
comma
r_int
id|extra
comma
id|snd_pcm_plugin_t
op_star
op_star
id|ret
)paren
suffix:semicolon
r_int
id|snd_pcm_plugin_free
c_func
(paren
id|snd_pcm_plugin_t
op_star
id|plugin
)paren
suffix:semicolon
r_int
id|snd_pcm_plugin_clear
c_func
(paren
id|snd_pcm_plugin_t
op_star
op_star
id|first
)paren
suffix:semicolon
r_int
id|snd_pcm_plug_alloc
c_func
(paren
id|snd_pcm_plug_t
op_star
id|plug
comma
id|snd_pcm_uframes_t
id|frames
)paren
suffix:semicolon
id|snd_pcm_sframes_t
id|snd_pcm_plug_client_size
c_func
(paren
id|snd_pcm_plug_t
op_star
id|handle
comma
id|snd_pcm_uframes_t
id|drv_size
)paren
suffix:semicolon
id|snd_pcm_sframes_t
id|snd_pcm_plug_slave_size
c_func
(paren
id|snd_pcm_plug_t
op_star
id|handle
comma
id|snd_pcm_uframes_t
id|clt_size
)paren
suffix:semicolon
DECL|macro|FULL
mdefine_line|#define FULL ROUTE_PLUGIN_RESOLUTION
DECL|macro|HALF
mdefine_line|#define HALF ROUTE_PLUGIN_RESOLUTION / 2
DECL|typedef|route_ttable_entry_t
r_typedef
r_int
id|route_ttable_entry_t
suffix:semicolon
r_int
id|snd_pcm_plugin_build_io
c_func
(paren
id|snd_pcm_plug_t
op_star
id|handle
comma
id|snd_pcm_hw_params_t
op_star
id|params
comma
id|snd_pcm_plugin_t
op_star
op_star
id|r_plugin
)paren
suffix:semicolon
r_int
id|snd_pcm_plugin_build_linear
c_func
(paren
id|snd_pcm_plug_t
op_star
id|handle
comma
id|snd_pcm_plugin_format_t
op_star
id|src_format
comma
id|snd_pcm_plugin_format_t
op_star
id|dst_format
comma
id|snd_pcm_plugin_t
op_star
op_star
id|r_plugin
)paren
suffix:semicolon
r_int
id|snd_pcm_plugin_build_mulaw
c_func
(paren
id|snd_pcm_plug_t
op_star
id|handle
comma
id|snd_pcm_plugin_format_t
op_star
id|src_format
comma
id|snd_pcm_plugin_format_t
op_star
id|dst_format
comma
id|snd_pcm_plugin_t
op_star
op_star
id|r_plugin
)paren
suffix:semicolon
r_int
id|snd_pcm_plugin_build_rate
c_func
(paren
id|snd_pcm_plug_t
op_star
id|handle
comma
id|snd_pcm_plugin_format_t
op_star
id|src_format
comma
id|snd_pcm_plugin_format_t
op_star
id|dst_format
comma
id|snd_pcm_plugin_t
op_star
op_star
id|r_plugin
)paren
suffix:semicolon
r_int
id|snd_pcm_plugin_build_route
c_func
(paren
id|snd_pcm_plug_t
op_star
id|handle
comma
id|snd_pcm_plugin_format_t
op_star
id|src_format
comma
id|snd_pcm_plugin_format_t
op_star
id|dst_format
comma
id|route_ttable_entry_t
op_star
id|ttable
comma
id|snd_pcm_plugin_t
op_star
op_star
id|r_plugin
)paren
suffix:semicolon
r_int
id|snd_pcm_plugin_build_copy
c_func
(paren
id|snd_pcm_plug_t
op_star
id|handle
comma
id|snd_pcm_plugin_format_t
op_star
id|src_format
comma
id|snd_pcm_plugin_format_t
op_star
id|dst_format
comma
id|snd_pcm_plugin_t
op_star
op_star
id|r_plugin
)paren
suffix:semicolon
r_int
id|snd_pcm_plug_format_plugins
c_func
(paren
id|snd_pcm_plug_t
op_star
id|substream
comma
id|snd_pcm_hw_params_t
op_star
id|params
comma
id|snd_pcm_hw_params_t
op_star
id|slave_params
)paren
suffix:semicolon
r_int
id|snd_pcm_plug_slave_format
c_func
(paren
r_int
id|format
comma
id|snd_mask_t
op_star
id|format_mask
)paren
suffix:semicolon
r_int
id|snd_pcm_plugin_append
c_func
(paren
id|snd_pcm_plugin_t
op_star
id|plugin
)paren
suffix:semicolon
id|snd_pcm_sframes_t
id|snd_pcm_plug_write_transfer
c_func
(paren
id|snd_pcm_plug_t
op_star
id|handle
comma
id|snd_pcm_plugin_channel_t
op_star
id|src_channels
comma
id|snd_pcm_uframes_t
id|size
)paren
suffix:semicolon
id|snd_pcm_sframes_t
id|snd_pcm_plug_read_transfer
c_func
(paren
id|snd_pcm_plug_t
op_star
id|handle
comma
id|snd_pcm_plugin_channel_t
op_star
id|dst_channels_final
comma
id|snd_pcm_uframes_t
id|size
)paren
suffix:semicolon
id|snd_pcm_sframes_t
id|snd_pcm_plug_client_channels_buf
c_func
(paren
id|snd_pcm_plug_t
op_star
id|handle
comma
r_char
op_star
id|buf
comma
id|snd_pcm_uframes_t
id|count
comma
id|snd_pcm_plugin_channel_t
op_star
op_star
id|channels
)paren
suffix:semicolon
id|snd_pcm_sframes_t
id|snd_pcm_plugin_client_channels
c_func
(paren
id|snd_pcm_plugin_t
op_star
id|plugin
comma
id|snd_pcm_uframes_t
id|frames
comma
id|snd_pcm_plugin_channel_t
op_star
op_star
id|channels
)paren
suffix:semicolon
r_int
id|snd_pcm_area_silence
c_func
(paren
r_const
id|snd_pcm_channel_area_t
op_star
id|dst_channel
comma
r_int
id|dst_offset
comma
r_int
id|samples
comma
r_int
id|format
)paren
suffix:semicolon
r_int
id|snd_pcm_area_copy
c_func
(paren
r_const
id|snd_pcm_channel_area_t
op_star
id|src_channel
comma
r_int
id|src_offset
comma
r_const
id|snd_pcm_channel_area_t
op_star
id|dst_channel
comma
r_int
id|dst_offset
comma
r_int
id|samples
comma
r_int
id|format
)paren
suffix:semicolon
r_void
op_star
id|snd_pcm_plug_buf_alloc
c_func
(paren
id|snd_pcm_plug_t
op_star
id|plug
comma
id|snd_pcm_uframes_t
id|size
)paren
suffix:semicolon
r_void
id|snd_pcm_plug_buf_unlock
c_func
(paren
id|snd_pcm_plug_t
op_star
id|plug
comma
r_void
op_star
id|ptr
)paren
suffix:semicolon
id|snd_pcm_sframes_t
id|snd_pcm_oss_write3
c_func
(paren
id|snd_pcm_substream_t
op_star
id|substream
comma
r_const
r_char
op_star
id|ptr
comma
id|snd_pcm_uframes_t
id|size
comma
r_int
id|in_kernel
)paren
suffix:semicolon
id|snd_pcm_sframes_t
id|snd_pcm_oss_read3
c_func
(paren
id|snd_pcm_substream_t
op_star
id|substream
comma
r_char
op_star
id|ptr
comma
id|snd_pcm_uframes_t
id|size
comma
r_int
id|in_kernel
)paren
suffix:semicolon
id|snd_pcm_sframes_t
id|snd_pcm_oss_writev3
c_func
(paren
id|snd_pcm_substream_t
op_star
id|substream
comma
r_void
op_star
op_star
id|bufs
comma
id|snd_pcm_uframes_t
id|frames
comma
r_int
id|in_kernel
)paren
suffix:semicolon
id|snd_pcm_sframes_t
id|snd_pcm_oss_readv3
c_func
(paren
id|snd_pcm_substream_t
op_star
id|substream
comma
r_void
op_star
op_star
id|bufs
comma
id|snd_pcm_uframes_t
id|frames
comma
r_int
id|in_kernel
)paren
suffix:semicolon
DECL|macro|ROUTE_PLUGIN_RESOLUTION
mdefine_line|#define ROUTE_PLUGIN_RESOLUTION 16
r_int
id|getput_index
c_func
(paren
r_int
id|format
)paren
suffix:semicolon
r_int
id|copy_index
c_func
(paren
r_int
id|format
)paren
suffix:semicolon
r_int
id|conv_index
c_func
(paren
r_int
id|src_format
comma
r_int
id|dst_format
)paren
suffix:semicolon
r_void
id|zero_channel
c_func
(paren
id|snd_pcm_plugin_t
op_star
id|plugin
comma
r_const
id|snd_pcm_plugin_channel_t
op_star
id|dst_channel
comma
r_int
id|samples
)paren
suffix:semicolon
macro_line|#ifdef PLUGIN_DEBUG
DECL|macro|pdprintf
mdefine_line|#define pdprintf( fmt, args... ) printk( &quot;plugin: &quot; fmt, ##args)
macro_line|#else
DECL|macro|pdprintf
mdefine_line|#define pdprintf( fmt, args... ) 
macro_line|#endif
macro_line|#endif&t;&t;&t;&t;/* __PCM_PLUGIN_H */
eof
