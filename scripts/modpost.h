macro_line|#include &lt;stdio.h&gt;
macro_line|#include &lt;stdlib.h&gt;
macro_line|#include &lt;stdarg.h&gt;
macro_line|#include &lt;string.h&gt;
macro_line|#include &lt;sys/types.h&gt;
macro_line|#include &lt;sys/stat.h&gt;
macro_line|#include &lt;sys/mman.h&gt;
macro_line|#include &lt;fcntl.h&gt;
macro_line|#include &lt;unistd.h&gt;
macro_line|#include &lt;elf.h&gt;
macro_line|#include &quot;elfconfig.h&quot;
macro_line|#if KERNEL_ELFCLASS == ELFCLASS32
DECL|macro|Elf_Ehdr
mdefine_line|#define Elf_Ehdr    Elf32_Ehdr 
DECL|macro|Elf_Shdr
mdefine_line|#define Elf_Shdr    Elf32_Shdr 
DECL|macro|Elf_Sym
mdefine_line|#define Elf_Sym     Elf32_Sym
DECL|macro|ELF_ST_BIND
mdefine_line|#define ELF_ST_BIND ELF32_ST_BIND
DECL|macro|ELF_ST_TYPE
mdefine_line|#define ELF_ST_TYPE ELF32_ST_TYPE
macro_line|#else
DECL|macro|Elf_Ehdr
mdefine_line|#define Elf_Ehdr    Elf64_Ehdr 
DECL|macro|Elf_Shdr
mdefine_line|#define Elf_Shdr    Elf64_Shdr 
DECL|macro|Elf_Sym
mdefine_line|#define Elf_Sym     Elf64_Sym
DECL|macro|ELF_ST_BIND
mdefine_line|#define ELF_ST_BIND ELF64_ST_BIND
DECL|macro|ELF_ST_TYPE
mdefine_line|#define ELF_ST_TYPE ELF64_ST_TYPE
macro_line|#endif
macro_line|#if KERNEL_ELFDATA != HOST_ELFDATA
DECL|function|__endian
r_static
r_inline
r_void
id|__endian
c_func
(paren
r_const
r_void
op_star
id|src
comma
r_void
op_star
id|dest
comma
r_int
r_int
id|size
)paren
(brace
r_int
r_int
id|i
suffix:semicolon
r_for
c_loop
(paren
id|i
op_assign
l_int|0
suffix:semicolon
id|i
OL
id|size
suffix:semicolon
id|i
op_increment
)paren
(paren
(paren
r_int
r_char
op_star
)paren
id|dest
)paren
(braket
id|i
)braket
op_assign
(paren
(paren
r_int
r_char
op_star
)paren
id|src
)paren
(braket
id|size
op_minus
id|i
op_minus
l_int|1
)braket
suffix:semicolon
)brace
DECL|macro|TO_NATIVE
mdefine_line|#define TO_NATIVE(x)&t;&t;&t;&t;&t;&t;&bslash;&n;({&t;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;typeof(x) __x;&t;&t;&t;&t;&t;&t;&bslash;&n;&t;__endian(&amp;(x), &amp;(__x), sizeof(__x));&t;&t;&t;&bslash;&n;&t;__x;&t;&t;&t;&t;&t;&t;&t;&bslash;&n;})
macro_line|#else /* endianness matches */
DECL|macro|TO_NATIVE
mdefine_line|#define TO_NATIVE(x) (x)
macro_line|#endif
DECL|struct|buffer
r_struct
id|buffer
(brace
DECL|member|p
r_char
op_star
id|p
suffix:semicolon
DECL|member|pos
r_int
id|pos
suffix:semicolon
DECL|member|size
r_int
id|size
suffix:semicolon
)brace
suffix:semicolon
r_void
id|__attribute__
c_func
(paren
(paren
id|format
c_func
(paren
id|printf
comma
l_int|2
comma
l_int|3
)paren
)paren
)paren
id|buf_printf
c_func
(paren
r_struct
id|buffer
op_star
id|buf
comma
r_const
r_char
op_star
id|fmt
comma
dot
dot
dot
)paren
suffix:semicolon
r_void
id|buf_write
c_func
(paren
r_struct
id|buffer
op_star
id|buf
comma
r_const
r_char
op_star
id|s
comma
r_int
id|len
)paren
suffix:semicolon
DECL|struct|module
r_struct
id|module
(brace
DECL|member|next
r_struct
id|module
op_star
id|next
suffix:semicolon
DECL|member|name
r_const
r_char
op_star
id|name
suffix:semicolon
DECL|member|unres
r_struct
id|symbol
op_star
id|unres
suffix:semicolon
DECL|member|seen
r_int
id|seen
suffix:semicolon
DECL|member|dev_table_buf
r_struct
id|buffer
id|dev_table_buf
suffix:semicolon
)brace
suffix:semicolon
DECL|struct|elf_info
r_struct
id|elf_info
(brace
DECL|member|size
r_int
r_int
id|size
suffix:semicolon
DECL|member|hdr
id|Elf_Ehdr
op_star
id|hdr
suffix:semicolon
DECL|member|sechdrs
id|Elf_Shdr
op_star
id|sechdrs
suffix:semicolon
DECL|member|symtab_start
id|Elf_Sym
op_star
id|symtab_start
suffix:semicolon
DECL|member|symtab_stop
id|Elf_Sym
op_star
id|symtab_stop
suffix:semicolon
DECL|member|strtab
r_const
r_char
op_star
id|strtab
suffix:semicolon
DECL|member|modinfo
r_char
op_star
id|modinfo
suffix:semicolon
DECL|member|modinfo_len
r_int
r_int
id|modinfo_len
suffix:semicolon
)brace
suffix:semicolon
r_void
id|handle_moddevtable
c_func
(paren
r_struct
id|module
op_star
id|mod
comma
r_struct
id|elf_info
op_star
id|info
comma
id|Elf_Sym
op_star
id|sym
comma
r_const
r_char
op_star
id|symname
)paren
suffix:semicolon
r_void
id|add_moddevtable
c_func
(paren
r_struct
id|buffer
op_star
id|buf
comma
r_struct
id|module
op_star
id|mod
)paren
suffix:semicolon
r_void
id|maybe_frob_version
c_func
(paren
r_const
r_char
op_star
id|modfilename
comma
r_void
op_star
id|modinfo
comma
r_int
r_int
id|modinfo_len
comma
r_int
r_int
id|modinfo_offset
)paren
suffix:semicolon
r_void
op_star
id|grab_file
c_func
(paren
r_const
r_char
op_star
id|filename
comma
r_int
r_int
op_star
id|size
)paren
suffix:semicolon
r_void
id|release_file
c_func
(paren
r_void
op_star
id|file
comma
r_int
r_int
id|size
)paren
suffix:semicolon
eof
